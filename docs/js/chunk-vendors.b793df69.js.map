{"version":3,"sources":["webpack:///./node_modules/core-js/modules/_iter-define.js","webpack:///./node_modules/core-js/modules/es7.promise.finally.js","webpack:///./node_modules/core-js/modules/_object-keys.js","webpack:///./node_modules/mux.js/lib/m2ts/m2ts.js","webpack:///./node_modules/function-bind/index.js","webpack:///./node_modules/mux.js/lib/mp4/audio-frame-utils.js","webpack:///./node_modules/core-js/modules/_object-dps.js","webpack:///./node_modules/string.prototype.trim/node_modules/es-abstract/es5.js","webpack:///./node_modules/mux.js/lib/mp4/mp4-generator.js","webpack:///./node_modules/core-js/modules/_task.js","webpack:///./node_modules/string.prototype.trim/polyfill.js","webpack:///./node_modules/tsml/tsml.js","webpack:///./node_modules/core-js/modules/_iter-call.js","webpack:///./node_modules/is-callable/index.js","webpack:///./node_modules/core-js/modules/_dom-create.js","webpack:///./node_modules/core-js/modules/_classof.js","webpack:///./node_modules/mux.js/lib/m2ts/timestamp-rollover-stream.js","webpack:///./node_modules/core-js/modules/_object-gops.js","webpack:///./node_modules/core-js/modules/core.get-iterator-method.js","webpack:///./node_modules/mux.js/lib/mp4/probe.js","webpack:///./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack:///./node_modules/mux.js/lib/mp4/index.js","webpack:///./node_modules/core-js/modules/_redefine.js","webpack:///./node_modules/core-js/modules/_object-create.js","webpack:///./node_modules/vue/dist/vue.runtime.esm.js","webpack:///./node_modules/core-js/modules/_wks.js","webpack:///./node_modules/videojs-vtt.js/lib/browser-index.js","webpack:///./node_modules/core-js/modules/_library.js","webpack:///./node_modules/core-js/modules/_cof.js","webpack:///./node_modules/mux.js/lib/mp4/frame-utils.js","webpack:///./node_modules/lodash/lodash.js","webpack:///./node_modules/es-to-primitive/es5.js","webpack:///./node_modules/vuex/dist/vuex.esm.js","webpack:///./node_modules/mux.js/lib/mp4/transmuxer.js","webpack:///./node_modules/core-js/modules/_invoke.js","webpack:///./node_modules/mux.js/lib/utils/exp-golomb.js","webpack:///./node_modules/core-js/modules/_hide.js","webpack:///./node_modules/core-js/modules/_is-array-iter.js","webpack:///./node_modules/mux.js/lib/utils/clock.js","webpack:///./node_modules/core-js/modules/_object-gpo.js","webpack:///./node_modules/vue-script2/dist/vue-script2.js","webpack:///./node_modules/@thelak/videojs-resolution-switcher-v7/lib/videojs-resolution-switcher-v7.js","webpack:///./node_modules/core-js/modules/_iter-create.js","webpack:///./node_modules/mux.js/lib/m2ts/probe.js","webpack:///./node_modules/mux.js/lib/utils/stream.js","webpack:///./node_modules/core-js/modules/_to-integer.js","webpack:///./node_modules/core-js/modules/_property-desc.js","webpack:///./node_modules/core-js/modules/_for-of.js","webpack:///./node_modules/core-js/modules/_to-object.js","webpack:///./node_modules/string.prototype.trim/node_modules/es-abstract/helpers/callBind.js","webpack:///./node_modules/es-to-primitive/helpers/isPrimitive.js","webpack:///./node_modules/mux.js/lib/m2ts/caption-stream.js","webpack:///./node_modules/mux.js/lib/codecs/adts.js","webpack:///./node_modules/core-js/modules/_object-pie.js","webpack:///./node_modules/xtend/immutable.js","webpack:///./node_modules/core-js/modules/es6.promise.js","webpack:///./node_modules/core-js/modules/_shared.js","webpack:///./node_modules/string.prototype.trim/implementation.js","webpack:///./node_modules/mux.js/lib/m2ts/metadata-stream.js","webpack:///./node_modules/core-js/modules/_export.js","webpack:///./node_modules/core-js/modules/_iter-detect.js","webpack:///./node_modules/core-js/modules/_shared-key.js","webpack:///./node_modules/core-js/modules/_iobject.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/mux.js/lib/codecs/h264.js","webpack:///./node_modules/parse-headers/parse-headers.js","webpack:///./node_modules/core-js/modules/_to-iobject.js","webpack:///./node_modules/function-bind/implementation.js","webpack:///./node_modules/core-js/modules/_has.js","webpack:///./node_modules/core-js/modules/_to-primitive.js","webpack:///./node_modules/string.prototype.trim/node_modules/es-abstract/helpers/isPropertyDescriptor.js","webpack:///./node_modules/core-js/modules/_object-assign.js","webpack:///./node_modules/core-js/modules/_global.js","webpack:///./node_modules/string.prototype.trim/node_modules/es-abstract/helpers/mod.js","webpack:///./node_modules/core-js/modules/_to-absolute-index.js","webpack:///./node_modules/core-js/modules/_fails.js","webpack:///./node_modules/core-js/modules/_set-species.js","webpack:///./node_modules/string.prototype.trim/node_modules/es-abstract/helpers/isNaN.js","webpack:///./node_modules/mux.js/lib/data/silence.js","webpack:///./node_modules/core-js/modules/_set-to-string-tag.js","webpack:///./node_modules/mux.js/lib/utils/bin.js","webpack:///./node_modules/core-js/modules/_microtask.js","webpack:///./node_modules/is-function/index.js","webpack:///./node_modules/core-js/modules/_core.js","webpack:///./node_modules/string.prototype.trim/node_modules/es-abstract/GetIntrinsic.js","webpack:///./node_modules/mpd-parser/dist/mpd-parser.es.js","webpack:///./node_modules/core-js/modules/_iterators.js","webpack:///./node_modules/core-js/modules/_object-dp.js","webpack:///./node_modules/safe-json-parse/tuple.js","webpack:///./node_modules/vue-router/dist/vue-router.esm.js","webpack:///./node_modules/mux.js/lib/tools/mp4-inspector.js","webpack:///./node_modules/core-js/modules/_ctx.js","webpack:///./node_modules/core-js/modules/_add-to-unscopables.js","webpack:///./node_modules/core-js/modules/_perform.js","webpack:///./node_modules/mux.js/lib/aac/index.js","webpack:///./node_modules/core-js/modules/_to-length.js","webpack:///./node_modules/core-js/modules/_descriptors.js","webpack:///./node_modules/string.prototype.trim/node_modules/es-abstract/helpers/isFinite.js","webpack:///./node_modules/has/src/index.js","webpack:///./node_modules/core-js/modules/_user-agent.js","webpack:///./node_modules/@babel/runtime/helpers/builtin/es6/defineProperty.js","webpack:///./node_modules/core-js/modules/_new-promise-capability.js","webpack:///./node_modules/vue-ribbon/dist/ribbon.esm.js","webpack:///./node_modules/mux.js/lib/mp4/caption-parser.js","webpack:///./node_modules/mux.js/lib/m2ts/stream-types.js","webpack:///./node_modules/videojs-vtt.js/lib/vttcue.js","webpack:///./node_modules/string.prototype.trim/shim.js","webpack:///./node_modules/core-js/modules/_promise-resolve.js","webpack:///./node_modules/global/window.js","webpack:///./node_modules/core-js/modules/_defined.js","webpack:///./node_modules/string.prototype.trim/node_modules/es-abstract/helpers/sign.js","webpack:///./node_modules/core-js/modules/_array-includes.js","webpack:///./node_modules/core-js/modules/_ie8-dom-define.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/core-js/modules/_uid.js","webpack:///./node_modules/string.prototype.trim/index.js","webpack:///./node_modules/core-js/modules/es6.array.iterator.js","webpack:///./node_modules/core-js/modules/_an-object.js","webpack:///./node_modules/core-js/modules/_object-keys-internal.js","webpack:///./node_modules/for-each/index.js","webpack:///./node_modules/videojs-vtt.js/lib/vtt.js","webpack:///./node_modules/url-toolkit/src/url-toolkit.js","webpack:///./node_modules/core-js/modules/_is-object.js","webpack:///./node_modules/object-keys/isArguments.js","webpack:///./node_modules/core-js/modules/_iter-step.js","webpack:///./node_modules/object-keys/index.js","webpack:///./node_modules/core-js/modules/_a-function.js","webpack:///./node_modules/mux.js/lib/tools/ts-inspector.js","webpack:///./node_modules/mux.js/lib/tools/caption-packet-parser.js","webpack:///./node_modules/core-js/modules/_redefine-all.js","webpack:///./node_modules/keycode/index.js","webpack:///./node_modules/core-js/modules/_enum-bug-keys.js","webpack:///./node_modules/core-js/modules/_species-constructor.js","webpack:///./node_modules/mux.js/lib/mp4/track-decode-info.js","webpack:///./node_modules/xhr/index.js","webpack:///./node_modules/global/document.js","webpack:///./node_modules/m3u8-parser/dist/m3u8-parser.es.js","webpack:///./node_modules/pkcs7/dist/pkcs7.es.js","webpack:///./node_modules/aes-decrypter/dist/aes-decrypter.es.js","webpack:///./node_modules/video.js/dist/video.es.js","webpack:///./node_modules/define-properties/index.js","webpack:///./node_modules/core-js/modules/_an-instance.js","webpack:///./node_modules/core-js/modules/es6.object.assign.js","webpack:///./node_modules/videojs-vtt.js/lib/vttregion.js","webpack:///./node_modules/core-js/modules/_html.js","webpack:///./node_modules/mux.js/lib/aac/utils.js","webpack:///./node_modules/string.prototype.trim/node_modules/es-abstract/helpers/assertRecord.js"],"names":["LIBRARY","__webpack_require__","$export","redefine","hide","Iterators","$iterCreate","setToStringTag","getPrototypeOf","ITERATOR","BUGGY","keys","FF_ITERATOR","KEYS","VALUES","returnThis","this","module","exports","Base","NAME","Constructor","next","DEFAULT","IS_SET","FORCED","methods","key","IteratorPrototype","getMethod","kind","proto","TAG","DEF_VALUES","VALUES_BUG","prototype","$native","$default","$entries","undefined","$anyNative","entries","call","Object","name","values","P","F","core","global","speciesConstructor","promiseResolve","R","finally","onFinally","C","Promise","isFunction","then","x","e","$keys","enumBugKeys","O","TransportPacketStream","TransportParseStream","ElementaryStream","Stream","CaptionStream","StreamTypes","TimestampRolloverStream","m2tsStreamTypes","MP2T_PACKET_LENGTH","SYNC_BYTE","buffer","Uint8Array","bytesInBuffer","init","push","bytes","everything","startIndex","endIndex","byteLength","set","subarray","trigger","flush","parsePsi","parsePat","parsePmt","self","packetsWaitingForPmt","programMapTable","payload","psi","offset","payloadUnitStartIndicator","type","pat","section_number","last_section_number","pmtPid","pmt","sectionLength","tableEnd","programInfoLength","video","audio","timed-metadata","streamType","pid","H264_STREAM_TYPE","ADTS_STREAM_TYPE","METADATA_STREAM_TYPE","packet","result","length","processPes_","apply","shift","data","STREAM_TYPES","h264","adts","size","timedMetadata","parsePes","pes","ptsDtsFlags","packetLength","dataAlignmentIndicator","pts","dts","flushStream","stream","forceFlush","fragment","packetData","event","i","packetFlushable","trackId","tracks","timelineStartInfo","baseMediaDecodeTime","id","codec","m2ts","PAT_PID","Cea608Stream","MetadataStream","hasOwnProperty","implementation","Function","bind","coneOfSilence","clock","ONE_SECOND_IN_TS","sumFrameByteLengths","array","currentObj","sum","prefixWithSilence","track","frames","audioAppendStartTs","videoBaseMediaDecodeTime","baseMediaDecodeTimeTs","silentFrame","frameDuration","audioGapDuration","audioFillFrameCount","audioFillDuration","audioTsToVideoTs","samplerate","Math","ceil","max","floor","splice","videoTsToAudioTs","trimAdtsFramesByEarliestDts","adtsFrames","earliestAllowedDts","minSegmentDts","Infinity","filter","currentFrame","min","minSegmentPts","generateSampleTable","samples","duration","concatenateFrameData","dataOffset","dP","anObject","getKeys","defineProperties","Properties","f","GetIntrinsic","$Object","$TypeError","$String","$Number","assertRecord","isPropertyDescriptor","$isNaN","$isFinite","sign","mod","IsCallable","toPrimitive","has","callBind","strSlice","slice","isPrefixOf","prefix","string","ES5","ToPrimitive","ToBoolean","value","ToNumber","ToInteger","number","abs","ToInt32","ToUint32","ToUint16","posInt","ToString","ToObject","CheckObjectCoercible","optMessage","SameValue","y","Type","IsPropertyDescriptor","Desc","IsAccessorDescriptor","IsDataDescriptor","IsGenericDescriptor","FromPropertyDescriptor","writable","enumerable","configurable","get","ToPropertyDescriptor","Obj","desc","getter","TypeError","setter","Abstract Equality Comparison","xType","yType","Strict Equality Comparison","Abstract Relational Comparison","LeftFirst","px","py","bothStrings","nx","ny","box","dinf","esds","ftyp","mdat","mfhd","minf","moof","moov","mvex","mvhd","trak","tkhd","mdia","mdhd","hdlr","sdtp","stbl","stsd","traf","trex","trun","types","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","UINT32_MAX","pow","avc1","avcC","btrt","dref","mp4a","smhd","stco","stsc","stsz","stts","styp","tfdt","tfhd","vmhd","charCodeAt","view","arguments","DataView","byteOffset","setUint32","audioobjecttype","samplingfrequencyindex","channelcount","sequenceNumber","trackFragments","concat","boxes","flags","dependsOn","isDependedOn","videoSample","audioSample","sps","pps","sequenceParameterSets","pictureParameterSets","Array","width","height","profileIdc","profileCompatibility","levelIdc","samplesize","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","audioTrun","videoTrun","trunHeader","durationPresent","sizePresent","flagsPresent","compositionTimeOffset","sample","isLeading","hasRedundancy","paddingValue","isNonSyncSample","degradationPriority","initSegment","fileType","movie","defer","channel","port","ctx","invoke","html","cel","process","setTask","setImmediate","clearTask","clearImmediate","MessageChannel","Dispatch","counter","queue","ONREADYSTATECHANGE","run","fn","listener","args","nextTick","now","port2","port1","onmessage","postMessage","addEventListener","importScripts","appendChild","removeChild","setTimeout","clear","zeroWidthSpace","String","trim","clean","s","replace","sa","iterator","ret","fnToStr","toString","constructorRegex","isES6ClassFn","fnStr","test","tryFunctionObject","toStr","fnClass","genClass","hasToStringTag","Symbol","toStringTag","strClass","isObject","document","is","createElement","it","cof","ARG","tryGet","T","B","callee","MAX_TS","RO_THRESH","handleRollover","reference","direction","lastDTS","referenceDTS","type_","discontinuity","getOwnPropertySymbols","classof","getIteratorMethod","findBox","parseType","timescale","startTime","getVideoTrackIds","toUnsigned","path","end","subresults","results","fromCharCode","traks","reduce","version","index","trafs","baseTimes","map","scale","baseTime","isFinite","videoTrackIds","forEach","hdlrs","tkhds","handlerType","getUint8","getUint32","normalizeComponent","scriptExports","render","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","options","_compiled","functional","_scopeId","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","d","__webpack_exports__","generator","probe","Transmuxer","AudioSegmentStream","VideoSegmentStream","CaptionParser","SRC","TO_STRING","$toString","TPL","split","inspectSource","val","safe","join","dPs","IE_PROTO","Empty","PROTOTYPE","createDict","iframeDocument","iframe","lt","gt","style","display","src","contentWindow","open","write","close","create","emptyObject","freeze","isUndef","v","isDef","isTrue","isFalse","isPrimitive","obj","_toString","isPlainObject","isRegExp","isValidArrayIndex","n","parseFloat","JSON","stringify","toNumber","isNaN","makeMap","str","expectsLowerCase","list","toLowerCase","isReservedAttribute","remove","arr","item","indexOf","hasOwn","cached","cache","hit","camelizeRE","camelize","_","c","toUpperCase","capitalize","charAt","hyphenateRE","hyphenate","polyfillBind","boundFn","a","l","_length","nativeBind","toArray","start","extend","to","_from","toObject","res","noop","b","no","identity","looseEqual","isObjectA","isObjectB","isArrayA","isArray","isArrayB","every","keysA","keysB","looseIndexOf","once","called","SSR_ATTR","ASSET_TYPES","LIFECYCLE_HOOKS","config","optionMergeStrategies","silent","productionTip","devtools","performance","errorHandler","warnHandler","ignoredElements","keyCodes","isReservedTag","isReservedAttr","isUnknownElement","getTagNamespace","parsePlatformTagName","mustUseProp","_lifecycleHooks","isReserved","def","defineProperty","bailRE","parsePath","segments","_isServer","hasProto","inBrowser","window","inWeex","WXEnvironment","platform","weexPlatform","UA","navigator","userAgent","isIE","isIE9","isEdge","isIOS","nativeWatch","watch","supportsPassive","opts","isServerRendering","env","VUE_ENV","__VUE_DEVTOOLS_GLOBAL_HOOK__","isNative","Ctor","_Set","hasSymbol","Reflect","ownKeys","Set","warn","uid","Dep","subs","addSub","sub","removeSub","depend","target","addDep","notify","update","targetStack","pushTarget","_target","popTarget","pop","VNode","tag","children","text","elm","componentOptions","asyncFactory","ns","fnContext","fnOptions","fnScopeId","componentInstance","raw","isStatic","isRootInsert","isComment","isCloned","isOnce","asyncMeta","isAsyncPlaceholder","prototypeAccessors","child","createEmptyVNode","node","createTextVNode","cloneVNode","vnode","cloned","arrayProto","arrayMethods","methodsToPatch","method","original","len","inserted","ob","__ob__","observeArray","dep","arrayKeys","getOwnPropertyNames","shouldObserve","toggleObserving","Observer","vmCount","augment","protoAugment","copyAugment","walk","__proto__","observe","asRootData","isExtensible","_isVue","defineReactive","customSetter","shallow","property","getOwnPropertyDescriptor","childOb","dependArray","newVal","del","items","strats","mergeData","from","toVal","fromVal","mergeDataOrFn","parentVal","childVal","vm","instanceData","defaultData","mergeHook","mergeAssets","key$1","props","inject","computed","provide","defaultStrat","normalizeProps","normalizeInject","normalized","normalizeDirectives","dirs","directives","mergeOptions","extendsFrom","extends","mixins","mergeField","strat","resolveAsset","warnMissing","assets","camelizedId","PascalCaseId","validateProp","propOptions","propsData","prop","absent","booleanIndex","getTypeIndex","Boolean","stringIndex","getPropDefaultValue","prevShouldObserve","default","_props","getType","match","isSameType","expectedTypes","handleError","err","info","cur","$parent","hooks","errorCaptured","capture","globalHandleError","logError","console","error","microTimerFunc","macroTimerFunc","callbacks","pending","flushCallbacks","copies","useMacroTask","p","resolve","withMacroTask","_withTask","cb","_resolve","seenObjects","traverse","_traverse","seen","isA","isFrozen","depId","normalizeEvent","passive","once$$1","createFnInvoker","fns","invoker","arguments$1","updateListeners","on","oldOn","remove$$1","old","params","mergeVNodeHook","hookKey","oldHook","wrappedHook","merged","extractPropsFromVNodeData","attrs","altKey","checkProp","hash","preserve","simpleNormalizeChildren","normalizeChildren","normalizeArrayChildren","isTextNode","nestedIndex","lastIndex","last","_isVList","ensureCtor","comp","base","__esModule","createAsyncPlaceholder","factory","resolveAsyncComponent","baseCtor","errorComp","resolved","loading","loadingComp","contexts","sync","forceRender","$forceUpdate","reject","reason","component","delay","timeout","getFirstComponentChild","initEvents","_events","_hasHookEvent","listeners","_parentListeners","updateComponentListeners","$once","$on","remove$1","$off","oldListeners","eventsMixin","Vue","hookRE","this$1","cbs","i$1","$emit","resolveSlots","slots","slot","name$1","isWhitespace","resolveScopedSlots","activeInstance","initLifecycle","abstract","$children","$refs","_watcher","_inactive","_directInactive","_isMounted","_isDestroyed","_isBeingDestroyed","lifecycleMixin","_update","hydrating","callHook","prevEl","$el","prevVnode","_vnode","prevActiveInstance","__patch__","_parentElm","_refElm","__vue__","$destroy","teardown","_watchers","_data","mountComponent","el","updateComponent","_render","Watcher","updateChildComponent","parentVnode","renderChildren","hasChildren","_renderChildren","scopedSlots","$scopedSlots","_parentVnode","$attrs","$listeners","propKeys","_propKeys","$slots","isInInactiveTree","activateChildComponent","direct","deactivateChildComponent","handlers","j","activatedChildren","waiting","flushing","resetSchedulerState","flushSchedulerQueue","watcher","sort","activatedQueue","updatedQueue","callActivatedHooks","callUpdatedHooks","emit","queueActivatedComponent","queueWatcher","uid$1","expOrFn","isRenderWatcher","deep","user","lazy","active","dirty","deps","newDeps","depIds","newDepIds","expression","cleanupDeps","tmp","oldValue","evaluate","sharedPropertyDefinition","proxy","sourceKey","initState","initProps","initMethods","initData","initComputed","initWatch","propsOptions","isRoot","loop","getData","computedWatcherOptions","watchers","_computedWatchers","isSSR","userDef","defineComputed","shouldCache","createComputedGetter","handler","createWatcher","$watch","stateMixin","dataDef","propsDef","$set","$delete","immediate","initProvide","_provided","initInjections","resolveInject","provideKey","source","provideDefault","renderList","renderSlot","fallback","bindObject","nodes","scopedSlotFn","slotNodes","_rendered","$createElement","resolveFilter","isKeyNotMatch","expect","actual","checkKeyCodes","eventKeyCode","builtInKeyCode","eventKeyName","builtInKeyName","mappedKeyCode","bindObjectProps","asProp","isSync","domProps","$event","renderStatic","isInFor","_staticTrees","tree","_renderProxy","markStatic","markOnce","markStaticNode","bindObjectListeners","ours","installRenderHelpers","_o","_n","_s","_l","_t","_q","_i","_m","_f","_k","_b","_v","_e","_u","_g","FunctionalRenderContext","contextVm","_original","isCompiled","needNormalization","injections","_c","createFunctionalComponent","mergeProps","renderContext","cloneAndMarkFunctionalResult","vnodes","clone","componentVNodeHooks","parentElm","refElm","keepAlive","mountedNode","prepatch","createComponentInstanceForVnode","$mount","oldVnode","insert","destroy","hooksToMerge","createComponent","_base","cid","resolveConstructorOptions","model","transformModel","nativeOn","installComponentHooks","_isComponent","inlineTemplate","callback","SIMPLE_NORMALIZE","ALWAYS_NORMALIZE","normalizationType","alwaysNormalize","_createElement","applyNS","registerDeepBindings","force","class","initRender","parentData","renderMixin","$nextTick","ref","uid$3","initMixin","_init","_uid","initInternalComponent","constructor","_self","vnodeComponentOptions","_componentTag","super","superOptions","cachedSuperOptions","modifiedOptions","resolveModifiedOptions","extendOptions","components","modified","latest","extended","sealed","sealedOptions","dedupe","initUse","use","plugin","installedPlugins","_installedPlugins","unshift","install","initMixin$1","mixin","initExtend","Super","SuperId","cachedCtors","_Ctor","Sub","initProps$1","initComputed$1","Comp","initAssetRegisters","definition","getComponentName","matches","pattern","pruneCache","keepAliveInstance","cachedNode","pruneCacheEntry","current","cached$$1","patternTypes","RegExp","KeepAlive","include","exclude","Number","created","destroyed","mounted","ref$1","parseInt","builtInComponents","initGlobalAPI","configDef","util","delete","acceptValue","attr","isEnumeratedAttr","isBooleanAttr","xlinkNS","isXlink","getXlinkProp","isFalsyAttrValue","genClassForVnode","parentNode","childNode","mergeClassData","renderClass","staticClass","dynamicClass","stringifyClass","stringifyArray","stringifyObject","stringified","namespaceMap","svg","math","isHTMLTag","isSVG","unknownElementCache","HTMLUnknownElement","HTMLElement","isTextInputType","query","selected","querySelector","createElement$1","tagName","multiple","setAttribute","createElementNS","namespace","createTextNode","createComment","insertBefore","newNode","referenceNode","nextSibling","setTextContent","textContent","setStyleScope","nodeOps","registerRef","isRemoval","refs","refInFor","emptyNode","sameVnode","sameInputType","typeA","typeB","createKeyToOldIdx","beginIdx","endIdx","createPatchFunction","backend","modules","emptyNodeAt","createRmCb","childElm","removeNode","createElm","insertedVnodeQueue","nested","ownerArray","setScope","createChildren","invokeCreateHooks","isReactivated","initComponent","reactivateComponent","pendingInsert","isPatchable","innerNode","transition","activate","ref$$1","ancestor","addVnodes","startIdx","invokeDestroyHook","removeVnodes","ch","removeAndInvokeRemoveHook","rm","updateChildren","oldCh","newCh","removeOnly","oldKeyToIdx","idxInOld","vnodeToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","patchVnode","findIdxInOld","hydrate","postpatch","invokeInsertHook","initial","isRenderedModule","inVPre","pre","hasChildNodes","innerHTML","childrenMatch","firstChild","fullInvoke","isInitialPatch","isRealElement","nodeType","hasAttribute","removeAttribute","oldElm","parentElm$1","_leaveCb","patchable","i$2","updateDirectives","oldDir","dir","isCreate","isDestroy","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","callHook$1","componentUpdated","callInsert","emptyModifiers","modifiers","getRawDirName","rawName","baseModules","updateAttrs","inheritAttrs","oldAttrs","setAttr","removeAttributeNS","baseSetAttr","setAttributeNS","__ieph","blocker","stopImmediatePropagation","removeEventListener","updateClass","oldData","cls","transitionClass","_transitionClasses","_prevClass","target$1","klass","RANGE_TOKEN","CHECKBOX_RADIO_TOKEN","normalizeEvents","change","createOnceHandler","onceHandler","remove$2","add$1","updateDOMListeners","events","updateDOMProps","oldProps","childNodes","_value","strCur","shouldUpdateValue","checkVal","composing","isNotInFocusAndDirty","isDirtyWithModifiers","notInFocus","activeElement","_vModifiers","parseStyleText","cssText","listDelimiter","propertyDelimiter","normalizeStyleData","normalizeStyleBinding","staticStyle","bindingStyle","getStyle","checkChild","styleData","emptyStyle","cssVarRE","importantRE","setProp","setProperty","normalizedName","normalize","vendorNames","capName","updateStyle","oldStaticStyle","oldStyleBinding","normalizedStyle","oldStyle","newStyle","addClass","classList","getAttribute","removeClass","tar","resolveTransition","css","autoCssTransition","enterClass","enterToClass","enterActiveClass","leaveClass","leaveToClass","leaveActiveClass","hasTransition","TRANSITION","ANIMATION","transitionProp","transitionEndEvent","animationProp","animationEndEvent","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","raf","requestAnimationFrame","nextFrame","addTransitionClass","transitionClasses","removeTransitionClass","whenTransitionEnds","expectedType","getTransitionInfo","propCount","ended","onEnd","transformRE","styles","getComputedStyle","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","hasTransform","delays","durations","toMs","enter","toggleDisplay","cancelled","_enterCb","appearClass","appearToClass","appearActiveClass","beforeEnter","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","transitionNode","isAppear","startClass","activeClass","toClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","explicitEnterDuration","expectsCSS","userWantsControl","getHookArgumentsLength","show","pendingNode","_pending","isValidDuration","leave","beforeLeave","afterLeave","leaveCancelled","delayLeave","explicitLeaveDuration","performLeave","invokerFns","_enter","platformModules","patch","vmodel","directive","binding","_vOptions","setSelected","getValue","onCompositionStart","onCompositionEnd","prevOptions","curOptions","some","o","needReset","hasNoMatchingOption","actuallySetSelected","isMultiple","option","selectedIndex","createEvent","initEvent","dispatchEvent","locateNode","transition$$1","originalDisplay","__vOriginalDisplay","unbind","platformDirectives","transitionProps","mode","getRealChild","compOptions","extractTransitionData","placeholder","rawChild","hasParentTransition","isSameChild","oldChild","Transition","_leaving","oldRawChild","delayedLeave","moveClass","TransitionGroup","prevChildren","rawChildren","transitionData","kept","removed","c$1","pos","getBoundingClientRect","beforeUpdate","updated","hasMove","callPendingCbs","recordPosition","applyTranslation","_reflow","body","offsetHeight","moved","transform","WebkitTransform","transitionDuration","_moveCb","propertyName","_hasMove","cloneNode","newPos","oldPos","dx","left","dy","top","platformComponents","store","USE_SYMBOL","$exports","vttjs","WebVTT","VTTCue","VTTRegion","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","shim","restore","groupNalsIntoFrames","nalUnits","currentNal","nalUnitType","keyFrame","groupFramesIntoGops","currentGop","gops","nalCount","extendFirstKeyFrame","createDefaultSample","sampleForFrame","frame","baseDataOffset","concatenateNalData","nalsByteLength","numberOfNals","totalByteLength","__WEBPACK_AMD_DEFINE_RESULT__","VERSION","LARGE_ARRAY_SIZE","CORE_ERROR_TEXT","FUNC_ERROR_TEXT","HASH_UNDEFINED","MAX_MEMOIZE_SIZE","PLACEHOLDER","CLONE_DEEP_FLAG","CLONE_FLAT_FLAG","CLONE_SYMBOLS_FLAG","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","WRAP_BIND_FLAG","WRAP_BIND_KEY_FLAG","WRAP_CURRY_BOUND_FLAG","WRAP_CURRY_FLAG","WRAP_CURRY_RIGHT_FLAG","WRAP_PARTIAL_FLAG","WRAP_PARTIAL_RIGHT_FLAG","WRAP_ARY_FLAG","WRAP_REARG_FLAG","WRAP_FLIP_FLAG","DEFAULT_TRUNC_LENGTH","DEFAULT_TRUNC_OMISSION","HOT_COUNT","HOT_SPAN","LAZY_FILTER_FLAG","LAZY_MAP_FLAG","LAZY_WHILE_FLAG","INFINITY","MAX_SAFE_INTEGER","MAX_INTEGER","NAN","MAX_ARRAY_LENGTH","MAX_ARRAY_INDEX","HALF_MAX_ARRAY_LENGTH","wrapFlags","argsTag","arrayTag","asyncTag","boolTag","dateTag","domExcTag","errorTag","funcTag","genTag","mapTag","numberTag","nullTag","objectTag","promiseTag","proxyTag","regexpTag","setTag","stringTag","symbolTag","undefinedTag","weakMapTag","weakSetTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reEscapedHtml","reUnescapedHtml","reHasEscapedHtml","reHasUnescapedHtml","reEscape","reEvaluate","reInterpolate","reIsDeepProp","reIsPlainProp","rePropName","reRegExpChar","reHasRegExpChar","reTrim","reTrimStart","reTrimEnd","reWrapComment","reWrapDetails","reSplitDetails","reAsciiWord","reEscapeChar","reEsTemplate","reFlags","reIsBadHex","reIsBinary","reIsHostCtor","reIsOctal","reIsUint","reLatin","reNoMatch","reUnescapedString","rsAstralRange","rsComboMarksRange","reComboHalfMarksRange","rsComboSymbolsRange","rsComboRange","rsDingbatRange","rsLowerRange","rsMathOpRange","rsNonCharRange","rsPunctuationRange","rsSpaceRange","rsUpperRange","rsVarRange","rsBreakRange","rsApos","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsModifier","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsZWJ","rsMiscLower","rsMiscUpper","rsOptContrLower","rsOptContrUpper","reOptMod","rsOptVar","rsOptJoin","rsOrdLower","rsOrdUpper","rsSeq","rsEmoji","rsSymbol","reApos","reComboMark","reUnicode","reUnicodeWord","reHasUnicode","reHasUnicodeWord","contextProps","templateCounter","typedArrayTags","cloneableTags","deburredLetters","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","Ā","Ă","Ą","ā","ă","ą","Ć","Ĉ","Ċ","Č","ć","ĉ","ċ","č","Ď","Đ","ď","đ","Ē","Ĕ","Ė","Ę","Ě","ē","ĕ","ė","ę","ě","Ĝ","Ğ","Ġ","Ģ","ĝ","ğ","ġ","ģ","Ĥ","Ħ","ĥ","ħ","Ĩ","Ī","Ĭ","Į","İ","ĩ","ī","ĭ","į","ı","Ĵ","ĵ","Ķ","ķ","ĸ","Ĺ","Ļ","Ľ","Ŀ","Ł","ĺ","ļ","ľ","ŀ","ł","Ń","Ņ","Ň","Ŋ","ń","ņ","ň","ŋ","Ō","Ŏ","Ő","ō","ŏ","ő","Ŕ","Ŗ","Ř","ŕ","ŗ","ř","Ś","Ŝ","Ş","Š","ś","ŝ","ş","š","Ţ","Ť","Ŧ","ţ","ť","ŧ","Ũ","Ū","Ŭ","Ů","Ű","Ų","ũ","ū","ŭ","ů","ű","ų","Ŵ","ŵ","Ŷ","ŷ","Ÿ","Ź","Ż","Ž","ź","ż","ž","Ĳ","ĳ","Œ","œ","ŉ","ſ","htmlEscapes","&","<",">","\"","'","htmlUnescapes","&amp;","&lt;","&gt;","&quot;","&#39;","stringEscapes","\\","\n","\r"," "," ","freeParseFloat","freeParseInt","freeGlobal","freeSelf","root","freeExports","freeModule","moduleExports","freeProcess","nodeUtil","require","nodeIsArrayBuffer","isArrayBuffer","nodeIsDate","isDate","nodeIsMap","isMap","nodeIsRegExp","nodeIsSet","isSet","nodeIsTypedArray","isTypedArray","func","thisArg","arrayAggregator","iteratee","accumulator","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","arrayIncludes","baseIndexOf","arrayIncludesWith","comparator","arrayMap","arrayPush","arrayReduce","initAccum","arrayReduceRight","arraySome","asciiSize","baseProperty","asciiToArray","asciiWords","baseFindKey","collection","eachFunc","baseFindIndex","fromIndex","fromRight","strictIndexOf","baseIsNaN","baseIndexOfWith","baseMean","baseSum","object","basePropertyOf","baseReduce","baseSortBy","comparer","baseToPairs","baseUnary","baseValues","cacheHas","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","countHolders","deburrLetter","escapeHtmlChar","escapeStringChar","chr","hasUnicode","hasUnicodeWord","iteratorToArray","done","mapToArray","overArg","arg","replaceHolders","setToArray","setToPairs","strictLastIndexOf","stringSize","unicodeSize","stringToArray","unicodeToArray","unescapeHtmlChar","unicodeWords","runInContext","defaults","pick","Date","Error","funcProto","objectProto","coreJsData","funcToString","idCounter","maskSrcKey","exec","nativeObjectToString","objectCtorString","oldDash","reIsNative","Buffer","allocUnsafe","getPrototype","objectCreate","propertyIsEnumerable","spreadableSymbol","isConcatSpreadable","symIterator","symToStringTag","getNative","ctxClearTimeout","clearTimeout","ctxNow","ctxSetTimeout","nativeCeil","nativeFloor","nativeGetSymbols","nativeIsBuffer","isBuffer","nativeIsFinite","nativeJoin","nativeKeys","nativeMax","nativeMin","nativeNow","nativeParseInt","nativeRandom","random","nativeReverse","reverse","Map","WeakMap","nativeCreate","metaMap","realNames","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","symbolValueOf","valueOf","symbolToString","lodash","isObjectLike","LazyWrapper","LodashWrapper","wrapperClone","baseCreate","baseLodash","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","lazyClone","copyArray","lazyReverse","lazyValue","isArr","isRight","arrLength","getView","iteratees","iterLength","takeCount","baseWrapperValue","outer","iterIndex","Hash","entry","hashClear","__data__","hashDelete","hashGet","hashHas","hashSet","ListCache","listCacheClear","listCacheDelete","assocIndexOf","listCacheGet","listCacheHas","listCacheSet","MapCache","mapCacheClear","mapCacheDelete","getMapData","mapCacheGet","mapCacheHas","mapCacheSet","SetCache","setCacheAdd","setCacheHas","Stack","stackClear","stackDelete","stackGet","stackHas","stackSet","pairs","arrayLikeKeys","inherited","isArg","isArguments","isBuff","isType","skipIndexes","isIndex","arraySample","baseRandom","arraySampleSize","shuffleSelf","baseClamp","arrayShuffle","assignMergeValue","eq","baseAssignValue","assignValue","objValue","baseAggregator","baseEach","baseAssign","copyObject","baseAssignIn","keysIn","baseAt","paths","skip","lower","upper","baseClone","bitmask","customizer","stack","isDeep","isFlat","isFull","initCloneArray","getTag","isFunc","cloneBuffer","initCloneObject","copySymbolsIn","copySymbols","initCloneByTag","stacked","subValue","keysFunc","getAllKeysIn","getAllKeys","baseConforms","baseConformsTo","baseDelay","wait","baseDifference","includes","isCommon","valuesLength","valuesIndex","templateSettings","escape","interpolate","variable","imports","createBaseEach","baseForOwn","baseEachRight","baseForOwnRight","baseEvery","baseExtremum","isSymbol","baseFill","toInteger","toLength","baseFilter","baseFlatten","depth","isStrict","isFlattenable","baseFor","createBaseFor","baseForRight","baseFunctions","baseGet","castPath","toKey","baseGetAllKeys","symbolsFunc","baseGetTag","getRawTag","objectToString","baseGt","other","baseHas","baseHasIn","baseInRange","baseIntersection","arrays","othLength","othIndex","caches","maxLength","baseInverter","baseInvoke","baseIsArguments","baseIsArrayBuffer","baseIsDate","baseIsEqual","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","equalObjects","baseIsMap","baseIsMatch","matchData","noCustomizer","srcValue","baseIsNative","isMasked","baseIsRegExp","baseIsSet","baseIsTypedArray","isLength","baseIteratee","baseMatchesProperty","baseMatches","baseKeys","isPrototype","baseKeysIn","nativeKeysIn","isProto","baseLt","baseMap","isArrayLike","getMatchData","matchesStrictComparable","isKey","isStrictComparable","hasIn","baseMerge","srcIndex","baseMergeDeep","newValue","safeGet","mergeFunc","isTyped","isArrayLikeObject","cloneTypedArray","toPlainObject","baseNth","baseOrderBy","orders","getIteratee","criteria","compareMultiple","basePick","basePickBy","baseSet","basePropertyDeep","basePullAll","basePullAt","indexes","previous","baseUnset","baseRange","step","baseRepeat","baseRest","setToString","overRest","baseSample","baseSampleSize","baseSetData","baseSetToString","constant","baseShuffle","baseSlice","baseSome","baseSortedIndex","retHighest","low","high","mid","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","baseSortedUniq","baseToNumber","baseToString","baseUniq","createSet","seenIndex","baseUpdate","updater","baseWhile","isDrop","actions","action","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","castRest","castSlice","copy","cloneArrayBuffer","arrayBuffer","cloneDataView","dataView","cloneRegExp","regexp","cloneSymbol","symbol","typedArray","compareAscending","valIsDefined","valIsReflexive","objCriteria","othCriteria","ordersLength","order","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","isNew","getSymbols","getSymbolsIn","createAggregator","initializer","createAssigner","assigner","sources","guard","isIterateeCall","iterable","createBind","isBind","createCtor","wrapper","createCaseFirst","methodName","trailing","createCompounder","words","deburr","thisBinding","createCurry","arity","getHolder","createRecurry","createHybrid","createFind","findIndexFunc","createFlow","flatRest","funcs","prereq","thru","getFuncName","funcName","isLaziable","plant","partialsRight","holdersRight","argPos","ary","isAry","isBindKey","isFlip","holdersCount","newHolders","reorder","createInverter","toIteratee","createMathOperation","operator","defaultValue","createOver","arrayFunc","createPadding","chars","charsLength","createPartial","createRange","toFinite","createRelationalOperation","wrapFunc","isCurry","newHoldersRight","newPartials","newPartialsRight","newData","setData","setWrapToString","createRound","precision","pair","createToPairs","createWrap","customDefaultsAssignIn","customDefaultsMerge","customOmitClone","isPartial","arrStacked","othStacked","arrValue","othValue","compared","message","convert","objProps","objLength","othProps","objStacked","skipCtor","objCtor","othCtor","flatten","otherFunc","isKeyable","isOwn","unmasked","stubArray","transforms","getWrapDetails","hasPath","hasFunc","input","insertWrapDetails","details","ArrayBuffer","ctorString","isMaskable","stubFalse","memoizeCapped","memoize","srcBitmask","newBitmask","isCombo","otherArgs","oldArray","shortOut","updateWrapDetails","count","lastCalled","stamp","remaining","rand","quote","subString","chunk","compact","difference","differenceBy","differenceWith","drop","dropRight","dropRightWhile","dropWhile","fill","findIndex","findLastIndex","flattenDeep","flattenDepth","fromPairs","head","intersection","mapped","intersectionBy","intersectionWith","separator","lastIndexOf","nth","pull","pullAll","pullAllBy","pullAllWith","pullAt","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","sortedUniq","sortedUniqBy","tail","take","takeRight","takeRightWhile","takeWhile","union","unionBy","unionWith","uniq","uniqBy","uniqWith","unzip","group","unzipWith","without","xor","xorBy","xorWith","zip","zipObject","zipObjectDeep","zipWith","chain","tap","interceptor","wrapperAt","wrapperChain","wrapperCommit","wrapperNext","wrapperToIterator","wrapperPlant","wrapperReverse","wrapped","wrapperValue","countBy","find","findLast","flatMap","flatMapDeep","flatMapDepth","forEachRight","groupBy","isString","invokeMap","keyBy","orderBy","partition","reduceRight","negate","sampleSize","shuffle","sortBy","after","before","bindKey","curry","curryRight","debounce","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","invokeFunc","time","leadingEdge","timerExpired","remainingWait","timeSinceLastCall","timeSinceLastInvoke","timeWaiting","shouldInvoke","trailingEdge","cancel","debounced","isInvoking","flip","resolver","memoized","Cache","overArgs","funcsLength","partial","partialRight","rearg","rest","spread","throttle","unary","wrap","castArray","cloneWith","cloneDeep","cloneDeepWith","conformsTo","gte","isBoolean","isElement","isEmpty","isEqual","isEqualWith","isError","isInteger","isMatch","isMatchWith","isNumber","isNull","isNil","isSafeInteger","isUndefined","isWeakMap","isWeakSet","lte","remainder","isBinary","toSafeInteger","assign","assignIn","assignInWith","assignWith","at","properties","propsIndex","propsLength","defaultsDeep","mergeWith","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","functions","functionsIn","invert","invertBy","mapKeys","mapValues","merge","omit","omitBy","pickBy","setWith","toPairs","toPairsIn","isArrLike","unset","updateWith","valuesIn","clamp","inRange","floating","temp","camelCase","word","upperFirst","endsWith","position","escapeRegExp","kebabCase","lowerCase","lowerFirst","pad","strLength","padEnd","padStart","radix","repeat","snakeCase","limit","startCase","startsWith","template","settings","isEscaping","isEvaluating","importsKeys","importsValues","reDelimiters","sourceURL","escapeValue","interpolateValue","esTemplateValue","evaluateValue","attempt","toLower","toUpper","trimEnd","trimStart","truncate","omission","search","substring","newEnd","unescape","upperCase","bindAll","methodNames","cond","conforms","defaultTo","flow","flowRight","matchesProperty","methodOf","noConflict","nthArg","over","overEvery","overSome","propertyOf","range","rangeRight","stubObject","stubString","stubTrue","times","toPath","uniqueId","augend","addend","divide","dividend","divisor","maxBy","mean","meanBy","minBy","multiply","multiplier","multiplicand","round","subtract","minuend","subtrahend","sumBy","entriesIn","extendWith","each","eachRight","first","isFilter","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","commit","toJSON","isCallable","ES5internalSlots","[[DefaultValue]]","actualHint","applyMixin","vuexInit","$store","devtoolHook","devtoolPlugin","_devtoolHook","targetState","replaceState","subscribe","mutation","state","forEachValue","isPromise","Module","rawModule","runtime","_children","_rawModule","rawState","prototypeAccessors$1","namespaced","addChild","getChild","mutations","getters","forEachChild","forEachGetter","forEachAction","forEachMutation","ModuleCollection","rawRootModule","register","targetModule","newModule","getNamespace","rawChildModule","unregister","Store","plugins","strict","_committing","_actions","_actionSubscribers","_mutations","_wrappedGetters","_modules","_modulesNamespaceMap","_subscribers","_watcherVM","dispatch","installModule","resetStoreVM","genericSubscribe","resetStore","hot","oldVm","_vm","wrappedGetters","$$state","enableStrictMode","_withCommit","rootState","parentState","getNestedState","moduleName","local","makeLocalContext","namespacedType","registerMutation","registerAction","registerGetter","noNamespace","_type","_payload","_options","unifyObjectStyle","makeLocalGetters","gettersProxy","splitPos","localType","rootGetters","catch","rawGetter","_Vue","all","subscribeAction","registerModule","preserveState","unregisterModule","hotUpdate","newOptions","committing","mapState","normalizeNamespace","states","normalizeMap","getModuleByNamespace","vuex","mapMutations","mapGetters","mapActions","createNamespacedHelpers","helper","index_esm","CoalesceStream","mp4","frameUtils","audioFrameUtils","trackDecodeInfo","AdtsStream","H264Stream","AacStream","isLikelyAacData","AUDIO_PROPERTIES","VIDEO_PROPERTIES","arrayEquals","generateVideoSegmentTimingInfo","startDts","startPts","endDts","endPts","prependedContentDuration","ptsOffsetFromDts","decodeDuration","presentationDuration","collectDtsInfo","setEarliestDts","earliestDts","setVideoBaseMediaDecodeTime","setAudioAppendStart","timestamp","calculateTrackBaseMediaDecodeTime","keepOriginalTimestamps","clearDtsInfo","gopsToAlignWith","minPTS","gopCache_","nalUnit","gopForFusion","firstGop","lastGop","resetStream_","getGopForFusion_","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","dtsDistance","nearestGopObj","currentGopObj","halfSecond","allowableOverlap","nearestDistance","alignIndex","gopIndex","align","alignEndIndex","matchFound","trimIndex","metadata","total","alignGopsWith","newGopsToAlignWith","metadataStream","numberOfTracks","remux","remuxTracks","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","output","audioTrack","flushSource","caption","id3","captions","captionStreams","timelineStartPts","endTime","cueTime","dispatchType","hasFlushed","transmuxPipeline_","setupAacPipeline","pipeline","aacStream","audioTimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","pipe","setTimestamp","timeStamp","audioSegmentStream","setupTsPipeline","packetStream","parseStream","elementaryStream","videoTimestampRolloverStream","h264Stream","captionStream","videoSegmentStream","setBaseMediaDecodeTime","reset","isAac","resetCaptions","that","un","ExpGolomb","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","workingBytes","availableBytes","skipBits","skipBytes","readBits","bits","valu","skipLeadingZeros","leadingZeroCount","skipUnsignedExpGolomb","skipExpGolomb","readUnsignedExpGolomb","clz","readExpGolomb","readBoolean","readUnsignedByte","createDesc","ArrayProto","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","seconds","sampleRate","ObjectProto","Script2","installed","loaded","[object Object]","customAttrs","parentElement","load","async","unload","defaults2","crossorigin","crossOrigin","onload","onerror","k","pred","_len","_key","videojs","videoJsResolutionSwitcher","currentResolution","menuItemsHolder","setSourcesSanitized","player","label","customSourcePicker","MenuItem","getComponent","ResolutionMenuItem","onClickListener","onClick","initialySelected","showAsLabel","options_","currentTime","player_","isPaused","paused","playbackRate","posterImageSrc","poster","bigPlayButton","posterImage","setSrc","handleSeekEvent","techName_","preload","one","play","MenuButton","ResolutionMenuButton","initialySelectedLabel","controlText","dynamicLabel","staticLabel","dom","appendContent","createItems","menuItems","labels","onClickUnselectOthers","clickedItem","groupedSrc","compareResolutions","bucketSources","resolutions","initResolutionKey","appendSourceToKey","chooseSrc","selectedRes","selectedLabel","initResolutionForYt","tech_","ytPlayer","setPlaybackQuality","qualities","getAvailableQualityLevels","_yts","highres","yt","hd1080","hd720","large","medium","small","tiny","auto","_sources","q","_yt","_customSourcePicker","_player","_label","choosen","menuButton","initialySelectedRes","controlBar","resolutionSwitcher","updateSrc","dispose","el_","log","getGroupedSrc","ready","registerPlugin","descriptor","parsePid","parsePayloadUnitStartIndicator","parseAdaptionField","pusi","payloadOffset","parsePesType","parsePesTime","parseNalUnitType","videoPacketContainsKeyFrame","nalType","frameBuffer","frameI","frameSyncPoint","foundKeyFrame","off","destination","bitmap","isArrayIter","getIterFn","BREAK","RETURN","iterFn","defined","$Function","$apply","$call","cea708Parser","captionPackets_","ccStreams_","cc","sei","userData","newCaptionPackets","parseSei","escapedRBSP","payloadType","USER_DATA_REGISTERED_ITU_T_T35","parseUserData","latestDts_","ignoreNextEqualDts_","numSameDts_","parseCaptionPackets","elem","idx","presortIndex","dispatchCea608Packet","activeCea608Channel_","ccStream","setsTextOrXDSActive","setsChannel1Active","setsChannel2Active","ccData","CHARACTER_TRANSLATION","42","92","94","95","96","123","124","125","126","127","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","getCharFromCode","code","BOTTOM_ROW","ROWS","createDisplayBuffer","field","dataChannel","field_","dataChannel_","name_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","flushDisplayed","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","rollUpRows_","setRollUp","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","row_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","row","formatting_","isColorPAC","isNormalChar","content","topRow_","BASE_","EXT_","CONTROL_","OFFSET_","char","newBaseRow","format","popOn","baseRow","rollUp","paintOn","ADTS_SAMPLING_FREQUENCIES","frameLength","protectionSkipBytes","frameEnd","oldBuffer","sampleCount","adtsFrameDuration","frameNum","Internal","newGenericPromiseCapability","OwnPromiseCapability","Wrapper","aFunction","anInstance","forOf","task","microtask","newPromiseCapabilityModule","perform","PROMISE","versions","v8","$Promise","isNode","empty","newPromiseCapability","USE_NATIVE","promise","FakePromise","PromiseRejectionEvent","isThenable","isReject","ok","reaction","exited","fail","domain","_h","onHandleUnhandled","exit","onUnhandled","unhandled","isUnhandled","onunhandledrejection","_a","onrejectionhandled","$reject","_d","_w","$resolve","executor","onFulfilled","onRejected","G","W","S","r","capability","$$reject","iter","$index","alreadyCalled","race","SHARED","copyright","ES","leftWhitespace","rightWhitespace","percentEncode","parseUtf8","decodeURIComponent","parseIso88591","parseSyncSafeInteger","tagParsers","TXXX","description","WXXX","url","PRIV","owner","privateData","debug","tagSize","bufferSize","frameStart","frameSize","frameHeader","own","out","exp","IS_FORCED","IS_GLOBAL","IS_STATIC","IS_PROTO","IS_BIND","expProto","U","SAFE_CLOSING","riter","skipClosing","shared","webpackPolyfill","deprecate","NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","syncPoint","swapBuffer","100","110","122","244","44","83","86","118","128","138","139","134","currentPts","currentDts","discardEmulationPreventionBytes","readSequenceParameterSet","skipScalingList","nalByteStream","expGolombDecoder","deltaScale","lastScale","nextScale","newLength","emulationPreventionBytesPositions","sourceIndex","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","sarRatio","aspectRatioIdc","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","sarScale","headers","IObject","ERROR_MESSAGE","funcType","bound","binder","boundLength","boundArgs","allowed","[[Configurable]]","[[Enumerable]]","[[Get]]","[[Set]]","[[Value]]","[[Writable]]","gOPS","pIE","$assign","A","K","aLen","isEnum","__g","modulo","remain","DESCRIPTORS","SPECIES","KEY","highPrefix","lowPrefix","zeroFill","makeTable","metaTable","part","96000","88200","64000","48000","44100","32000","24000","16000","12000","11025","8000","stat","macrotask","MutationObserver","WebKitMutationObserver","standalone","toggle","characterData","alert","confirm","prompt","__e","asyncFn","asyncGen","ThrowTypeError","hasSymbols","getProto","generatorFunction","asyncFunction","asyncGenFunction","asyncGenIterator","TypedArray","INTRINSICS","$ %Array%","$ %ArrayBuffer%","$ %ArrayBufferPrototype%","$ %ArrayIteratorPrototype%","$ %ArrayPrototype%","$ %ArrayProto_entries%","$ %ArrayProto_forEach%","$ %ArrayProto_keys%","$ %ArrayProto_values%","$ %AsyncFromSyncIteratorPrototype%","$ %AsyncFunction%","$ %AsyncFunctionPrototype%","$ %AsyncGenerator%","$ %AsyncGeneratorFunction%","$ %AsyncGeneratorPrototype%","$ %AsyncIteratorPrototype%","asyncIterator","$ %Atomics%","Atomics","$ %Boolean%","$ %BooleanPrototype%","$ %DataView%","$ %DataViewPrototype%","$ %Date%","$ %DatePrototype%","$ %decodeURI%","decodeURI","$ %decodeURIComponent%","$ %encodeURI%","encodeURI","$ %encodeURIComponent%","encodeURIComponent","$ %Error%","$ %ErrorPrototype%","$ %eval%","eval","$ %EvalError%","EvalError","$ %EvalErrorPrototype%","$ %Float32Array%","Float32Array","$ %Float32ArrayPrototype%","$ %Float64Array%","Float64Array","$ %Float64ArrayPrototype%","$ %Function%","$ %FunctionPrototype%","$ %Generator%","$ %GeneratorFunction%","$ %GeneratorPrototype%","$ %Int8Array%","Int8Array","$ %Int8ArrayPrototype%","$ %Int16Array%","Int16Array","$ %Int16ArrayPrototype%","$ %Int32Array%","Int32Array","$ %Int32ArrayPrototype%","$ %isFinite%","$ %isNaN%","$ %IteratorPrototype%","$ %JSON%","$ %JSONParse%","parse","$ %Map%","$ %MapIteratorPrototype%","$ %MapPrototype%","$ %Math%","$ %Number%","$ %NumberPrototype%","$ %Object%","$ %ObjectPrototype%","$ %ObjProto_toString%","$ %ObjProto_valueOf%","$ %parseFloat%","$ %parseInt%","$ %Promise%","$ %PromisePrototype%","$ %PromiseProto_then%","$ %Promise_all%","$ %Promise_reject%","$ %Promise_resolve%","$ %Proxy%","Proxy","$ %RangeError%","RangeError","$ %RangeErrorPrototype%","$ %ReferenceError%","ReferenceError","$ %ReferenceErrorPrototype%","$ %Reflect%","$ %RegExp%","$ %RegExpPrototype%","$ %Set%","$ %SetIteratorPrototype%","$ %SetPrototype%","$ %SharedArrayBuffer%","SharedArrayBuffer","$ %SharedArrayBufferPrototype%","$ %String%","$ %StringIteratorPrototype%","$ %StringPrototype%","$ %Symbol%","$ %SymbolPrototype%","$ %SyntaxError%","SyntaxError","$ %SyntaxErrorPrototype%","$ %ThrowTypeError%","$ %TypedArray%","$ %TypedArrayPrototype%","$ %TypeError%","$ %TypeErrorPrototype%","$ %Uint8Array%","$ %Uint8ArrayPrototype%","$ %Uint8ClampedArray%","Uint8ClampedArray","$ %Uint8ClampedArrayPrototype%","$ %Uint16Array%","Uint16Array","$ %Uint16ArrayPrototype%","$ %Uint32Array%","Uint32Array","$ %Uint32ArrayPrototype%","$ %URIError%","URIError","$ %URIErrorPrototype%","$ %WeakMap%","$ %WeakMapPrototype%","$ %WeakSet%","WeakSet","$ %WeakSetPrototype%","allowMissing","parseUTCTiming","global_window__WEBPACK_IMPORTED_MODULE_0__","global_window__WEBPACK_IMPORTED_MODULE_0___default","objects","lists","findIndexes","errors","INVALID_NUMBER_OF_PERIOD","DASH_EMPTY_MANIFEST","DASH_INVALID_XML","NO_BASE_URL","MISSING_SEGMENT_INFORMATION","SEGMENT_TIME_UNSPECIFIED","UNSUPPORTED_UTC_TIMING_SCHEME","createCommonjsModule","urlToolkit","URL_REGEX","FIRST_SEGMENT_REGEX","SLASH_DOT_REGEX","SLASH_DOT_DOT_REGEX","URLToolkit","buildAbsoluteURL","baseURL","relativeURL","basePartsForNormalise","parseURL","normalizePath","buildURLFromParts","relativeParts","scheme","baseParts","netLoc","pathParts","builtParts","baseURLPath","newPath","parts","resolveUrl","baseUrl","relativeUrl","location","href","urlTypeToSegment","_ref","_ref$baseUrl","_ref$source","_ref$range","_ref$indexRange","indexRange","segment","uri","resolvedUri","rangeStr","ranges","startRange","endRange","byterange","byteRangeToString","segmentRange","static","attributes","_attributes$timescale","sourceDuration","dynamic","NOW","clientOffset","availabilityStartTime","_attributes$timescale2","_attributes$start","_attributes$minimumUp","minimumUpdatePeriod","_attributes$timeShift","timeShiftBufferDepth","periodStartWC","periodEndWC","periodDuration","segmentCount","availableStart","availableEnd","toSegments","_attributes$timescale3","periodIndex","_attributes$startNumb","startNumber","timeline","parseByDuration","_attributes$type","_attributes$timescale4","_segmentRange$type","segmentsFromBase","_attributes$initializ","initialization","_attributes$indexRang","segmentTimeInfo","addSegmentsToPlaylist","playlist","sidx","sidxByteRange","sidxEnd","mediaReferences","references","referenceType","firstOffset","referencedSize","subsegmentDuration","mergeDiscontiguousPlaylists","playlists","mergedPlaylists","acc","_acc$name$segments","lang","contentProtection","discontinuityStarts","addSegmentInfoFromSidx","sidxMapping","sidxKey","sidxMatch","formatAudioPlaylist","_attributes","BANDWIDTH","bandwidth","CODECS","codecs","endList","targetDuration","mediaSequence","formatVttPlaylist","_ref2","_attributes2","organizeAudioPlaylists","mainPlaylist","formattedPlaylists","role","language","roleLabel","autoselect","firstLabel","organizeVttPlaylists","formatVideoPlaylist","_ref3","_attributes3","AUDIO","SUBTITLES","RESOLUTION","toM3u8","dashPlaylists","_mediaGroups","_dashPlaylists$0$attr","_dashPlaylists$0$attr2","videoOnly","_ref4","mimeType","contentType","audioOnly","_ref5","vttOnly","_ref6","videoPlaylists","audioPlaylists","vttPlaylists","master","allowCache","mediaGroups","VIDEO","getLiveRValue","parseByTimeline","segmentTimeline","_attributes$minimumUp2","_attributes$media","media","sIndex","segmentTime","t","nextS","identifierPattern","identifierReplacement","identifier","constructTemplateUrl","parseTemplateInfo","segmentsFromTemplate","templateValues","RepresentationID","Bandwidth","mapSegment","Time","SegmentURLToSegmentObject","segmentUrl","mediaRange","segmentsFromList","_attributes$segmentUr","segmentUrls","segmentUrlMap","segmentUrlObject","generateSegments","segmentAttributes","segmentsFn","segmentInfo","segmentsInfo","_segmentAttributes","_segmentAttributes$ti","toPlaylists","representations","findChildren","element","getContent","parseDuration","SECONDS_IN_YEAR","SECONDS_IN_MONTH","SECONDS_IN_DAY","SECONDS_IN_HOUR","SECONDS_IN_MIN","durationRegex","_match$slice","year","month","day","hour","minute","second","parseDate","dateRegex","parsers","mediaPresentationDuration","parsedValue","parseAttributes","parseFn","decodeB64ToUint8Array","b64Text","decodedString","atob","keySystemsMap","urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b","urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed","urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95","urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb","buildBaseUrls","referenceUrls","baseUrlElements","baseUrlElement","getSegmentInformation","adaptationSet","segmentTemplate","segmentList","segmentBase","segmentTimelineParentNode","segmentInitializationParentNode","segmentInitialization","inheritBaseUrls","adaptationSetAttributes","adaptationSetBaseUrls","adaptationSetSegmentInfo","representation","repBaseUrlElements","repBaseUrls","representationSegmentInfo","generateKeySystemInformation","contentProtectionNodes","keySystem","schemeIdUri","psshNode","pssh","psshBuffer","toRepresentations","periodAttributes","periodBaseUrls","periodSegmentInfo","roleAttributes","toAdaptationSets","mpdAttributes","mpdBaseUrls","period","periodAtt","parsedPeriodId","adaptationSets","inheritAttributes","mpd","_options$manifestUri","manifestUri","_options$NOW","_options$clientOffset","periods","stringToMpdXml","manifestString","parser","DOMParser","xml","parseFromString","documentElement","getElementsByTagName","parseUTCTimingScheme","UTCTimingNode","IE8_DOM_DEFINE","Attributes","SafeParseTuple","reviver","json","condition","View","routerView","route","$route","_routerViewCache","inactive","_routerRoot","routerViewDepth","matched","registerRouteInstance","instances","propsToPass","resolveProps","encodeReserveRE","encodeReserveReplacer","commaRE","encode","decode","resolveQuery","extraQuery","_parseQuery","parsedQuery","parseQuery","param","stringifyQuery","val2","trailingSlashRE","createRoute","record","redirectedFrom","router","stringifyQuery$$1","meta","fullPath","getFullPath","formatMatch","START","_stringifyQuery","isSameRoute","isObjectEqual","aKeys","bKeys","aVal","bVal","isIncludedRoute","queryIncludes","toTypes","eventTypes","Link","required","exact","append","exactActiveClass","$router","classes","globalActiveClass","linkActiveClass","globalExactActiveClass","linkExactActiveClass","activeClassFallback","exactActiveClassFallback","compareTarget","guardEvent","click","findAnchor","aData","aAttrs","metaKey","ctrlKey","shiftKey","defaultPrevented","button","currentTarget","preventDefault","registerInstance","callVal","_router","history","_route","beforeRouteEnter","beforeRouteLeave","beforeRouteUpdate","resolvePath","relative","firstChar","hashIndex","queryIndex","cleanPath","isarray","pathToRegexp_1","pathToRegexp","parse_1","compile_1","compile","tokensToFunction_1","tokensToFunction","tokensToRegExp_1","tokensToRegExp","PATH_REGEXP","tokens","defaultDelimiter","delimiter","m","escaped","modifier","asterisk","optional","escapeGroup","escapeString","substr","encodeURIComponentPretty","encodeAsterisk","pretty","token","attachKeys","re","sensitive","regexpToRegexp","groups","arrayToRegexp","stringToRegexp","endsWithDelimiter","regexpCompileCache","fillParams","routeMsg","filler","createRouteMap","routes","oldPathList","oldPathMap","oldNameMap","pathList","pathMap","nameMap","addRouteRecord","matchAs","pathToRegexpOptions","normalizedPath","caseSensitive","regex","compileRouteRegex","redirect","childMatchAs","alias","aliases","aliasRoute","normalizeLocation","_normalized","rawPath","parsedPath","basePath","createMatcher","addRoutes","currentRoute","_createRoute","paramNames","record$1","matchRoute","originalRedirect","resolveRecordPath","resolvedPath","aliasedPath","aliasedMatch","aliasedRecord","positionStore","setupScroll","getStateKey","saveScrollPosition","setStateKey","handleScroll","isPop","app","behavior","scrollBehavior","getScrollPosition","shouldScroll","scrollToPosition","pageXOffset","pageYOffset","getElementPosition","docEl","docRect","elRect","isValidPosition","normalizePosition","normalizeOffset","selector","scrollTo","supportsPushState","ua","genKey","toFixed","pushState","runQueue","resolveAsyncComponents","hasAsync","flatMapComponents","resolvedDef","isESModule","msg","History","normalizeBase","readyCbs","readyErrorCbs","errorCbs","baseEl","resolveQueue","activated","deactivated","extractGuards","records","guards","instance","extractGuard","extractLeaveGuards","bindGuard","extractUpdateHooks","extractEnterGuards","isValid","bindEnterGuard","poll","listen","onReady","errorCb","onError","transitionTo","onComplete","onAbort","confirmTransition","updateRoute","ensureURL","abort","beforeHooks","postEnterCbs","enterGuards","resolveHooks","prev","afterHooks","HTML5History","History$$1","expectScroll","initLocation","getLocation","go","fromRoute","getCurrentLocation","pathname","HashHistory","checkFallback","ensureSlash","setupListeners","supportsScroll","getHash","replaceHash","pushHash","getUrl","AbstractHistory","targetIndex","VueRouter","apps","matcher","registerHook","createHref","setupHashListener","beforeEach","beforeResolve","afterEach","back","forward","getMatchedComponents","normalizedTo","inspectMp4","textifyMp4","parseMp4Date","parseSampleFlags","nalParse","avcStream","avcView","dataReferenceIndex","getUint16","horizresolution","vertresolution","frameCount","numOfPictureParameterSets","nalSize","configurationVersion","avcProfileIndication","avcLevelIndication","lengthSizeMinusOne","numOfSequenceParameterSets","bufferSizeDB","maxBitrate","avgBitrate","esId","streamPriority","decoderConfig","objectProfileIndication","decoderConfigDescriptor","audioObjectType","samplingFrequencyIndex","channelConfiguration","majorBrand","minorVersion","compatibleBrands","dataReferences","nals","creationTime","modificationTime","streamDescriptor","rate","volume","matrix","nextTrackId","pdin","initialDelay","referenceId","earliestPresentationTime","referenceCount","startsWithSap","sapType","sapDeltaTime","balance","chunkOffsets","entryCount","sampleToChunks","firstChunk","samplesPerChunk","sampleDescriptionIndex","sampleDescriptions","timeToSamples","sampleDelta","baseDataOffsetPresent","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","durationIsEmpty","defaultBaseIsMoof","defaultSampleDuration","defaultSampleSize","defaultSampleFlags","baseDataOffsetIsMoof","layer","alternateGroup","defaultSampleDescriptionIndex","sampleDependsOn","sampleIsDependedOn","sampleHasRedundancy","samplePaddingValue","sampleIsDifferenceSample","sampleDegradationPriority","dataOffsetPresent","firstSampleFlagsPresent","sampleDurationPresent","sampleSizePresent","sampleFlagsPresent","sampleCompositionTimeOffsetPresent","getInt32","url ","graphicsmode","opcolor","ab","z","inspectedMp4","indent","byte","line","inspect","textify","parseTfdt","parseHdlr","parseTfhd","parseTrun","parseSidx","UNSCOPABLES","aacUtils","bytesLeft","tempLength","byteIndex","parseAdtsSize","parseId3TagSize","_defineProperty","PromiseCapability","$$resolve","script","validator","fixed","color","ribbonClass","vue-ribbon","componentId","isLightColor","rgb","g","luma","dynamicCSSClass","nodeId","getElementById","cssClass","isFunctionalTemplate","createInjector","createInjectorSSR","createInjectorShadow","normalizeComponent_1","isOldIE","addStyle","HEAD","ids","btoa","styleSheet","textNode","browser","__vue_script__","__vue_render__","title","data-ribbon","__vue_staticRenderFns__","__vue_inject_styles__","__vue_scope_id__","__vue_module_identifier__","__vue_is_functional_template__","GlobalVue","mapToSample","approximateOffset","findSeiNals","seiNal","lastMatchedSample","matchingSample","parseSamples","truns","allSamples","trackRun","parseCaptionNals","videoTrackId","mdats","captionNals","mdatTrafPairs","matchingTraf","seiNals","headerInfo","parseEmbeddedCaptions","segmentCache","parsedCaptions","isInitialized","isNewInit","timescales","parsedData","cachedSegment","pushNals","nal","clearParsedCaptions","resetCaptionStream","clearAllCaptions","autoKeyword","directionSetting","","lr","rl","alignSetting","middle","right","findDirectionSetting","findAlignSetting","hasBeenReset","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","pauseOnExit","region","vertical","setting","snapToLines","lineAlign","positionAlign","displayState","getCueAsHTML","convertCueToDOMTree","define","getPolyfill","polyfill","promiseCapability","win","toIObject","toAbsoluteIndex","IS_INCLUDES","$this","boundTrim","addToUnscopables","iterated","Arguments","arrayIndexOf","names","forEachArray","receiver","forEachString","forEachObject","_objCreate","ParsingError","errorData","parseTimeStamp","computeSeconds","Settings","parseOptions","keyValueDelim","groupDelim","kv","parseCue","cue","regionList","oInput","consumeTimeStamp","ts","Errors","BadTimeStamp","consumeCueSettings","alt","vals","vals0","integer","percent","skipWhitespace","BadSignature","dflt","defaultKey","ESCAPE","&lrm;","&rlm;","&nbsp;","TAG_NAME","u","ruby","rt","TAG_ANNOTATION","NEEDS_PARENT","parseContent","nextToken","consume","unescape1","shouldAdd","localName","annotation","rootDiv","tagStack","createProcessingInstruction","className","strongRTLRanges","isStrongRTLChar","charCode","currentRange","determineBidi","cueDiv","nodeStack","pushNodes","nextTextNode","innerText","computeLinePos","textTrackList","mediaElement","trackList","StyleBox","CueStyleBox","styleOptions","backgroundColor","bottom","writingMode","unicodeBidi","applyStyles","div","textAlign","font","whiteSpace","textPos","formatStyle","move","BoxPosition","lh","offsetWidth","offsetTop","rects","getClientRects","lineHeight","moveBoxToLinePosition","styleBox","containerBox","boxPositions","findBestPosition","axis","bestPosition","specifiedPosition","percentage","overlapsOppositeAxis","within","overlapsAny","intersectPercentage","boxPosition","linePos","maxPosition","initialAxis","calculatedPercentage","toCSSCompatValues","unit","toMove","overlaps","b2","container","intersectArea","getSimpleBoxPosition","StringDecoder","cuetext","FONT_SIZE_PERCENT","FONT_STYLE","CUE_BACKGROUND_PADDING","processCues","cues","overlay","paddedOverlay","shouldCompute","margin","fontSize","Parser","decoder","TextDecoder","reportOrThrowError","onparsingerror","collectNextLine","parseRegion","xy","anchor","lines","regionAnchorX","regionAnchorY","viewportAnchorX","viewportAnchorY","scroll","onregion","parseTimestampMap","ontimestampmap","MPEGTS","LOCAL","parseHeader","alreadyCollectedLine","hasSubstring","oncue","onflush","isArgs","isEnumerable","hasDontEnumBug","hasProtoEnumBug","dontEnums","equalsConstructorPrototype","ctor","excludedKeys","$applicationCache","$console","$external","$frame","$frameElement","$frames","$innerHeight","$innerWidth","$outerHeight","$outerWidth","$pageXOffset","$pageYOffset","$scrollLeft","$scrollTop","$scrollX","$scrollY","$self","$webkitIndexedDB","$webkitStorageInfo","$window","hasAutomationEqualityBug","equalsConstructorPrototypeIfNotBuggy","keysShim","theKeys","skipProto","skipConstructor","keysWorksWithArguments","originalKeys","aac","PES_TIMESCALE","parsePsi_","table","parseAudioPes_","pesType","parsed","endLoop","parseVideoPes_","firstKeyFrame","adjustTimestamp_","baseTimestamp","audioBaseTimestamp","dtsTime","ptsTime","videoBaseTimestamp","inspectAac_","audioCount","parseAacTimestamp","parseSampleRate","audioTimescale","inspectTs_","isAacData","RBSP_TRAILING_BITS","payloadSize","keyCode","searchInput","hasKeyCode","which","foundNamedKey","codes","isEventKey","nameOrCode","backspace","tab","ctrl","pause/break","caps lock","esc","space","page up","page down","home","up","down","command","left command","right command","numpad *","numpad +","numpad -","numpad .","numpad /","num lock","scroll lock","my computer","my calculator",";","=",",","-",".","/","`","[","]","windows","⇧","⌥","⌃","⌘","ctl","control","pause","break","caps","return","spc","spacebar","pgup","pgdn","ins","cmd","D","maxSegmentPts","maxSegmentDts","parseHeaders","xtend","initParams","createXHR","_createXHR","response","readystatechange","xhr","readyState","loadFunc","getBody","responseText","getXml","isJson","errorFunc","evt","timeoutTimer","statusCode","failureResponse","aborted","status","useXDR","rawRequest","getAllResponseHeaders","cors","XDomainRequest","XMLHttpRequest","onreadystatechange","onprogress","onabort","ontimeout","username","password","withCredentials","setRequestHeader","responseType","beforeSend","send","responseXML","firefoxBugTakenEffect","nodeName","doccy","topLevel","minDoc","_extends","_inheritsLoose","subClass","superClass","_assertThisInitialized","_proto","LineStream","_Stream","_this","nextNewline","attributeSeparator","keyvalue","ParseStream","customParsers","tagMappers","_this2","newLines","mapper","mappedLine","newLine","tagType","playlistType","URI","BYTERANGE","_attributes$BYTERANGE","resolution","dateTimeString","dateTimeObject","IV","PRECISE","addParser","_this3","customType","dataParser","addTagMapper","mapFn","lineStream","currentMap","uris","currentUri","defaultMediaGroups","CLOSED-CAPTIONS","currentTimeline","manifest","mediaGroup","rendition","allow-cache","endlist","inf","discontinuitySequence","METHOD","iv","media-sequence","discontinuity-sequence","playlist-type","stream-inf","TYPE","mediaGroupType","AUTOSELECT","LANGUAGE","instreamId","CHARACTERISTICS","characteristics","forced","program-date-time","targetduration","totalduration","totalDuration","timeOffset","precise","cue-out","cueOut","cue-out-cont","cueOutCont","cue-in","cueIn","comment","custom","unpad","padded","classCallCheck","createClass","protoProps","staticProps","inherits","setPrototypeOf","possibleConstructorReturn","precompute","tables","encTable","decTable","sbox","sboxInv","xInv","th","x2","x4","x8","tEnc","tDec","aesTables","AES","_tables","encKey","decKey","keyLen","rcon","decrypt","encrypted0","encrypted1","encrypted2","encrypted3","a2","c2","nInnerRounds","kIndex","table0","table1","table2","table3","aes_decrypter_es_Stream","AsyncStream","jobs","timeout_","processJob_","job","ntoh","encrypted","initVector","encrypted32","decipher","decrypted","decrypted32","init0","init1","init2","init3","wordIx","aes_decrypter_es_Decrypter","Decrypter","STEP","asyncStream_","decryptChunk_","video_es_version","video_es_inheritsLoose","_setPrototypeOf","isNativeReflectConstruct","construct","sham","_construct","Parent","Class","video_es_assertThisInitialized","_taggedTemplateLiteralLoose","strings","video_es_history","video_es_LogByTypeFactory","level","lvl","levels","lvlRegExp","window_default","createLogger","logByType","subname","fname","historyItem","disable","enable","_len2","_key2","_len3","_key3","_len4","_key4","video_es_log","createLogger$1","video_es_toString","accum","video_es_assign","isPlain","video_es_computedStyle","cs","_templateObject","isNonBlankString","throwIfWhitespace","classRegExp","isReal","document_default","isEl","isInFrame","createQuerier","video_es_createEl","propName","tsml_default","attrName","prependTo","hasClass","classToCheck","contains","classToAdd","classToRemove","toggleClass","classToToggle","setAttributes","attrValue","getAttributes","knownBooleans","attrVal","attribute","blockTextSelection","focus","onselectstart","unblockTextSelection","rect","findPosition","clientLeft","scrollLeft","clientTop","scrollTop","getPointerPosition","boxW","boxH","boxY","boxX","pageY","pageX","changedTouches","emptyEl","normalizeContent","insertContent","isSingleLeftClick","buttons","$","$$","Dom","createEl","_guid","newGUID","elData","elIdAttr","hasData","removeData","_cleanUpEvents","dispatcher","detachEvent","disabled","_handleMultipleEvents","fixEvent","returnTrue","returnFalse","isPropagationStopped","srcElement","relatedTarget","fromElement","toElement","returnValue","stopPropagation","cancelBubble","isImmediatePropagationStopped","clientX","doc","clientY","_supportsPassive","passiveEvents","guid","handlersCopy","attachEvent","removeType","elemData","ownerDocument","bubbles","targetData","any","Events","_windowLoaded","video_es_autoSetup","autoSetup","vids","audios","divs","mediaEls","mediaEl","autoSetupTimeout","vjs","EVENT_MAP","video_es_createStyleElement","video_es_throttle","throttled","video_es_debounce","_later","EventTarget","allowedEvents_","ael","queueTrigger","oldTimeout","isEvented","eventBusEl_","addEventedCallback","eventedCallbacks","isValidEventType","validateTarget","validateEventType","validateListener","normalizeListenArgs","isTargetingSelf","EventedMixin","_normalizeListenArgs","removeListenerOnDispose","removeRemoverOnTargetDispose","_normalizeListenArgs2","largs","_normalizeListenArgs3","_len5","_key5","targetOrType","typeOrListener","evented","eventBusKey","StatefulMixin","setState","stateUpdates","changes","stateful","defaultState","handleStateChanged","toTitleCase","titleCaseEquals","str1","str2","video_es_Component","Component","parentComponent_","id_","children_","childIndex_","childNameIndex_","initChildren","reportTouchActivity","enableTouchActivity","localize","languages","primaryCode","primaryLang","localizedString","contentEl","contentEl_","getChildById","componentName","componentClassName","componentClass","ComponentClass","refNode","childFound","compEl","workingChildren","parentOptions","handleAdd","playerOptions","newChild","Tech","wchild","isTech","buildCSSClass","isReady_","readyQueue_","triggerReady","readyQueue","lockShowing","unlockShowing","num","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","currentDimension","computedWidthOrHeight","computedStyle","getPropertyValue","rule","currentDimensions","currentWidth","currentHeight","blur","handleKeyDown","handleKeyPress","emitTapEvents","couldBeTap","touchStart","firstTouch","tapMovementThreshold","touchTimeThreshold","touches","xdiff","ydiff","touchDistance","sqrt","noTap","touchTime","reportUserActivity","touchHolding","report","clearInterval","setInterval","touchEnd","timeoutId","disposeFn","interval","intervalId","_this4","supportsRaf_","cancelAnimationFrame","registerComponent","ComponentToRegister","isComp","isPrototypeOf","components_","Player","players","playerNames","pname","USER_AGENT","webkitVersionMap","appleWebkitVersion","IS_IPAD","IS_IPHONE","IS_IPOD","IS_IOS","IOS_VERSION","IS_ANDROID","ANDROID_VERSION","major","minor","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IE_VERSION","IS_SAFARI","IS_ANY_SAFARI","IS_WINDOWS","TOUCH_ENABLED","maxTouchPoints","DocumentTouch","rangeCheck","fnName","maxIndex","getRange","valueIndex","rangeIndex","createTimeRangesObj","createTimeRanges","bufferedPercent","buffered","bufferedDuration","browserApi","FullscreenApi","prefixed","apiMap","specApi","video_es_i","MediaError","defaultMessages","errorTypes","1","2","3","4","5","errNum","silencePromise","trackToJson_","textTracksToJson","tech","trackEls","trackObjs","trackEl","textTracks","jsonToTextTracks","addedTrack","addRemoteTextTrack","addCue","textTrackConverter","MODAL_CLASS_NAME","video_es_ModalDialog","_Component","ModalDialog","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","descEl_","tabIndex","aria-describedby","aria-hidden","aria-label","previouslyActiveEl_","fillAlways","wasPlaying_","pauseOnOpen","hadControls_","controls","conditionalFocus_","opened","conditionalBlur_","temporary","closeable_","fillWith","parentEl","nextSiblingEl","closeButton","content_","activeEl","playerEl","keycode_default","focusIndex","focusableEls","focusableEls_","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","_EventTarget","tracks_","addTrack","removeTrack","rtrack","getTrackById","video_es_event","addtrack","removetrack","disableOthers","enabled","AudioTrackList","_TrackList","changing_","enabledChange_","disableOthers$1","VideoTrackList","selectedChange_","TextTrackList","queueChange_","triggerSelectedlanguagechange","triggerSelectedlanguagechange_","nonLanguageTextTrackKind","selectedlanguagechange_","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","main","subtitles","commentary","AudioTrackKind","descriptions","main-desc","translation","TextTrackKind","chapters","TextTrackMode","hidden","showing","Track","trackProps","_loop","video_es_parseUrl","addToBody","host","protocol","video_es_getAbsoluteURL","getFileExtension","splitPathRe","video_es_isCrossOrigin","winLoc","urlInfo","srcProtocol","Url","parseUrl","getAbsoluteURL","isCrossOrigin","video_es_parseCues","srcContent","groupCollapsed","groupEnd","video_es_loadTrack","xhr_default","responseBody","loaded_","loadHandler","video_es_TextTrack","_Track","TextTrack","srclang","default_","activeCues_","activeCues","changed","timeupdateHandler","newMode","ct","originalCue","originalCue_","removeCue","_removeCue","cuechange","AudioTrack","newEnabled","VideoTrack","newSelected","NONE","LOADING","LOADED","ERROR","HTMLTrackElement","NORMAL","ListClass","TrackClass","capitalName","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","createTrackHelper","video_es_Tech","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","onDurationChange","manualProgress","trackProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","trackCurrentTime","stopTrackingCurrentTime","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","error_","played","setCurrentTime","trackListChanges","addWebVttScript_","_this5","browser_index_default","_this6","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createRemoteTextTrack","manualCleanup","_this7","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","requestPictureInPicture","PromiseClass","setPoster","playsinline","setPlaysinline","overrideNativeAudioTracks","overrideNativeVideoTracks","canPlayType","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","withSourceHandlers","_Tech","registerSourceHandler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","deferrable","originalFn","sourceHandler_","setSource","nativeSourceHandler","disposeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","middleware","setSourceHelper","setTech","mw","video_es_get","middlewareIterator","video_es_set","mediate","callMethod","middlewareValue","terminated","executeRight","allowedGetters","seekable","allowedSetters","setVolume","allowedMediators","mws","clearCacheForPlayer","getOrCreateFactory","mwFactory","_mws$i","mwf","mwi","lastRun","_middleware","mwrest","_src","MimetypesKind","opus","ogv","mov","m4v","mkv","m4a","mp3","oga","m3u8","jpg","jpeg","gif","png","webp","getMimetype","ext","mimetype","findMimetype","cache_","matchingSources","filterSource","newsrc","srcobj","fixSource","MediaLoader","techOrder","techName","isSupported","loadTech_","video_es_ClickableComponent","ClickableComponent","tabIndex_","createControlTextEl","controlTextEl_","aria-live","controlText_","localizedText","nonIconControl","enabled_","handleClick","PosterImage","_ClickableComponent","backgroundImage","darkGray","lightGray","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","opacity","hex","tryUpdateStyle","video_es_TextTrackDisplay","TextTrackDisplay","updateDisplayHandler","preselectTrack","firstDesc","firstCaptions","preferredTrack","modes","userPref","selectedLanguage","aria-atomic","clearDisplay","allowMultipleShowingTracks","showingTracks","updateForTrack","descriptionsTrack","captionsSubtitlesTrack","_track","updateDisplayState","overrides","textTrackSettings","getValues","textOpacity","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontFamily","fontVariant","_i2","_track2","_j","cueEl","LoadingSpinner","isAudio","playerType","video_es_Button","Button","BigPlayButton","_Button","mouseused_","handleMouseDown","playPromise","playToggle","playFocus","video_es_CloseButton","CloseButton","video_es_PlayToggle","PlayToggle","replay","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","guide","gm","gh","setFormatTime","customImplementation","resetFormatTime","formatTime","video_es_TimeDisplay","TimeDisplay","throttledUpdateContent","updateContent","labelText_","updateTextNode_","textNode_","formattedTime_","formatTime_","updateFormattedTime_","formattedTime","CurrentTimeDisplay","_TimeDisplay","scrubbing","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","SeekToLive","updateLiveEdgeStatus","liveTracker","textEl_","atLiveEdge","seekToLiveEdge","video_es_Slider","Slider","bar","barName","playerEvent","handleMouseMove","handleMouseUp","aria-valuenow","aria-valuemin","aria-valuemax","progress","getPercent","calculateDistance","stepBack","stepForward","bool","vertical_","LoadProgressBar","partEls_","isLive","seekableEnd","bufferedEnd","controlTextPercentage","percentify","rounded","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","pullTooltipBy","updateTime","rafId_","liveWindow","secondsBehind","PlayProgressBar","timeTooltip","MouseTimeDisplay","STEP_SECONDS","PAGE_KEY_MULTIPLIER","UPDATE_REFRESH_INTERVAL","video_es_SeekBar","_Slider","SeekBar","setEventHandlers_","updateInterval","enableInterval_","disableInterval_","toggleVisibility_","update_","liveCurrentTime","offsetParent","getCurrentTime_","seekableStart","videoWasPlaying","newTime","distance","mouseTimeDisplay","handleAction","gotoFraction","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","seekBar","seekBarEl","video_es_PictureInPictureToggle","PictureInPictureToggle","handlePictureInPictureChange","pictureInPictureEnabled","isInPictureInPicture","exitPictureInPicture","video_es_FullscreenToggle","FullscreenToggle","handleFullscreenChange","fsApi_","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","checkVolumeSupport","VolumeLevel","VolumeBar","updateLastVolume_","updateARIAAttributes","checkMuted","muted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","checkMuteSupport","video_es_MuteToggle","MuteToggle","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","soundOff","VolumePanel","inline","volumeControl","volumePanelState_","sliderActive_","sliderInactive_","muteToggle","video_es_Menu","Menu","menuButton_","focusedChild_","boundHandleBlur_","handleBlur","boundHandleTapClick_","handleTapClick","addEventListenerForItem","removeEventListenerForItem","addItem","childComponent","contentElType","btn","buttonPressed_","unpressButton","childComponents","foundComponent","stepChild","haveTitle","video_es_MenuButton","buttonClass","menu","handleSubmenuKeyDown","createMenu","hideThreshold_","titleEl","titleComponent","buildWrapperCSSClass","menuButtonClass","pressButton","handleSubmenuKeyPress","TrackButton","_MenuButton","updateHandler","MenuKeys","video_es_MenuItem","selectable","isSelected_","multiSelectable","_selected","video_es_TextTrackMenuItem","_MenuItem","TextTrackMenuItem","kinds","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","referenceTrack","shouldBeSelected","OffTextTrackMenuItem","_TextTrackMenuItem","allHidden","TextTrackButton","_TrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","_TextTrackButton","track_","setTrack","findChaptersTrack","updateHandler_","remoteTextTrackEl","_remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","AudioTrackButton","PlaybackRateMenuItem","PlaybackRateMenuButton","updateVisibility","updateLabel","labelEl_","rates","playbackRates","currentRate","newRate","playbackRateSupported","Spacer","CustomControlSpacer","_Spacer","ControlBar","ErrorDisplay","_ModalDialog","LOCAL_STORAGE_KEY","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","parseOptionValue","getSelectedOptionValue","setSelectedOption","video_es_TextTrackSettings","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","createElFont_","createElControls_","defaultsDescription","setValues","localStorage","getItem","setItem","removeItem","ttDisplay","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","video_es_ResizeManager","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","unloadListener_","unobserve","disconnect","resizeObserver","video_es_LiveTracker","LiveTracker","reset_","handleDurationchange","handleVisibilityChange","stopTracking","startTracking","isBehind_","timeupdateSeen_","seekableIncrement","seekableIncrement_","liveEdgeWindow","trackLive_","pastSeekEnd_","newSeekEnd","lastSeekEnd_","pastSeekEnd","behindLiveEdge","behindLiveEdge_","isTracking","hasStarted","trackingInterval_","handleTimeupdate","seekableEnds","seekableStarts","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","dummy","docFrag","createDocumentFragment","Element","getDescriptor","priority","video_es_getInnerHTMLDescriptor","HTMLMediaElement","firstSourceWatch","resetSourceWatch_","innerDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","video_es_getSrcDescriptor","setupSourceset","resetSourceset_","srcDescriptor","oldSetAttribute","oldLoad","currentSrc","_templateObject$1","video_es_Html5","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","overrideNative_","override","lowerCaseType","eventName","elTracks","proxyNativeTracksForType_","techTracks","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","tagAttributes","techId","playerId","settingsAttrs","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitExitFullScreen","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","timing","navigationStart","TEST_VID","video_es_track","canControlVolume","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","featuresNativeVideoTracks","featuresNativeAudioTracks","mpegurlRE","_templateObject$2","patchCanPlayType","unpatchCanPlayType","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","DEFAULT_BREAKPOINTS","xsmall","xlarge","huge","video_es_Player","getTagSettings","closest","boundDocumentFullscreenChange_","documentFullscreenChange_","boundFullWindowOnEscKey_","fullWindowOnEscKey","isPosterFromTech_","queuedCallbacks_","userActive_","languagesToLower","languages_","resetCache_","poster_","controls_","changingSrc_","playCallbacks_","playTerminatedQueue_","autoplay","scrubbing_","fluid_","updateStyleEl_","playerOptionsCopy","middleware_","flexNotSupported_","majorVersion","userActive","listenForUserActivity_","handleStageClick_","breakpoints","responsive","fullscreenchange","styleEl_","playerElIngest_","divEmbed","tabindex","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","fill_","fluid","aspectRatio","links","linkEl","_dimension","privDimension","parsedVal","ratio","aspectRatio_","idClass","videoWidth","videoHeight","ratioParts","ratioMultiplier","width_","height_","_width","_height","techEl","unloadTech_","titleTechName","camelTechName","techOptions","vtt.js","canOverridePoster","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechEnterPictureInPicture_","handleTechLeavePictureInPicture_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","techGet_","addTechControlsListeners_","safety","removeTechControlsListeners_","handleTechClick_","handleTechDoubleClick_","handleTechTouchStart_","handleTechTouchMove_","handleTechTouchEnd_","handleTechTap_","techCall_","manualAutoplay_","previouslyMuted","restoreMuted","mutedPromise","updateSourceCaches_","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateSourceCaches","playerSrc","currentSource","eventSrc","lastSource_","updateCache","techSrc","techGet","request","lastPlaybackRate","queued","timeWhenWaiting","timeUpdateListener","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","starttime","inAllowedEls","userActions","doubleClick","userWasActive","toggleFullscreenClass_","isFs","fullscreenElement","fullscreen","msMatchesSelector","togglePictureInPictureClass_","inactivityTimeout","defaultPlaybackRate","_this8","play_","_this9","isSrcReady","waitToPlay_","runPlayTerminatedQueue_","runPlayCallbacks_","isScrubbing","liveui","percentAsDecimal","_muted","defaultMuted","_defaultMuted","isFS","isFullscreen_","fullscreenOptions","fsOptions","enterFullWindow","exitFullWindow","isFullWindow","docOrigOverflow","overflow","isPiP","isInPictureInPicture_","hotkeys","excludeElement","excludedTags","allowedInputTypes","handleHotkeys","_hotkeys$fullscreenKe","fullscreenKey","keydownEvent","_hotkeys$muteKey","muteKey","_hotkeys$playPauseKey","playPauseKey","FSToggle","selectSource","foundSourceAndTech","_this10","techs","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","finder","sourceOrder","_this11","middlewareSource","src_","notSupportedMessage","_this12","sourceTech","_this13","doReset_","resetControlBarUI_","resetProgressBar_","resetPlaybackRate_","resetVolumeBar_","_this$controlBar","durationDisplay","currentSources","currentType","techAutoplay","newPoster","usingNativeControls_","suppressNotSupportedError","triggerSuppressedError","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","screenX","screenY","isAudio_","_obj","createModal","_this14","modal","updateCurrentBreakpoint_","currentBreakpoint","candidateBreakpoint","maxWidth","breakpoints_","breakpoint_","removeCurrentBreakpoint_","currentBreakpointClass","_breakpoints","responsive_","loadMedia","_this15","_this$cache_$media","artwork","tt","getMedia","baseOptions","tagOptions","dataSetup","_safeParseTuple","tuple_default","childName","video_es_navigator","html5","flash","userLanguage","navigationUI","BASE_PLUGIN_NAME","PLUGIN_CACHE_KEY","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","createBasicPlugin","basicPluginWrapper","createPluginFactory","PluginSubClass","getEventHash","Plugin","isBasic","deregisterPlugin","getPlugins","getPluginVersion","usingPlugin","hasPlugin","_inherits","super_","subClassMethods","normalizeId","videojs$1","getPlayer","defaultView","hookFunction","PlayerComponent","hooks_","hookOnce","removeHook","video_es_style","video_es_head","getPlayers","nId","_tag","getAllPlayers","writeable","addLanguage","_mergeOptions","createTimeRange","video_es_resolveUrl","url_toolkit_default","resolveManifestRedirect","handleManifestRedirect","req","responseURL","video_es_classCallCheck","video_es_createClass","get$1","video_es_inherits","video_es_possibleConstructorReturn","slicedToArray","sliceIterator","_arr","mergeOptions$1","EventTarget$1","log$1","forEachMediaGroup","mediaType","groupKey","labelKey","mediaProperties","updateSegments","resolveSegmentUris","baseUri","updateMaster","mergedPlaylist","setupMediaPlaylists","resolveMediaGroupUris","refreshDelay","lastSegment","video_es_PlaylistLoader","PlaylistLoader","srcUrl","hls","_options$withCredenti","_options$handleManife","handleManifestRedirects","hls_","hlsOptions","customTagParsers","customTagMappers","playlistRequestError","haveMetadata","startingState","customParser","media_","mediaUpdateTimeout","stopRequest","finalRenditionTimeout","oldRequest","isFinalRendition","mediaChange","started","backwardDuration","endSequence","forwardDuration","intervalDuration","expired","backward","video_es_duration","sumDurations","safeLiveIndex","distanceFromEnd","safeDistance","playlistEnd","useSafeLiveEnd","isWholeNumber","roundSignificantDigit","increment","numDecimalDigits","ceilLeastSignificantDigit","floorLeastSignificantDigit","getMediaInfoForTime","numSegments","mediaIndex","isBlacklisted","excludeUntil","isIncompatible","isEnabled","blacklisted","isDisabled","isAes","isFmp4","estimateSegmentRequestTime","segmentDuration","bytesReceived","isLowestEnabledRendition","currentBandwidth","MAX_VALUE","Playlist","videojsXHR","mergeOptions$1$1","xhrFactory","XhrFunction","beforeRequest","Hls","reqResponse","responseTime","roundTripTime","requestTime","responseHeaders","timedout","originalAbort","byterangeStr","byterangeStart","byterangeEnd","segmentXhrHeaders","Range","textRange","formatHexString","formatAsciiString","createTransferableMessage","transferable","isView","initSegmentId","segmentKeyId","hexDump","ascii","tagDump","textRanges","utils","SEGMENT_END_FUDGE_PERCENT","playerTimeToProgramTime","playerTime","transmuxerPrependedSeconds","videoTimingInfo","transmuxedStart","transmuxedPresentationStart","startOfSegment","offsetFromSegmentStart","getTime","originalSegmentVideoDuration","transmuxedPresentationEnd","findSegmentForProgramTime","programTime","nextSegmentStart","lastSegmentStart","lastSegmentDuration","lastSegmentEnd","estimatedStart","findSegmentForPlayerTime","segmentEnd","getOffsetFromTimestamp","comparisonTimeStamp","segmentDateTime","programDateTime","segmentTimeEpoch","programTimeEpoch","verifyProgramDateTimeTags","getProgramTime","_ref$time","matchedSegment","seekTime","programTimeObject","mediaSeconds","toISOString","seekToProgramTime","_ref2$retryCount","retryCount","seekTo","_ref2$pauseAfterSeek","pauseAfterSeek","mediaOffset","seekToTime","seekedCallback","TIME_FUDGE_FACTOR","SAFE_TIME_DELTA","filterRanges","timeRanges","findRange","findNextRange","findGaps","printableRange","strArr","timeUntilRebuffer","timeRangesToArray","timeRangesList","createTextTracksIfNecessary","sourceBuffer","mediaSource","inbandTextTracks_","metadataTrack_","inBandMetadataTrackDispatchType","removeCuesFromTrack","deprecateOldCue","durationOfVideo","dur","video_es_addTextTrackData","sourceHandler","captionArray","metadataArray","Cue","WebKitDataCue","timestampOffset","videoDuration","mediaSource_","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","cueGroup","nextTime","TARGET","SCRIPT_TYPE","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","URL","webkitURL","msURL","Worker","shimWorker","filename","forceFallback","objURL","createSourceObject","wrapTerminate","selfShim","isThisThread","testWorker","testArray","revokeObjectURL","terminate","createObjectURL","Blob","blob","getBlob","worker","term","TransmuxWorker","document$$1","_findBox","mp4Generator","bin","toUnsigned$1","silence","ONE_SECOND_IN_TS$1","generateSampleTable$1","ONE_SECOND_IN_TS$2","captionPacketParser","_char","streamTypes","_MetadataStream","timestampRolloverStream","_TransportPacketStream","_TransportParseStream","_ElementaryStream","TimestampRolloverStream$1","stream$$1","_AdtsStream","m2ts_1","_H264Stream","_NalByteStream","expGolomb","_AacStream","ADTS_SAMPLING_FREQUENCIES$1","parseSyncSafeInteger$1","percentEncode$1","parseIso88591$1","header","returnSize","footerPresent","lowThree","highTwo","parseType$1","_VideoSegmentStream","_AudioSegmentStream","_Transmuxer","_CoalesceStream","isLikelyAacData$1","_textifyMp","transmuxer","parseType$2","parse$$1","_byte","mp4Inspector$$1","discardEmulationPreventionBytes$1","CaptionStream$1","CaptionParser$$1","captionStream$$1","captionParser","wireTransmuxerEvents","initArray","gopInfo","videoSegmentTimingInfo","MessageHandlers","appendStart","TransmuxerWorker","messageHandlers","transmuxerWorker","defaultCodecs","videoCodec","videoObjectTypeIndicator","audioProfile","translateLegacyCodecs","orig","profile","avcLevel","profileHex","avcLevelHex","parseCodecs","codecCount","mapLegacyAvcCodecs","codecString","makeMimeTypeString","getContainerType","getCodecs","mediaAttributes","audioProfileFromDefault","audioGroupId","audioGroup","audioType","mimeTypesForPlaylist","containerType","codecInfo","isMuxed","isMaat","groupId","codecStrings","justAudio","justVideo","bothVideoAudio","parseContentType","parameters","parameter","isAudioCodec","isVideoCodec","gopsSafeToAlignWith","mapping","currentTimePts","updateGopBuffer","removeGopBuffer","updatedBuffer","videoBuffer","audioBuffer","audioDisabled","extents","videoBuffered","audioBuffered","makeWrappedSourceBuffer","addSourceBuffer","updating","realBuffer_","VirtualSourceBuffer","_videojs$EventTarget","timestampOffset_","pendingBuffers_","bufferUpdating_","codecs_","audioCodec_","videoCodec_","audioDisabled_","appendAudioInitSegment_","gopBuffer_","timeMapping_","safeAppend_","transmuxer_","data_","done_","appendGopInfo_","videoSegmentTimingInfo_","videoBuffer_","audioBuffer_","appendWindowStart","processPendingSegments_","timingInfo","timingInfoInSeconds","presentation","codecProperty","nativeMediaSource_","shouldTrigger","sortedSegments","segmentObj","createRealSourceBuffers_","triggerUpdateend","concatAndAppendSegments_","destinationBuffer","tempBuffer","appendBuffer","originalError","video_es_HtmlMediaSource","HtmlMediaSource","MediaSource","activeSourceBuffers_","sourceBuffers","updateActiveSourceBuffers_","disableCombined","disableAudioOnly","onPlayerMediachange_","onHlsReset_","onHlsSegmentTimeMapping_","url_","sourcebuffer","parsedType","urlCount","mediaSources","video_es_open","msObjectURL","swfId","video_es_supportsNativeMediaSources","isTypeSupported","supportsNativeMediaSources","URL$1","objectUrlPrefix","EventTarget$1$1","mergeOptions$2","updateMaster$1","oldMaster","newMaster","noChanges","playlistUpdate","_playlistUpdate","generateSidxKey","sidxInfo","sidxByteRangeEnd","equivalentSidx","neitherMap","equivalentMap","compareSidxEntry","oldSidxMapping","newSidxMapping","currentSidxInfo","savedSidxInfo","video_es_filterChangedSidxMappings","masterXml","mpd_parser_es","videoSidx","mediaGroupSidx","requestSidx_","sidxRange","finishProcessingFn","sidxRequestOptions","video_es_DashPlaylistLoader","DashPlaylistLoader","srcUrlOrPlaylist","masterPlaylistLoader","refreshXml_","refreshMedia_","loadedPlaylists_","sidxMapping_","setupChildLoader","masterPlaylistLoader_","childPlaylist_","minimumUpdatePeriodTimeout_","mediaRequest_","doneFn","mp4_inspector_default","sidxRequestFinished_","masterXml_","clientOffset_","phonyUri","_phonyUri","haveMaster_","date","masterLoaded_","syncClientServerClock_","onClientServerClockSync_","utcTiming","serverTime","parseMasterXml","hasPendingRequest","updatedMaster","mediaUri","logger","video_es_noop","SourceUpdater","sourceBufferEmitter","callbacks_","pendingCallback_","processedAppend_","mimeType_","logger_","createSourceBuffer_","sourceBuffer_","start_","started_","onUpdateendCallback_","pendingCallback","removing","runCallback_","queueCallback_","videoSegmentTimingInfoCallback","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","INITIAL_BANDWIDTH","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","REQUEST_ERRORS","FAILURE","TIMEOUT","ABORTED","abortAll","activeXhrs","getRequestStats","getProgressStats","progressEvent","stats","handleErrors","handleKeyResponse","errorObj","video_es_handleInitSegmentResponse","probe_default","handleSegmentResponse","encryptedBytes","fmp4Captions","decryptSegment","decrypter","decryptionHandler","requestId","keyBytes","waitForCompletion","didError","endOfAllRequests","handleProgress","progressFn","firstBytesReceivedAt","mediaSegmentRequest","xhrOptions","decryptionWorker","keyRequestOptions","keyRequestCallback","keyXhr","initSegmentOptions","initSegmentRequestCallback","initSegmentXhr","segmentRequestOptions","segmentRequestCallback","segmentXhr","video_es_safeGetComputedStyle","stableSort","sortFn","newArray","cmp","video_es_comparePlaylistBandwidth","leftBandwidth","rightBandwidth","video_es_comparePlaylistResolution","leftWidth","rightWidth","video_es_simpleSelector","playerBandwidth","playerWidth","playerHeight","limitRenditionByPlayerDimensions","sortedPlaylistReps","rep","enabledPlaylistReps","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","_chosenRep","haveResolution","resolutionBestRepList","resolutionBestRep","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","chosenRep","lastBandwidthSelector","systemBandwidth","minRebufferMaxBandwidthSelector","duration$$1","syncController","compatiblePlaylists","enabledPlaylists","bandwidthPlaylists","rebufferingEstimates","getSyncPoint","numRequests","requestTimeEstimate","rebufferingImpact","noRebufferingPlaylists","estimate","lowestBitrateCompatibleVariantSelector","playlistsWithVideo","createCaptionsTrackIfNotExists","inbandTextTracks","addCaptionData","CHECK_BUFFER_DELAY","detectEndOfStream","segmentIndex","appendedLastSegment","finite","illegalMediaSwitch","loaderType","startingMedia","newSegmentMedia","containsAudio","containsVideo","safeBackBufferTrimTime","seekable$$1","removeToTime","segmentInfoString","_segmentInfo$segment","_segmentInfo$playlist","seq","_segmentInfo$playlist2","video_es_SegmentLoader","SegmentLoader","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","currentTime_","seekable_","seeking_","loaderType_","startingMedia_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceType","state_","checkBufferTimeout_","currentTimeline_","pendingSegment_","sourceUpdater_","xhrOptions_","activeInitSegmentId_","initSegments_","cacheEncryptionKeys_","cacheEncryptionKeys","keyCache_","captionParser_","decrypter_","syncController_","syncPoint_","ended_","fetchAtBuffer_","newState","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","abort_","monitorBuffer_","abortRequests","_error","set$$1","storedMap","storedKey","playlist_","setDateTimeMapping","couldBeginLoading_","init_","sourceBufferEmitter_","resetEverything","newPlaylist","oldPlaylist","syncInfo","oldId","mediaSequenceDiff","saveExpiredSegmentInfo","resyncLoader","_mimeType","resetLoader","monitorBufferTick_","fillBuffer_","checkBuffer_","buffered_","isEndOfStream_","endOfStream","loadSegment_","lastBufferedEnd","bufferedTime","getSyncSegmentCandidate_","generateSegmentInfo_","mediaSourceInfo","_mediaSourceInfo","segmentIndexArray","isSyncRequest","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$$1","switchCandidate","timeSavedBySwitching","minimumTimeSaving","simpleSegment","abortRequestEarly_","trimBackBuffer_","createSimplifiedSegmentObj_","handleProgress_","segmentRequestFinished_","segmentKey","processSegmentResponse_","handleSegment_","probeSegmentInfo","illegalMediaSwitchError","blacklistDuration","timelineMapping","mappingForTimeline","initId","handleVideoSegmentTimingInfo_","handleUpdateEnd_","isWalkingForward","recordThroughput_","addSegmentMetadataCue_","segmentProcessingTime","segmentProcessingThroughput","uint8ToUtf8","uintArray","VTT_LINE_TERMINATORS","_char2","video_es_VTTSegmentLoader","_SegmentLoader","VTTSegmentLoader","subtitlesTrack_","combinedByteLength","combinedSegment","skipEmptySegments_","timestampOffsetForTimeline","checkTimestampOffset","requested","parseVTTCues_","updateTimeMapping_","timelines","decodeBytesToString","timestampmap","mapData","segmentData","mappingObj","diff","firstStart","lastStart","findAdCue","mediaTime","adStartTime","adEndTime","video_es_updateAdCues","adOffset","adTotal","_segment$cueOutCont$s","_segment$cueOutCont$s2","tsprobe","ts_inspector_default","syncPointStrategies","datetimeToDisplayTime","lastDistance","segmentStart","discontinuitySync","discontinuities","video_es_SyncController","SyncController","inspectCache_","syncPoints","runStrategies_","selectSyncPoint_","strategy","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","playlistTimestamp","probeMp4Segment_","probeTsSegment_","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","timeInfo","segmentStartTime","segmentEndTime","probedInfo","accuracy","mediaIndexDiff","Decrypter$1","AsyncStream$$1","decrypt$$1","Decrypter$$1","DecrypterWorker","decrypterWorker","audioTrackKind_","stopLoaders","segmentLoader","activePlaylistLoader","startLoaders","playlistLoader","onGroupChanged","_settings$segmentLoad","segmentLoaders","mainSegmentLoader","mediaTypes","activeTrack","activeGroup","previousActiveLoader","onTrackChanged","_settings$segmentLoad2","blacklistCurrentPlaylist","defaultTrack","requestOptions","initialize","_settings$mediaTypes$","variantLabel","_settings$mediaTypes$2","_settings$mediaTypes$3","variants","setupMediaGroups","onAudioTrackChanged","createMediaTypes","ABORT_EARLY_BLACKLIST_SECONDS","loaderStats","sumLoaderStat","audioSegmentLoader_","mainSegmentLoader_","video_es_MasterPlaylistController","MasterPlaylistController","externHls","useCueTags","enableLowInitialPlaylist","seekTo_","useCueTags_","cueTagsTrack_","requestOptions_","mediaTypes_","handleSourceOpen_","segmentLoaderSettings","setupMasterPlaylistLoaderListeners_","subtitleSegmentLoader_","setupSegmentLoaderListeners_","requestTimeout","triggerPresenceUsage_","setupSourceBuffers_","setupFirstPlay","updatedPlaylist","excludeUnsupportedVariants_","selectedMedia","selectInitialPlaylist","selectPlaylist","initialMedia_","updateAdCues_","updateDuration","addSeekableRange","addSeekableRange_","onDurationchange","playlistOutdated","stuckAtPlaylistEnd_","defaultDemuxed","audioGroupKeys","nextPlaylist","currentPlaylist","forwardBuffer","bufferLowWaterLine","onSyncInfoUpdate_","onEndOfStream","isEndOfStream","getExpiredTime","absolutePlaylistEnd","mainSeekable","audioSeekable","oldEnd","oldStart","oldDuration","newDuration","setDuration","mimeTypes","configureLoaderMimeTypes_","excludeIncompatibleVariants_","variant","variantCodecs","enableFunction","loader","playlistUri","changePlaylistFn","incompatible","currentlyEnabled","Representation","hlsHandler","mpc","masterPlaylistController_","smoothQualityChange","changeType","qualityChangeFunction","renditionSelectionMixin","timerCancelEvents","video_es_PlaybackWatcher","PlaybackWatcher","allowSeeksWithinUnsafeLiveWindow","consecutiveUpdates","lastRecordedTime","timer_","checkCurrentTimeTimeout_","canPlayHandler","monitorCurrentTime_","waitingHandler","techWaiting_","cancelTimerHandler","cancelTimer_","fixesBadSeeksHandler","fixesBadSeeks_","checkCurrentTime_","waiting_","isAfterSeekableRange","afterSeekableWindow_","beforeSeekableWindow_","livePoint","nextRange","videoUnderflow_","skipTheGap_","allowedEnd","gap","gapFromVideoUnderflow_","scheduledCurrentTime","gaps","defaultOptions","errorInterval","getSource","IWillNotUseThisInPlugins","initPlugin","localOptions","loadedMetadataHandler","cleanupEvents","reinitPlugin","reloadSourceOnError","version$1","vhs","source_","Hls$1","STANDARD_PLAYLIST_SELECTOR","INITIAL_PLAYLIST_SELECTOR","comparePlaylistBandwidth","comparePlaylistResolution","LOCAL_STORAGE_KEY$1","simpleTypeFromSourceType","dashRE","handleHlsMediaChange","qualityLevels","selectedIndex_","handleHlsLoadedMetadata","addQualityLevel","emeKeySystems","keySystemOptions","videoPlaylist","audioPlaylist","keySystemContentTypes","audioContentType","videoContentType","setupEmeOptions","eme","sourceOptions","keySystems","initializeMediaKeys","getVhsLocalStorage","storedObject","updateVhsLocalStorage","objectToStore","supportsNativeHls","canPlay","canItPlay","supportsNativeDash","supportsTypeNatively","Component$1","video_es_HlsHandler","HlsHandler","dash","setOptions_","overrideNative","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","smoothQualityChange_","pauseLoading","useBandwidthFromLocalStorage","playbackWatcher_","invBandwidth","invThroughput","systemBitrate","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","mediaSecondsLoaded_","currentTech","playerDimensions","setupQualityLevels_","qualityLevels_","HlsSourceHandler","_videojs$mergeOptions","supportedType","canUseMsePlayback","origDefineProperty","arePropertyDescriptorsSupported","supportsDescriptors","predicates","forbiddenField","scrollSetting","findScrollSetting","isValidPercentValue","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll","$SyntaxError","Property Descriptor","isData","IsAccessor","recordType","argumentName"],"mappings":"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YACAiI,GAAAghB,SACAhhB,GAAA1kE,QACA0kE,GAAAwF,UACAxF,GAAAloD,OACAkoD,GAAA+mB,WACA/mB,GAAAgnB,aACAhnB,GAAA77B,WACA67B,GAAAkrB,mBACAlrB,GAAAib,WACAjb,GAAAinB,SACAjnB,GAAAomB,aACApmB,GAAAx4C,UACAw4C,GAAAmrB,YACAnrB,GAAA18B,SACA08B,GAAAohB,UACAphB,GAAAqrB,UACArrB,GAAAknB,QACAlnB,GAAAmnB,UACAnnB,GAAAl/C,QACAk/C,GAAAihB,WACAjhB,GAAAsrB,QACAtrB,GAAAujB,YACAvjB,GAAAurB,aACAvrB,GAAAwrB,YACAxrB,GAAAyjB,WACAzjB,GAAA0jB,gBACA1jB,GAAAkhB,aACAlhB,GAAA3D,QACA2D,GAAAonB,UACApnB,GAAA92C,YACA82C,GAAAyrB,cACAzrB,GAAAud,QACAvd,GAAAwd,WACAxd,GAAAyd,aACAzd,GAAA0d,eACA1d,GAAA2d,UACA3d,GAAA0rB,SACA1rB,GAAA2rB,cACA3rB,GAAA2jB,SACA3jB,GAAAluC,UACAkuC,GAAA9hD,UACA8hD,GAAA4jB,QACA5jB,GAAAhB,WACAgB,GAAAqhB,cACArhB,GAAAjgE,OACAigE,GAAAqnB,WACArnB,GAAAshB,WACAthB,GAAA33D,SACA23D,GAAAuhB,UACAvhB,GAAAke,cACAle,GAAAme,gBACAne,GAAA7kD,SACA6kD,GAAA6jB,UACA7jB,GAAAoe,QACApe,GAAAqe,QACAre,GAAAse,aACAte,GAAAue,kBACAve,GAAAwe,aACAxe,GAAA2f,OACA3f,GAAA8jB,YACA9jB,GAAAmW,QACAnW,GAAAvgD,WACAugD,GAAAsnB,WACAtnB,GAAAunB,aACAvnB,GAAAgsB,UACAhsB,GAAAgO,iBACAhO,GAAAnjB,aACAmjB,GAAA+jB,SACA/jB,GAAAye,SACAze,GAAA0e,WACA1e,GAAA2e,aACA3e,GAAA4e,QACA5e,GAAA6e,UACA7e,GAAA8e,YACA9e,GAAAynB,SACAznB,GAAA+e,SACA/e,GAAAif,aACAjf,GAAA76C,UA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","file":"js/chunk-vendors.b793df69.js","sourcesContent":["'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n","// https://github.com/tc39/proposal-promise-finally\n'use strict';\nvar $export = require('./_export');\nvar core = require('./_core');\nvar global = require('./_global');\nvar speciesConstructor = require('./_species-constructor');\nvar promiseResolve = require('./_promise-resolve');\n\n$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {\n  var C = speciesConstructor(this, core.Promise || global.Promise);\n  var isFunction = typeof onFinally == 'function';\n  return this.then(\n    isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () { return x; });\n    } : onFinally,\n    isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () { throw e; });\n    } : onFinally\n  );\n} });\n","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * A stream-based mp2t to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\nvar Stream = require('../utils/stream.js'),\n  CaptionStream = require('./caption-stream'),\n  StreamTypes = require('./stream-types'),\n  TimestampRolloverStream = require('./timestamp-rollover-stream').TimestampRolloverStream;\n\nvar m2tsStreamTypes = require('./stream-types.js');\n\n// object types\nvar TransportPacketStream, TransportParseStream, ElementaryStream;\n\n// constants\nvar\n  MP2T_PACKET_LENGTH = 188, // bytes\n  SYNC_BYTE = 0x47;\n\n/**\n * Splits an incoming stream of binary data into MPEG-2 Transport\n * Stream packets.\n */\nTransportPacketStream = function() {\n  var\n    buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n    bytesInBuffer = 0;\n\n  TransportPacketStream.prototype.init.call(this);\n\n   // Deliver new bytes to the stream.\n\n  /**\n   * Split a stream of data into M2TS packets\n  **/\n  this.push = function(bytes) {\n    var\n      startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      everything;\n\n    // If there are bytes remaining from the last segment, prepend them to the\n    // bytes that were pushed in\n    if (bytesInBuffer) {\n      everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n      everything.set(buffer.subarray(0, bytesInBuffer));\n      everything.set(bytes, bytesInBuffer);\n      bytesInBuffer = 0;\n    } else {\n      everything = bytes;\n    }\n\n    // While we have enough data for a packet\n    while (endIndex < everything.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n        // We found a packet so emit it and jump one whole packet forward in\n        // the stream\n        this.trigger('data', everything.subarray(startIndex, endIndex));\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      }\n      // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n      startIndex++;\n      endIndex++;\n    }\n\n    // If there was some data left over at the end of the segment that couldn't\n    // possibly be a whole packet, keep it because it might be the start of a packet\n    // that continues in the next segment\n    if (startIndex < everything.byteLength) {\n      buffer.set(everything.subarray(startIndex), 0);\n      bytesInBuffer = everything.byteLength - startIndex;\n    }\n  };\n\n  /**\n   * Passes identified M2TS packets to the TransportParseStream to be parsed\n  **/\n  this.flush = function() {\n    // If the buffer contains a whole packet when we are being flushed, emit it\n    // and empty the buffer. Otherwise hold onto the data because it may be\n    // important for decoding the next segment\n    if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n      this.trigger('data', buffer);\n      bytesInBuffer = 0;\n    }\n    this.trigger('done');\n  };\n};\nTransportPacketStream.prototype = new Stream();\n\n/**\n * Accepts an MP2T TransportPacketStream and emits data events with parsed\n * forms of the individual transport stream packets.\n */\nTransportParseStream = function() {\n  var parsePsi, parsePat, parsePmt, self;\n  TransportParseStream.prototype.init.call(this);\n  self = this;\n\n  this.packetsWaitingForPmt = [];\n  this.programMapTable = undefined;\n\n  parsePsi = function(payload, psi) {\n    var offset = 0;\n\n    // PSI packets may be split into multiple sections and those\n    // sections may be split into multiple packets. If a PSI\n    // section starts in this packet, the payload_unit_start_indicator\n    // will be true and the first byte of the payload will indicate\n    // the offset from the current position to the start of the\n    // section.\n    if (psi.payloadUnitStartIndicator) {\n      offset += payload[offset] + 1;\n    }\n\n    if (psi.type === 'pat') {\n      parsePat(payload.subarray(offset), psi);\n    } else {\n      parsePmt(payload.subarray(offset), psi);\n    }\n  };\n\n  parsePat = function(payload, pat) {\n    pat.section_number = payload[7]; // eslint-disable-line camelcase\n    pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n\n    // skip the PSI header and parse the first PMT entry\n    self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n    pat.pmtPid = self.pmtPid;\n  };\n\n  /**\n   * Parse out the relevant fields of a Program Map Table (PMT).\n   * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n   * packet. The first byte in this array should be the table_id\n   * field.\n   * @param pmt {object} the object that should be decorated with\n   * fields parsed from the PMT.\n   */\n  parsePmt = function(payload, pmt) {\n    var sectionLength, tableEnd, programInfoLength, offset;\n\n    // PMTs can be sent ahead of the time when they should actually\n    // take effect. We don't believe this should ever be the case\n    // for HLS but we'll ignore \"forward\" PMT declarations if we see\n    // them. Future PMT declarations have the current_next_indicator\n    // set to zero.\n    if (!(payload[5] & 0x01)) {\n      return;\n    }\n\n    // overwrite any existing program map table\n    self.programMapTable = {\n      video: null,\n      audio: null,\n      'timed-metadata': {}\n    };\n\n    // the mapping table ends at the end of the current section\n    sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n    tableEnd = 3 + sectionLength - 4;\n\n    // to determine where the table is, we have to figure out how\n    // long the program info descriptors are\n    programInfoLength = (payload[10] & 0x0f) << 8 | payload[11];\n\n    // advance the offset to the first entry in the mapping table\n    offset = 12 + programInfoLength;\n    while (offset < tableEnd) {\n      var streamType = payload[offset];\n      var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2];\n\n      // only map a single elementary_pid for audio and video stream types\n      // TODO: should this be done for metadata too? for now maintain behavior of\n      //       multiple metadata streams\n      if (streamType === StreamTypes.H264_STREAM_TYPE &&\n          self.programMapTable.video === null) {\n        self.programMapTable.video = pid;\n      } else if (streamType === StreamTypes.ADTS_STREAM_TYPE &&\n                 self.programMapTable.audio === null) {\n        self.programMapTable.audio = pid;\n      } else if (streamType === StreamTypes.METADATA_STREAM_TYPE) {\n        // map pid to stream type for metadata streams\n        self.programMapTable['timed-metadata'][pid] = streamType;\n      }\n\n      // move to the next table entry\n      // skip past the elementary stream descriptors, if present\n      offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n    }\n\n    // record the map on the packet as well\n    pmt.programMapTable = self.programMapTable;\n  };\n\n  /**\n   * Deliver a new MP2T packet to the next stream in the pipeline.\n   */\n  this.push = function(packet) {\n    var\n      result = {},\n      offset = 4;\n\n    result.payloadUnitStartIndicator = !!(packet[1] & 0x40);\n\n    // pid is a 13-bit field starting at the last bit of packet[1]\n    result.pid = packet[1] & 0x1f;\n    result.pid <<= 8;\n    result.pid |= packet[2];\n\n    // if an adaption field is present, its length is specified by the\n    // fifth byte of the TS packet header. The adaptation field is\n    // used to add stuffing to PES packets that don't fill a complete\n    // TS packet, and to specify some forms of timing and control data\n    // that we do not currently use.\n    if (((packet[3] & 0x30) >>> 4) > 0x01) {\n      offset += packet[offset] + 1;\n    }\n\n    // parse the rest of the packet based on the type\n    if (result.pid === 0) {\n      result.type = 'pat';\n      parsePsi(packet.subarray(offset), result);\n      this.trigger('data', result);\n    } else if (result.pid === this.pmtPid) {\n      result.type = 'pmt';\n      parsePsi(packet.subarray(offset), result);\n      this.trigger('data', result);\n\n      // if there are any packets waiting for a PMT to be found, process them now\n      while (this.packetsWaitingForPmt.length) {\n        this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n      }\n    } else if (this.programMapTable === undefined) {\n      // When we have not seen a PMT yet, defer further processing of\n      // PES packets until one has been parsed\n      this.packetsWaitingForPmt.push([packet, offset, result]);\n    } else {\n      this.processPes_(packet, offset, result);\n    }\n  };\n\n  this.processPes_ = function(packet, offset, result) {\n    // set the appropriate stream type\n    if (result.pid === this.programMapTable.video) {\n      result.streamType = StreamTypes.H264_STREAM_TYPE;\n    } else if (result.pid === this.programMapTable.audio) {\n      result.streamType = StreamTypes.ADTS_STREAM_TYPE;\n    } else {\n      // if not video or audio, it is timed-metadata or unknown\n      // if unknown, streamType will be undefined\n      result.streamType = this.programMapTable['timed-metadata'][result.pid];\n    }\n\n    result.type = 'pes';\n    result.data = packet.subarray(offset);\n\n    this.trigger('data', result);\n  };\n\n};\nTransportParseStream.prototype = new Stream();\nTransportParseStream.STREAM_TYPES  = {\n  h264: 0x1b,\n  adts: 0x0f\n};\n\n/**\n * Reconsistutes program elementary stream (PES) packets from parsed\n * transport stream packets. That is, if you pipe an\n * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n * events will be events which capture the bytes for individual PES\n * packets plus relevant metadata that has been extracted from the\n * container.\n */\nElementaryStream = function() {\n  var\n    self = this,\n    // PES packet fragments\n    video = {\n      data: [],\n      size: 0\n    },\n    audio = {\n      data: [],\n      size: 0\n    },\n    timedMetadata = {\n      data: [],\n      size: 0\n    },\n    parsePes = function(payload, pes) {\n      var ptsDtsFlags;\n\n      // get the packet length, this will be 0 for video\n      pes.packetLength = 6 + ((payload[4] << 8) | payload[5]);\n\n      // find out if this packets starts a new keyframe\n      pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0;\n      // PES packets may be annotated with a PTS value, or a PTS value\n      // and a DTS value. Determine what combination of values is\n      // available to work with.\n      ptsDtsFlags = payload[7];\n\n      // PTS and DTS are normally stored as a 33-bit number.  Javascript\n      // performs all bitwise operations on 32-bit integers but javascript\n      // supports a much greater range (52-bits) of integer using standard\n      // mathematical operations.\n      // We construct a 31-bit value using bitwise operators over the 31\n      // most significant bits and then multiply by 4 (equal to a left-shift\n      // of 2) before we add the final 2 least significant bits of the\n      // timestamp (equal to an OR.)\n      if (ptsDtsFlags & 0xC0) {\n        // the PTS and DTS are not written out directly. For information\n        // on how they are encoded, see\n        // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n        pes.pts = (payload[9] & 0x0E) << 27 |\n          (payload[10] & 0xFF) << 20 |\n          (payload[11] & 0xFE) << 12 |\n          (payload[12] & 0xFF) <<  5 |\n          (payload[13] & 0xFE) >>>  3;\n        pes.pts *= 4; // Left shift by 2\n        pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n        pes.dts = pes.pts;\n        if (ptsDtsFlags & 0x40) {\n          pes.dts = (payload[14] & 0x0E) << 27 |\n            (payload[15] & 0xFF) << 20 |\n            (payload[16] & 0xFE) << 12 |\n            (payload[17] & 0xFF) << 5 |\n            (payload[18] & 0xFE) >>> 3;\n          pes.dts *= 4; // Left shift by 2\n          pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n        }\n      }\n      // the data section starts immediately after the PES header.\n      // pes_header_data_length specifies the number of header bytes\n      // that follow the last byte of the field.\n      pes.data = payload.subarray(9 + payload[8]);\n    },\n    /**\n      * Pass completely parsed PES packets to the next stream in the pipeline\n     **/\n    flushStream = function(stream, type, forceFlush) {\n      var\n        packetData = new Uint8Array(stream.size),\n        event = {\n          type: type\n        },\n        i = 0,\n        offset = 0,\n        packetFlushable = false,\n        fragment;\n\n      // do nothing if there is not enough buffered data for a complete\n      // PES header\n      if (!stream.data.length || stream.size < 9) {\n        return;\n      }\n      event.trackId = stream.data[0].pid;\n\n      // reassemble the packet\n      for (i = 0; i < stream.data.length; i++) {\n        fragment = stream.data[i];\n\n        packetData.set(fragment.data, offset);\n        offset += fragment.data.byteLength;\n      }\n\n      // parse assembled packet's PES header\n      parsePes(packetData, event);\n\n      // non-video PES packets MUST have a non-zero PES_packet_length\n      // check that there is enough stream data to fill the packet\n      packetFlushable = type === 'video' || event.packetLength <= stream.size;\n\n      // flush pending packets if the conditions are right\n      if (forceFlush || packetFlushable) {\n        stream.size = 0;\n        stream.data.length = 0;\n      }\n\n      // only emit packets that are complete. this is to avoid assembling\n      // incomplete PES packets due to poor segmentation\n      if (packetFlushable) {\n        self.trigger('data', event);\n      }\n    };\n\n  ElementaryStream.prototype.init.call(this);\n\n  /**\n   * Identifies M2TS packet types and parses PES packets using metadata\n   * parsed from the PMT\n   **/\n  this.push = function(data) {\n    ({\n      pat: function() {\n        // we have to wait for the PMT to arrive as well before we\n        // have any meaningful metadata\n      },\n      pes: function() {\n        var stream, streamType;\n\n        switch (data.streamType) {\n        case StreamTypes.H264_STREAM_TYPE:\n        case m2tsStreamTypes.H264_STREAM_TYPE:\n          stream = video;\n          streamType = 'video';\n          break;\n        case StreamTypes.ADTS_STREAM_TYPE:\n          stream = audio;\n          streamType = 'audio';\n          break;\n        case StreamTypes.METADATA_STREAM_TYPE:\n          stream = timedMetadata;\n          streamType = 'timed-metadata';\n          break;\n        default:\n          // ignore unknown stream types\n          return;\n        }\n\n        // if a new packet is starting, we can flush the completed\n        // packet\n        if (data.payloadUnitStartIndicator) {\n          flushStream(stream, streamType, true);\n        }\n\n        // buffer this fragment until we are sure we've received the\n        // complete payload\n        stream.data.push(data);\n        stream.size += data.data.byteLength;\n      },\n      pmt: function() {\n        var\n          event = {\n            type: 'metadata',\n            tracks: []\n          },\n          programMapTable = data.programMapTable;\n\n        // translate audio and video streams to tracks\n        if (programMapTable.video !== null) {\n          event.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.video,\n            codec: 'avc',\n            type: 'video'\n          });\n        }\n        if (programMapTable.audio !== null) {\n          event.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.audio,\n            codec: 'adts',\n            type: 'audio'\n          });\n        }\n\n        self.trigger('data', event);\n      }\n    })[data.type]();\n  };\n\n  /**\n   * Flush any remaining input. Video PES packets may be of variable\n   * length. Normally, the start of a new video packet can trigger the\n   * finalization of the previous packet. That is not possible if no\n   * more video is forthcoming, however. In that case, some other\n   * mechanism (like the end of the file) has to be employed. When it is\n   * clear that no additional data is forthcoming, calling this method\n   * will flush the buffered packets.\n   */\n  this.flush = function() {\n    // !!THIS ORDER IS IMPORTANT!!\n    // video first then audio\n    flushStream(video, 'video');\n    flushStream(audio, 'audio');\n    flushStream(timedMetadata, 'timed-metadata');\n    this.trigger('done');\n  };\n};\nElementaryStream.prototype = new Stream();\n\nvar m2ts = {\n  PAT_PID: 0x0000,\n  MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n  TransportPacketStream: TransportPacketStream,\n  TransportParseStream: TransportParseStream,\n  ElementaryStream: ElementaryStream,\n  TimestampRolloverStream: TimestampRolloverStream,\n  CaptionStream: CaptionStream.CaptionStream,\n  Cea608Stream: CaptionStream.Cea608Stream,\n  MetadataStream: require('./metadata-stream')\n};\n\nfor (var type in StreamTypes) {\n  if (StreamTypes.hasOwnProperty(type)) {\n    m2ts[type] = StreamTypes[type];\n  }\n}\n\nmodule.exports = m2ts;\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar coneOfSilence = require('../data/silence');\nvar clock = require('../utils/clock');\n\nvar ONE_SECOND_IN_TS = 90000; // 90kHz clock\n\n/**\n * Sum the `byteLength` properties of the data in each AAC frame\n */\nvar sumFrameByteLengths = function(array) {\n  var\n    i,\n    currentObj,\n    sum = 0;\n\n  // sum the byteLength's all each nal unit in the frame\n  for (i = 0; i < array.length; i++) {\n    currentObj = array[i];\n    sum += currentObj.data.byteLength;\n  }\n\n  return sum;\n};\n\n// Possibly pad (prefix) the audio track with silence if appending this track\n// would lead to the introduction of a gap in the audio buffer\nvar prefixWithSilence = function(\n  track,\n  frames,\n  audioAppendStartTs,\n  videoBaseMediaDecodeTime\n) {\n  var\n    baseMediaDecodeTimeTs,\n    frameDuration = 0,\n    audioGapDuration = 0,\n    audioFillFrameCount = 0,\n    audioFillDuration = 0,\n    silentFrame,\n    i;\n\n  if (!frames.length) {\n    return;\n  }\n\n  baseMediaDecodeTimeTs =\n    clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate);\n  // determine frame clock duration based on sample rate, round up to avoid overfills\n  frameDuration = Math.ceil(ONE_SECOND_IN_TS / (track.samplerate / 1024));\n\n  if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n    // insert the shortest possible amount (audio gap or audio to video gap)\n    audioGapDuration =\n      baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime);\n    // number of full frames in the audio gap\n    audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n    audioFillDuration = audioFillFrameCount * frameDuration;\n  }\n\n  // don't attempt to fill gaps smaller than a single frame or larger\n  // than a half second\n  if (audioFillFrameCount < 1 || audioFillDuration > ONE_SECOND_IN_TS / 2) {\n    return;\n  }\n\n  silentFrame = coneOfSilence[track.samplerate];\n\n  if (!silentFrame) {\n    // we don't have a silent frame pregenerated for the sample rate, so use a frame\n    // from the content instead\n    silentFrame = frames[0].data;\n  }\n\n  for (i = 0; i < audioFillFrameCount; i++) {\n    frames.splice(i, 0, {\n      data: silentFrame\n    });\n  }\n\n  track.baseMediaDecodeTime -=\n    Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n};\n\n// If the audio segment extends before the earliest allowed dts\n// value, remove AAC frames until starts at or after the earliest\n// allowed DTS so that we don't end up with a negative baseMedia-\n// DecodeTime for the audio track\nvar trimAdtsFramesByEarliestDts = function(adtsFrames, track, earliestAllowedDts) {\n  if (track.minSegmentDts >= earliestAllowedDts) {\n    return adtsFrames;\n  }\n\n  // We will need to recalculate the earliest segment Dts\n  track.minSegmentDts = Infinity;\n\n  return adtsFrames.filter(function(currentFrame) {\n    // If this is an allowed frame, keep it and record it's Dts\n    if (currentFrame.dts >= earliestAllowedDts) {\n      track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n      track.minSegmentPts = track.minSegmentDts;\n      return true;\n    }\n    // Otherwise, discard it\n    return false;\n  });\n};\n\n// generate the track's raw mdat data from an array of frames\nvar generateSampleTable = function(frames) {\n  var\n    i,\n    currentFrame,\n    samples = [];\n\n  for (i = 0; i < frames.length; i++) {\n    currentFrame = frames[i];\n    samples.push({\n      size: currentFrame.data.byteLength,\n      duration: 1024 // For AAC audio, all samples contain 1024 samples\n    });\n  }\n  return samples;\n};\n\n// generate the track's sample table from an array of frames\nvar concatenateFrameData = function(frames) {\n  var\n    i,\n    currentFrame,\n    dataOffset = 0,\n    data = new Uint8Array(sumFrameByteLengths(frames));\n\n  for (i = 0; i < frames.length; i++) {\n    currentFrame = frames[i];\n\n    data.set(currentFrame.data, dataOffset);\n    dataOffset += currentFrame.data.byteLength;\n  }\n  return data;\n};\n\nmodule.exports = {\n  prefixWithSilence: prefixWithSilence,\n  trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n  generateSampleTable: generateSampleTable,\n  concatenateFrameData: concatenateFrameData\n};\n","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n","'use strict';\n\nvar GetIntrinsic = require('./GetIntrinsic');\n\nvar $Object = GetIntrinsic('%Object%');\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $String = GetIntrinsic('%String%');\nvar $Number = GetIntrinsic('%Number%');\n\nvar assertRecord = require('./helpers/assertRecord');\nvar isPropertyDescriptor = require('./helpers/isPropertyDescriptor');\nvar $isNaN = require('./helpers/isNaN');\nvar $isFinite = require('./helpers/isFinite');\n\nvar sign = require('./helpers/sign');\nvar mod = require('./helpers/mod');\n\nvar IsCallable = require('is-callable');\nvar toPrimitive = require('es-to-primitive/es5');\n\nvar has = require('has');\n\nvar callBind = require('./helpers/callBind');\nvar strSlice = callBind($String.prototype.slice);\n\nvar isPrefixOf = function isPrefixOf(prefix, string) {\n\tif (prefix === string) {\n\t\treturn true;\n\t}\n\tif (prefix.length > string.length) {\n\t\treturn false;\n\t}\n\treturn strSlice(string, 0, prefix.length) === prefix;\n};\n\n// https://es5.github.io/#x9\nvar ES5 = {\n\tToPrimitive: toPrimitive,\n\n\tToBoolean: function ToBoolean(value) {\n\t\treturn !!value;\n\t},\n\tToNumber: function ToNumber(value) {\n\t\treturn +value; // eslint-disable-line no-implicit-coercion\n\t},\n\tToInteger: function ToInteger(value) {\n\t\tvar number = this.ToNumber(value);\n\t\tif ($isNaN(number)) { return 0; }\n\t\tif (number === 0 || !$isFinite(number)) { return number; }\n\t\treturn sign(number) * Math.floor(Math.abs(number));\n\t},\n\tToInt32: function ToInt32(x) {\n\t\treturn this.ToNumber(x) >> 0;\n\t},\n\tToUint32: function ToUint32(x) {\n\t\treturn this.ToNumber(x) >>> 0;\n\t},\n\tToUint16: function ToUint16(value) {\n\t\tvar number = this.ToNumber(value);\n\t\tif ($isNaN(number) || number === 0 || !$isFinite(number)) { return 0; }\n\t\tvar posInt = sign(number) * Math.floor(Math.abs(number));\n\t\treturn mod(posInt, 0x10000);\n\t},\n\tToString: function ToString(value) {\n\t\treturn $String(value);\n\t},\n\tToObject: function ToObject(value) {\n\t\tthis.CheckObjectCoercible(value);\n\t\treturn $Object(value);\n\t},\n\tCheckObjectCoercible: function CheckObjectCoercible(value, optMessage) {\n\t\t/* jshint eqnull:true */\n\t\tif (value == null) {\n\t\t\tthrow new $TypeError(optMessage || 'Cannot call method on ' + value);\n\t\t}\n\t\treturn value;\n\t},\n\tIsCallable: IsCallable,\n\tSameValue: function SameValue(x, y) {\n\t\tif (x === y) { // 0 === -0, but they are not identical.\n\t\t\tif (x === 0) { return 1 / x === 1 / y; }\n\t\t\treturn true;\n\t\t}\n\t\treturn $isNaN(x) && $isNaN(y);\n\t},\n\n\t// https://www.ecma-international.org/ecma-262/5.1/#sec-8\n\tType: function Type(x) {\n\t\tif (x === null) {\n\t\t\treturn 'Null';\n\t\t}\n\t\tif (typeof x === 'undefined') {\n\t\t\treturn 'Undefined';\n\t\t}\n\t\tif (typeof x === 'function' || typeof x === 'object') {\n\t\t\treturn 'Object';\n\t\t}\n\t\tif (typeof x === 'number') {\n\t\t\treturn 'Number';\n\t\t}\n\t\tif (typeof x === 'boolean') {\n\t\t\treturn 'Boolean';\n\t\t}\n\t\tif (typeof x === 'string') {\n\t\t\treturn 'String';\n\t\t}\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-property-descriptor-specification-type\n\tIsPropertyDescriptor: function IsPropertyDescriptor(Desc) {\n\t\treturn isPropertyDescriptor(this, Desc);\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.1\n\tIsAccessorDescriptor: function IsAccessorDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn false;\n\t\t}\n\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tif (!has(Desc, '[[Get]]') && !has(Desc, '[[Set]]')) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.2\n\tIsDataDescriptor: function IsDataDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn false;\n\t\t}\n\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tif (!has(Desc, '[[Value]]') && !has(Desc, '[[Writable]]')) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.3\n\tIsGenericDescriptor: function IsGenericDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn false;\n\t\t}\n\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tif (!this.IsAccessorDescriptor(Desc) && !this.IsDataDescriptor(Desc)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.4\n\tFromPropertyDescriptor: function FromPropertyDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn Desc;\n\t\t}\n\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tif (this.IsDataDescriptor(Desc)) {\n\t\t\treturn {\n\t\t\t\tvalue: Desc['[[Value]]'],\n\t\t\t\twritable: !!Desc['[[Writable]]'],\n\t\t\t\tenumerable: !!Desc['[[Enumerable]]'],\n\t\t\t\tconfigurable: !!Desc['[[Configurable]]']\n\t\t\t};\n\t\t} else if (this.IsAccessorDescriptor(Desc)) {\n\t\t\treturn {\n\t\t\t\tget: Desc['[[Get]]'],\n\t\t\t\tset: Desc['[[Set]]'],\n\t\t\t\tenumerable: !!Desc['[[Enumerable]]'],\n\t\t\t\tconfigurable: !!Desc['[[Configurable]]']\n\t\t\t};\n\t\t} else {\n\t\t\tthrow new $TypeError('FromPropertyDescriptor must be called with a fully populated Property Descriptor');\n\t\t}\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.5\n\tToPropertyDescriptor: function ToPropertyDescriptor(Obj) {\n\t\tif (this.Type(Obj) !== 'Object') {\n\t\t\tthrow new $TypeError('ToPropertyDescriptor requires an object');\n\t\t}\n\n\t\tvar desc = {};\n\t\tif (has(Obj, 'enumerable')) {\n\t\t\tdesc['[[Enumerable]]'] = this.ToBoolean(Obj.enumerable);\n\t\t}\n\t\tif (has(Obj, 'configurable')) {\n\t\t\tdesc['[[Configurable]]'] = this.ToBoolean(Obj.configurable);\n\t\t}\n\t\tif (has(Obj, 'value')) {\n\t\t\tdesc['[[Value]]'] = Obj.value;\n\t\t}\n\t\tif (has(Obj, 'writable')) {\n\t\t\tdesc['[[Writable]]'] = this.ToBoolean(Obj.writable);\n\t\t}\n\t\tif (has(Obj, 'get')) {\n\t\t\tvar getter = Obj.get;\n\t\t\tif (typeof getter !== 'undefined' && !this.IsCallable(getter)) {\n\t\t\t\tthrow new TypeError('getter must be a function');\n\t\t\t}\n\t\t\tdesc['[[Get]]'] = getter;\n\t\t}\n\t\tif (has(Obj, 'set')) {\n\t\t\tvar setter = Obj.set;\n\t\t\tif (typeof setter !== 'undefined' && !this.IsCallable(setter)) {\n\t\t\t\tthrow new $TypeError('setter must be a function');\n\t\t\t}\n\t\t\tdesc['[[Set]]'] = setter;\n\t\t}\n\n\t\tif ((has(desc, '[[Get]]') || has(desc, '[[Set]]')) && (has(desc, '[[Value]]') || has(desc, '[[Writable]]'))) {\n\t\t\tthrow new $TypeError('Invalid property descriptor. Cannot both specify accessors and a value or writable attribute');\n\t\t}\n\t\treturn desc;\n\t},\n\n\t// https://www.ecma-international.org/ecma-262/5.1/#sec-11.9.3\n\t'Abstract Equality Comparison': function AbstractEqualityComparison(x, y) {\n\t\tvar xType = this.Type(x);\n\t\tvar yType = this.Type(y);\n\t\tif (xType === yType) {\n\t\t\treturn x === y; // ES6+ specified this shortcut anyways.\n\t\t}\n\t\tif (x == null && y == null) {\n\t\t\treturn true;\n\t\t}\n\t\tif (xType === 'Number' && yType === 'String') {\n\t\t\treturn this['Abstract Equality Comparison'](x, this.ToNumber(y));\n\t\t}\n\t\tif (xType === 'String' && yType === 'Number') {\n\t\t\treturn this['Abstract Equality Comparison'](this.ToNumber(x), y);\n\t\t}\n\t\tif (xType === 'Boolean') {\n\t\t\treturn this['Abstract Equality Comparison'](this.ToNumber(x), y);\n\t\t}\n\t\tif (yType === 'Boolean') {\n\t\t\treturn this['Abstract Equality Comparison'](x, this.ToNumber(y));\n\t\t}\n\t\tif ((xType === 'String' || xType === 'Number') && yType === 'Object') {\n\t\t\treturn this['Abstract Equality Comparison'](x, this.ToPrimitive(y));\n\t\t}\n\t\tif (xType === 'Object' && (yType === 'String' || yType === 'Number')) {\n\t\t\treturn this['Abstract Equality Comparison'](this.ToPrimitive(x), y);\n\t\t}\n\t\treturn false;\n\t},\n\n\t// https://www.ecma-international.org/ecma-262/5.1/#sec-11.9.6\n\t'Strict Equality Comparison': function StrictEqualityComparison(x, y) {\n\t\tvar xType = this.Type(x);\n\t\tvar yType = this.Type(y);\n\t\tif (xType !== yType) {\n\t\t\treturn false;\n\t\t}\n\t\tif (xType === 'Undefined' || xType === 'Null') {\n\t\t\treturn true;\n\t\t}\n\t\treturn x === y; // shortcut for steps 4-7\n\t},\n\n\t// https://www.ecma-international.org/ecma-262/5.1/#sec-11.8.5\n\t// eslint-disable-next-line max-statements\n\t'Abstract Relational Comparison': function AbstractRelationalComparison(x, y, LeftFirst) {\n\t\tif (this.Type(LeftFirst) !== 'Boolean') {\n\t\t\tthrow new $TypeError('Assertion failed: LeftFirst argument must be a Boolean');\n\t\t}\n\t\tvar px;\n\t\tvar py;\n\t\tif (LeftFirst) {\n\t\t\tpx = this.ToPrimitive(x, $Number);\n\t\t\tpy = this.ToPrimitive(y, $Number);\n\t\t} else {\n\t\t\tpy = this.ToPrimitive(y, $Number);\n\t\t\tpx = this.ToPrimitive(x, $Number);\n\t\t}\n\t\tvar bothStrings = this.Type(px) === 'String' && this.Type(py) === 'String';\n\t\tif (!bothStrings) {\n\t\t\tvar nx = this.ToNumber(px);\n\t\t\tvar ny = this.ToNumber(py);\n\t\t\tif ($isNaN(nx) || $isNaN(ny)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tif ($isFinite(nx) && $isFinite(ny) && nx === ny) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (nx === 0 && ny === 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (nx === Infinity) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (ny === Infinity) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (ny === -Infinity) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (nx === -Infinity) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn nx < ny; // by now, these are both nonzero, finite, and not equal\n\t\t}\n\t\tif (isPrefixOf(py, px)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (isPrefixOf(px, py)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn px < py; // both strings, neither a prefix of the other. shortcut for steps c-f\n\t}\n};\n\nmodule.exports = ES5;\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Functions that generate fragmented MP4s suitable for use with Media\n * Source Extensions.\n */\n'use strict';\n\nvar UINT32_MAX = Math.pow(2, 32) - 1;\n\nvar box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd,\n    trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex,\n    trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR,\n    AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS;\n\n// pre-calculate constants\n(function() {\n  var i;\n  types = {\n    avc1: [], // codingname\n    avcC: [],\n    btrt: [],\n    dinf: [],\n    dref: [],\n    esds: [],\n    ftyp: [],\n    hdlr: [],\n    mdat: [],\n    mdhd: [],\n    mdia: [],\n    mfhd: [],\n    minf: [],\n    moof: [],\n    moov: [],\n    mp4a: [], // codingname\n    mvex: [],\n    mvhd: [],\n    sdtp: [],\n    smhd: [],\n    stbl: [],\n    stco: [],\n    stsc: [],\n    stsd: [],\n    stsz: [],\n    stts: [],\n    styp: [],\n    tfdt: [],\n    tfhd: [],\n    traf: [],\n    trak: [],\n    trun: [],\n    trex: [],\n    tkhd: [],\n    vmhd: []\n  };\n\n  // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n  // don't throw an error\n  if (typeof Uint8Array === 'undefined') {\n    return;\n  }\n\n  for (i in types) {\n    if (types.hasOwnProperty(i)) {\n      types[i] = [\n        i.charCodeAt(0),\n        i.charCodeAt(1),\n        i.charCodeAt(2),\n        i.charCodeAt(3)\n      ];\n    }\n  }\n\n  MAJOR_BRAND = new Uint8Array([\n    'i'.charCodeAt(0),\n    's'.charCodeAt(0),\n    'o'.charCodeAt(0),\n    'm'.charCodeAt(0)\n  ]);\n  AVC1_BRAND = new Uint8Array([\n    'a'.charCodeAt(0),\n    'v'.charCodeAt(0),\n    'c'.charCodeAt(0),\n    '1'.charCodeAt(0)\n  ]);\n  MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n  VIDEO_HDLR = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // pre_defined\n    0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x56, 0x69, 0x64, 0x65,\n    0x6f, 0x48, 0x61, 0x6e,\n    0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n  ]);\n  AUDIO_HDLR = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // pre_defined\n    0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x53, 0x6f, 0x75, 0x6e,\n    0x64, 0x48, 0x61, 0x6e,\n    0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n  ]);\n  HDLR_TYPES = {\n    video: VIDEO_HDLR,\n    audio: AUDIO_HDLR\n  };\n  DREF = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x01, // entry_count\n    0x00, 0x00, 0x00, 0x0c, // entry_size\n    0x75, 0x72, 0x6c, 0x20, // 'url' type\n    0x00, // version 0\n    0x00, 0x00, 0x01 // entry_flags\n  ]);\n  SMHD = new Uint8Array([\n    0x00,             // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00,       // balance, 0 means centered\n    0x00, 0x00        // reserved\n  ]);\n  STCO = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00 // entry_count\n  ]);\n  STSC = STCO;\n  STSZ = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // sample_size\n    0x00, 0x00, 0x00, 0x00 // sample_count\n  ]);\n  STTS = STCO;\n  VMHD = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x01, // flags\n    0x00, 0x00, // graphicsmode\n    0x00, 0x00,\n    0x00, 0x00,\n    0x00, 0x00 // opcolor\n  ]);\n}());\n\nbox = function(type) {\n  var\n    payload = [],\n    size = 0,\n    i,\n    result,\n    view;\n\n  for (i = 1; i < arguments.length; i++) {\n    payload.push(arguments[i]);\n  }\n\n  i = payload.length;\n\n  // calculate the total size we need to allocate\n  while (i--) {\n    size += payload[i].byteLength;\n  }\n  result = new Uint8Array(size + 8);\n  view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n  view.setUint32(0, result.byteLength);\n  result.set(type, 4);\n\n  // copy the payload into the result\n  for (i = 0, size = 8; i < payload.length; i++) {\n    result.set(payload[i], size);\n    size += payload[i].byteLength;\n  }\n  return result;\n};\n\ndinf = function() {\n  return box(types.dinf, box(types.dref, DREF));\n};\n\nesds = function(track) {\n  return box(types.esds, new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n\n    // ES_Descriptor\n    0x03, // tag, ES_DescrTag\n    0x19, // length\n    0x00, 0x00, // ES_ID\n    0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n\n    // DecoderConfigDescriptor\n    0x04, // tag, DecoderConfigDescrTag\n    0x11, // length\n    0x40, // object type\n    0x15,  // streamType\n    0x00, 0x06, 0x00, // bufferSizeDB\n    0x00, 0x00, 0xda, 0xc0, // maxBitrate\n    0x00, 0x00, 0xda, 0xc0, // avgBitrate\n\n    // DecoderSpecificInfo\n    0x05, // tag, DecoderSpecificInfoTag\n    0x02, // length\n    // ISO/IEC 14496-3, AudioSpecificConfig\n    // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n    (track.audioobjecttype << 3) | (track.samplingfrequencyindex >>> 1),\n    (track.samplingfrequencyindex << 7) | (track.channelcount << 3),\n    0x06, 0x01, 0x02 // GASpecificConfig\n  ]));\n};\n\nftyp = function() {\n  return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n};\n\nhdlr = function(type) {\n  return box(types.hdlr, HDLR_TYPES[type]);\n};\nmdat = function(data) {\n  return box(types.mdat, data);\n};\nmdhd = function(track) {\n  var result = new Uint8Array([\n    0x00,                   // version 0\n    0x00, 0x00, 0x00,       // flags\n    0x00, 0x00, 0x00, 0x02, // creation_time\n    0x00, 0x00, 0x00, 0x03, // modification_time\n    0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n\n    (track.duration >>> 24) & 0xFF,\n    (track.duration >>> 16) & 0xFF,\n    (track.duration >>>  8) & 0xFF,\n    track.duration & 0xFF,  // duration\n    0x55, 0xc4,             // 'und' language (undetermined)\n    0x00, 0x00\n  ]);\n\n  // Use the sample rate from the track metadata, when it is\n  // defined. The sample rate can be parsed out of an ADTS header, for\n  // instance.\n  if (track.samplerate) {\n    result[12] = (track.samplerate >>> 24) & 0xFF;\n    result[13] = (track.samplerate >>> 16) & 0xFF;\n    result[14] = (track.samplerate >>>  8) & 0xFF;\n    result[15] = (track.samplerate)        & 0xFF;\n  }\n\n  return box(types.mdhd, result);\n};\nmdia = function(track) {\n  return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n};\nmfhd = function(sequenceNumber) {\n  return box(types.mfhd, new Uint8Array([\n    0x00,\n    0x00, 0x00, 0x00, // flags\n    (sequenceNumber & 0xFF000000) >> 24,\n    (sequenceNumber & 0xFF0000) >> 16,\n    (sequenceNumber & 0xFF00) >> 8,\n    sequenceNumber & 0xFF // sequence_number\n  ]));\n};\nminf = function(track) {\n  return box(types.minf,\n             track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD),\n             dinf(),\n             stbl(track));\n};\nmoof = function(sequenceNumber, tracks) {\n  var\n    trackFragments = [],\n    i = tracks.length;\n  // build traf boxes for each track fragment\n  while (i--) {\n    trackFragments[i] = traf(tracks[i]);\n  }\n  return box.apply(null, [\n    types.moof,\n    mfhd(sequenceNumber)\n  ].concat(trackFragments));\n};\n/**\n * Returns a movie box.\n * @param tracks {array} the tracks associated with this movie\n * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n */\nmoov = function(tracks) {\n  var\n    i = tracks.length,\n    boxes = [];\n\n  while (i--) {\n    boxes[i] = trak(tracks[i]);\n  }\n\n  return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n};\nmvex = function(tracks) {\n  var\n    i = tracks.length,\n    boxes = [];\n\n  while (i--) {\n    boxes[i] = trex(tracks[i]);\n  }\n  return box.apply(null, [types.mvex].concat(boxes));\n};\nmvhd = function(duration) {\n  var\n    bytes = new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24,\n      (duration & 0xFF0000) >> 16,\n      (duration & 0xFF00) >> 8,\n      duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n    ]);\n  return box(types.mvhd, bytes);\n};\n\nsdtp = function(track) {\n  var\n    samples = track.samples || [],\n    bytes = new Uint8Array(4 + samples.length),\n    flags,\n    i;\n\n  // leave the full box header (4 bytes) all zero\n\n  // write the sample table\n  for (i = 0; i < samples.length; i++) {\n    flags = samples[i].flags;\n\n    bytes[i + 4] = (flags.dependsOn << 4) |\n      (flags.isDependedOn << 2) |\n      (flags.hasRedundancy);\n  }\n\n  return box(types.sdtp,\n             bytes);\n};\n\nstbl = function(track) {\n  return box(types.stbl,\n             stsd(track),\n             box(types.stts, STTS),\n             box(types.stsc, STSC),\n             box(types.stsz, STSZ),\n             box(types.stco, STCO));\n};\n\n(function() {\n  var videoSample, audioSample;\n\n  stsd = function(track) {\n\n    return box(types.stsd, new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01\n    ]), track.type === 'video' ? videoSample(track) : audioSample(track));\n  };\n\n  videoSample = function(track) {\n    var\n      sps = track.sps || [],\n      pps = track.pps || [],\n      sequenceParameterSets = [],\n      pictureParameterSets = [],\n      i;\n\n    // assemble the SPSs\n    for (i = 0; i < sps.length; i++) {\n      sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n      sequenceParameterSets.push((sps[i].byteLength & 0xFF)); // sequenceParameterSetLength\n      sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n    }\n\n    // assemble the PPSs\n    for (i = 0; i < pps.length; i++) {\n      pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n      pictureParameterSets.push((pps[i].byteLength & 0xFF));\n      pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n    }\n\n    return box(types.avc1, new Uint8Array([\n      0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      (track.width & 0xff00) >> 8,\n      track.width & 0xff, // width\n      (track.height & 0xff00) >> 8,\n      track.height & 0xff, // height\n      0x00, 0x48, 0x00, 0x00, // horizresolution\n      0x00, 0x48, 0x00, 0x00, // vertresolution\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // frame_count\n      0x13,\n      0x76, 0x69, 0x64, 0x65,\n      0x6f, 0x6a, 0x73, 0x2d,\n      0x63, 0x6f, 0x6e, 0x74,\n      0x72, 0x69, 0x62, 0x2d,\n      0x68, 0x6c, 0x73, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // compressorname\n      0x00, 0x18, // depth = 24\n      0x11, 0x11 // pre_defined = -1\n    ]), box(types.avcC, new Uint8Array([\n      0x01, // configurationVersion\n      track.profileIdc, // AVCProfileIndication\n      track.profileCompatibility, // profile_compatibility\n      track.levelIdc, // AVCLevelIndication\n      0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n    ].concat([\n      sps.length // numOfSequenceParameterSets\n    ]).concat(sequenceParameterSets).concat([\n      pps.length // numOfPictureParameterSets\n    ]).concat(pictureParameterSets))), // \"PPS\"\n            box(types.btrt, new Uint8Array([\n              0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n              0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n              0x00, 0x2d, 0xc6, 0xc0\n            ])) // avgBitrate\n              );\n  };\n\n  audioSample = function(track) {\n    return box(types.mp4a, new Uint8Array([\n\n      // SampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n\n      // AudioSampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.channelcount & 0xff00) >> 8,\n      (track.channelcount & 0xff), // channelcount\n\n      (track.samplesize & 0xff00) >> 8,\n      (track.samplesize & 0xff), // samplesize\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n\n      (track.samplerate & 0xff00) >> 8,\n      (track.samplerate & 0xff),\n      0x00, 0x00 // samplerate, 16.16\n\n      // MP4AudioSampleEntry, ISO/IEC 14496-14\n    ]), esds(track));\n  };\n}());\n\ntkhd = function(track) {\n  var result = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x07, // flags\n    0x00, 0x00, 0x00, 0x00, // creation_time\n    0x00, 0x00, 0x00, 0x00, // modification_time\n    (track.id & 0xFF000000) >> 24,\n    (track.id & 0xFF0000) >> 16,\n    (track.id & 0xFF00) >> 8,\n    track.id & 0xFF, // track_ID\n    0x00, 0x00, 0x00, 0x00, // reserved\n    (track.duration & 0xFF000000) >> 24,\n    (track.duration & 0xFF0000) >> 16,\n    (track.duration & 0xFF00) >> 8,\n    track.duration & 0xFF, // duration\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, // layer\n    0x00, 0x00, // alternate_group\n    0x01, 0x00, // non-audio track volume\n    0x00, 0x00, // reserved\n    0x00, 0x01, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x01, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n    (track.width & 0xFF00) >> 8,\n    track.width & 0xFF,\n    0x00, 0x00, // width\n    (track.height & 0xFF00) >> 8,\n    track.height & 0xFF,\n    0x00, 0x00 // height\n  ]);\n\n  return box(types.tkhd, result);\n};\n\n/**\n * Generate a track fragment (traf) box. A traf box collects metadata\n * about tracks in a movie fragment (moof) box.\n */\ntraf = function(track) {\n  var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun,\n      sampleDependencyTable, dataOffset,\n      upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n\n  trackFragmentHeader = box(types.tfhd, new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x3a, // flags\n    (track.id & 0xFF000000) >> 24,\n    (track.id & 0xFF0000) >> 16,\n    (track.id & 0xFF00) >> 8,\n    (track.id & 0xFF), // track_ID\n    0x00, 0x00, 0x00, 0x01, // sample_description_index\n    0x00, 0x00, 0x00, 0x00, // default_sample_duration\n    0x00, 0x00, 0x00, 0x00, // default_sample_size\n    0x00, 0x00, 0x00, 0x00  // default_sample_flags\n  ]));\n\n  upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n  lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n\n  trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([\n    0x01, // version 1\n    0x00, 0x00, 0x00, // flags\n    // baseMediaDecodeTime\n    (upperWordBaseMediaDecodeTime >>> 24) & 0xFF,\n    (upperWordBaseMediaDecodeTime >>> 16) & 0xFF,\n    (upperWordBaseMediaDecodeTime >>>  8) & 0xFF,\n    upperWordBaseMediaDecodeTime & 0xFF,\n    (lowerWordBaseMediaDecodeTime >>> 24) & 0xFF,\n    (lowerWordBaseMediaDecodeTime >>> 16) & 0xFF,\n    (lowerWordBaseMediaDecodeTime >>>  8) & 0xFF,\n    lowerWordBaseMediaDecodeTime & 0xFF\n  ]));\n\n  // the data offset specifies the number of bytes from the start of\n  // the containing moof to the first payload byte of the associated\n  // mdat\n  dataOffset = (32 + // tfhd\n                20 + // tfdt\n                8 +  // traf header\n                16 + // mfhd\n                8 +  // moof header\n                8);  // mdat header\n\n  // audio tracks require less metadata\n  if (track.type === 'audio') {\n    trackFragmentRun = trun(track, dataOffset);\n    return box(types.traf,\n               trackFragmentHeader,\n               trackFragmentDecodeTime,\n               trackFragmentRun);\n  }\n\n  // video tracks should contain an independent and disposable samples\n  // box (sdtp)\n  // generate one and adjust offsets to match\n  sampleDependencyTable = sdtp(track);\n  trackFragmentRun = trun(track,\n                          sampleDependencyTable.length + dataOffset);\n  return box(types.traf,\n             trackFragmentHeader,\n             trackFragmentDecodeTime,\n             trackFragmentRun,\n             sampleDependencyTable);\n};\n\n/**\n * Generate a track box.\n * @param track {object} a track definition\n * @return {Uint8Array} the track box\n */\ntrak = function(track) {\n  track.duration = track.duration || 0xffffffff;\n  return box(types.trak,\n             tkhd(track),\n             mdia(track));\n};\n\ntrex = function(track) {\n  var result = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    (track.id & 0xFF000000) >> 24,\n    (track.id & 0xFF0000) >> 16,\n    (track.id & 0xFF00) >> 8,\n    (track.id & 0xFF), // track_ID\n    0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n    0x00, 0x00, 0x00, 0x00, // default_sample_duration\n    0x00, 0x00, 0x00, 0x00, // default_sample_size\n    0x00, 0x01, 0x00, 0x01 // default_sample_flags\n  ]);\n  // the last two bytes of default_sample_flags is the sample\n  // degradation priority, a hint about the importance of this sample\n  // relative to others. Lower the degradation priority for all sample\n  // types other than video.\n  if (track.type !== 'video') {\n    result[result.length - 1] = 0x00;\n  }\n\n  return box(types.trex, result);\n};\n\n(function() {\n  var audioTrun, videoTrun, trunHeader;\n\n  // This method assumes all samples are uniform. That is, if a\n  // duration is present for the first sample, it will be present for\n  // all subsequent samples.\n  // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n  trunHeader = function(samples, offset) {\n    var durationPresent = 0, sizePresent = 0,\n        flagsPresent = 0, compositionTimeOffset = 0;\n\n    // trun flag constants\n    if (samples.length) {\n      if (samples[0].duration !== undefined) {\n        durationPresent = 0x1;\n      }\n      if (samples[0].size !== undefined) {\n        sizePresent = 0x2;\n      }\n      if (samples[0].flags !== undefined) {\n        flagsPresent = 0x4;\n      }\n      if (samples[0].compositionTimeOffset !== undefined) {\n        compositionTimeOffset = 0x8;\n      }\n    }\n\n    return [\n      0x00, // version 0\n      0x00,\n      durationPresent | sizePresent | flagsPresent | compositionTimeOffset,\n      0x01, // flags\n      (samples.length & 0xFF000000) >>> 24,\n      (samples.length & 0xFF0000) >>> 16,\n      (samples.length & 0xFF00) >>> 8,\n      samples.length & 0xFF, // sample_count\n      (offset & 0xFF000000) >>> 24,\n      (offset & 0xFF0000) >>> 16,\n      (offset & 0xFF00) >>> 8,\n      offset & 0xFF // data_offset\n    ];\n  };\n\n  videoTrun = function(track, offset) {\n    var bytes, samples, sample, i;\n\n    samples = track.samples || [];\n    offset += 8 + 12 + (16 * samples.length);\n\n    bytes = trunHeader(samples, offset);\n\n    for (i = 0; i < samples.length; i++) {\n      sample = samples[i];\n      bytes = bytes.concat([\n        (sample.duration & 0xFF000000) >>> 24,\n        (sample.duration & 0xFF0000) >>> 16,\n        (sample.duration & 0xFF00) >>> 8,\n        sample.duration & 0xFF, // sample_duration\n        (sample.size & 0xFF000000) >>> 24,\n        (sample.size & 0xFF0000) >>> 16,\n        (sample.size & 0xFF00) >>> 8,\n        sample.size & 0xFF, // sample_size\n        (sample.flags.isLeading << 2) | sample.flags.dependsOn,\n        (sample.flags.isDependedOn << 6) |\n          (sample.flags.hasRedundancy << 4) |\n          (sample.flags.paddingValue << 1) |\n          sample.flags.isNonSyncSample,\n        sample.flags.degradationPriority & 0xF0 << 8,\n        sample.flags.degradationPriority & 0x0F, // sample_flags\n        (sample.compositionTimeOffset & 0xFF000000) >>> 24,\n        (sample.compositionTimeOffset & 0xFF0000) >>> 16,\n        (sample.compositionTimeOffset & 0xFF00) >>> 8,\n        sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n      ]);\n    }\n    return box(types.trun, new Uint8Array(bytes));\n  };\n\n  audioTrun = function(track, offset) {\n    var bytes, samples, sample, i;\n\n    samples = track.samples || [];\n    offset += 8 + 12 + (8 * samples.length);\n\n    bytes = trunHeader(samples, offset);\n\n    for (i = 0; i < samples.length; i++) {\n      sample = samples[i];\n      bytes = bytes.concat([\n        (sample.duration & 0xFF000000) >>> 24,\n        (sample.duration & 0xFF0000) >>> 16,\n        (sample.duration & 0xFF00) >>> 8,\n        sample.duration & 0xFF, // sample_duration\n        (sample.size & 0xFF000000) >>> 24,\n        (sample.size & 0xFF0000) >>> 16,\n        (sample.size & 0xFF00) >>> 8,\n        sample.size & 0xFF]); // sample_size\n    }\n\n    return box(types.trun, new Uint8Array(bytes));\n  };\n\n  trun = function(track, offset) {\n    if (track.type === 'audio') {\n      return audioTrun(track, offset);\n    }\n\n    return videoTrun(track, offset);\n  };\n}());\n\nmodule.exports = {\n  ftyp: ftyp,\n  mdat: mdat,\n  moof: moof,\n  moov: moov,\n  initSegment: function(tracks) {\n    var\n      fileType = ftyp(),\n      movie = moov(tracks),\n      result;\n\n    result = new Uint8Array(fileType.byteLength + movie.byteLength);\n    result.set(fileType);\n    result.set(movie, fileType.byteLength);\n    return result;\n  }\n};\n","var ctx = require('./_ctx');\nvar invoke = require('./_invoke');\nvar html = require('./_html');\nvar cel = require('./_dom-create');\nvar global = require('./_global');\nvar process = global.process;\nvar setTask = global.setImmediate;\nvar clearTask = global.clearImmediate;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\nvar run = function () {\n  var id = +this;\n  // eslint-disable-next-line no-prototype-builtins\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function (event) {\n  run.call(event.data);\n};\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif (!setTask || !clearTask) {\n  setTask = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) args.push(arguments[i++]);\n    queue[++counter] = function () {\n      // eslint-disable-next-line no-new-func\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id) {\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if (require('./_cof')(process) == 'process') {\n    defer = function (id) {\n      process.nextTick(ctx(run, id, 1));\n    };\n  // Sphere (JS game engine) Dispatch API\n  } else if (Dispatch && Dispatch.now) {\n    defer = function (id) {\n      Dispatch.now(ctx(run, id, 1));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  } else if (MessageChannel) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\n    defer = function (id) {\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  // IE8-\n  } else if (ONREADYSTATECHANGE in cel('script')) {\n    defer = function (id) {\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function (id) {\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set: setTask,\n  clear: clearTask\n};\n","'use strict';\n\nvar implementation = require('./implementation');\n\nvar zeroWidthSpace = '\\u200b';\n\nmodule.exports = function getPolyfill() {\n\tif (String.prototype.trim && zeroWidthSpace.trim() === zeroWidthSpace) {\n\t\treturn String.prototype.trim;\n\t}\n\treturn implementation;\n};\n","function clean (s) {\n  return s.replace(/\\n\\r?\\s*/g, '')\n}\n\n\nmodule.exports = function tsml (sa) {\n  var s = ''\n    , i = 0\n\n  for (; i < arguments.length; i++)\n    s += clean(sa[i]) + (arguments[i + 1] || '')\n\n  return s\n}","// call something on iterator step with safe closing on error\nvar anObject = require('./_an-object');\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n","'use strict';\n\nvar fnToStr = Function.prototype.toString;\n\nvar constructorRegex = /^\\s*class\\b/;\nvar isES6ClassFn = function isES6ClassFunction(value) {\n\ttry {\n\t\tvar fnStr = fnToStr.call(value);\n\t\treturn constructorRegex.test(fnStr);\n\t} catch (e) {\n\t\treturn false; // not a function\n\t}\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n\ttry {\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tfnToStr.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nmodule.exports = function isCallable(value) {\n\tif (!value) { return false; }\n\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\tif (typeof value === 'function' && !value.prototype) { return true; }\n\tif (hasToStringTag) { return tryFunctionObject(value); }\n\tif (isES6ClassFn(value)) { return false; }\n\tvar strClass = toStr.call(value);\n\treturn strClass === fnClass || strClass === genClass;\n};\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Accepts program elementary stream (PES) data events and corrects\n * decode and presentation time stamps to account for a rollover\n * of the 33 bit value.\n */\n\n'use strict';\n\nvar Stream = require('../utils/stream');\n\nvar MAX_TS = 8589934592;\n\nvar RO_THRESH = 4294967296;\n\nvar handleRollover = function(value, reference) {\n  var direction = 1;\n\n  if (value > reference) {\n    // If the current timestamp value is greater than our reference timestamp and we detect a\n    // timestamp rollover, this means the roll over is happening in the opposite direction.\n    // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n    // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n    // rollover point. In loading this segment, the timestamp values will be very large,\n    // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n    // the time stamp to be `value - 2^33`.\n    direction = -1;\n  }\n\n  // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n  // cause an incorrect adjustment.\n  while (Math.abs(reference - value) > RO_THRESH) {\n    value += (direction * MAX_TS);\n  }\n\n  return value;\n};\n\nvar TimestampRolloverStream = function(type) {\n  var lastDTS, referenceDTS;\n\n  TimestampRolloverStream.prototype.init.call(this);\n\n  this.type_ = type;\n\n  this.push = function(data) {\n    if (data.type !== this.type_) {\n      return;\n    }\n\n    if (referenceDTS === undefined) {\n      referenceDTS = data.dts;\n    }\n\n    data.dts = handleRollover(data.dts, referenceDTS);\n    data.pts = handleRollover(data.pts, referenceDTS);\n\n    lastDTS = data.dts;\n\n    this.trigger('data', data);\n  };\n\n  this.flush = function() {\n    referenceDTS = lastDTS;\n    this.trigger('done');\n  };\n\n  this.discontinuity = function() {\n    referenceDTS = void 0;\n    lastDTS = void 0;\n  };\n\n};\n\nTimestampRolloverStream.prototype = new Stream();\n\nmodule.exports = {\n  TimestampRolloverStream: TimestampRolloverStream,\n  handleRollover: handleRollover\n};\n","exports.f = Object.getOwnPropertySymbols;\n","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Utilities to detect basic properties and metadata about MP4s.\n */\n'use strict';\n\nvar toUnsigned = require('../utils/bin').toUnsigned;\nvar findBox, parseType, timescale, startTime, getVideoTrackIds;\n\n// Find the data for a box specified by its path\nfindBox = function(data, path) {\n  var results = [],\n      i, size, type, end, subresults;\n\n  if (!path.length) {\n    // short-circuit the search for empty paths\n    return null;\n  }\n\n  for (i = 0; i < data.byteLength;) {\n    size  = toUnsigned(data[i]     << 24 |\n                       data[i + 1] << 16 |\n                       data[i + 2] <<  8 |\n                       data[i + 3]);\n\n    type = parseType(data.subarray(i + 4, i + 8));\n\n    end = size > 1 ? i + size : data.byteLength;\n\n    if (type === path[0]) {\n      if (path.length === 1) {\n        // this is the end of the path and we've found the box we were\n        // looking for\n        results.push(data.subarray(i + 8, end));\n      } else {\n        // recursively search for the next box along the path\n        subresults = findBox(data.subarray(i + 8, end), path.slice(1));\n        if (subresults.length) {\n          results = results.concat(subresults);\n        }\n      }\n    }\n    i = end;\n  }\n\n  // we've finished searching all of data\n  return results;\n};\n\n/**\n * Returns the string representation of an ASCII encoded four byte buffer.\n * @param buffer {Uint8Array} a four-byte buffer to translate\n * @return {string} the corresponding string\n */\nparseType = function(buffer) {\n  var result = '';\n  result += String.fromCharCode(buffer[0]);\n  result += String.fromCharCode(buffer[1]);\n  result += String.fromCharCode(buffer[2]);\n  result += String.fromCharCode(buffer[3]);\n  return result;\n};\n\n/**\n * Parses an MP4 initialization segment and extracts the timescale\n * values for any declared tracks. Timescale values indicate the\n * number of clock ticks per second to assume for time-based values\n * elsewhere in the MP4.\n *\n * To determine the start time of an MP4, you need two pieces of\n * information: the timescale unit and the earliest base media decode\n * time. Multiple timescales can be specified within an MP4 but the\n * base media decode time is always expressed in the timescale from\n * the media header box for the track:\n * ```\n * moov > trak > mdia > mdhd.timescale\n * ```\n * @param init {Uint8Array} the bytes of the init segment\n * @return {object} a hash of track ids to timescale values or null if\n * the init segment is malformed.\n */\ntimescale = function(init) {\n  var\n    result = {},\n    traks = findBox(init, ['moov', 'trak']);\n\n  // mdhd timescale\n  return traks.reduce(function(result, trak) {\n    var tkhd, version, index, id, mdhd;\n\n    tkhd = findBox(trak, ['tkhd'])[0];\n    if (!tkhd) {\n      return null;\n    }\n    version = tkhd[0];\n    index = version === 0 ? 12 : 20;\n    id = toUnsigned(tkhd[index]     << 24 |\n                    tkhd[index + 1] << 16 |\n                    tkhd[index + 2] <<  8 |\n                    tkhd[index + 3]);\n\n    mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n    if (!mdhd) {\n      return null;\n    }\n    version = mdhd[0];\n    index = version === 0 ? 12 : 20;\n    result[id] = toUnsigned(mdhd[index]     << 24 |\n                            mdhd[index + 1] << 16 |\n                            mdhd[index + 2] <<  8 |\n                            mdhd[index + 3]);\n    return result;\n  }, result);\n};\n\n/**\n * Determine the base media decode start time, in seconds, for an MP4\n * fragment. If multiple fragments are specified, the earliest time is\n * returned.\n *\n * The base media decode time can be parsed from track fragment\n * metadata:\n * ```\n * moof > traf > tfdt.baseMediaDecodeTime\n * ```\n * It requires the timescale value from the mdhd to interpret.\n *\n * @param timescale {object} a hash of track ids to timescale values.\n * @return {number} the earliest base media decode start time for the\n * fragment, in seconds\n */\nstartTime = function(timescale, fragment) {\n  var trafs, baseTimes, result;\n\n  // we need info from two childrend of each track fragment box\n  trafs = findBox(fragment, ['moof', 'traf']);\n\n  // determine the start times for each track\n  baseTimes = [].concat.apply([], trafs.map(function(traf) {\n    return findBox(traf, ['tfhd']).map(function(tfhd) {\n      var id, scale, baseTime;\n\n      // get the track id from the tfhd\n      id = toUnsigned(tfhd[4] << 24 |\n                      tfhd[5] << 16 |\n                      tfhd[6] <<  8 |\n                      tfhd[7]);\n      // assume a 90kHz clock if no timescale was specified\n      scale = timescale[id] || 90e3;\n\n      // get the base media decode time from the tfdt\n      baseTime = findBox(traf, ['tfdt']).map(function(tfdt) {\n        var version, result;\n\n        version = tfdt[0];\n        result = toUnsigned(tfdt[4] << 24 |\n                            tfdt[5] << 16 |\n                            tfdt[6] <<  8 |\n                            tfdt[7]);\n        if (version ===  1) {\n          result *= Math.pow(2, 32);\n          result += toUnsigned(tfdt[8]  << 24 |\n                               tfdt[9]  << 16 |\n                               tfdt[10] <<  8 |\n                               tfdt[11]);\n        }\n        return result;\n      })[0];\n      baseTime = baseTime || Infinity;\n\n      // convert base time to seconds\n      return baseTime / scale;\n    });\n  }));\n\n  // return the minimum\n  result = Math.min.apply(null, baseTimes);\n  return isFinite(result) ? result : 0;\n};\n\n/**\n  * Find the trackIds of the video tracks in this source.\n  * Found by parsing the Handler Reference and Track Header Boxes:\n  *   moov > trak > mdia > hdlr\n  *   moov > trak > tkhd\n  *\n  * @param {Uint8Array} init - The bytes of the init segment for this source\n  * @return {Number[]} A list of trackIds\n  *\n  * @see ISO-BMFF-12/2015, Section 8.4.3\n **/\ngetVideoTrackIds = function(init) {\n  var traks = findBox(init, ['moov', 'trak']);\n  var videoTrackIds = [];\n\n  traks.forEach(function(trak) {\n    var hdlrs = findBox(trak, ['mdia', 'hdlr']);\n    var tkhds = findBox(trak, ['tkhd']);\n\n    hdlrs.forEach(function(hdlr, index) {\n      var handlerType = parseType(hdlr.subarray(8, 12));\n      var tkhd = tkhds[index];\n      var view;\n      var version;\n      var trackId;\n\n      if (handlerType === 'vide') {\n        view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n        version = view.getUint8(0);\n        trackId = (version === 0) ? view.getUint32(12) : view.getUint32(20);\n\n        videoTrackIds.push(trackId);\n      }\n    });\n  });\n\n  return videoTrackIds;\n};\n\nmodule.exports = {\n  findBox: findBox,\n  parseType: parseType,\n  timescale: timescale,\n  startTime: startTime,\n  videoTrackIds: getVideoTrackIds\n};\n","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nmodule.exports = {\n  generator: require('./mp4-generator'),\n  probe: require('./probe'),\n  Transmuxer: require('./transmuxer').Transmuxer,\n  AudioSegmentStream: require('./transmuxer').AudioSegmentStream,\n  VideoSegmentStream: require('./transmuxer').VideoSegmentStream,\n  CaptionParser: require('./caption-parser')\n};\n","var global = require('./_global');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar SRC = require('./_uid')('src');\nvar TO_STRING = 'toString';\nvar $toString = Function[TO_STRING];\nvar TPL = ('' + $toString).split(TO_STRING);\n\nrequire('./_core').inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n","/*!\n * Vue.js v2.5.17\n * (c) 2014-2018 Evan You\n * Released under the MIT License.\n */\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n// these helpers produces better vm code in JS engines due to their\n// explicitness and function inlining\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    // $flow-disable-line\n    typeof value === 'symbol' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Get the raw type string of a value e.g. [object Object]\n */\nvar _toString = Object.prototype.toString;\n\nfunction toRawType (value) {\n  return _toString.call(value).slice(8, -1)\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if a attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind polyfill for environments that do not support it... e.g.\n * PhantomJS 1.x. Technically we don't need this anymore since native bind is\n * now more performant in most browsers, but removing it would be breaking for\n * code that was able to run in PhantomJS 1.x, so this must be kept for\n * backwards compatibility.\n */\n\n/* istanbul ignore next */\nfunction polyfillBind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n\n  boundFn._length = fn.length;\n  return boundFn\n}\n\nfunction nativeBind (fn, ctx) {\n  return fn.bind(ctx)\n}\n\nvar bind = Function.prototype.bind\n  ? nativeBind\n  : polyfillBind;\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\n\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated',\n  'errorCaptured'\n];\n\n/*  */\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  // $flow-disable-line\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  // $flow-disable-line\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n})\n\n/*  */\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;\nvar weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');\nvar isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && !inWeex && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\nvar _Set;\n/* istanbul ignore if */ // $flow-disable-line\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar generateComponentTrace = (noop); // work around flow check\nvar formatComponentName = (noop);\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var options = typeof vm === 'function' && vm.cid != null\n      ? vm.options\n      : vm._isVue\n        ? vm.$options || vm.constructor.options\n        : vm || {};\n    var name = options.name || options._componentTag;\n    var file = options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.fnContext = undefined;\n  this.fnOptions = undefined;\n  this.fnScopeId = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: { configurable: true } };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.fnContext = vnode.fnContext;\n  cloned.fnOptions = vnode.fnOptions;\n  cloned.fnScopeId = vnode.fnScopeId;\n  cloned.isCloned = true;\n  return cloned\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);\n\nvar methodsToPatch = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n];\n\n/**\n * Intercept mutating methods and emit events\n */\nmethodsToPatch.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * In some cases we may want to disable observation inside a component's\n * update computation.\n */\nvar shouldObserve = true;\n\nfunction toggleObserving (value) {\n  shouldObserve = value;\n}\n\n/**\n * Observer class that is attached to each observed\n * object. Once attached, the observer converts the target\n * object's property keys into getter/setters that\n * collect dependencies and dispatch updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive(obj, keys[i]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src, keys) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value) || value instanceof VNode) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    shouldObserve &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  if (!getter && arguments.length === 2) {\n    val = obj[key];\n  }\n  var setter = property && property.set;\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot set reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (key in target && !(key in Object.prototype)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot delete reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this, this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal\n      )\n    }\n  } else {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm, vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm, vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn(parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  var res = Object.create(parentVal || null);\n  if (childVal) {\n    process.env.NODE_ENV !== 'production' && assertObjectType(key, childVal, vm);\n    return extend(res, childVal)\n  } else {\n    return res\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key$1 in childVal) {\n    var parent = ret[key$1];\n    var child = childVal[key$1];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key$1] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  if (childVal && process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    validateComponentName(key);\n  }\n}\n\nfunction validateComponentName (name) {\n  if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n    warn(\n      'Invalid component name: \"' + name + '\". Component names ' +\n      'can only contain alphanumeric characters and the hyphen, ' +\n      'and must start with a letter.'\n    );\n  }\n  if (isBuiltInTag(name) || config.isReservedTag(name)) {\n    warn(\n      'Do not use built-in or reserved HTML elements as component ' +\n      'id: ' + name\n    );\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options, vm) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"props\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(props)) + \".\",\n      vm\n    );\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options, vm) {\n  var inject = options.inject;\n  if (!inject) { return }\n  var normalized = options.inject = {};\n  if (Array.isArray(inject)) {\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = { from: inject[i] };\n    }\n  } else if (isPlainObject(inject)) {\n    for (var key in inject) {\n      var val = inject[key];\n      normalized[key] = isPlainObject(val)\n        ? extend({ from: key }, val)\n        : { from: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"inject\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(inject)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\nfunction assertObjectType (name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\n      \"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" +\n      \"but got \" + (toRawType(value)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child, vm);\n  normalizeInject(child, vm);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // boolean casting\n  var booleanIndex = getTypeIndex(Boolean, prop.type);\n  if (booleanIndex > -1) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (value === '' || value === hyphenate(key)) {\n      // only cast empty string / same name to boolean if\n      // boolean has higher priority\n      var stringIndex = getTypeIndex(String, prop.type);\n      if (stringIndex < 0 || booleanIndex < stringIndex) {\n        value = true;\n      }\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldObserve = shouldObserve;\n    toggleObserving(true);\n    observe(value);\n    toggleObserving(prevShouldObserve);\n  }\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    // skip validation for weex recycle-list child component props\n    !(false && isObject(value) && ('@binding' in value))\n  ) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (process.env.NODE_ENV !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      \"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" +\n      \" Expected \" + (expectedTypes.map(capitalize).join(', ')) +\n      \", got \" + (toRawType(value)) + \".\",\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isSameType (a, b) {\n  return getType(a) === getType(b)\n}\n\nfunction getTypeIndex (type, expectedTypes) {\n  if (!Array.isArray(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1\n  }\n  for (var i = 0, len = expectedTypes.length; i < len; i++) {\n    if (isSameType(expectedTypes[i], type)) {\n      return i\n    }\n  }\n  return -1\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  if (vm) {\n    var cur = vm;\n    while ((cur = cur.$parent)) {\n      var hooks = cur.$options.errorCaptured;\n      if (hooks) {\n        for (var i = 0; i < hooks.length; i++) {\n          try {\n            var capture = hooks[i].call(cur, err, vm, info) === false;\n            if (capture) { return }\n          } catch (e) {\n            globalHandleError(e, cur, 'errorCaptured hook');\n          }\n        }\n      }\n    }\n  }\n  globalHandleError(err, vm, info);\n}\n\nfunction globalHandleError (err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info)\n    } catch (e) {\n      logError(e, null, 'config.errorHandler');\n    }\n  }\n  logError(err, vm, info);\n}\n\nfunction logError (err, vm, info) {\n  if (process.env.NODE_ENV !== 'production') {\n    warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n  }\n  /* istanbul ignore else */\n  if ((inBrowser || inWeex) && typeof console !== 'undefined') {\n    console.error(err);\n  } else {\n    throw err\n  }\n}\n\n/*  */\n/* globals MessageChannel */\n\nvar callbacks = [];\nvar pending = false;\n\nfunction flushCallbacks () {\n  pending = false;\n  var copies = callbacks.slice(0);\n  callbacks.length = 0;\n  for (var i = 0; i < copies.length; i++) {\n    copies[i]();\n  }\n}\n\n// Here we have async deferring wrappers using both microtasks and (macro) tasks.\n// In < 2.4 we used microtasks everywhere, but there are some scenarios where\n// microtasks have too high a priority and fire in between supposedly\n// sequential events (e.g. #4521, #6690) or even between bubbling of the same\n// event (#6566). However, using (macro) tasks everywhere also has subtle problems\n// when state is changed right before repaint (e.g. #6813, out-in transitions).\n// Here we use microtask by default, but expose a way to force (macro) task when\n// needed (e.g. in event handlers attached by v-on).\nvar microTimerFunc;\nvar macroTimerFunc;\nvar useMacroTask = false;\n\n// Determine (macro) task defer implementation.\n// Technically setImmediate should be the ideal choice, but it's only available\n// in IE. The only polyfill that consistently queues the callback after all DOM\n// events triggered in the same loop is by using MessageChannel.\n/* istanbul ignore if */\nif (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  macroTimerFunc = function () {\n    setImmediate(flushCallbacks);\n  };\n} else if (typeof MessageChannel !== 'undefined' && (\n  isNative(MessageChannel) ||\n  // PhantomJS\n  MessageChannel.toString() === '[object MessageChannelConstructor]'\n)) {\n  var channel = new MessageChannel();\n  var port = channel.port2;\n  channel.port1.onmessage = flushCallbacks;\n  macroTimerFunc = function () {\n    port.postMessage(1);\n  };\n} else {\n  /* istanbul ignore next */\n  macroTimerFunc = function () {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\n// Determine microtask defer implementation.\n/* istanbul ignore next, $flow-disable-line */\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  var p = Promise.resolve();\n  microTimerFunc = function () {\n    p.then(flushCallbacks);\n    // in problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n    if (isIOS) { setTimeout(noop); }\n  };\n} else {\n  // fallback to macro\n  microTimerFunc = macroTimerFunc;\n}\n\n/**\n * Wrap a function so that if any code inside triggers state change,\n * the changes are queued using a (macro) task instead of a microtask.\n */\nfunction withMacroTask (fn) {\n  return fn._withTask || (fn._withTask = function () {\n    useMacroTask = true;\n    var res = fn.apply(null, arguments);\n    useMacroTask = false;\n    return res\n  })\n}\n\nfunction nextTick (cb, ctx) {\n  var _resolve;\n  callbacks.push(function () {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        handleError(e, ctx, 'nextTick');\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n  if (!pending) {\n    pending = true;\n    if (useMacroTask) {\n      macroTimerFunc();\n    } else {\n      microTimerFunc();\n    }\n  }\n  // $flow-disable-line\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve) {\n      _resolve = resolve;\n    })\n  }\n}\n\n/*  */\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      'referenced during render. Make sure that this property is reactive, ' +\n      'either in the data option, or for class-based components, by ' +\n      'initializing the property. ' +\n      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' && isNative(Proxy);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar seenObjects = new _Set();\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nfunction traverse (val) {\n  _traverse(val, seenObjects);\n  seenObjects.clear();\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\nvar mark;\nvar measure;\n\nif (process.env.NODE_ENV !== 'production') {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        cloned[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, def, cur, old, event;\n  for (name in on) {\n    def = cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    /* istanbul ignore if */\n    if (isUndef(cur)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture, event.passive, event.params);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  if (def instanceof VNode) {\n    def = def.data.hook || (def.data.hook = {});\n  }\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (process.env.NODE_ENV !== 'production') {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, lastIndex, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    lastIndex = res.length - 1;\n    last = res[lastIndex];\n    //  nested\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i));\n        // merge adjacent text nodes\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + (c[0]).text);\n          c.shift();\n        }\n        res.push.apply(res, c);\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (\n    comp.__esModule ||\n    (hasSymbol && comp[Symbol.toStringTag] === 'Module')\n  ) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  context\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (isDef(factory.contexts)) {\n    // already pending\n    factory.contexts.push(context);\n  } else {\n    var contexts = factory.contexts = [context];\n    var sync = true;\n\n    var forceRender = function () {\n      for (var i = 0, l = contexts.length; i < l; i++) {\n        contexts[i].$forceUpdate();\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender();\n      }\n    });\n\n    var reject = once(function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender();\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (typeof res.then === 'function') {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isDef(res.component) && typeof res.component.then === 'function') {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            setTimeout(function () {\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender();\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          setTimeout(function () {\n            if (isUndef(factory.resolved)) {\n              reject(\n                process.env.NODE_ENV !== 'production'\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once) {\n  if (once) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n  target = undefined;\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$off(event[i], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (!fn) {\n      vm._events[event] = null;\n      return vm\n    }\n    if (fn) {\n      // specific handler\n      var cb;\n      var i$1 = cbs.length;\n      while (i$1--) {\n        cb = cbs[i$1];\n        if (cb === fn || cb.fn === fn) {\n          cbs.splice(i$1, 1);\n          break\n        }\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (process.env.NODE_ENV !== 'production') {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        try {\n          cbs[i].apply(vm, args);\n        } catch (e) {\n          handleError(e, vm, (\"event handler for \\\"\" + event + \"\\\"\"));\n        }\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.fnContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children || []);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      (slots.default || (slots.default = [])).push(child);\n    }\n  }\n  // ignore slots that contains only whitespace\n  for (var name$1 in slots) {\n    if (slots[name$1].every(isWhitespace)) {\n      delete slots[name$1];\n    }\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return (node.isComment && !node.asyncFactory) || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res\n) {\n  res = res || {};\n  for (var i = 0; i < fns.length; i++) {\n    if (Array.isArray(fns[i])) {\n      resolveScopedSlots(fns[i], res);\n    } else {\n      res[fns[i].key] = fns[i].fn;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n      // no need for the ref nodes after initial patch\n      // this prevents keeping a detached DOM tree in memory (#5851)\n      vm.$options._parentElm = vm.$options._refElm = null;\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // release circular reference (#6759)\n    if (vm.$vnode) {\n      vm.$vnode.parent = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((\"vue \" + name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((\"vue \" + name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  // we set this to vm._watcher inside the watcher's constructor\n  // since the watcher's initial patch may call $forceUpdate (e.g. inside child\n  // component's mounted hook), which relies on vm._watcher being already defined\n  new Watcher(vm, updateComponent, noop, null, true /* isRenderWatcher */);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data.attrs || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    toggleObserving(false);\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      var propOptions = vm.$options.props; // wtf flow?\n      props[key] = validateProp(key, propOptions, propsData, vm);\n    }\n    toggleObserving(true);\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  listeners = listeners || emptyObject;\n  var oldListeners = vm.$options._parentListeners;\n  vm.$options._parentListeners = listeners;\n  updateComponentListeners(vm, listeners, oldListeners);\n\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  // #7573 disable dep collection when invoking lifecycle hooks\n  pushTarget();\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n  popTarget();\n}\n\n/*  */\n\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$1 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options,\n  isRenderWatcher\n) {\n  this.vm = vm;\n  if (isRenderWatcher) {\n    vm._watcher = this;\n  }\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$1; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = process.env.NODE_ENV !== 'production'\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  if (!isRoot) {\n    toggleObserving(false);\n  }\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      var hyphenatedKey = hyphenate(key);\n      if (isReservedAttribute(hyphenatedKey) ||\n          config.isReservedAttr(hyphenatedKey)) {\n        warn(\n          (\"\\\"\" + hyphenatedKey + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive(props, key, value, function () {\n        if (vm.$parent && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  toggleObserving(true);\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  // #7573 disable dep collection when invoking data getters\n  pushTarget();\n  try {\n    return data.call(vm, vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  } finally {\n    popTarget();\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  // $flow-disable-line\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (process.env.NODE_ENV !== 'production' && getter == null) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (process.env.NODE_ENV !== 'production') {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : userDef;\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n      sharedPropertyDefinition.set === noop) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods[key] == null) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n          \"Avoid defining component methods that start with _ or $.\"\n        );\n      }\n    }\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  expOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(expOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    toggleObserving(false);\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        defineReactive(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive(vm, key, result[key]);\n      }\n    });\n    toggleObserving(true);\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n      ? Reflect.ownKeys(inject).filter(function (key) {\n        /* istanbul ignore next */\n        return Object.getOwnPropertyDescriptor(inject, key).enumerable\n      })\n      : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = inject[key].from;\n      var source = vm;\n      while (source) {\n        if (source._provided && hasOwn(source._provided, provideKey)) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (!source) {\n        if ('default' in inject[key]) {\n          var provideDefault = inject[key].default;\n          result[key] = typeof provideDefault === 'function'\n            ? provideDefault.call(vm)\n            : provideDefault;\n        } else if (process.env.NODE_ENV !== 'production') {\n          warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n        }\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  if (isDef(ret)) {\n    (ret)._isVList = true;\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  var nodes;\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      if (process.env.NODE_ENV !== 'production' && !isObject(bindObject)) {\n        warn(\n          'slot v-bind without argument expects an Object',\n          this\n        );\n      }\n      props = extend(extend({}, bindObject), props);\n    }\n    nodes = scopedSlotFn(props) || fallback;\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes) {\n      if (process.env.NODE_ENV !== 'production' && slotNodes._rendered) {\n        warn(\n          \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n          \"- this will likely cause render errors.\",\n          this\n        );\n      }\n      slotNodes._rendered = true;\n    }\n    nodes = slotNodes || fallback;\n  }\n\n  var target = props && props.slot;\n  if (target) {\n    return this.$createElement('template', { slot: target }, nodes)\n  } else {\n    return nodes\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\nfunction isKeyNotMatch (expect, actual) {\n  if (Array.isArray(expect)) {\n    return expect.indexOf(actual) === -1\n  } else {\n    return expect !== actual\n  }\n}\n\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInKeyCode,\n  eventKeyName,\n  builtInKeyName\n) {\n  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;\n  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {\n    return isKeyNotMatch(builtInKeyName, eventKeyName)\n  } else if (mappedKeyCode) {\n    return isKeyNotMatch(mappedKeyCode, eventKeyCode)\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var cached = this._staticTrees || (this._staticTrees = []);\n  var tree = cached[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree.\n  if (tree && !isInFor) {\n    return tree\n  }\n  // otherwise, render a fresh tree.\n  tree = cached[index] = this.$options.staticRenderFns[index].call(\n    this._renderProxy,\n    null,\n    this // for render fns generated for functional component templates\n  );\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(existing, ours) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction installRenderHelpers (target) {\n  target._o = markOnce;\n  target._n = toNumber;\n  target._s = toString;\n  target._l = renderList;\n  target._t = renderSlot;\n  target._q = looseEqual;\n  target._i = looseIndexOf;\n  target._m = renderStatic;\n  target._f = resolveFilter;\n  target._k = checkKeyCodes;\n  target._b = bindObjectProps;\n  target._v = createTextVNode;\n  target._e = createEmptyVNode;\n  target._u = resolveScopedSlots;\n  target._g = bindObjectListeners;\n}\n\n/*  */\n\nfunction FunctionalRenderContext (\n  data,\n  props,\n  children,\n  parent,\n  Ctor\n) {\n  var options = Ctor.options;\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var contextVm;\n  if (hasOwn(parent, '_uid')) {\n    contextVm = Object.create(parent);\n    // $flow-disable-line\n    contextVm._original = parent;\n  } else {\n    // the context vm passed in is a functional context as well.\n    // in this case we want to make sure we are able to get a hold to the\n    // real context instance.\n    contextVm = parent;\n    // $flow-disable-line\n    parent = parent._original;\n  }\n  var isCompiled = isTrue(options._compiled);\n  var needNormalization = !isCompiled;\n\n  this.data = data;\n  this.props = props;\n  this.children = children;\n  this.parent = parent;\n  this.listeners = data.on || emptyObject;\n  this.injections = resolveInject(options.inject, parent);\n  this.slots = function () { return resolveSlots(children, parent); };\n\n  // support for compiled functional template\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options;\n    // pre-resolve slots for renderSlot()\n    this.$slots = this.slots();\n    this.$scopedSlots = data.scopedSlots || emptyObject;\n  }\n\n  if (options._scopeId) {\n    this._c = function (a, b, c, d) {\n      var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n      if (vnode && !Array.isArray(vnode)) {\n        vnode.fnScopeId = options._scopeId;\n        vnode.fnContext = parent;\n      }\n      return vnode\n    };\n  } else {\n    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype);\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  contextVm,\n  children\n) {\n  var options = Ctor.options;\n  var props = {};\n  var propOptions = options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n\n  var renderContext = new FunctionalRenderContext(\n    data,\n    props,\n    children,\n    contextVm,\n    Ctor\n  );\n\n  var vnode = options.render.call(null, renderContext._c, renderContext);\n\n  if (vnode instanceof VNode) {\n    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options)\n  } else if (Array.isArray(vnode)) {\n    var vnodes = normalizeChildren(vnode) || [];\n    var res = new Array(vnodes.length);\n    for (var i = 0; i < vnodes.length; i++) {\n      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options);\n    }\n    return res\n  }\n}\n\nfunction cloneAndMarkFunctionalResult (vnode, data, contextVm, options) {\n  // #7817 clone node before setting fnContext, otherwise if the node is reused\n  // (e.g. it was from a cached normal slot) the fnContext causes named slots\n  // that should not be matched to match.\n  var clone = cloneVNode(vnode);\n  clone.fnContext = contextVm;\n  clone.fnOptions = options;\n  if (data.slot) {\n    (clone.data || (clone.data = {})).slot = data.slot;\n  }\n  return clone\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n\n\n\n// Register the component hook to weex native render engine.\n// The hook will be triggered by native, not javascript.\n\n\n// Updates the state of the component to weex native render engine.\n\n/*  */\n\n// https://github.com/Hanks10100/weex-native-directive/tree/master/component\n\n// listening on native callback\n\n/*  */\n\n/*  */\n\n// inline hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (\n      vnode.componentInstance &&\n      !vnode.componentInstance._isDestroyed &&\n      vnode.data.keepAlive\n    ) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    } else {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // install component management hooks onto the placeholder node\n  installComponentHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n\n  // Weex specific: invoke recycle-list optimized @render function for\n  // extracting cell-slot template.\n  // https://github.com/Hanks10100/weex-native-directive/tree/master/component\n  /* istanbul ignore if */\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    _parentVnode: vnode,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnode.componentOptions.Ctor(options)\n}\n\nfunction installComponentHooks (data) {\n  var hooks = data.hook || (data.hook = {});\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    hooks[key] = componentVNodeHooks[key];\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (isDef(on[event])) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (process.env.NODE_ENV !== 'production' &&\n    isDef(data) && isDef(data.key) && !isPrimitive(data.key)\n  ) {\n    {\n      warn(\n        'Avoid using non-primitive value as key, ' +\n        'use string/number value instead.',\n        context\n      );\n    }\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (Array.isArray(vnode)) {\n    return vnode\n  } else if (isDef(vnode)) {\n    if (isDef(ns)) { applyNS(vnode, ns); }\n    if (isDef(data)) { registerDeepBindings(data); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns, force) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined;\n    force = true;\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && (\n        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {\n        applyNS(child, ns, force);\n      }\n    }\n  }\n}\n\n// ref #5318\n// necessary to ensure parent re-render when deep bindings like :style and\n// :class are used on slot nodes\nfunction registerDeepBindings (data) {\n  if (isObject(data.style)) {\n    traverse(data.style);\n  }\n  if (isObject(data.class)) {\n    traverse(data.class);\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null; // v-once cached trees\n  var options = vm.$options;\n  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production') {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, null, true);\n  }\n}\n\nfunction renderMixin (Vue) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype);\n\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var _parentVnode = ref._parentVnode;\n\n    // reset _rendered flag on slots for duplicate slot check\n    if (process.env.NODE_ENV !== 'production') {\n      for (var key in vm.$slots) {\n        // $flow-disable-line\n        vm.$slots[key]._rendered = false;\n      }\n    }\n\n    if (_parentVnode) {\n      vm.$scopedSlots = _parentVnode.data.scopedSlots || emptyObject;\n    }\n\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        if (vm.$options.renderError) {\n          try {\n            vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);\n          } catch (e) {\n            handleError(e, vm, \"renderError\");\n            vnode = vm._vnode;\n          }\n        } else {\n          vnode = vm._vnode;\n        }\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n}\n\n/*  */\n\nvar uid$3 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$3++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      startTag = \"vue-perf-start:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure((\"vue \" + (vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  var parentVnode = options._parentVnode;\n  opts.parent = options.parent;\n  opts._parentVnode = parentVnode;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n\n  var vnodeComponentOptions = parentVnode.componentOptions;\n  opts.propsData = vnodeComponentOptions.propsData;\n  opts._parentListeners = vnodeComponentOptions.listeners;\n  opts._renderChildren = vnodeComponentOptions.children;\n  opts._componentTag = vnodeComponentOptions.tag;\n\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var extended = Ctor.extendOptions;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], extended[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, extended, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    extended = Array.isArray(extended) ? extended : [extended];\n    for (var i = 0; i < latest.length; i++) {\n      // push original options and not sealed options to exclude duplicated options\n      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nrenderMixin(Vue);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production' && name) {\n      validateComponentName(name);\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production' && type === 'component') {\n          validateComponentName(id);\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (keepAliveInstance, filter) {\n  var cache = keepAliveInstance.cache;\n  var keys = keepAliveInstance.keys;\n  var _vnode = keepAliveInstance._vnode;\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode);\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (\n  cache,\n  key,\n  keys,\n  current\n) {\n  var cached$$1 = cache[key];\n  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {\n    cached$$1.componentInstance.$destroy();\n  }\n  cache[key] = null;\n  remove(keys, key);\n}\n\nvar patternTypes = [String, RegExp, Array];\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n    this.keys = [];\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache, key, this$1.keys);\n    }\n  },\n\n  mounted: function mounted () {\n    var this$1 = this;\n\n    this.$watch('include', function (val) {\n      pruneCache(this$1, function (name) { return matches(val, name); });\n    });\n    this.$watch('exclude', function (val) {\n      pruneCache(this$1, function (name) { return !matches(val, name); });\n    });\n  },\n\n  render: function render () {\n    var slot = this.$slots.default;\n    var vnode = getFirstComponentChild(slot);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      var ref = this;\n      var include = ref.include;\n      var exclude = ref.exclude;\n      if (\n        // not included\n        (include && (!name || !matches(include, name))) ||\n        // excluded\n        (exclude && name && matches(exclude, name))\n      ) {\n        return vnode\n      }\n\n      var ref$1 = this;\n      var cache = ref$1.cache;\n      var keys = ref$1.keys;\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance;\n        // make current key freshest\n        remove(keys, key);\n        keys.push(key);\n      } else {\n        cache[key] = vnode;\n        keys.push(key);\n        // prune oldest entry\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode);\n        }\n      }\n\n      vnode.data.keepAlive = true;\n    }\n    return vnode || (slot && slot[0])\n  }\n}\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n}\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue);\n\nObject.defineProperty(Vue.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\n// expose FunctionalRenderContext for ssr runtime helper installation\nObject.defineProperty(Vue, 'FunctionalRenderContext', {\n  value: FunctionalRenderContext\n});\n\nVue.version = '2.5.17';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select,progress');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode && childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode && parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\n\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setStyleScope (node, scopeId) {\n  node.setAttribute(scopeId, '');\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetStyleScope: setStyleScope\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n}\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!isDef(key)) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove () {\n      if (--remove.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove.listeners = listeners;\n    return remove\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  function isUnknownElement$$1 (vnode, inVPre) {\n    return (\n      !inVPre &&\n      !vnode.ns &&\n      !(\n        config.ignoredElements.length &&\n        config.ignoredElements.some(function (ignore) {\n          return isRegExp(ignore)\n            ? ignore.test(vnode.tag)\n            : ignore === vnode.tag\n        })\n      ) &&\n      config.isUnknownElement(vnode.tag)\n    )\n  }\n\n  var creatingElmInVPre = 0;\n\n  function createElm (\n    vnode,\n    insertedVnodeQueue,\n    parentElm,\n    refElm,\n    nested,\n    ownerArray,\n    index\n  ) {\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // This vnode was used in a previous render!\n      // now it's used as a new node, overwriting its elm would cause\n      // potential patch errors down the road when it's used as an insertion\n      // reference node. Instead, we clone the node on-demand before creating\n      // associated DOM element for it.\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          creatingElmInVPre++;\n        }\n        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        creatingElmInVPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (ref$$1.parentNode === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      if (process.env.NODE_ENV !== 'production') {\n        checkDuplicateKeys(children);\n      }\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    if (isDef(i = vnode.fnScopeId)) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    } else {\n      var ancestor = vnode;\n      while (ancestor) {\n        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n          nodeOps.setStyleScope(vnode.elm, i);\n        }\n        ancestor = ancestor.parent;\n      }\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      i !== vnode.fnContext &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    if (process.env.NODE_ENV !== 'production') {\n      checkDuplicateKeys(newCh);\n    }\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key)\n          ? oldKeyToIdx[newStartVnode.key]\n          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n        } else {\n          vnodeToMove = oldCh[idxInOld];\n          if (sameVnode(vnodeToMove, newStartVnode)) {\n            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n          }\n        }\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function checkDuplicateKeys (children) {\n    var seenKeys = {};\n    for (var i = 0; i < children.length; i++) {\n      var vnode = children[i];\n      var key = vnode.key;\n      if (isDef(key)) {\n        if (seenKeys[key]) {\n          warn(\n            (\"Duplicate keys detected: '\" + key + \"'. This may cause an update error.\"),\n            vnode.context\n          );\n        } else {\n          seenKeys[key] = true;\n        }\n      }\n    }\n  }\n\n  function findIdxInOld (node, oldCh, start, end) {\n    for (var i = start; i < end; i++) {\n      var c = oldCh[i];\n      if (isDef(c) && sameVnode(node, c)) { return i }\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var hydrationBailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  // Note: style is excluded because it relies on initial clone for future\n  // deep updates (#7063).\n  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {\n    var i;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    inVPre = inVPre || (data && data.pre);\n    vnode.elm = elm;\n\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    // assert node match\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode, inVPre)) {\n        return false\n      }\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          // v-html and domProps: innerHTML\n          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {\n            if (i !== elm.innerHTML) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('server innerHTML: ', i);\n                console.warn('client innerHTML: ', elm.innerHTML);\n              }\n              return false\n            }\n          } else {\n            // iterate and compare children lists\n            var childrenMatch = true;\n            var childNode = elm.firstChild;\n            for (var i$1 = 0; i$1 < children.length; i$1++) {\n              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {\n                childrenMatch = false;\n                break\n              }\n              childNode = childNode.nextSibling;\n            }\n            // if childNode is not null, it means the actual childNodes list is\n            // longer than the virtual children list.\n            if (!childrenMatch || childNode) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n              }\n              return false\n            }\n          }\n        }\n      }\n      if (isDef(data)) {\n        var fullInvoke = false;\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            fullInvoke = true;\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n        if (!fullInvoke && data['class']) {\n          // ensure collecting deps for deep class bindings for future updates\n          traverse(data['class']);\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode, inVPre) {\n    if (isDef(vnode.tag)) {\n      return vnode.tag.indexOf('vue-component') === 0 || (\n        !isUnknownElement$$1(vnode, inVPre) &&\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n\n        // create new node\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        // update parent placeholder node element, recursively\n        if (isDef(vnode.parent)) {\n          var ancestor = vnode.parent;\n          var patchable = isPatchable(vnode);\n          while (ancestor) {\n            for (var i = 0; i < cbs.destroy.length; ++i) {\n              cbs.destroy[i](ancestor);\n            }\n            ancestor.elm = vnode.elm;\n            if (patchable) {\n              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n                cbs.create[i$1](emptyNode, ancestor);\n              }\n              // #6513\n              // invoke insert hooks that may have been merged by create hooks.\n              // e.g. for directives that uses the \"inserted\" hook.\n              var insert = ancestor.data.hook.insert;\n              if (insert.merged) {\n                // start at index 1 to avoid re-invoking component mounted hook\n                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {\n                  insert.fns[i$2]();\n                }\n              }\n            } else {\n              registerRef(ancestor);\n            }\n            ancestor = ancestor.parent;\n          }\n        }\n\n        // destroy old node\n        if (isDef(parentElm$1)) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n}\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode, 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode, 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    // $flow-disable-line\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      // $flow-disable-line\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  // $flow-disable-line\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n]\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  // #6666: IE/Edge forces progress value down to 1 before setting a max\n  /* istanbul ignore if */\n  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (el.tagName.indexOf('-') > -1) {\n    baseSetAttr(el, key, value);\n  } else if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      // technically allowfullscreen is a boolean attribute for <iframe>,\n      // but Flash expects a value of \"true\" when used on <embed> tag\n      value = key === 'allowfullscreen' && el.tagName === 'EMBED'\n        ? 'true'\n        : key;\n      el.setAttribute(key, value);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    baseSetAttr(el, key, value);\n  }\n}\n\nfunction baseSetAttr (el, key, value) {\n  if (isFalsyAttrValue(value)) {\n    el.removeAttribute(key);\n  } else {\n    // #7138: IE10 & 11 fires input event when setting placeholder on\n    // <textarea>... block the first input event and remove the blocker\n    // immediately.\n    /* istanbul ignore if */\n    if (\n      isIE && !isIE9 &&\n      el.tagName === 'TEXTAREA' &&\n      key === 'placeholder' && !el.__ieph\n    ) {\n      var blocker = function (e) {\n        e.stopImmediatePropagation();\n        el.removeEventListener('input', blocker);\n      };\n      el.addEventListener('input', blocker);\n      // $flow-disable-line\n      el.__ieph = true; /* IE placeholder patched */\n    }\n    el.setAttribute(key, value);\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n}\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n}\n\n/*  */\n\n/*  */\n\n\n\n\n\n\n\n\n\n// add a raw attr (use this in preTransforms)\n\n\n\n\n\n\n\n\n// note: this only removes the attr from the Array (attrsList) so that it\n// doesn't get processed by processAttrs.\n// By default it does NOT remove it from the map (attrsMap) because the map is\n// needed during codegen.\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\n\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\n\n/*  */\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    var event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  // This was originally intended to fix #4521 but no longer necessary\n  // after 2.5. Keeping it for backwards compat with generated code from < 2.4\n  /* istanbul ignore if */\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction createOnceHandler (handler, event, capture) {\n  var _target = target$1; // save current target element in closure\n  return function onceHandler () {\n    var res = handler.apply(null, arguments);\n    if (res !== null) {\n      remove$2(event, onceHandler, capture, _target);\n    }\n  }\n}\n\nfunction add$1 (\n  event,\n  handler,\n  once$$1,\n  capture,\n  passive\n) {\n  handler = withMacroTask(handler);\n  if (once$$1) { handler = createOnceHandler(handler, event, capture); }\n  target$1.addEventListener(\n    event,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(\n    event,\n    handler._withTask || handler,\n    capture\n  );\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n  target$1 = undefined;\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n}\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (isUndef(props[key])) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n      // #6601 work around Chrome version <= 55 bug where single textNode\n      // replaced by innerHTML/textContent retains its parentNode property\n      if (elm.childNodes.length === 1) {\n        elm.removeChild(elm.childNodes[0]);\n      }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (elm, checkVal) {\n  return (!elm.composing && (\n    elm.tagName === 'OPTION' ||\n    isNotInFocusAndDirty(elm, checkVal) ||\n    isDirtyWithModifiers(elm, checkVal)\n  ))\n}\n\nfunction isNotInFocusAndDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true;\n  // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n  try { notInFocus = document.activeElement !== elm; } catch (e) {}\n  return notInFocus && elm.value !== checkVal\n}\n\nfunction isDirtyWithModifiers (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers)) {\n    if (modifiers.lazy) {\n      // inputs with lazy should only be updated when not in focus\n      return false\n    }\n    if (modifiers.number) {\n      return toNumber(value) !== toNumber(newVal)\n    }\n    if (modifiers.trim) {\n      return value.trim() !== newVal.trim()\n    }\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n}\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (\n        childNode && childNode.data &&\n        (styleData = normalizeStyleData(childNode.data))\n      ) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likely wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n}\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def) {\n  if (!def) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def === 'object') {\n    var res = {};\n    if (def.css !== false) {\n      extend(res, autoCssTransition(def.name || 'v'));\n    }\n    extend(res, def);\n    return res\n  } else if (typeof def === 'string') {\n    return autoCssTransition(def)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser\n  ? window.requestAnimationFrame\n    ? window.requestAnimationFrame.bind(window)\n    : setTimeout\n  : /* istanbul ignore next */ function (fn) { return fn(); };\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode, 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled) {\n        addTransitionClass(el, toClass);\n        if (!userWantsControl) {\n          if (isValidDuration(explicitEnterDuration)) {\n            setTimeout(cb, explicitEnterDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data) || el.nodeType !== 1) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb)) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && isDef(explicitLeaveDuration)) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled) {\n          addTransitionClass(el, leaveToClass);\n          if (!userWantsControl) {\n            if (isValidDuration(explicitLeaveDuration)) {\n              setTimeout(cb, explicitLeaveDuration);\n            } else {\n              whenTransitionEnds(el, type, cb);\n            }\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {}\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n]\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar directive = {\n  inserted: function inserted (el, binding, vnode, oldVnode) {\n    if (vnode.tag === 'select') {\n      // #6903\n      if (oldVnode.elm && !oldVnode.elm._vOptions) {\n        mergeVNodeHook(vnode, 'postpatch', function () {\n          directive.componentUpdated(el, binding, vnode);\n        });\n      } else {\n        setSelected(el, binding, vnode.context);\n      }\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        el.addEventListener('compositionstart', onCompositionStart);\n        el.addEventListener('compositionend', onCompositionEnd);\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {\n        // trigger change event if\n        // no matching option found for at least one value\n        var needReset = el.multiple\n          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })\n          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);\n        if (needReset) {\n          trigger(el, 'change');\n        }\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  actuallySetSelected(el, binding, vm);\n  /* istanbul ignore if */\n  if (isIE || isEdge) {\n    setTimeout(function () {\n      actuallySetSelected(el, binding, vm);\n    }, 0);\n  }\n}\n\nfunction actuallySetSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  return options.every(function (o) { return !looseEqual(o, value); })\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (!value === !oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n}\n\nvar platformDirectives = {\n  model: directive,\n  show: show\n}\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag || isAsyncPlaceholder(c); });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n      mode && mode !== 'in-out' && mode !== 'out-in'\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild) &&\n      // #6687 component root is a comment node\n      !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild.data.transition = extend({}, data);\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n}\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    // assign to this to avoid being removed in tree-shaking\n    // $flow-disable-line\n    this._reflow = document.body.offsetHeight;\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n}\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n}\n\n/*  */\n\n// install platform specific utils\nVue.config.mustUseProp = mustUseProp;\nVue.config.isReservedTag = isReservedTag;\nVue.config.isReservedAttr = isReservedAttr;\nVue.config.getTagNamespace = getTagNamespace;\nVue.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue.options.directives, platformDirectives);\nextend(Vue.options.components, platformComponents);\n\n// install platform patch function\nVue.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nif (inBrowser) {\n  setTimeout(function () {\n    if (config.devtools) {\n      if (devtools) {\n        devtools.emit('init', Vue);\n      } else if (\n        process.env.NODE_ENV !== 'production' &&\n        process.env.NODE_ENV !== 'test' &&\n        isChrome\n      ) {\n        console[console.info ? 'info' : 'log'](\n          'Download the Vue Devtools extension for a better development experience:\\n' +\n          'https://github.com/vuejs/vue-devtools'\n        );\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' &&\n      process.env.NODE_ENV !== 'test' &&\n      config.productionTip !== false &&\n      typeof console !== 'undefined'\n    ) {\n      console[console.info ? 'info' : 'log'](\n        \"You are running Vue in development mode.\\n\" +\n        \"Make sure to turn on production mode when deploying for production.\\n\" +\n        \"See more tips at https://vuejs.org/guide/deployment.html\"\n      );\n    }\n  }, 0);\n}\n\n/*  */\n\nexport default Vue;\n","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Default exports for Node. Export the extended versions of VTTCue and\n// VTTRegion in Node since we likely want the capability to convert back and\n// forth between JSON. If we don't then it's not that big of a deal since we're\n// off browser.\n\nvar window = require('global/window');\n\nvar vttjs = module.exports = {\n  WebVTT: require(\"./vtt.js\"),\n  VTTCue: require(\"./vttcue.js\"),\n  VTTRegion: require(\"./vttregion.js\")\n};\n\nwindow.vttjs = vttjs;\nwindow.WebVTT = vttjs.WebVTT;\n\nvar cueShim = vttjs.VTTCue;\nvar regionShim = vttjs.VTTRegion;\nvar nativeVTTCue = window.VTTCue;\nvar nativeVTTRegion = window.VTTRegion;\n\nvttjs.shim = function() {\n  window.VTTCue = cueShim;\n  window.VTTRegion = regionShim;\n};\n\nvttjs.restore = function() {\n  window.VTTCue = nativeVTTCue;\n  window.VTTRegion = nativeVTTRegion;\n};\n\nif (!window.VTTCue) {\n  vttjs.shim();\n}\n","module.exports = false;\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\n// Convert an array of nal units into an array of frames with each frame being\n// composed of the nal units that make up that frame\n// Also keep track of cummulative data about the frame from the nal units such\n// as the frame duration, starting pts, etc.\nvar groupNalsIntoFrames = function(nalUnits) {\n  var\n    i,\n    currentNal,\n    currentFrame = [],\n    frames = [];\n\n  currentFrame.byteLength = 0;\n\n  for (i = 0; i < nalUnits.length; i++) {\n    currentNal = nalUnits[i];\n\n    // Split on 'aud'-type nal units\n    if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n      // Since the very first nal unit is expected to be an AUD\n      // only push to the frames array when currentFrame is not empty\n      if (currentFrame.length) {\n        currentFrame.duration = currentNal.dts - currentFrame.dts;\n        frames.push(currentFrame);\n      }\n      currentFrame = [currentNal];\n      currentFrame.byteLength = currentNal.data.byteLength;\n      currentFrame.pts = currentNal.pts;\n      currentFrame.dts = currentNal.dts;\n    } else {\n      // Specifically flag key frames for ease of use later\n      if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n        currentFrame.keyFrame = true;\n      }\n      currentFrame.duration = currentNal.dts - currentFrame.dts;\n      currentFrame.byteLength += currentNal.data.byteLength;\n      currentFrame.push(currentNal);\n    }\n  }\n\n  // For the last frame, use the duration of the previous frame if we\n  // have nothing better to go on\n  if (frames.length &&\n      (!currentFrame.duration ||\n       currentFrame.duration <= 0)) {\n    currentFrame.duration = frames[frames.length - 1].duration;\n  }\n\n  // Push the final frame\n  frames.push(currentFrame);\n  return frames;\n};\n\n// Convert an array of frames into an array of Gop with each Gop being composed\n// of the frames that make up that Gop\n// Also keep track of cummulative data about the Gop from the frames such as the\n// Gop duration, starting pts, etc.\nvar groupFramesIntoGops = function(frames) {\n  var\n    i,\n    currentFrame,\n    currentGop = [],\n    gops = [];\n\n  // We must pre-set some of the values on the Gop since we\n  // keep running totals of these values\n  currentGop.byteLength = 0;\n  currentGop.nalCount = 0;\n  currentGop.duration = 0;\n  currentGop.pts = frames[0].pts;\n  currentGop.dts = frames[0].dts;\n\n  // store some metadata about all the Gops\n  gops.byteLength = 0;\n  gops.nalCount = 0;\n  gops.duration = 0;\n  gops.pts = frames[0].pts;\n  gops.dts = frames[0].dts;\n\n  for (i = 0; i < frames.length; i++) {\n    currentFrame = frames[i];\n\n    if (currentFrame.keyFrame) {\n      // Since the very first frame is expected to be an keyframe\n      // only push to the gops array when currentGop is not empty\n      if (currentGop.length) {\n        gops.push(currentGop);\n        gops.byteLength += currentGop.byteLength;\n        gops.nalCount += currentGop.nalCount;\n        gops.duration += currentGop.duration;\n      }\n\n      currentGop = [currentFrame];\n      currentGop.nalCount = currentFrame.length;\n      currentGop.byteLength = currentFrame.byteLength;\n      currentGop.pts = currentFrame.pts;\n      currentGop.dts = currentFrame.dts;\n      currentGop.duration = currentFrame.duration;\n    } else {\n      currentGop.duration += currentFrame.duration;\n      currentGop.nalCount += currentFrame.length;\n      currentGop.byteLength += currentFrame.byteLength;\n      currentGop.push(currentFrame);\n    }\n  }\n\n  if (gops.length && currentGop.duration <= 0) {\n    currentGop.duration = gops[gops.length - 1].duration;\n  }\n  gops.byteLength += currentGop.byteLength;\n  gops.nalCount += currentGop.nalCount;\n  gops.duration += currentGop.duration;\n\n  // push the final Gop\n  gops.push(currentGop);\n  return gops;\n};\n\n/*\n * Search for the first keyframe in the GOPs and throw away all frames\n * until that keyframe. Then extend the duration of the pulled keyframe\n * and pull the PTS and DTS of the keyframe so that it covers the time\n * range of the frames that were disposed.\n *\n * @param {Array} gops video GOPs\n * @returns {Array} modified video GOPs\n */\nvar extendFirstKeyFrame = function(gops) {\n  var currentGop;\n\n  if (!gops[0][0].keyFrame && gops.length > 1) {\n    // Remove the first GOP\n    currentGop = gops.shift();\n\n    gops.byteLength -= currentGop.byteLength;\n    gops.nalCount -= currentGop.nalCount;\n\n    // Extend the first frame of what is now the\n    // first gop to cover the time period of the\n    // frames we just removed\n    gops[0][0].dts = currentGop.dts;\n    gops[0][0].pts = currentGop.pts;\n    gops[0][0].duration += currentGop.duration;\n  }\n\n  return gops;\n};\n\n/**\n * Default sample object\n * see ISO/IEC 14496-12:2012, section 8.6.4.3\n */\nvar createDefaultSample = function() {\n  return {\n    size: 0,\n    flags: {\n      isLeading: 0,\n      dependsOn: 1,\n      isDependedOn: 0,\n      hasRedundancy: 0,\n      degradationPriority: 0,\n      isNonSyncSample: 1\n    }\n  };\n};\n\n/*\n * Collates information from a video frame into an object for eventual\n * entry into an MP4 sample table.\n *\n * @param {Object} frame the video frame\n * @param {Number} dataOffset the byte offset to position the sample\n * @return {Object} object containing sample table info for a frame\n */\nvar sampleForFrame = function(frame, dataOffset) {\n  var sample = createDefaultSample();\n\n  sample.dataOffset = dataOffset;\n  sample.compositionTimeOffset = frame.pts - frame.dts;\n  sample.duration = frame.duration;\n  sample.size = 4 * frame.length; // Space for nal unit size\n  sample.size += frame.byteLength;\n\n  if (frame.keyFrame) {\n    sample.flags.dependsOn = 2;\n    sample.flags.isNonSyncSample = 0;\n  }\n\n  return sample;\n};\n\n// generate the track's sample table from an array of gops\nvar generateSampleTable = function(gops, baseDataOffset) {\n  var\n    h, i,\n    sample,\n    currentGop,\n    currentFrame,\n    dataOffset = baseDataOffset || 0,\n    samples = [];\n\n  for (h = 0; h < gops.length; h++) {\n    currentGop = gops[h];\n\n    for (i = 0; i < currentGop.length; i++) {\n      currentFrame = currentGop[i];\n\n      sample = sampleForFrame(currentFrame, dataOffset);\n\n      dataOffset += sample.size;\n\n      samples.push(sample);\n    }\n  }\n  return samples;\n};\n\n// generate the track's raw mdat data from an array of gops\nvar concatenateNalData = function(gops) {\n  var\n    h, i, j,\n    currentGop,\n    currentFrame,\n    currentNal,\n    dataOffset = 0,\n    nalsByteLength = gops.byteLength,\n    numberOfNals = gops.nalCount,\n    totalByteLength = nalsByteLength + 4 * numberOfNals,\n    data = new Uint8Array(totalByteLength),\n    view = new DataView(data.buffer);\n\n  // For each Gop..\n  for (h = 0; h < gops.length; h++) {\n    currentGop = gops[h];\n\n    // For each Frame..\n    for (i = 0; i < currentGop.length; i++) {\n      currentFrame = currentGop[i];\n\n      // For each NAL..\n      for (j = 0; j < currentFrame.length; j++) {\n        currentNal = currentFrame[j];\n\n        view.setUint32(dataOffset, currentNal.data.byteLength);\n        dataOffset += 4;\n        data.set(currentNal.data, dataOffset);\n        dataOffset += currentNal.data.byteLength;\n      }\n    }\n  }\n  return data;\n};\n\nmodule.exports = {\n  groupNalsIntoFrames: groupNalsIntoFrames,\n  groupFramesIntoGops: groupFramesIntoGops,\n  extendFirstKeyFrame: extendFirstKeyFrame,\n  generateSampleTable: generateSampleTable,\n  concatenateNalData: concatenateNalData\n};\n","/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.20';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n      rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      // Use `util.types` for Node.js 10+.\n      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n      if (types) {\n        return types;\n      }\n\n      // Legacy `process.binding('util')` for Node.js < 10.\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (isSet(value)) {\n        value.forEach(function(subValue) {\n          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n        });\n      } else if (isMap(value)) {\n        value.forEach(function(subValue, key) {\n          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n        });\n      }\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        stack || (stack = new Stack);\n        if (isObject(srcValue)) {\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || isFunction(objValue)) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      if (iteratees.length) {\n        iteratees = arrayMap(iteratees, function(iteratee) {\n          if (isArray(iteratee)) {\n            return function(value) {\n              return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n            }\n          }\n          return iteratee;\n        });\n      } else {\n        iteratees = [identity];\n      }\n\n      var index = -1;\n      iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n          return object;\n        }\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      var low = 0,\n          high = array == null ? 0 : array.length;\n      if (high === 0) {\n        return 0;\n      }\n\n      value = iteratee(value);\n      var valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision && nativeIsFinite(number)) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Check that cyclic values are equal.\n      var arrStacked = stack.get(array);\n      var othStacked = stack.get(other);\n      if (arrStacked && othStacked) {\n        return arrStacked == other && othStacked == array;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Check that cyclic values are equal.\n      var objStacked = stack.get(object);\n      var othStacked = stack.get(other);\n      if (objStacked && othStacked) {\n        return objStacked == other && othStacked == object;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return new Ctor;\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return new Ctor;\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      var type = typeof value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n\n      return !!length &&\n        (type == 'number' ||\n          (type != 'symbol' && reIsUint.test(value))) &&\n            (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the property to get.\n     * @returns {*} Returns the property value.\n     */\n    function safeGet(object, key) {\n      if (key === 'constructor' && typeof object[key] === 'function') {\n        return;\n      }\n\n      if (key == '__proto__') {\n        return;\n      }\n\n      return object[key];\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (string.charCodeAt(0) === 46 /* . */) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, subString) {\n        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     *\n     * // Combining several predicates using `_.overEvery` or `_.overSome`.\n     * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n     * // => objects for ['fred', 'barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 30 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n          : timeWaiting;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            clearTimeout(timerId);\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(object, sources) {\n      object = Object(object);\n\n      var index = -1;\n      var length = sources.length;\n      var guard = length > 2 ? sources[2] : undefined;\n\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n        length = 1;\n      }\n\n      while (++index < length) {\n        var source = sources[index];\n        var props = keysIn(source);\n        var propsIndex = -1;\n        var propsLength = props.length;\n\n        while (++propsIndex < propsLength) {\n          var key = props[propsIndex];\n          var value = object[key];\n\n          if (value === undefined ||\n              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n            object[key] = source[key];\n          }\n        }\n      }\n\n      return object;\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      // The sourceURL gets injected into the source that's eval-ed, so be careful\n      // to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in\n      // and escape the comment, thus injecting code that gets evaled.\n      var sourceURL = '//# sourceURL=' +\n        (hasOwnProperty.call(options, 'sourceURL')\n          ? (options.sourceURL + '').replace(/\\s/g, ' ')\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = hasOwnProperty.call(options, 'variable') && options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     *\n     * // Checking for several possible values\n     * _.filter(objects, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     *\n     * // Checking for several possible values\n     * _.filter(objects, _.overSome([_.matchesProperty('a', 1), _.matchesProperty('a', 4)]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     *\n     * var matchesFunc = _.overSome([{ 'a': 1 }, { 'a': 2 }])\n     * var matchesPropertyFunc = _.overSome([['a', 1], ['a', 2]])\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name + '';\n        if (!hasOwnProperty.call(realNames, key)) {\n          realNames[key] = [];\n        }\n        realNames[key].push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nvar isPrimitive = require('./helpers/isPrimitive');\n\nvar isCallable = require('is-callable');\n\n// http://ecma-international.org/ecma-262/5.1/#sec-8.12.8\nvar ES5internalSlots = {\n\t'[[DefaultValue]]': function (O) {\n\t\tvar actualHint;\n\t\tif (arguments.length > 1) {\n\t\t\tactualHint = arguments[1];\n\t\t} else {\n\t\t\tactualHint = toStr.call(O) === '[object Date]' ? String : Number;\n\t\t}\n\n\t\tif (actualHint === String || actualHint === Number) {\n\t\t\tvar methods = actualHint === String ? ['toString', 'valueOf'] : ['valueOf', 'toString'];\n\t\t\tvar value, i;\n\t\t\tfor (i = 0; i < methods.length; ++i) {\n\t\t\t\tif (isCallable(O[methods[i]])) {\n\t\t\t\t\tvalue = O[methods[i]]();\n\t\t\t\t\tif (isPrimitive(value)) {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthrow new TypeError('No default value');\n\t\t}\n\t\tthrow new TypeError('invalid [[DefaultValue]] hint supplied');\n\t}\n};\n\n// http://ecma-international.org/ecma-262/5.1/#sec-9.1\nmodule.exports = function ToPrimitive(input) {\n\tif (isPrimitive(input)) {\n\t\treturn input;\n\t}\n\tif (arguments.length > 1) {\n\t\treturn ES5internalSlots['[[DefaultValue]]'](input, arguments[1]);\n\t}\n\treturn ES5internalSlots['[[DefaultValue]]'](input);\n};\n","/**\n * vuex v3.0.1\n * (c) 2017 Evan You\n * @license MIT\n */\nvar applyMixin = function (Vue) {\n  var version = Number(Vue.version.split('.')[0]);\n\n  if (version >= 2) {\n    Vue.mixin({ beforeCreate: vuexInit });\n  } else {\n    // override init and inject vuex init procedure\n    // for 1.x backwards compatibility.\n    var _init = Vue.prototype._init;\n    Vue.prototype._init = function (options) {\n      if ( options === void 0 ) options = {};\n\n      options.init = options.init\n        ? [vuexInit].concat(options.init)\n        : vuexInit;\n      _init.call(this, options);\n    };\n  }\n\n  /**\n   * Vuex init hook, injected into each instances init hooks list.\n   */\n\n  function vuexInit () {\n    var options = this.$options;\n    // store injection\n    if (options.store) {\n      this.$store = typeof options.store === 'function'\n        ? options.store()\n        : options.store;\n    } else if (options.parent && options.parent.$store) {\n      this.$store = options.parent.$store;\n    }\n  }\n};\n\nvar devtoolHook =\n  typeof window !== 'undefined' &&\n  window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\nfunction devtoolPlugin (store) {\n  if (!devtoolHook) { return }\n\n  store._devtoolHook = devtoolHook;\n\n  devtoolHook.emit('vuex:init', store);\n\n  devtoolHook.on('vuex:travel-to-state', function (targetState) {\n    store.replaceState(targetState);\n  });\n\n  store.subscribe(function (mutation, state) {\n    devtoolHook.emit('vuex:mutation', mutation, state);\n  });\n}\n\n/**\n * Get the first item that pass the test\n * by second argument function\n *\n * @param {Array} list\n * @param {Function} f\n * @return {*}\n */\n/**\n * Deep copy the given object considering circular structure.\n * This function caches all nested objects and its copies.\n * If it detects circular structure, use cached copy to avoid infinite loop.\n *\n * @param {*} obj\n * @param {Array<Object>} cache\n * @return {*}\n */\n\n\n/**\n * forEach for object\n */\nfunction forEachValue (obj, fn) {\n  Object.keys(obj).forEach(function (key) { return fn(obj[key], key); });\n}\n\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\nfunction isPromise (val) {\n  return val && typeof val.then === 'function'\n}\n\nfunction assert (condition, msg) {\n  if (!condition) { throw new Error((\"[vuex] \" + msg)) }\n}\n\nvar Module = function Module (rawModule, runtime) {\n  this.runtime = runtime;\n  this._children = Object.create(null);\n  this._rawModule = rawModule;\n  var rawState = rawModule.state;\n  this.state = (typeof rawState === 'function' ? rawState() : rawState) || {};\n};\n\nvar prototypeAccessors$1 = { namespaced: { configurable: true } };\n\nprototypeAccessors$1.namespaced.get = function () {\n  return !!this._rawModule.namespaced\n};\n\nModule.prototype.addChild = function addChild (key, module) {\n  this._children[key] = module;\n};\n\nModule.prototype.removeChild = function removeChild (key) {\n  delete this._children[key];\n};\n\nModule.prototype.getChild = function getChild (key) {\n  return this._children[key]\n};\n\nModule.prototype.update = function update (rawModule) {\n  this._rawModule.namespaced = rawModule.namespaced;\n  if (rawModule.actions) {\n    this._rawModule.actions = rawModule.actions;\n  }\n  if (rawModule.mutations) {\n    this._rawModule.mutations = rawModule.mutations;\n  }\n  if (rawModule.getters) {\n    this._rawModule.getters = rawModule.getters;\n  }\n};\n\nModule.prototype.forEachChild = function forEachChild (fn) {\n  forEachValue(this._children, fn);\n};\n\nModule.prototype.forEachGetter = function forEachGetter (fn) {\n  if (this._rawModule.getters) {\n    forEachValue(this._rawModule.getters, fn);\n  }\n};\n\nModule.prototype.forEachAction = function forEachAction (fn) {\n  if (this._rawModule.actions) {\n    forEachValue(this._rawModule.actions, fn);\n  }\n};\n\nModule.prototype.forEachMutation = function forEachMutation (fn) {\n  if (this._rawModule.mutations) {\n    forEachValue(this._rawModule.mutations, fn);\n  }\n};\n\nObject.defineProperties( Module.prototype, prototypeAccessors$1 );\n\nvar ModuleCollection = function ModuleCollection (rawRootModule) {\n  // register root module (Vuex.Store options)\n  this.register([], rawRootModule, false);\n};\n\nModuleCollection.prototype.get = function get (path) {\n  return path.reduce(function (module, key) {\n    return module.getChild(key)\n  }, this.root)\n};\n\nModuleCollection.prototype.getNamespace = function getNamespace (path) {\n  var module = this.root;\n  return path.reduce(function (namespace, key) {\n    module = module.getChild(key);\n    return namespace + (module.namespaced ? key + '/' : '')\n  }, '')\n};\n\nModuleCollection.prototype.update = function update$1 (rawRootModule) {\n  update([], this.root, rawRootModule);\n};\n\nModuleCollection.prototype.register = function register (path, rawModule, runtime) {\n    var this$1 = this;\n    if ( runtime === void 0 ) runtime = true;\n\n  if (process.env.NODE_ENV !== 'production') {\n    assertRawModule(path, rawModule);\n  }\n\n  var newModule = new Module(rawModule, runtime);\n  if (path.length === 0) {\n    this.root = newModule;\n  } else {\n    var parent = this.get(path.slice(0, -1));\n    parent.addChild(path[path.length - 1], newModule);\n  }\n\n  // register nested modules\n  if (rawModule.modules) {\n    forEachValue(rawModule.modules, function (rawChildModule, key) {\n      this$1.register(path.concat(key), rawChildModule, runtime);\n    });\n  }\n};\n\nModuleCollection.prototype.unregister = function unregister (path) {\n  var parent = this.get(path.slice(0, -1));\n  var key = path[path.length - 1];\n  if (!parent.getChild(key).runtime) { return }\n\n  parent.removeChild(key);\n};\n\nfunction update (path, targetModule, newModule) {\n  if (process.env.NODE_ENV !== 'production') {\n    assertRawModule(path, newModule);\n  }\n\n  // update target module\n  targetModule.update(newModule);\n\n  // update nested modules\n  if (newModule.modules) {\n    for (var key in newModule.modules) {\n      if (!targetModule.getChild(key)) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.warn(\n            \"[vuex] trying to add a new module '\" + key + \"' on hot reloading, \" +\n            'manual reload is needed'\n          );\n        }\n        return\n      }\n      update(\n        path.concat(key),\n        targetModule.getChild(key),\n        newModule.modules[key]\n      );\n    }\n  }\n}\n\nvar functionAssert = {\n  assert: function (value) { return typeof value === 'function'; },\n  expected: 'function'\n};\n\nvar objectAssert = {\n  assert: function (value) { return typeof value === 'function' ||\n    (typeof value === 'object' && typeof value.handler === 'function'); },\n  expected: 'function or object with \"handler\" function'\n};\n\nvar assertTypes = {\n  getters: functionAssert,\n  mutations: functionAssert,\n  actions: objectAssert\n};\n\nfunction assertRawModule (path, rawModule) {\n  Object.keys(assertTypes).forEach(function (key) {\n    if (!rawModule[key]) { return }\n\n    var assertOptions = assertTypes[key];\n\n    forEachValue(rawModule[key], function (value, type) {\n      assert(\n        assertOptions.assert(value),\n        makeAssertionMessage(path, key, type, value, assertOptions.expected)\n      );\n    });\n  });\n}\n\nfunction makeAssertionMessage (path, key, type, value, expected) {\n  var buf = key + \" should be \" + expected + \" but \\\"\" + key + \".\" + type + \"\\\"\";\n  if (path.length > 0) {\n    buf += \" in module \\\"\" + (path.join('.')) + \"\\\"\";\n  }\n  buf += \" is \" + (JSON.stringify(value)) + \".\";\n  return buf\n}\n\nvar Vue; // bind on install\n\nvar Store = function Store (options) {\n  var this$1 = this;\n  if ( options === void 0 ) options = {};\n\n  // Auto install if it is not done yet and `window` has `Vue`.\n  // To allow users to avoid auto-installation in some cases,\n  // this code should be placed here. See #731\n  if (!Vue && typeof window !== 'undefined' && window.Vue) {\n    install(window.Vue);\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(Vue, \"must call Vue.use(Vuex) before creating a store instance.\");\n    assert(typeof Promise !== 'undefined', \"vuex requires a Promise polyfill in this browser.\");\n    assert(this instanceof Store, \"Store must be called with the new operator.\");\n  }\n\n  var plugins = options.plugins; if ( plugins === void 0 ) plugins = [];\n  var strict = options.strict; if ( strict === void 0 ) strict = false;\n\n  var state = options.state; if ( state === void 0 ) state = {};\n  if (typeof state === 'function') {\n    state = state() || {};\n  }\n\n  // store internal state\n  this._committing = false;\n  this._actions = Object.create(null);\n  this._actionSubscribers = [];\n  this._mutations = Object.create(null);\n  this._wrappedGetters = Object.create(null);\n  this._modules = new ModuleCollection(options);\n  this._modulesNamespaceMap = Object.create(null);\n  this._subscribers = [];\n  this._watcherVM = new Vue();\n\n  // bind commit and dispatch to self\n  var store = this;\n  var ref = this;\n  var dispatch = ref.dispatch;\n  var commit = ref.commit;\n  this.dispatch = function boundDispatch (type, payload) {\n    return dispatch.call(store, type, payload)\n  };\n  this.commit = function boundCommit (type, payload, options) {\n    return commit.call(store, type, payload, options)\n  };\n\n  // strict mode\n  this.strict = strict;\n\n  // init root module.\n  // this also recursively registers all sub-modules\n  // and collects all module getters inside this._wrappedGetters\n  installModule(this, state, [], this._modules.root);\n\n  // initialize the store vm, which is responsible for the reactivity\n  // (also registers _wrappedGetters as computed properties)\n  resetStoreVM(this, state);\n\n  // apply plugins\n  plugins.forEach(function (plugin) { return plugin(this$1); });\n\n  if (Vue.config.devtools) {\n    devtoolPlugin(this);\n  }\n};\n\nvar prototypeAccessors = { state: { configurable: true } };\n\nprototypeAccessors.state.get = function () {\n  return this._vm._data.$$state\n};\n\nprototypeAccessors.state.set = function (v) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert(false, \"Use store.replaceState() to explicit replace store state.\");\n  }\n};\n\nStore.prototype.commit = function commit (_type, _payload, _options) {\n    var this$1 = this;\n\n  // check object-style commit\n  var ref = unifyObjectStyle(_type, _payload, _options);\n    var type = ref.type;\n    var payload = ref.payload;\n    var options = ref.options;\n\n  var mutation = { type: type, payload: payload };\n  var entry = this._mutations[type];\n  if (!entry) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.error((\"[vuex] unknown mutation type: \" + type));\n    }\n    return\n  }\n  this._withCommit(function () {\n    entry.forEach(function commitIterator (handler) {\n      handler(payload);\n    });\n  });\n  this._subscribers.forEach(function (sub) { return sub(mutation, this$1.state); });\n\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    options && options.silent\n  ) {\n    console.warn(\n      \"[vuex] mutation type: \" + type + \". Silent option has been removed. \" +\n      'Use the filter functionality in the vue-devtools'\n    );\n  }\n};\n\nStore.prototype.dispatch = function dispatch (_type, _payload) {\n    var this$1 = this;\n\n  // check object-style dispatch\n  var ref = unifyObjectStyle(_type, _payload);\n    var type = ref.type;\n    var payload = ref.payload;\n\n  var action = { type: type, payload: payload };\n  var entry = this._actions[type];\n  if (!entry) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.error((\"[vuex] unknown action type: \" + type));\n    }\n    return\n  }\n\n  this._actionSubscribers.forEach(function (sub) { return sub(action, this$1.state); });\n\n  return entry.length > 1\n    ? Promise.all(entry.map(function (handler) { return handler(payload); }))\n    : entry[0](payload)\n};\n\nStore.prototype.subscribe = function subscribe (fn) {\n  return genericSubscribe(fn, this._subscribers)\n};\n\nStore.prototype.subscribeAction = function subscribeAction (fn) {\n  return genericSubscribe(fn, this._actionSubscribers)\n};\n\nStore.prototype.watch = function watch (getter, cb, options) {\n    var this$1 = this;\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(typeof getter === 'function', \"store.watch only accepts a function.\");\n  }\n  return this._watcherVM.$watch(function () { return getter(this$1.state, this$1.getters); }, cb, options)\n};\n\nStore.prototype.replaceState = function replaceState (state) {\n    var this$1 = this;\n\n  this._withCommit(function () {\n    this$1._vm._data.$$state = state;\n  });\n};\n\nStore.prototype.registerModule = function registerModule (path, rawModule, options) {\n    if ( options === void 0 ) options = {};\n\n  if (typeof path === 'string') { path = [path]; }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(Array.isArray(path), \"module path must be a string or an Array.\");\n    assert(path.length > 0, 'cannot register the root module by using registerModule.');\n  }\n\n  this._modules.register(path, rawModule);\n  installModule(this, this.state, path, this._modules.get(path), options.preserveState);\n  // reset store to update getters...\n  resetStoreVM(this, this.state);\n};\n\nStore.prototype.unregisterModule = function unregisterModule (path) {\n    var this$1 = this;\n\n  if (typeof path === 'string') { path = [path]; }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(Array.isArray(path), \"module path must be a string or an Array.\");\n  }\n\n  this._modules.unregister(path);\n  this._withCommit(function () {\n    var parentState = getNestedState(this$1.state, path.slice(0, -1));\n    Vue.delete(parentState, path[path.length - 1]);\n  });\n  resetStore(this);\n};\n\nStore.prototype.hotUpdate = function hotUpdate (newOptions) {\n  this._modules.update(newOptions);\n  resetStore(this, true);\n};\n\nStore.prototype._withCommit = function _withCommit (fn) {\n  var committing = this._committing;\n  this._committing = true;\n  fn();\n  this._committing = committing;\n};\n\nObject.defineProperties( Store.prototype, prototypeAccessors );\n\nfunction genericSubscribe (fn, subs) {\n  if (subs.indexOf(fn) < 0) {\n    subs.push(fn);\n  }\n  return function () {\n    var i = subs.indexOf(fn);\n    if (i > -1) {\n      subs.splice(i, 1);\n    }\n  }\n}\n\nfunction resetStore (store, hot) {\n  store._actions = Object.create(null);\n  store._mutations = Object.create(null);\n  store._wrappedGetters = Object.create(null);\n  store._modulesNamespaceMap = Object.create(null);\n  var state = store.state;\n  // init all modules\n  installModule(store, state, [], store._modules.root, true);\n  // reset vm\n  resetStoreVM(store, state, hot);\n}\n\nfunction resetStoreVM (store, state, hot) {\n  var oldVm = store._vm;\n\n  // bind store public getters\n  store.getters = {};\n  var wrappedGetters = store._wrappedGetters;\n  var computed = {};\n  forEachValue(wrappedGetters, function (fn, key) {\n    // use computed to leverage its lazy-caching mechanism\n    computed[key] = function () { return fn(store); };\n    Object.defineProperty(store.getters, key, {\n      get: function () { return store._vm[key]; },\n      enumerable: true // for local getters\n    });\n  });\n\n  // use a Vue instance to store the state tree\n  // suppress warnings just in case the user has added\n  // some funky global mixins\n  var silent = Vue.config.silent;\n  Vue.config.silent = true;\n  store._vm = new Vue({\n    data: {\n      $$state: state\n    },\n    computed: computed\n  });\n  Vue.config.silent = silent;\n\n  // enable strict mode for new vm\n  if (store.strict) {\n    enableStrictMode(store);\n  }\n\n  if (oldVm) {\n    if (hot) {\n      // dispatch changes in all subscribed watchers\n      // to force getter re-evaluation for hot reloading.\n      store._withCommit(function () {\n        oldVm._data.$$state = null;\n      });\n    }\n    Vue.nextTick(function () { return oldVm.$destroy(); });\n  }\n}\n\nfunction installModule (store, rootState, path, module, hot) {\n  var isRoot = !path.length;\n  var namespace = store._modules.getNamespace(path);\n\n  // register in namespace map\n  if (module.namespaced) {\n    store._modulesNamespaceMap[namespace] = module;\n  }\n\n  // set state\n  if (!isRoot && !hot) {\n    var parentState = getNestedState(rootState, path.slice(0, -1));\n    var moduleName = path[path.length - 1];\n    store._withCommit(function () {\n      Vue.set(parentState, moduleName, module.state);\n    });\n  }\n\n  var local = module.context = makeLocalContext(store, namespace, path);\n\n  module.forEachMutation(function (mutation, key) {\n    var namespacedType = namespace + key;\n    registerMutation(store, namespacedType, mutation, local);\n  });\n\n  module.forEachAction(function (action, key) {\n    var type = action.root ? key : namespace + key;\n    var handler = action.handler || action;\n    registerAction(store, type, handler, local);\n  });\n\n  module.forEachGetter(function (getter, key) {\n    var namespacedType = namespace + key;\n    registerGetter(store, namespacedType, getter, local);\n  });\n\n  module.forEachChild(function (child, key) {\n    installModule(store, rootState, path.concat(key), child, hot);\n  });\n}\n\n/**\n * make localized dispatch, commit, getters and state\n * if there is no namespace, just use root ones\n */\nfunction makeLocalContext (store, namespace, path) {\n  var noNamespace = namespace === '';\n\n  var local = {\n    dispatch: noNamespace ? store.dispatch : function (_type, _payload, _options) {\n      var args = unifyObjectStyle(_type, _payload, _options);\n      var payload = args.payload;\n      var options = args.options;\n      var type = args.type;\n\n      if (!options || !options.root) {\n        type = namespace + type;\n        if (process.env.NODE_ENV !== 'production' && !store._actions[type]) {\n          console.error((\"[vuex] unknown local action type: \" + (args.type) + \", global type: \" + type));\n          return\n        }\n      }\n\n      return store.dispatch(type, payload)\n    },\n\n    commit: noNamespace ? store.commit : function (_type, _payload, _options) {\n      var args = unifyObjectStyle(_type, _payload, _options);\n      var payload = args.payload;\n      var options = args.options;\n      var type = args.type;\n\n      if (!options || !options.root) {\n        type = namespace + type;\n        if (process.env.NODE_ENV !== 'production' && !store._mutations[type]) {\n          console.error((\"[vuex] unknown local mutation type: \" + (args.type) + \", global type: \" + type));\n          return\n        }\n      }\n\n      store.commit(type, payload, options);\n    }\n  };\n\n  // getters and state object must be gotten lazily\n  // because they will be changed by vm update\n  Object.defineProperties(local, {\n    getters: {\n      get: noNamespace\n        ? function () { return store.getters; }\n        : function () { return makeLocalGetters(store, namespace); }\n    },\n    state: {\n      get: function () { return getNestedState(store.state, path); }\n    }\n  });\n\n  return local\n}\n\nfunction makeLocalGetters (store, namespace) {\n  var gettersProxy = {};\n\n  var splitPos = namespace.length;\n  Object.keys(store.getters).forEach(function (type) {\n    // skip if the target getter is not match this namespace\n    if (type.slice(0, splitPos) !== namespace) { return }\n\n    // extract local getter type\n    var localType = type.slice(splitPos);\n\n    // Add a port to the getters proxy.\n    // Define as getter property because\n    // we do not want to evaluate the getters in this time.\n    Object.defineProperty(gettersProxy, localType, {\n      get: function () { return store.getters[type]; },\n      enumerable: true\n    });\n  });\n\n  return gettersProxy\n}\n\nfunction registerMutation (store, type, handler, local) {\n  var entry = store._mutations[type] || (store._mutations[type] = []);\n  entry.push(function wrappedMutationHandler (payload) {\n    handler.call(store, local.state, payload);\n  });\n}\n\nfunction registerAction (store, type, handler, local) {\n  var entry = store._actions[type] || (store._actions[type] = []);\n  entry.push(function wrappedActionHandler (payload, cb) {\n    var res = handler.call(store, {\n      dispatch: local.dispatch,\n      commit: local.commit,\n      getters: local.getters,\n      state: local.state,\n      rootGetters: store.getters,\n      rootState: store.state\n    }, payload, cb);\n    if (!isPromise(res)) {\n      res = Promise.resolve(res);\n    }\n    if (store._devtoolHook) {\n      return res.catch(function (err) {\n        store._devtoolHook.emit('vuex:error', err);\n        throw err\n      })\n    } else {\n      return res\n    }\n  });\n}\n\nfunction registerGetter (store, type, rawGetter, local) {\n  if (store._wrappedGetters[type]) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.error((\"[vuex] duplicate getter key: \" + type));\n    }\n    return\n  }\n  store._wrappedGetters[type] = function wrappedGetter (store) {\n    return rawGetter(\n      local.state, // local state\n      local.getters, // local getters\n      store.state, // root state\n      store.getters // root getters\n    )\n  };\n}\n\nfunction enableStrictMode (store) {\n  store._vm.$watch(function () { return this._data.$$state }, function () {\n    if (process.env.NODE_ENV !== 'production') {\n      assert(store._committing, \"Do not mutate vuex store state outside mutation handlers.\");\n    }\n  }, { deep: true, sync: true });\n}\n\nfunction getNestedState (state, path) {\n  return path.length\n    ? path.reduce(function (state, key) { return state[key]; }, state)\n    : state\n}\n\nfunction unifyObjectStyle (type, payload, options) {\n  if (isObject(type) && type.type) {\n    options = payload;\n    payload = type;\n    type = type.type;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(typeof type === 'string', (\"Expects string as the type, but found \" + (typeof type) + \".\"));\n  }\n\n  return { type: type, payload: payload, options: options }\n}\n\nfunction install (_Vue) {\n  if (Vue && _Vue === Vue) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.error(\n        '[vuex] already installed. Vue.use(Vuex) should be called only once.'\n      );\n    }\n    return\n  }\n  Vue = _Vue;\n  applyMixin(Vue);\n}\n\nvar mapState = normalizeNamespace(function (namespace, states) {\n  var res = {};\n  normalizeMap(states).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedState () {\n      var state = this.$store.state;\n      var getters = this.$store.getters;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapState', namespace);\n        if (!module) {\n          return\n        }\n        state = module.context.state;\n        getters = module.context.getters;\n      }\n      return typeof val === 'function'\n        ? val.call(this, state, getters)\n        : state[val]\n    };\n    // mark vuex getter for devtools\n    res[key].vuex = true;\n  });\n  return res\n});\n\nvar mapMutations = normalizeNamespace(function (namespace, mutations) {\n  var res = {};\n  normalizeMap(mutations).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedMutation () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      var commit = this.$store.commit;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapMutations', namespace);\n        if (!module) {\n          return\n        }\n        commit = module.context.commit;\n      }\n      return typeof val === 'function'\n        ? val.apply(this, [commit].concat(args))\n        : commit.apply(this.$store, [val].concat(args))\n    };\n  });\n  return res\n});\n\nvar mapGetters = normalizeNamespace(function (namespace, getters) {\n  var res = {};\n  normalizeMap(getters).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    val = namespace + val;\n    res[key] = function mappedGetter () {\n      if (namespace && !getModuleByNamespace(this.$store, 'mapGetters', namespace)) {\n        return\n      }\n      if (process.env.NODE_ENV !== 'production' && !(val in this.$store.getters)) {\n        console.error((\"[vuex] unknown getter: \" + val));\n        return\n      }\n      return this.$store.getters[val]\n    };\n    // mark vuex getter for devtools\n    res[key].vuex = true;\n  });\n  return res\n});\n\nvar mapActions = normalizeNamespace(function (namespace, actions) {\n  var res = {};\n  normalizeMap(actions).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedAction () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      var dispatch = this.$store.dispatch;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapActions', namespace);\n        if (!module) {\n          return\n        }\n        dispatch = module.context.dispatch;\n      }\n      return typeof val === 'function'\n        ? val.apply(this, [dispatch].concat(args))\n        : dispatch.apply(this.$store, [val].concat(args))\n    };\n  });\n  return res\n});\n\nvar createNamespacedHelpers = function (namespace) { return ({\n  mapState: mapState.bind(null, namespace),\n  mapGetters: mapGetters.bind(null, namespace),\n  mapMutations: mapMutations.bind(null, namespace),\n  mapActions: mapActions.bind(null, namespace)\n}); };\n\nfunction normalizeMap (map) {\n  return Array.isArray(map)\n    ? map.map(function (key) { return ({ key: key, val: key }); })\n    : Object.keys(map).map(function (key) { return ({ key: key, val: map[key] }); })\n}\n\nfunction normalizeNamespace (fn) {\n  return function (namespace, map) {\n    if (typeof namespace !== 'string') {\n      map = namespace;\n      namespace = '';\n    } else if (namespace.charAt(namespace.length - 1) !== '/') {\n      namespace += '/';\n    }\n    return fn(namespace, map)\n  }\n}\n\nfunction getModuleByNamespace (store, helper, namespace) {\n  var module = store._modulesNamespaceMap[namespace];\n  if (process.env.NODE_ENV !== 'production' && !module) {\n    console.error((\"[vuex] module namespace not found in \" + helper + \"(): \" + namespace));\n  }\n  return module\n}\n\nvar index_esm = {\n  Store: Store,\n  install: install,\n  version: '3.0.1',\n  mapState: mapState,\n  mapMutations: mapMutations,\n  mapGetters: mapGetters,\n  mapActions: mapActions,\n  createNamespacedHelpers: createNamespacedHelpers\n};\n\nexport { Store, install, mapState, mapMutations, mapGetters, mapActions, createNamespacedHelpers };\nexport default index_esm;\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * A stream-based mp2t to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\n\nvar Stream = require('../utils/stream.js');\nvar mp4 = require('./mp4-generator.js');\nvar frameUtils = require('./frame-utils');\nvar audioFrameUtils = require('./audio-frame-utils');\nvar trackDecodeInfo = require('./track-decode-info');\nvar m2ts = require('../m2ts/m2ts.js');\nvar AdtsStream = require('../codecs/adts.js');\nvar H264Stream = require('../codecs/h264').H264Stream;\nvar AacStream = require('../aac');\nvar isLikelyAacData = require('../aac/utils').isLikelyAacData;\n\n// constants\nvar AUDIO_PROPERTIES = [\n  'audioobjecttype',\n  'channelcount',\n  'samplerate',\n  'samplingfrequencyindex',\n  'samplesize'\n];\n\nvar VIDEO_PROPERTIES = [\n  'width',\n  'height',\n  'profileIdc',\n  'levelIdc',\n  'profileCompatibility'\n];\n\n// object types\nvar VideoSegmentStream, AudioSegmentStream, Transmuxer, CoalesceStream;\n\n/**\n * Compare two arrays (even typed) for same-ness\n */\nvar arrayEquals = function(a, b) {\n  var\n    i;\n\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  // compare the value of each element in the array\n  for (i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nvar generateVideoSegmentTimingInfo = function(\n  baseMediaDecodeTime,\n  startDts,\n  startPts,\n  endDts,\n  endPts,\n  prependedContentDuration\n) {\n  var\n    ptsOffsetFromDts = startPts - startDts,\n    decodeDuration = endDts - startDts,\n    presentationDuration = endPts - startPts;\n\n  // The PTS and DTS values are based on the actual stream times from the segment,\n  // however, the player time values will reflect a start from the baseMediaDecodeTime.\n  // In order to provide relevant values for the player times, base timing info on the\n  // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n  return {\n    start: {\n      dts: baseMediaDecodeTime,\n      pts: baseMediaDecodeTime + ptsOffsetFromDts\n    },\n    end: {\n      dts: baseMediaDecodeTime + decodeDuration,\n      pts: baseMediaDecodeTime + presentationDuration\n    },\n    prependedContentDuration: prependedContentDuration,\n    baseMediaDecodeTime: baseMediaDecodeTime\n  };\n};\n\n/**\n * Constructs a single-track, ISO BMFF media segment from AAC data\n * events. The output of this stream can be fed to a SourceBuffer\n * configured with a suitable initialization segment.\n * @param track {object} track metadata configuration\n * @param options {object} transmuxer options object\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\nAudioSegmentStream = function(track, options) {\n  var\n    adtsFrames = [],\n    sequenceNumber = 0,\n    earliestAllowedDts = 0,\n    audioAppendStartTs = 0,\n    videoBaseMediaDecodeTime = Infinity;\n\n  options = options || {};\n\n  AudioSegmentStream.prototype.init.call(this);\n\n  this.push = function(data) {\n    trackDecodeInfo.collectDtsInfo(track, data);\n\n    if (track) {\n      AUDIO_PROPERTIES.forEach(function(prop) {\n        track[prop] = data[prop];\n      });\n    }\n\n    // buffer audio data until end() is called\n    adtsFrames.push(data);\n  };\n\n  this.setEarliestDts = function(earliestDts) {\n    earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n  };\n\n  this.setVideoBaseMediaDecodeTime = function(baseMediaDecodeTime) {\n    videoBaseMediaDecodeTime = baseMediaDecodeTime;\n  };\n\n  this.setAudioAppendStart = function(timestamp) {\n    audioAppendStartTs = timestamp;\n  };\n\n  this.flush = function() {\n    var\n      frames,\n      moof,\n      mdat,\n      boxes;\n\n    // return early if no audio data has been observed\n    if (adtsFrames.length === 0) {\n      this.trigger('done', 'AudioSegmentStream');\n      return;\n    }\n\n    frames = audioFrameUtils.trimAdtsFramesByEarliestDts(\n      adtsFrames, track, earliestAllowedDts);\n    track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(\n      track, options.keepOriginalTimestamps);\n\n    audioFrameUtils.prefixWithSilence(\n      track, frames, audioAppendStartTs, videoBaseMediaDecodeTime);\n\n    // we have to build the index from byte locations to\n    // samples (that is, adts frames) in the audio data\n    track.samples = audioFrameUtils.generateSampleTable(frames);\n\n    // concatenate the audio data to constuct the mdat\n    mdat = mp4.mdat(audioFrameUtils.concatenateFrameData(frames));\n\n    adtsFrames = [];\n\n    moof = mp4.moof(sequenceNumber, [track]);\n    boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n    // bump the sequence number for next time\n    sequenceNumber++;\n\n    boxes.set(moof);\n    boxes.set(mdat, moof.byteLength);\n\n    trackDecodeInfo.clearDtsInfo(track);\n\n    this.trigger('data', {track: track, boxes: boxes});\n    this.trigger('done', 'AudioSegmentStream');\n  };\n};\n\nAudioSegmentStream.prototype = new Stream();\n\n/**\n * Constructs a single-track, ISO BMFF media segment from H264 data\n * events. The output of this stream can be fed to a SourceBuffer\n * configured with a suitable initialization segment.\n * @param track {object} track metadata configuration\n * @param options {object} transmuxer options object\n * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n *        gopsToAlignWith list when attempting to align gop pts\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\nVideoSegmentStream = function(track, options) {\n  var\n    sequenceNumber = 0,\n    nalUnits = [],\n    gopsToAlignWith = [],\n    config,\n    pps;\n\n  options = options || {};\n\n  VideoSegmentStream.prototype.init.call(this);\n\n  delete track.minPTS;\n\n  this.gopCache_ = [];\n\n  /**\n    * Constructs a ISO BMFF segment given H264 nalUnits\n    * @param {Object} nalUnit A data event representing a nalUnit\n    * @param {String} nalUnit.nalUnitType\n    * @param {Object} nalUnit.config Properties for a mp4 track\n    * @param {Uint8Array} nalUnit.data The nalUnit bytes\n    * @see lib/codecs/h264.js\n   **/\n  this.push = function(nalUnit) {\n    trackDecodeInfo.collectDtsInfo(track, nalUnit);\n\n    // record the track config\n    if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n      config = nalUnit.config;\n      track.sps = [nalUnit.data];\n\n      VIDEO_PROPERTIES.forEach(function(prop) {\n        track[prop] = config[prop];\n      }, this);\n    }\n\n    if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' &&\n        !pps) {\n      pps = nalUnit.data;\n      track.pps = [nalUnit.data];\n    }\n\n    // buffer video until flush() is called\n    nalUnits.push(nalUnit);\n  };\n\n  /**\n    * Pass constructed ISO BMFF track and boxes on to the\n    * next stream in the pipeline\n   **/\n  this.flush = function() {\n    var\n      frames,\n      gopForFusion,\n      gops,\n      moof,\n      mdat,\n      boxes,\n      prependedContentDuration = 0,\n      firstGop,\n      lastGop;\n\n    // Throw away nalUnits at the start of the byte stream until\n    // we find the first AUD\n    while (nalUnits.length) {\n      if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n        break;\n      }\n      nalUnits.shift();\n    }\n\n    // Return early if no video data has been observed\n    if (nalUnits.length === 0) {\n      this.resetStream_();\n      this.trigger('done', 'VideoSegmentStream');\n      return;\n    }\n\n    // Organize the raw nal-units into arrays that represent\n    // higher-level constructs such as frames and gops\n    // (group-of-pictures)\n    frames = frameUtils.groupNalsIntoFrames(nalUnits);\n    gops = frameUtils.groupFramesIntoGops(frames);\n\n    // If the first frame of this fragment is not a keyframe we have\n    // a problem since MSE (on Chrome) requires a leading keyframe.\n    //\n    // We have two approaches to repairing this situation:\n    // 1) GOP-FUSION:\n    //    This is where we keep track of the GOPS (group-of-pictures)\n    //    from previous fragments and attempt to find one that we can\n    //    prepend to the current fragment in order to create a valid\n    //    fragment.\n    // 2) KEYFRAME-PULLING:\n    //    Here we search for the first keyframe in the fragment and\n    //    throw away all the frames between the start of the fragment\n    //    and that keyframe. We then extend the duration and pull the\n    //    PTS of the keyframe forward so that it covers the time range\n    //    of the frames that were disposed of.\n    //\n    // #1 is far prefereable over #2 which can cause \"stuttering\" but\n    // requires more things to be just right.\n    if (!gops[0][0].keyFrame) {\n      // Search for a gop for fusion from our gopCache\n      gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n      if (gopForFusion) {\n        // in order to provide more accurate timing information about the segment, save\n        // the number of seconds prepended to the original segment due to GOP fusion\n        prependedContentDuration = gopForFusion.duration;\n\n        gops.unshift(gopForFusion);\n        // Adjust Gops' metadata to account for the inclusion of the\n        // new gop at the beginning\n        gops.byteLength += gopForFusion.byteLength;\n        gops.nalCount += gopForFusion.nalCount;\n        gops.pts = gopForFusion.pts;\n        gops.dts = gopForFusion.dts;\n        gops.duration += gopForFusion.duration;\n      } else {\n        // If we didn't find a candidate gop fall back to keyframe-pulling\n        gops = frameUtils.extendFirstKeyFrame(gops);\n      }\n    }\n\n    // Trim gops to align with gopsToAlignWith\n    if (gopsToAlignWith.length) {\n      var alignedGops;\n\n      if (options.alignGopsAtEnd) {\n        alignedGops = this.alignGopsAtEnd_(gops);\n      } else {\n        alignedGops = this.alignGopsAtStart_(gops);\n      }\n\n      if (!alignedGops) {\n        // save all the nals in the last GOP into the gop cache\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        });\n\n        // Keep a maximum of 6 GOPs in the cache\n        this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n        // Clear nalUnits\n        nalUnits = [];\n\n        // return early no gops can be aligned with desired gopsToAlignWith\n        this.resetStream_();\n        this.trigger('done', 'VideoSegmentStream');\n        return;\n      }\n\n      // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n      // when recalculated before sending off to CoalesceStream\n      trackDecodeInfo.clearDtsInfo(track);\n\n      gops = alignedGops;\n    }\n\n    trackDecodeInfo.collectDtsInfo(track, gops);\n\n    // First, we have to build the index from byte locations to\n    // samples (that is, frames) in the video data\n    track.samples = frameUtils.generateSampleTable(gops);\n\n    // Concatenate the video data and construct the mdat\n    mdat = mp4.mdat(frameUtils.concatenateNalData(gops));\n\n    track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(\n      track, options.keepOriginalTimestamps);\n\n    this.trigger('processedGopsInfo', gops.map(function(gop) {\n      return {\n        pts: gop.pts,\n        dts: gop.dts,\n        byteLength: gop.byteLength\n      };\n    }));\n\n    firstGop = gops[0];\n    lastGop = gops[gops.length - 1];\n\n    this.trigger(\n      'segmentTimingInfo',\n      generateVideoSegmentTimingInfo(\n        track.baseMediaDecodeTime,\n        firstGop.dts,\n        firstGop.pts,\n        lastGop.dts + lastGop.duration,\n        lastGop.pts + lastGop.duration,\n        prependedContentDuration));\n\n    // save all the nals in the last GOP into the gop cache\n    this.gopCache_.unshift({\n      gop: gops.pop(),\n      pps: track.pps,\n      sps: track.sps\n    });\n\n    // Keep a maximum of 6 GOPs in the cache\n    this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n    // Clear nalUnits\n    nalUnits = [];\n\n    this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n    this.trigger('timelineStartInfo', track.timelineStartInfo);\n\n    moof = mp4.moof(sequenceNumber, [track]);\n\n    // it would be great to allocate this array up front instead of\n    // throwing away hundreds of media segment fragments\n    boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n    // Bump the sequence number for next time\n    sequenceNumber++;\n\n    boxes.set(moof);\n    boxes.set(mdat, moof.byteLength);\n\n    this.trigger('data', {track: track, boxes: boxes});\n\n    this.resetStream_();\n\n    // Continue with the flush process now\n    this.trigger('done', 'VideoSegmentStream');\n  };\n\n  this.resetStream_ = function() {\n    trackDecodeInfo.clearDtsInfo(track);\n\n    // reset config and pps because they may differ across segments\n    // for instance, when we are rendition switching\n    config = undefined;\n    pps = undefined;\n  };\n\n  // Search for a candidate Gop for gop-fusion from the gop cache and\n  // return it or return null if no good candidate was found\n  this.getGopForFusion_ = function(nalUnit) {\n    var\n      halfSecond = 45000, // Half-a-second in a 90khz clock\n      allowableOverlap = 10000, // About 3 frames @ 30fps\n      nearestDistance = Infinity,\n      dtsDistance,\n      nearestGopObj,\n      currentGop,\n      currentGopObj,\n      i;\n\n    // Search for the GOP nearest to the beginning of this nal unit\n    for (i = 0; i < this.gopCache_.length; i++) {\n      currentGopObj = this.gopCache_[i];\n      currentGop = currentGopObj.gop;\n\n      // Reject Gops with different SPS or PPS\n      if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) ||\n          !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n        continue;\n      }\n\n      // Reject Gops that would require a negative baseMediaDecodeTime\n      if (currentGop.dts < track.timelineStartInfo.dts) {\n        continue;\n      }\n\n      // The distance between the end of the gop and the start of the nalUnit\n      dtsDistance = (nalUnit.dts - currentGop.dts) - currentGop.duration;\n\n      // Only consider GOPS that start before the nal unit and end within\n      // a half-second of the nal unit\n      if (dtsDistance >= -allowableOverlap &&\n          dtsDistance <= halfSecond) {\n\n        // Always use the closest GOP we found if there is more than\n        // one candidate\n        if (!nearestGopObj ||\n            nearestDistance > dtsDistance) {\n          nearestGopObj = currentGopObj;\n          nearestDistance = dtsDistance;\n        }\n      }\n    }\n\n    if (nearestGopObj) {\n      return nearestGopObj.gop;\n    }\n    return null;\n  };\n\n  // trim gop list to the first gop found that has a matching pts with a gop in the list\n  // of gopsToAlignWith starting from the START of the list\n  this.alignGopsAtStart_ = function(gops) {\n    var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n\n    byteLength = gops.byteLength;\n    nalCount = gops.nalCount;\n    duration = gops.duration;\n    alignIndex = gopIndex = 0;\n\n    while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n      align = gopsToAlignWith[alignIndex];\n      gop = gops[gopIndex];\n\n      if (align.pts === gop.pts) {\n        break;\n      }\n\n      if (gop.pts > align.pts) {\n        // this current gop starts after the current gop we want to align on, so increment\n        // align index\n        alignIndex++;\n        continue;\n      }\n\n      // current gop starts before the current gop we want to align on. so increment gop\n      // index\n      gopIndex++;\n      byteLength -= gop.byteLength;\n      nalCount -= gop.nalCount;\n      duration -= gop.duration;\n    }\n\n    if (gopIndex === 0) {\n      // no gops to trim\n      return gops;\n    }\n\n    if (gopIndex === gops.length) {\n      // all gops trimmed, skip appending all gops\n      return null;\n    }\n\n    alignedGops = gops.slice(gopIndex);\n    alignedGops.byteLength = byteLength;\n    alignedGops.duration = duration;\n    alignedGops.nalCount = nalCount;\n    alignedGops.pts = alignedGops[0].pts;\n    alignedGops.dts = alignedGops[0].dts;\n\n    return alignedGops;\n  };\n\n  // trim gop list to the first gop found that has a matching pts with a gop in the list\n  // of gopsToAlignWith starting from the END of the list\n  this.alignGopsAtEnd_ = function(gops) {\n    var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n\n    alignIndex = gopsToAlignWith.length - 1;\n    gopIndex = gops.length - 1;\n    alignEndIndex = null;\n    matchFound = false;\n\n    while (alignIndex >= 0 && gopIndex >= 0) {\n      align = gopsToAlignWith[alignIndex];\n      gop = gops[gopIndex];\n\n      if (align.pts === gop.pts) {\n        matchFound = true;\n        break;\n      }\n\n      if (align.pts > gop.pts) {\n        alignIndex--;\n        continue;\n      }\n\n      if (alignIndex === gopsToAlignWith.length - 1) {\n        // gop.pts is greater than the last alignment candidate. If no match is found\n        // by the end of this loop, we still want to append gops that come after this\n        // point\n        alignEndIndex = gopIndex;\n      }\n\n      gopIndex--;\n    }\n\n    if (!matchFound && alignEndIndex === null) {\n      return null;\n    }\n\n    var trimIndex;\n\n    if (matchFound) {\n      trimIndex = gopIndex;\n    } else {\n      trimIndex = alignEndIndex;\n    }\n\n    if (trimIndex === 0) {\n      return gops;\n    }\n\n    var alignedGops = gops.slice(trimIndex);\n    var metadata = alignedGops.reduce(function(total, gop) {\n      total.byteLength += gop.byteLength;\n      total.duration += gop.duration;\n      total.nalCount += gop.nalCount;\n      return total;\n    }, { byteLength: 0, duration: 0, nalCount: 0 });\n\n    alignedGops.byteLength = metadata.byteLength;\n    alignedGops.duration = metadata.duration;\n    alignedGops.nalCount = metadata.nalCount;\n    alignedGops.pts = alignedGops[0].pts;\n    alignedGops.dts = alignedGops[0].dts;\n\n    return alignedGops;\n  };\n\n  this.alignGopsWith = function(newGopsToAlignWith) {\n    gopsToAlignWith = newGopsToAlignWith;\n  };\n};\n\nVideoSegmentStream.prototype = new Stream();\n\n/**\n * A Stream that can combine multiple streams (ie. audio & video)\n * into a single output segment for MSE. Also supports audio-only\n * and video-only streams.\n * @param options {object} transmuxer options object\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at media timeline start.\n */\nCoalesceStream = function(options, metadataStream) {\n  // Number of Tracks per output segment\n  // If greater than 1, we combine multiple\n  // tracks into a single segment\n  this.numberOfTracks = 0;\n  this.metadataStream = metadataStream;\n\n  options = options || {};\n\n  if (typeof options.remux !== 'undefined') {\n    this.remuxTracks = !!options.remux;\n  } else {\n    this.remuxTracks = true;\n  }\n\n  if (typeof options.keepOriginalTimestamps === 'boolean') {\n    this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n  }\n\n  this.pendingTracks = [];\n  this.videoTrack = null;\n  this.pendingBoxes = [];\n  this.pendingCaptions = [];\n  this.pendingMetadata = [];\n  this.pendingBytes = 0;\n  this.emittedTracks = 0;\n\n  CoalesceStream.prototype.init.call(this);\n\n  // Take output from multiple\n  this.push = function(output) {\n    // buffer incoming captions until the associated video segment\n    // finishes\n    if (output.text) {\n      return this.pendingCaptions.push(output);\n    }\n    // buffer incoming id3 tags until the final flush\n    if (output.frames) {\n      return this.pendingMetadata.push(output);\n    }\n\n    // Add this track to the list of pending tracks and store\n    // important information required for the construction of\n    // the final segment\n    this.pendingTracks.push(output.track);\n    this.pendingBoxes.push(output.boxes);\n    this.pendingBytes += output.boxes.byteLength;\n\n    if (output.track.type === 'video') {\n      this.videoTrack = output.track;\n    }\n    if (output.track.type === 'audio') {\n      this.audioTrack = output.track;\n    }\n  };\n};\n\nCoalesceStream.prototype = new Stream();\nCoalesceStream.prototype.flush = function(flushSource) {\n  var\n    offset = 0,\n    event = {\n      captions: [],\n      captionStreams: {},\n      metadata: [],\n      info: {}\n    },\n    caption,\n    id3,\n    initSegment,\n    timelineStartPts = 0,\n    i;\n\n  if (this.pendingTracks.length < this.numberOfTracks) {\n    if (flushSource !== 'VideoSegmentStream' &&\n        flushSource !== 'AudioSegmentStream') {\n      // Return because we haven't received a flush from a data-generating\n      // portion of the segment (meaning that we have only recieved meta-data\n      // or captions.)\n      return;\n    } else if (this.remuxTracks) {\n      // Return until we have enough tracks from the pipeline to remux (if we\n      // are remuxing audio and video into a single MP4)\n      return;\n    } else if (this.pendingTracks.length === 0) {\n      // In the case where we receive a flush without any data having been\n      // received we consider it an emitted track for the purposes of coalescing\n      // `done` events.\n      // We do this for the case where there is an audio and video track in the\n      // segment but no audio data. (seen in several playlists with alternate\n      // audio tracks and no audio present in the main TS segments.)\n      this.emittedTracks++;\n\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n      return;\n    }\n  }\n\n  if (this.videoTrack) {\n    timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n    VIDEO_PROPERTIES.forEach(function(prop) {\n      event.info[prop] = this.videoTrack[prop];\n    }, this);\n  } else if (this.audioTrack) {\n    timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n    AUDIO_PROPERTIES.forEach(function(prop) {\n      event.info[prop] = this.audioTrack[prop];\n    }, this);\n  }\n\n  if (this.pendingTracks.length === 1) {\n    event.type = this.pendingTracks[0].type;\n  } else {\n    event.type = 'combined';\n  }\n\n  this.emittedTracks += this.pendingTracks.length;\n\n  initSegment = mp4.initSegment(this.pendingTracks);\n\n  // Create a new typed array to hold the init segment\n  event.initSegment = new Uint8Array(initSegment.byteLength);\n\n  // Create an init segment containing a moov\n  // and track definitions\n  event.initSegment.set(initSegment);\n\n  // Create a new typed array to hold the moof+mdats\n  event.data = new Uint8Array(this.pendingBytes);\n\n  // Append each moof+mdat (one per track) together\n  for (i = 0; i < this.pendingBoxes.length; i++) {\n    event.data.set(this.pendingBoxes[i], offset);\n    offset += this.pendingBoxes[i].byteLength;\n  }\n\n  // Translate caption PTS times into second offsets to match the\n  // video timeline for the segment, and add track info\n  for (i = 0; i < this.pendingCaptions.length; i++) {\n    caption = this.pendingCaptions[i];\n\n    caption.startTime = caption.startPts;\n    if (!this.keepOriginalTimestamps) {\n      caption.startTime -= timelineStartPts;\n    }\n    caption.startTime /= 90e3;\n\n    caption.endTime = caption.endPts;\n    if (!this.keepOriginalTimestamps) {\n      caption.endTime -= timelineStartPts;\n    }\n    caption.endTime /= 90e3;\n\n    event.captionStreams[caption.stream] = true;\n    event.captions.push(caption);\n  }\n\n  // Translate ID3 frame PTS times into second offsets to match the\n  // video timeline for the segment\n  for (i = 0; i < this.pendingMetadata.length; i++) {\n    id3 = this.pendingMetadata[i];\n\n    id3.cueTime = id3.pts;\n    if (!this.keepOriginalTimestamps) {\n      id3.cueTime -= timelineStartPts;\n    }\n    id3.cueTime /= 90e3;\n\n    event.metadata.push(id3);\n  }\n\n  // We add this to every single emitted segment even though we only need\n  // it for the first\n  event.metadata.dispatchType = this.metadataStream.dispatchType;\n\n  // Reset stream state\n  this.pendingTracks.length = 0;\n  this.videoTrack = null;\n  this.pendingBoxes.length = 0;\n  this.pendingCaptions.length = 0;\n  this.pendingBytes = 0;\n  this.pendingMetadata.length = 0;\n\n  // Emit the built segment\n  this.trigger('data', event);\n\n  // Only emit `done` if all tracks have been flushed and emitted\n  if (this.emittedTracks >= this.numberOfTracks) {\n    this.trigger('done');\n    this.emittedTracks = 0;\n  }\n};\n/**\n * A Stream that expects MP2T binary data as input and produces\n * corresponding media segments, suitable for use with Media Source\n * Extension (MSE) implementations that support the ISO BMFF byte\n * stream format, like Chrome.\n */\nTransmuxer = function(options) {\n  var\n    self = this,\n    hasFlushed = true,\n    videoTrack,\n    audioTrack;\n\n  Transmuxer.prototype.init.call(this);\n\n  options = options || {};\n  this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n  this.transmuxPipeline_ = {};\n\n  this.setupAacPipeline = function() {\n    var pipeline = {};\n    this.transmuxPipeline_ = pipeline;\n\n    pipeline.type = 'aac';\n    pipeline.metadataStream = new m2ts.MetadataStream();\n\n    // set up the parsing pipeline\n    pipeline.aacStream = new AacStream();\n    pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n    pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n    pipeline.adtsStream = new AdtsStream();\n    pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n    pipeline.headOfPipeline = pipeline.aacStream;\n\n    pipeline.aacStream\n      .pipe(pipeline.audioTimestampRolloverStream)\n      .pipe(pipeline.adtsStream);\n    pipeline.aacStream\n      .pipe(pipeline.timedMetadataTimestampRolloverStream)\n      .pipe(pipeline.metadataStream)\n      .pipe(pipeline.coalesceStream);\n\n    pipeline.metadataStream.on('timestamp', function(frame) {\n      pipeline.aacStream.setTimestamp(frame.timeStamp);\n    });\n\n    pipeline.aacStream.on('data', function(data) {\n      if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n        audioTrack = audioTrack || {\n          timelineStartInfo: {\n            baseMediaDecodeTime: self.baseMediaDecodeTime\n          },\n          codec: 'adts',\n          type: 'audio'\n        };\n        // hook up the audio segment stream to the first track with aac data\n        pipeline.coalesceStream.numberOfTracks++;\n        pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n        // Set up the final part of the audio pipeline\n        pipeline.adtsStream\n          .pipe(pipeline.audioSegmentStream)\n          .pipe(pipeline.coalesceStream);\n      }\n    });\n\n    // Re-emit any data coming from the coalesce stream to the outside world\n    pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n    // Let the consumer know we have finished flushing the entire pipeline\n    pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n  };\n\n  this.setupTsPipeline = function() {\n    var pipeline = {};\n    this.transmuxPipeline_ = pipeline;\n\n    pipeline.type = 'ts';\n    pipeline.metadataStream = new m2ts.MetadataStream();\n\n    // set up the parsing pipeline\n    pipeline.packetStream = new m2ts.TransportPacketStream();\n    pipeline.parseStream = new m2ts.TransportParseStream();\n    pipeline.elementaryStream = new m2ts.ElementaryStream();\n    pipeline.videoTimestampRolloverStream = new m2ts.TimestampRolloverStream('video');\n    pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n    pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n    pipeline.adtsStream = new AdtsStream();\n    pipeline.h264Stream = new H264Stream();\n    pipeline.captionStream = new m2ts.CaptionStream();\n    pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n    pipeline.headOfPipeline = pipeline.packetStream;\n\n    // disassemble MPEG2-TS packets into elementary streams\n    pipeline.packetStream\n      .pipe(pipeline.parseStream)\n      .pipe(pipeline.elementaryStream);\n\n    // !!THIS ORDER IS IMPORTANT!!\n    // demux the streams\n    pipeline.elementaryStream\n      .pipe(pipeline.videoTimestampRolloverStream)\n      .pipe(pipeline.h264Stream);\n    pipeline.elementaryStream\n      .pipe(pipeline.audioTimestampRolloverStream)\n      .pipe(pipeline.adtsStream);\n\n    pipeline.elementaryStream\n      .pipe(pipeline.timedMetadataTimestampRolloverStream)\n      .pipe(pipeline.metadataStream)\n      .pipe(pipeline.coalesceStream);\n\n    // Hook up CEA-608/708 caption stream\n    pipeline.h264Stream.pipe(pipeline.captionStream)\n      .pipe(pipeline.coalesceStream);\n\n    pipeline.elementaryStream.on('data', function(data) {\n      var i;\n\n      if (data.type === 'metadata') {\n        i = data.tracks.length;\n\n        // scan the tracks listed in the metadata\n        while (i--) {\n          if (!videoTrack && data.tracks[i].type === 'video') {\n            videoTrack = data.tracks[i];\n            videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n          } else if (!audioTrack && data.tracks[i].type === 'audio') {\n            audioTrack = data.tracks[i];\n            audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n          }\n        }\n\n        // hook up the video segment stream to the first track with h264 data\n        if (videoTrack && !pipeline.videoSegmentStream) {\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.videoSegmentStream = new VideoSegmentStream(videoTrack, options);\n\n          pipeline.videoSegmentStream.on('timelineStartInfo', function(timelineStartInfo) {\n          // When video emits timelineStartInfo data after a flush, we forward that\n          // info to the AudioSegmentStream, if it exists, because video timeline\n          // data takes precedence.\n            if (audioTrack) {\n              audioTrack.timelineStartInfo = timelineStartInfo;\n              // On the first segment we trim AAC frames that exist before the\n              // very earliest DTS we have seen in video because Chrome will\n              // interpret any video track with a baseMediaDecodeTime that is\n              // non-zero as a gap.\n              pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n            }\n          });\n\n          pipeline.videoSegmentStream.on('processedGopsInfo',\n            self.trigger.bind(self, 'gopInfo'));\n          pipeline.videoSegmentStream.on('segmentTimingInfo',\n            self.trigger.bind(self, 'videoSegmentTimingInfo'));\n\n          pipeline.videoSegmentStream.on('baseMediaDecodeTime', function(baseMediaDecodeTime) {\n            if (audioTrack) {\n              pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n            }\n          });\n\n          // Set up the final part of the video pipeline\n          pipeline.h264Stream\n            .pipe(pipeline.videoSegmentStream)\n            .pipe(pipeline.coalesceStream);\n        }\n\n        if (audioTrack && !pipeline.audioSegmentStream) {\n          // hook up the audio segment stream to the first track with aac data\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n\n          // Set up the final part of the audio pipeline\n          pipeline.adtsStream\n            .pipe(pipeline.audioSegmentStream)\n            .pipe(pipeline.coalesceStream);\n        }\n      }\n    });\n\n    // Re-emit any data coming from the coalesce stream to the outside world\n    pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n    // Let the consumer know we have finished flushing the entire pipeline\n    pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n  };\n\n  // hook up the segment streams once track metadata is delivered\n  this.setBaseMediaDecodeTime = function(baseMediaDecodeTime) {\n    var pipeline = this.transmuxPipeline_;\n\n    if (!options.keepOriginalTimestamps) {\n      this.baseMediaDecodeTime = baseMediaDecodeTime;\n    }\n\n    if (audioTrack) {\n      audioTrack.timelineStartInfo.dts = undefined;\n      audioTrack.timelineStartInfo.pts = undefined;\n      trackDecodeInfo.clearDtsInfo(audioTrack);\n      if (!options.keepOriginalTimestamps) {\n        audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n      }\n      if (pipeline.audioTimestampRolloverStream) {\n        pipeline.audioTimestampRolloverStream.discontinuity();\n      }\n    }\n    if (videoTrack) {\n      if (pipeline.videoSegmentStream) {\n        pipeline.videoSegmentStream.gopCache_ = [];\n        pipeline.videoTimestampRolloverStream.discontinuity();\n      }\n      videoTrack.timelineStartInfo.dts = undefined;\n      videoTrack.timelineStartInfo.pts = undefined;\n      trackDecodeInfo.clearDtsInfo(videoTrack);\n      pipeline.captionStream.reset();\n      if (!options.keepOriginalTimestamps) {\n        videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n      }\n    }\n\n    if (pipeline.timedMetadataTimestampRolloverStream) {\n      pipeline.timedMetadataTimestampRolloverStream.discontinuity();\n    }\n  };\n\n  this.setAudioAppendStart = function(timestamp) {\n    if (audioTrack) {\n      this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n    }\n  };\n\n  this.alignGopsWith = function(gopsToAlignWith) {\n    if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n      this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n    }\n  };\n\n  // feed incoming data to the front of the parsing pipeline\n  this.push = function(data) {\n    if (hasFlushed) {\n      var isAac = isLikelyAacData(data);\n\n      if (isAac && this.transmuxPipeline_.type !== 'aac') {\n        this.setupAacPipeline();\n      } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n        this.setupTsPipeline();\n      }\n      hasFlushed = false;\n    }\n    this.transmuxPipeline_.headOfPipeline.push(data);\n  };\n\n  // flush any buffered data\n  this.flush = function() {\n      hasFlushed = true;\n    // Start at the top of the pipeline and flush all pending work\n    this.transmuxPipeline_.headOfPipeline.flush();\n  };\n\n  // Caption data has to be reset when seeking outside buffered range\n  this.resetCaptions = function() {\n    if (this.transmuxPipeline_.captionStream) {\n      this.transmuxPipeline_.captionStream.reset();\n    }\n  };\n\n};\nTransmuxer.prototype = new Stream();\n\nmodule.exports = {\n  Transmuxer: Transmuxer,\n  VideoSegmentStream: VideoSegmentStream,\n  AudioSegmentStream: AudioSegmentStream,\n  AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n  VIDEO_PROPERTIES: VIDEO_PROPERTIES,\n  // exported for testing\n  generateVideoSegmentTimingInfo: generateVideoSegmentTimingInfo\n};\n","// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n  switch (args.length) {\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return fn.apply(that, args);\n};\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\n'use strict';\n\nvar ExpGolomb;\n\n/**\n * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n * scheme used by h264.\n */\nExpGolomb = function(workingData) {\n  var\n    // the number of bytes left to examine in workingData\n    workingBytesAvailable = workingData.byteLength,\n\n    // the current word being examined\n    workingWord = 0, // :uint\n\n    // the number of bits left to examine in the current word\n    workingBitsAvailable = 0; // :uint;\n\n  // ():uint\n  this.length = function() {\n    return (8 * workingBytesAvailable);\n  };\n\n  // ():uint\n  this.bitsAvailable = function() {\n    return (8 * workingBytesAvailable) + workingBitsAvailable;\n  };\n\n  // ():void\n  this.loadWord = function() {\n    var\n      position = workingData.byteLength - workingBytesAvailable,\n      workingBytes = new Uint8Array(4),\n      availableBytes = Math.min(4, workingBytesAvailable);\n\n    if (availableBytes === 0) {\n      throw new Error('no bytes available');\n    }\n\n    workingBytes.set(workingData.subarray(position,\n                                          position + availableBytes));\n    workingWord = new DataView(workingBytes.buffer).getUint32(0);\n\n    // track the amount of workingData that has been processed\n    workingBitsAvailable = availableBytes * 8;\n    workingBytesAvailable -= availableBytes;\n  };\n\n  // (count:int):void\n  this.skipBits = function(count) {\n    var skipBytes; // :int\n    if (workingBitsAvailable > count) {\n      workingWord          <<= count;\n      workingBitsAvailable -= count;\n    } else {\n      count -= workingBitsAvailable;\n      skipBytes = Math.floor(count / 8);\n\n      count -= (skipBytes * 8);\n      workingBytesAvailable -= skipBytes;\n\n      this.loadWord();\n\n      workingWord <<= count;\n      workingBitsAvailable -= count;\n    }\n  };\n\n  // (size:int):uint\n  this.readBits = function(size) {\n    var\n      bits = Math.min(workingBitsAvailable, size), // :uint\n      valu = workingWord >>> (32 - bits); // :uint\n    // if size > 31, handle error\n    workingBitsAvailable -= bits;\n    if (workingBitsAvailable > 0) {\n      workingWord <<= bits;\n    } else if (workingBytesAvailable > 0) {\n      this.loadWord();\n    }\n\n    bits = size - bits;\n    if (bits > 0) {\n      return valu << bits | this.readBits(bits);\n    }\n    return valu;\n  };\n\n  // ():uint\n  this.skipLeadingZeros = function() {\n    var leadingZeroCount; // :uint\n    for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n      if ((workingWord & (0x80000000 >>> leadingZeroCount)) !== 0) {\n        // the first bit of working word is 1\n        workingWord <<= leadingZeroCount;\n        workingBitsAvailable -= leadingZeroCount;\n        return leadingZeroCount;\n      }\n    }\n\n    // we exhausted workingWord and still have not found a 1\n    this.loadWord();\n    return leadingZeroCount + this.skipLeadingZeros();\n  };\n\n  // ():void\n  this.skipUnsignedExpGolomb = function() {\n    this.skipBits(1 + this.skipLeadingZeros());\n  };\n\n  // ():void\n  this.skipExpGolomb = function() {\n    this.skipBits(1 + this.skipLeadingZeros());\n  };\n\n  // ():uint\n  this.readUnsignedExpGolomb = function() {\n    var clz = this.skipLeadingZeros(); // :uint\n    return this.readBits(clz + 1) - 1;\n  };\n\n  // ():int\n  this.readExpGolomb = function() {\n    var valu = this.readUnsignedExpGolomb(); // :int\n    if (0x01 & valu) {\n      // the number is odd if the low order bit is set\n      return (1 + valu) >>> 1; // add 1 to make it even, and divide by 2\n    }\n    return -1 * (valu >>> 1); // divide by two then make it negative\n  };\n\n  // Some convenience functions\n  // :Boolean\n  this.readBoolean = function() {\n    return this.readBits(1) === 1;\n  };\n\n  // ():int\n  this.readUnsignedByte = function() {\n    return this.readBits(8);\n  };\n\n  this.loadWord();\n};\n\nmodule.exports = ExpGolomb;\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","// check on default Array iterator\nvar Iterators = require('./_iterators');\nvar ITERATOR = require('./_wks')('iterator');\nvar ArrayProto = Array.prototype;\n\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar\n  ONE_SECOND_IN_TS = 90000, // 90kHz clock\n  secondsToVideoTs,\n  secondsToAudioTs,\n  videoTsToSeconds,\n  audioTsToSeconds,\n  audioTsToVideoTs,\n  videoTsToAudioTs;\n\nsecondsToVideoTs = function(seconds) {\n  return seconds * ONE_SECOND_IN_TS;\n};\n\nsecondsToAudioTs = function(seconds, sampleRate) {\n  return seconds * sampleRate;\n};\n\nvideoTsToSeconds = function(timestamp) {\n  return timestamp / ONE_SECOND_IN_TS;\n};\n\naudioTsToSeconds = function(timestamp, sampleRate) {\n  return timestamp / sampleRate;\n};\n\naudioTsToVideoTs = function(timestamp, sampleRate) {\n  return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n};\n\nvideoTsToAudioTs = function(timestamp, sampleRate) {\n  return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n};\n\nmodule.exports = {\n  secondsToVideoTs: secondsToVideoTs,\n  secondsToAudioTs: secondsToAudioTs,\n  videoTsToSeconds: videoTsToSeconds,\n  audioTsToSeconds: audioTsToSeconds,\n  audioTsToVideoTs: audioTsToVideoTs,\n  videoTsToAudioTs: videoTsToAudioTs\n};\n","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n","/*!\n  * vue-script2 v2.1.0\n  * (c) 2016-2019 Greg Slepak\n  * @license MIT License\n  */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.VueScript2 = factory());\n}(this, function () { 'use strict';\n\n  var Script2 = {\n    installed: false,\n    p: Promise.resolve(),\n    version: '2.1.0',\n    // grunt will overwrite to match package.json\n    loaded: {},\n\n    // keys are the scripts that is loading or loaded, values are promises\n    install(Vue) {\n      if (Script2.installed) return;\n      var customAttrs = ['unload']; // from: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script\n      // 'async' and 'defer' don't allow document.write according to:\n      // http://www.html5rocks.com/en/tutorials/speed/script-loading/\n      // we ignore 'defer' and handle 'async' specially.\n\n      var props = customAttrs.concat(['src', 'type', 'async', 'integrity', 'text', 'crossorigin']);\n      Vue.component('script2', {\n        props: props,\n\n        // <slot> is important, see: http://vuejs.org/guide/components.html#Named-Slots\n        // template: '<div style=\"display:none\"><slot></slot></div>',\n        // NOTE: Instead of using `template` we can use the `render` function like so:\n        render(h) {\n          return h('div', {\n            style: 'display:none'\n          }, this.$slots.default);\n        },\n\n        mounted() {\n          var parent = this.$el.parentElement;\n\n          if (!this.src) {\n            Script2.p = Script2.p.then(() => {\n              var s = document.createElement('script');\n              var h = this.$el.innerHTML;\n              h = h.replace(/&lt;/gi, '<').replace(/&gt;/gi, '>').replace(/&amp;/gi, '&');\n              s.type = 'text/javascript';\n              s.appendChild(document.createTextNode(h));\n              parent.appendChild(s);\n              this.$emit('loaded'); // any other proper way to do this or emit error?\n            });\n          } else {\n            var opts = _.omitBy(_.pick(this, props), _.isUndefined);\n\n            opts.parent = parent; // this syntax results in an implicit return\n\n            var load = () => Script2.load(this.src, opts).then(() => this.$emit('loaded'), err => this.$emit('error', err));\n\n            _.isUndefined(this.async) || this.async === 'false' ? Script2.p = Script2.p.then(load) // serialize execution\n            : load(); // inject immediately\n          } // see: https://vuejs.org/v2/guide/migration.html#ready-replaced\n\n\n          this.$nextTick(() => {\n            // code that assumes this.$el is in-document\n            // NOTE: we could've done this.$el.remove(), but IE sucks, see:\n            //       https://github.com/taoeffect/vue-script2/pull/17\n            this.$el.parentElement.removeChild(this.$el); // remove dummy template <div>\n          });\n        },\n\n        destroyed() {\n          if (this.unload) {\n            new Function(this.unload)(); // eslint-disable-line\n\n            delete Script2.loaded[this.src];\n          }\n        }\n\n      });\n      Script2.installed = true;\n    },\n\n    load(src) {\n      let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        parent: document.head\n      };\n\n      if (!Script2.loaded[src]) {\n        Script2.loaded[src] = new Promise((resolve, reject) => {\n          var s = document.createElement('script'); // omit the special options that Script2 supports\n\n          _.defaults2(s, _.omit(opts, ['unload', 'parent']), {\n            type: 'text/javascript'\n          }); // according to: http://www.html5rocks.com/en/tutorials/speed/script-loading/\n          // async does not like 'document.write' usage, which we & vue.js make\n          // heavy use of based on the SPA style. Also, async can result\n          // in code getting executed out of order from how it is inlined on the page.\n\n\n          s.async = false; // therefore set this to false\n\n          s.src = src; // crossorigin in HTML and crossOrigin in the DOM per HTML spec\n          // https://html.spec.whatwg.org/multipage/embedded-content.html#dom-img-crossorigin\n\n          if (opts.crossorigin) {\n            s.crossOrigin = opts.crossorigin;\n          } // inspiration from: https://github.com/eldargab/load-script/blob/master/index.js\n          // and: https://github.com/ded/script.js/blob/master/src/script.js#L70-L82\n\n\n          s.onload = () => resolve(src); // IE should now support onerror and onload. If necessary, take a look\n          // at this to add older IE support: http://stackoverflow.com/a/4845802/1781435\n\n\n          s.onerror = () => reject(new Error(src));\n\n          opts.parent.appendChild(s);\n        });\n      }\n\n      return Script2.loaded[src];\n    }\n\n  };\n  var _ = {\n    isUndefined(x) {\n      return x === undefined;\n    },\n\n    pick(o, props) {\n      var x = {};\n      props.forEach(k => {\n        x[k] = o[k];\n      });\n      return x;\n    },\n\n    omit(o, props) {\n      var x = {};\n      Object.keys(o).forEach(k => {\n        if (props.indexOf(k) === -1) x[k] = o[k];\n      });\n      return x;\n    },\n\n    omitBy(o, pred) {\n      var x = {};\n      Object.keys(o).forEach(k => {\n        if (!pred(o[k])) x[k] = o[k];\n      });\n      return x;\n    },\n\n    // custom defaults function suited to our specific purpose\n    defaults2(o) {\n      for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        sources[_key - 1] = arguments[_key];\n      }\n\n      sources.forEach(s => {\n        Object.keys(s).forEach(k => {\n          if (_.isUndefined(o[k]) || o[k] === '') o[k] = s[k];\n        });\n      });\n    }\n\n  };\n\n  return Script2;\n\n}));\n","/*! videojs-resolution-switcher - 2020-9-6\r\n * Copyright (c) 2016 Kasper Moskwiak\r\n * Modified by Pierre Kraft, Thelak\r\n * Licensed under the Apache-2.0 license. */\r\n\r\nmodule.exports = function(videojs) {\r\n\r\n\r\n    let defaults = {},\r\n        videoJsResolutionSwitcher,\r\n        currentResolution = {}, // stores current resolution\r\n        menuItemsHolder = {}; // stores menuItems\r\n\r\n    function setSourcesSanitized(player, sources, label, customSourcePicker) {\r\n        currentResolution = {\r\n            label: label,\r\n            sources: sources\r\n        };\r\n        if(typeof customSourcePicker === 'function'){\r\n            return customSourcePicker(player, sources, label);\r\n        }\r\n        player.src(sources.map(function(src) {\r\n            return {src: src.src, type: src.type, res: src.res};\r\n        }));\r\n        return player;\r\n    }\r\n\r\n    /*\r\n     * Resolution menu item\r\n     */\r\n    let MenuItem = videojs.getComponent('MenuItem');\r\n    let ResolutionMenuItem = videojs.extend(MenuItem, {\r\n        constructor: function (player, options, onClickListener, label) {\r\n            this.onClickListener = onClickListener;\r\n            this.label = label;\r\n            // Sets this.player_, this.options_ and initializes the component\r\n            MenuItem.call(this, player, options);\r\n            this.src = options.src;\r\n\r\n            this.on('click', this.onClick);\r\n            this.on('touchstart', this.onClick);\r\n\r\n            if (options.initialySelected) {\r\n                this.showAsLabel();\r\n                this.selected(true);\r\n\r\n                this.addClass('vjs-selected');\r\n            }\r\n        },\r\n        showAsLabel: function () {\r\n            // Change menu button label to the label of this item if the menu button label is provided\r\n            if (this.label) {\r\n                this.label.innerHTML = this.options_.label;\r\n            }\r\n        },\r\n        onClick: function (customSourcePicker) {\r\n            this.onClickListener(this);\r\n            // Remember player state\r\n            let currentTime = this.player_.currentTime();\r\n            let isPaused = this.player_.paused();\r\n            let playbackRate = this.player_.playbackRate();\r\n            let posterImageSrc = this.player_.options_.poster;\r\n            this.showAsLabel();\r\n            // add .current class\r\n            this.addClass('vjs-selected');\r\n\r\n            // Hide bigPlayButton\r\n            if (!isPaused) {\r\n                this.player_.bigPlayButton.hide();\r\n                if (posterImageSrc) {\r\n                    this.player_.posterImage.setSrc('')\r\n                }\r\n            } else {\r\n                this.player_.bigPlayButton.show();\r\n            }\r\n            if (typeof customSourcePicker !== 'function' &&\r\n                typeof this.options_.customSourcePicker === 'function') {\r\n                customSourcePicker = this.options_.customSourcePicker;\r\n            }\r\n            // Change player source and wait for loadeddata event, then play video\r\n            // loadedmetadata doesn't work right now for flash.\r\n            // Probably because of https://github.com/videojs/video-js-swf/issues/124\r\n            // If player preload is 'none' and then loadeddata not fired. So, we need timeupdate event for seek handle (timeupdate doesn't work properly with flash)\r\n            let handleSeekEvent = 'loadeddata';\r\n            if (this.player_.techName_ !== 'Youtube' && this.player_.preload() === 'none' && this.player_.techName_ !== 'Flash') {\r\n                handleSeekEvent = 'timeupdate';\r\n            }\r\n            setSourcesSanitized(this.player_, this.src, this.options_.label, customSourcePicker).one(handleSeekEvent, function () {\r\n                this.player_.currentTime(currentTime);\r\n                // this.player_.handleTechSeeked_();\r\n                if (!isPaused) {\r\n                    // Start playing and hide loadingSpinner (flash issue ?)\r\n                    this.player_.playbackRate(playbackRate);\r\n                    this.player_.play();\r\n                    this.player_.posterImage.setSrc(posterImageSrc)\r\n                }\r\n                this.player_.trigger('resolutionchange');\r\n            });\r\n        }\r\n    });\r\n\r\n\r\n    /*\r\n     * Resolution menu button\r\n     */\r\n    let MenuButton = videojs.getComponent('MenuButton');\r\n    let ResolutionMenuButton = videojs.extend(MenuButton, {\r\n        constructor: function (player, options, settings, label) {\r\n            this.sources = options.sources;\r\n            this.label = label;\r\n            this.label.innerHTML = options.initialySelectedLabel;\r\n            // Sets this.player_, this.options_ and initializes the component\r\n            MenuButton.call(this, player, options, settings);\r\n            this.controlText('Quality');\r\n\r\n            if (settings.dynamicLabel) {\r\n                this.el().appendChild(label);\r\n            } else {\r\n                let staticLabel = document.createElement('span');\r\n                videojs.dom.appendContent(staticLabel, options.initialySelectedLabel);\r\n                videojs.dom.addClass(staticLabel, 'vjs-resolution-button-staticlabel');\r\n                this.el().appendChild(staticLabel);\r\n            }\r\n        },\r\n        createItems: function () {\r\n            let menuItems = [];\r\n            let labels = (this.sources && this.sources.label) || {};\r\n            let onClickUnselectOthers = function (clickedItem) {\r\n                menuItems.map(function (item) {\r\n                    item.selected(item === clickedItem);\r\n                    item.removeClass('vjs-selected');\r\n                });\r\n            };\r\n\r\n            for (const key in labels) {\r\n                if (labels.hasOwnProperty(key)) {\r\n                    menuItems.push(new ResolutionMenuItem(\r\n                        this.player_,\r\n                        {\r\n                            label: key,\r\n                            src: labels[key],\r\n                            initialySelected: key === this.options_.initialySelectedLabel,\r\n                            customSourcePicker: this.options_.customSourcePicker\r\n                        },\r\n                        onClickUnselectOthers,\r\n                        this.label));\r\n                    // Store menu item for API calls\r\n                    menuItemsHolder[key] = menuItems[menuItems.length - 1];\r\n                }\r\n            }\r\n            return menuItems;\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Initialize the plugin.\r\n     * @param {object} [options] configuration for the plugin\r\n     */\r\n    videoJsResolutionSwitcher = function(options) {\r\n        let settings = videojs.mergeOptions(defaults, options),\r\n            player = this,\r\n            label = document.createElement('span'),\r\n            groupedSrc = {};\r\n\r\n        videojs.dom.addClass(label, 'vjs-resolution-button-label');\r\n        this.el().appendChild(label);\r\n\r\n        /**\r\n         * Updates player sources or returns current source URL\r\n         * @param   {Array}  [src] array of sources [{src: '', type: '', label: '', res: ''}]\r\n         * @returns {Object|String|Array} videojs player object if used as setter or current source URL, object, or array of sources\r\n         */\r\n        player.updateSrc = function(src){\r\n            //Return current src if src is not given\r\n            if(!src){ return player.src(); }\r\n            // Dispose old resolution menu button before adding new sources\r\n            if(player.controlBar.resolutionSwitcher){\r\n                player.controlBar.resolutionSwitcher.dispose();\r\n                delete player.controlBar.resolutionSwitcher;\r\n            }\r\n            //Sort sources\r\n            src = src.sort(compareResolutions);\r\n            groupedSrc = bucketSources(src);\r\n            let choosen = chooseSrc(groupedSrc, src);\r\n            let menuButton = new ResolutionMenuButton(player, {\r\n                sources: groupedSrc,\r\n                initialySelectedLabel: choosen.label,\r\n                initialySelectedRes: choosen.res,\r\n                customSourcePicker: settings.customSourcePicker\r\n            }, settings, label);\r\n            videojs.dom.addClass(menuButton.el(), 'vjs-resolution-button');\r\n            player.controlBar.resolutionSwitcher = player.controlBar.el_.insertBefore(menuButton.el_, player.controlBar.getChild('fullscreenToggle').el_);\r\n            player.controlBar.resolutionSwitcher.dispose = function(){\r\n                this.parentNode.removeChild(this);\r\n            };\r\n            return setSourcesSanitized(player, choosen.sources, choosen.label);\r\n        };\r\n\r\n        /**\r\n         * Returns current resolution or sets one when label is specified\r\n         * @param {String}   [label]         label name\r\n         * @param {Function} [customSourcePicker] custom function to choose source. Takes 3 arguments: player, sources, label. Must return player object.\r\n         * @returns {Object}   current resolution object {label: '', sources: []} if used as getter or player object if used as setter\r\n         */\r\n        player.currentResolution = function(label, customSourcePicker){\r\n            console.log('currentResolution: ', label)\r\n            if(label == null) { return currentResolution; }\r\n            console.log('currentResolution: ', menuItemsHolder[label])\r\n            if(menuItemsHolder[label] != null){\r\n                menuItemsHolder[label].onClick(customSourcePicker);\r\n            }\r\n            return player;\r\n        };\r\n\r\n        /**\r\n         * Returns grouped sources by label, resolution and type\r\n         * @returns {Object} grouped sources: { label: { key: [] }, res: { key: [] }, type: { key: [] } }\r\n         */\r\n        player.getGroupedSrc = function(){\r\n            return groupedSrc;\r\n        };\r\n\r\n        /**\r\n         * Method used for sorting list of sources\r\n         * @param   {Object} a - source object with res property\r\n         * @param   {Object} b - source object with res property\r\n         * @returns {Number} result of comparation\r\n         */\r\n        function compareResolutions(a, b){\r\n            if(!a.res || !b.res){ return 0; }\r\n            return (+b.res)-(+a.res);\r\n        }\r\n\r\n        /**\r\n         * Group sources by label, resolution and type\r\n         * @param   {Array}  src Array of sources\r\n         * @returns {Object} grouped sources: { label: { key: [] }, res: { key: [] }, type: { key: [] } }\r\n         */\r\n        function bucketSources(src){\r\n            let resolutions = {\r\n                label: {},\r\n                res: {},\r\n                type: {}\r\n            };\r\n            src.map(function(source) {\r\n                initResolutionKey(resolutions, 'label', source);\r\n                initResolutionKey(resolutions, 'res', source);\r\n                initResolutionKey(resolutions, 'type', source);\r\n\r\n                appendSourceToKey(resolutions, 'label', source);\r\n                appendSourceToKey(resolutions, 'res', source);\r\n                appendSourceToKey(resolutions, 'type', source);\r\n            });\r\n            return resolutions;\r\n        }\r\n\r\n        function initResolutionKey(resolutions, key, source) {\r\n            if(resolutions[key][source[key]] == null) {\r\n                resolutions[key][source[key]] = [];\r\n            }\r\n        }\r\n\r\n        function appendSourceToKey(resolutions, key, source) {\r\n            resolutions[key][source[key]].push(source);\r\n        }\r\n\r\n        /**\r\n         * Choose src if option.default is specified\r\n         * @param   {Object} groupedSrc {res: { key: [] }}\r\n         * @param   {Array}  src Array of sources sorted by resolution used to find high and low res\r\n         * @returns {Object} {res: string, sources: []}\r\n         */\r\n        function chooseSrc(groupedSrc, src){\r\n            let selectedRes = settings['default']; // use array access as default is a reserved keyword\r\n            let selectedLabel = '';\r\n            if (selectedRes === 'high') {\r\n                selectedRes = src[0].res;\r\n                selectedLabel = src[0].label;\r\n            } else if (selectedRes === 'low' || selectedRes == null || !groupedSrc.res[selectedRes]) {\r\n                // Select low-res if default is low or not set\r\n                selectedRes = src[src.length - 1].res;\r\n                selectedLabel = src[src.length -1].label;\r\n            } else if (groupedSrc.res[selectedRes]) {\r\n                selectedLabel = groupedSrc.res[selectedRes][0].label;\r\n            }\r\n\r\n            return {res: selectedRes, label: selectedLabel, sources: groupedSrc.res[selectedRes]};\r\n        }\r\n\r\n        function initResolutionForYt(player){\r\n            // Init resolution\r\n            player.tech_.ytPlayer.setPlaybackQuality('default');\r\n\r\n            // Capture events\r\n            player.tech_.ytPlayer.addEventListener('onPlaybackQualityChange', function(){\r\n                player.trigger('resolutionchange');\r\n            });\r\n\r\n            // We must wait for play event\r\n            player.one('play', function(){\r\n                let qualities = player.tech_.ytPlayer.getAvailableQualityLevels();\r\n                // Map youtube qualities names\r\n                let _yts = {\r\n                    highres: {res: 1080, label: '1080', yt: 'highres'},\r\n                    hd1080: {res: 1080, label: '1080', yt: 'hd1080'},\r\n                    hd720: {res: 720, label: '720', yt: 'hd720'},\r\n                    large: {res: 480, label: '480', yt: 'large'},\r\n                    medium: {res: 360, label: '360', yt: 'medium'},\r\n                    small: {res: 240, label: '240', yt: 'small'},\r\n                    tiny: {res: 144, label: '144', yt: 'tiny'},\r\n                    auto: {res: 0, label: 'auto', yt: 'default'}\r\n                };\r\n\r\n                let _sources = [];\r\n\r\n                qualities.map(function(q){\r\n                    _sources.push({\r\n                        src: player.src().src,\r\n                        type: player.src().type,\r\n                        label: _yts[q].label,\r\n                        res: _yts[q].res,\r\n                        _yt: _yts[q].yt\r\n                    });\r\n                });\r\n\r\n                groupedSrc = bucketSources(_sources);\r\n\r\n                // Overwrite defualt sourcePicer function\r\n                let _customSourcePicker = function (_player, _sources, _label) {\r\n                    player.tech_.ytPlayer.setPlaybackQuality(_sources[0]._yt);\r\n                    return player;\r\n                };\r\n\r\n                let choosen = {label: 'auto', res: 0, sources: groupedSrc.label.auto};\r\n                let menuButton = new ResolutionMenuButton(player, {\r\n                    sources: groupedSrc,\r\n                    initialySelectedLabel: choosen.label,\r\n                    initialySelectedRes: choosen.res,\r\n                    customSourcePicker: _customSourcePicker\r\n                }, settings, label);\r\n\r\n                menuButton.el().classList.add('vjs-resolution-button');\r\n                player.controlBar.resolutionSwitcher = player.controlBar.addChild(menuButton);\r\n            });\r\n        }\r\n\r\n        player.ready(function(){\r\n            if(player.options_.sources.length > 1){\r\n                // tech: Html5 and Flash\r\n                // Create resolution switcher for videos form <source> tag inside <video>\r\n                player.updateSrc(player.options_.sources);\r\n            }\r\n\r\n            if(player.techName_ === 'Youtube'){\r\n                // tech: YouTube\r\n                initResolutionForYt(player);\r\n            }\r\n        });\r\n\r\n    };\r\n\r\n    // register the plugin\r\n    let registerPlugin = videojs.registerPlugin || videojs.plugin;\r\n    registerPlugin('videoJsResolutionSwitcher', videoJsResolutionSwitcher);\r\n    return videojs;\r\n};\r\n","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Utilities to detect basic properties and metadata about TS Segments.\n */\n'use strict';\n\nvar StreamTypes = require('./stream-types.js');\n\nvar parsePid = function(packet) {\n  var pid = packet[1] & 0x1f;\n  pid <<= 8;\n  pid |= packet[2];\n  return pid;\n};\n\nvar parsePayloadUnitStartIndicator = function(packet) {\n  return !!(packet[1] & 0x40);\n};\n\nvar parseAdaptionField = function(packet) {\n  var offset = 0;\n  // if an adaption field is present, its length is specified by the\n  // fifth byte of the TS packet header. The adaptation field is\n  // used to add stuffing to PES packets that don't fill a complete\n  // TS packet, and to specify some forms of timing and control data\n  // that we do not currently use.\n  if (((packet[3] & 0x30) >>> 4) > 0x01) {\n    offset += packet[4] + 1;\n  }\n  return offset;\n};\n\nvar parseType = function(packet, pmtPid) {\n  var pid = parsePid(packet);\n  if (pid === 0) {\n    return 'pat';\n  } else if (pid === pmtPid) {\n    return 'pmt';\n  } else if (pmtPid) {\n    return 'pes';\n  }\n  return null;\n};\n\nvar parsePat = function(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    offset += packet[offset] + 1;\n  }\n\n  return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n};\n\nvar parsePmt = function(packet) {\n  var programMapTable = {};\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var payloadOffset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    payloadOffset += packet[payloadOffset] + 1;\n  }\n\n  // PMTs can be sent ahead of the time when they should actually\n  // take effect. We don't believe this should ever be the case\n  // for HLS but we'll ignore \"forward\" PMT declarations if we see\n  // them. Future PMT declarations have the current_next_indicator\n  // set to zero.\n  if (!(packet[payloadOffset + 5] & 0x01)) {\n    return;\n  }\n\n  var sectionLength, tableEnd, programInfoLength;\n  // the mapping table ends at the end of the current section\n  sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n  tableEnd = 3 + sectionLength - 4;\n\n  // to determine where the table is, we have to figure out how\n  // long the program info descriptors are\n  programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11];\n\n  // advance the offset to the first entry in the mapping table\n  var offset = 12 + programInfoLength;\n  while (offset < tableEnd) {\n    var i = payloadOffset + offset;\n    // add an entry that maps the elementary_pid to the stream_type\n    programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i];\n\n    // move to the next table entry\n    // skip past the elementary stream descriptors, if present\n    offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n  }\n  return programMapTable;\n};\n\nvar parsePesType = function(packet, programMapTable) {\n  var pid = parsePid(packet);\n  var type = programMapTable[pid];\n  switch (type) {\n    case StreamTypes.H264_STREAM_TYPE:\n      return 'video';\n    case StreamTypes.ADTS_STREAM_TYPE:\n      return 'audio';\n    case StreamTypes.METADATA_STREAM_TYPE:\n      return 'timed-metadata';\n    default:\n      return null;\n  }\n};\n\nvar parsePesTime = function(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  if (!pusi) {\n    return null;\n  }\n\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (offset >= packet.byteLength) {\n    // From the H 222.0 MPEG-TS spec\n    // \"For transport stream packets carrying PES packets, stuffing is needed when there\n    //  is insufficient PES packet data to completely fill the transport stream packet\n    //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n    //  the sum of the lengths of the data elements in it, so that the payload bytes\n    //  remaining after the adaptation field exactly accommodates the available PES packet\n    //  data.\"\n    //\n    // If the offset is >= the length of the packet, then the packet contains no data\n    // and instead is just adaption field stuffing bytes\n    return null;\n  }\n\n  var pes = null;\n  var ptsDtsFlags;\n\n  // PES packets may be annotated with a PTS value, or a PTS value\n  // and a DTS value. Determine what combination of values is\n  // available to work with.\n  ptsDtsFlags = packet[offset + 7];\n\n  // PTS and DTS are normally stored as a 33-bit number.  Javascript\n  // performs all bitwise operations on 32-bit integers but javascript\n  // supports a much greater range (52-bits) of integer using standard\n  // mathematical operations.\n  // We construct a 31-bit value using bitwise operators over the 31\n  // most significant bits and then multiply by 4 (equal to a left-shift\n  // of 2) before we add the final 2 least significant bits of the\n  // timestamp (equal to an OR.)\n  if (ptsDtsFlags & 0xC0) {\n    pes = {};\n    // the PTS and DTS are not written out directly. For information\n    // on how they are encoded, see\n    // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n    pes.pts = (packet[offset + 9] & 0x0E) << 27 |\n      (packet[offset + 10] & 0xFF) << 20 |\n      (packet[offset + 11] & 0xFE) << 12 |\n      (packet[offset + 12] & 0xFF) <<  5 |\n      (packet[offset + 13] & 0xFE) >>>  3;\n    pes.pts *= 4; // Left shift by 2\n    pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n    pes.dts = pes.pts;\n    if (ptsDtsFlags & 0x40) {\n      pes.dts = (packet[offset + 14] & 0x0E) << 27 |\n        (packet[offset + 15] & 0xFF) << 20 |\n        (packet[offset + 16] & 0xFE) << 12 |\n        (packet[offset + 17] & 0xFF) << 5 |\n        (packet[offset + 18] & 0xFE) >>> 3;\n      pes.dts *= 4; // Left shift by 2\n      pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n    }\n  }\n  return pes;\n};\n\nvar parseNalUnitType = function(type) {\n  switch (type) {\n    case 0x05:\n      return 'slice_layer_without_partitioning_rbsp_idr';\n    case 0x06:\n      return 'sei_rbsp';\n    case 0x07:\n      return 'seq_parameter_set_rbsp';\n    case 0x08:\n      return 'pic_parameter_set_rbsp';\n    case 0x09:\n      return 'access_unit_delimiter_rbsp';\n    default:\n      return null;\n  }\n};\n\nvar videoPacketContainsKeyFrame = function(packet) {\n  var offset = 4 + parseAdaptionField(packet);\n  var frameBuffer = packet.subarray(offset);\n  var frameI = 0;\n  var frameSyncPoint = 0;\n  var foundKeyFrame = false;\n  var nalType;\n\n  // advance the sync point to a NAL start, if necessary\n  for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n    if (frameBuffer[frameSyncPoint + 2] === 1) {\n      // the sync point is properly aligned\n      frameI = frameSyncPoint + 5;\n      break;\n    }\n  }\n\n  while (frameI < frameBuffer.byteLength) {\n    // look at the current byte to determine if we've hit the end of\n    // a NAL unit boundary\n    switch (frameBuffer[frameI]) {\n    case 0:\n      // skip past non-sync sequences\n      if (frameBuffer[frameI - 1] !== 0) {\n        frameI += 2;\n        break;\n      } else if (frameBuffer[frameI - 2] !== 0) {\n        frameI++;\n        break;\n      }\n\n      if (frameSyncPoint + 3 !== frameI - 2) {\n        nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n        if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n          foundKeyFrame = true;\n        }\n      }\n\n      // drop trailing zeroes\n      do {\n        frameI++;\n      } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n      frameSyncPoint = frameI - 2;\n      frameI += 3;\n      break;\n    case 1:\n      // skip past non-sync sequences\n      if (frameBuffer[frameI - 1] !== 0 ||\n          frameBuffer[frameI - 2] !== 0) {\n        frameI += 3;\n        break;\n      }\n\n      nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n      if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n        foundKeyFrame = true;\n      }\n      frameSyncPoint = frameI - 2;\n      frameI += 3;\n      break;\n    default:\n      // the current byte isn't a one or zero, so it cannot be part\n      // of a sync sequence\n      frameI += 3;\n      break;\n    }\n  }\n  frameBuffer = frameBuffer.subarray(frameSyncPoint);\n  frameI -= frameSyncPoint;\n  frameSyncPoint = 0;\n  // parse the final nal\n  if (frameBuffer && frameBuffer.byteLength > 3) {\n    nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n    if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n      foundKeyFrame = true;\n    }\n  }\n\n  return foundKeyFrame;\n};\n\n\nmodule.exports = {\n  parseType: parseType,\n  parsePat: parsePat,\n  parsePmt: parsePmt,\n  parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n  parsePesType: parsePesType,\n  parsePesTime: parsePesTime,\n  videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n};\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * A lightweight readable stream implemention that handles event dispatching.\n * Objects that inherit from streams should call init in their constructors.\n */\n'use strict';\n\nvar Stream = function() {\n  this.init = function() {\n    var listeners = {};\n    /**\n     * Add a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} the callback to be invoked when an event of\n     * the specified type occurs\n     */\n    this.on = function(type, listener) {\n      if (!listeners[type]) {\n        listeners[type] = [];\n      }\n      listeners[type] = listeners[type].concat(listener);\n    };\n    /**\n     * Remove a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} a function previously registered for this\n     * type of event through `on`\n     */\n    this.off = function(type, listener) {\n      var index;\n      if (!listeners[type]) {\n        return false;\n      }\n      index = listeners[type].indexOf(listener);\n      listeners[type] = listeners[type].slice();\n      listeners[type].splice(index, 1);\n      return index > -1;\n    };\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     * @param type {string} the event name\n     */\n    this.trigger = function(type) {\n      var callbacks, i, length, args;\n      callbacks = listeners[type];\n      if (!callbacks) {\n        return;\n      }\n      // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n      if (arguments.length === 2) {\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        args = [];\n        i = arguments.length;\n        for (i = 1; i < arguments.length; ++i) {\n          args.push(arguments[i]);\n        }\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].apply(this, args);\n        }\n      }\n    };\n    /**\n     * Destroys the stream and cleans up.\n     */\n    this.dispose = function() {\n      listeners = {};\n    };\n  };\n};\n\n/**\n * Forwards all `data` events on this stream to the destination stream. The\n * destination stream should provide a method `push` to receive the data\n * events as they arrive.\n * @param destination {stream} the stream that will receive all `data` events\n * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n *                            when the current stream emits a 'done' event\n * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n */\nStream.prototype.pipe = function(destination) {\n  this.on('data', function(data) {\n    destination.push(data);\n  });\n\n  this.on('done', function(flushSource) {\n    destination.flush(flushSource);\n  });\n\n  return destination;\n};\n\n// Default stream functions that are expected to be overridden to perform\n// actual work. These are provided by the prototype as a sort of no-op\n// implementation so that we don't have to check for their existence in the\n// `pipe` function above.\nStream.prototype.push = function(data) {\n  this.trigger('data', data);\n};\n\nStream.prototype.flush = function(flushSource) {\n  this.trigger('done', flushSource);\n};\n\nmodule.exports = Stream;\n","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var ctx = require('./_ctx');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar anObject = require('./_an-object');\nvar toLength = require('./_to-length');\nvar getIterFn = require('./core.get-iterator-method');\nvar BREAK = {};\nvar RETURN = {};\nvar exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\nexports.BREAK = BREAK;\nexports.RETURN = RETURN;\n","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n","'use strict';\n\nvar bind = require('function-bind');\n\nvar GetIntrinsic = require('../GetIntrinsic');\n\nvar $Function = GetIntrinsic('%Function%');\nvar $apply = $Function.apply;\nvar $call = $Function.call;\n\nmodule.exports = function callBind() {\n\treturn bind.apply($call, arguments);\n};\n\nmodule.exports.apply = function applyBind() {\n\treturn bind.apply($apply, arguments);\n};\n","module.exports = function isPrimitive(value) {\n\treturn value === null || (typeof value !== 'function' && typeof value !== 'object');\n};\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Reads in-band caption information from a video elementary\n * stream. Captions must follow the CEA-708 standard for injection\n * into an MPEG-2 transport streams.\n * @see https://en.wikipedia.org/wiki/CEA-708\n * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n */\n\n'use strict';\n\n// -----------------\n// Link To Transport\n// -----------------\n\nvar Stream = require('../utils/stream');\nvar cea708Parser = require('../tools/caption-packet-parser');\n\nvar CaptionStream = function() {\n\n  CaptionStream.prototype.init.call(this);\n\n  this.captionPackets_ = [];\n\n  this.ccStreams_ = [\n    new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n    new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n  ];\n\n  this.reset();\n\n  // forward data and done events from CCs to this CaptionStream\n  this.ccStreams_.forEach(function(cc) {\n    cc.on('data', this.trigger.bind(this, 'data'));\n    cc.on('done', this.trigger.bind(this, 'done'));\n  }, this);\n\n};\n\nCaptionStream.prototype = new Stream();\nCaptionStream.prototype.push = function(event) {\n  var sei, userData, newCaptionPackets;\n\n  // only examine SEI NALs\n  if (event.nalUnitType !== 'sei_rbsp') {\n    return;\n  }\n\n  // parse the sei\n  sei = cea708Parser.parseSei(event.escapedRBSP);\n\n  // ignore everything but user_data_registered_itu_t_t35\n  if (sei.payloadType !== cea708Parser.USER_DATA_REGISTERED_ITU_T_T35) {\n    return;\n  }\n\n  // parse out the user data payload\n  userData = cea708Parser.parseUserData(sei);\n\n  // ignore unrecognized userData\n  if (!userData) {\n    return;\n  }\n\n  // Sometimes, the same segment # will be downloaded twice. To stop the\n  // caption data from being processed twice, we track the latest dts we've\n  // received and ignore everything with a dts before that. However, since\n  // data for a specific dts can be split across packets on either side of\n  // a segment boundary, we need to make sure we *don't* ignore the packets\n  // from the *next* segment that have dts === this.latestDts_. By constantly\n  // tracking the number of packets received with dts === this.latestDts_, we\n  // know how many should be ignored once we start receiving duplicates.\n  if (event.dts < this.latestDts_) {\n    // We've started getting older data, so set the flag.\n    this.ignoreNextEqualDts_ = true;\n    return;\n  } else if ((event.dts === this.latestDts_) && (this.ignoreNextEqualDts_)) {\n    this.numSameDts_--;\n    if (!this.numSameDts_) {\n      // We've received the last duplicate packet, time to start processing again\n      this.ignoreNextEqualDts_ = false;\n    }\n    return;\n  }\n\n  // parse out CC data packets and save them for later\n  newCaptionPackets = cea708Parser.parseCaptionPackets(event.pts, userData);\n  this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n  if (this.latestDts_ !== event.dts) {\n    this.numSameDts_ = 0;\n  }\n  this.numSameDts_++;\n  this.latestDts_ = event.dts;\n};\n\nCaptionStream.prototype.flush = function() {\n  // make sure we actually parsed captions before proceeding\n  if (!this.captionPackets_.length) {\n    this.ccStreams_.forEach(function(cc) {\n      cc.flush();\n    }, this);\n    return;\n  }\n\n  // In Chrome, the Array#sort function is not stable so add a\n  // presortIndex that we can use to ensure we get a stable-sort\n  this.captionPackets_.forEach(function(elem, idx) {\n    elem.presortIndex = idx;\n  });\n\n  // sort caption byte-pairs based on their PTS values\n  this.captionPackets_.sort(function(a, b) {\n    if (a.pts === b.pts) {\n      return a.presortIndex - b.presortIndex;\n    }\n    return a.pts - b.pts;\n  });\n\n  this.captionPackets_.forEach(function(packet) {\n    if (packet.type < 2) {\n      // Dispatch packet to the right Cea608Stream\n      this.dispatchCea608Packet(packet);\n    }\n    // this is where an 'else' would go for a dispatching packets\n    // to a theoretical Cea708Stream that handles SERVICEn data\n  }, this);\n\n  this.captionPackets_.length = 0;\n  this.ccStreams_.forEach(function(cc) {\n    cc.flush();\n  }, this);\n  return;\n};\n\nCaptionStream.prototype.reset = function() {\n  this.latestDts_ = null;\n  this.ignoreNextEqualDts_ = false;\n  this.numSameDts_ = 0;\n  this.activeCea608Channel_ = [null, null];\n  this.ccStreams_.forEach(function(ccStream) {\n    ccStream.reset();\n  });\n};\n\n// From the CEA-608 spec:\n/*\n * When XDS sub-packets are interleaved with other services, the end of each sub-packet shall be followed\n * by a control pair to change to a different service. When any of the control codes from 0x10 to 0x1F is\n * used to begin a control code pair, it indicates the return to captioning or Text data. The control code pair\n * and subsequent data should then be processed according to the FCC rules. It may be necessary for the\n * line 21 data encoder to automatically insert a control code pair (i.e. RCL, RU2, RU3, RU4, RDC, or RTD)\n * to switch to captioning or Text.\n*/\n// With that in mind, we ignore any data between an XDS control code and a\n// subsequent closed-captioning control code.\nCaptionStream.prototype.dispatchCea608Packet = function(packet) {\n  // NOTE: packet.type is the CEA608 field\n  if (this.setsTextOrXDSActive(packet)) {\n    this.activeCea608Channel_[packet.type] = null;\n  } else if (this.setsChannel1Active(packet)) {\n    this.activeCea608Channel_[packet.type] = 0;\n  } else if (this.setsChannel2Active(packet)) {\n    this.activeCea608Channel_[packet.type] = 1;\n  }\n  if (this.activeCea608Channel_[packet.type] === null) {\n    // If we haven't received anything to set the active channel, or the\n    // packets are Text/XDS data, discard the data; we don't want jumbled\n    // captions\n    return;\n  }\n  this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n};\n\nCaptionStream.prototype.setsChannel1Active = function(packet) {\n  return ((packet.ccData & 0x7800) === 0x1000);\n};\nCaptionStream.prototype.setsChannel2Active = function(packet) {\n  return ((packet.ccData & 0x7800) === 0x1800);\n};\nCaptionStream.prototype.setsTextOrXDSActive = function(packet) {\n  return ((packet.ccData & 0x7100) === 0x0100) ||\n    ((packet.ccData & 0x78fe) === 0x102a) ||\n    ((packet.ccData & 0x78fe) === 0x182a);\n};\n\n// ----------------------\n// Session to Application\n// ----------------------\n\n// This hash maps non-ASCII, special, and extended character codes to their\n// proper Unicode equivalent. The first keys that are only a single byte\n// are the non-standard ASCII characters, which simply map the CEA608 byte\n// to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n// character codes, but have their MSB bitmasked with 0x03 so that a lookup\n// can be performed regardless of the field and data channel on which the\n// character code was received.\nvar CHARACTER_TRANSLATION = {\n  0x2a: 0xe1,     // á\n  0x5c: 0xe9,     // é\n  0x5e: 0xed,     // í\n  0x5f: 0xf3,     // ó\n  0x60: 0xfa,     // ú\n  0x7b: 0xe7,     // ç\n  0x7c: 0xf7,     // ÷\n  0x7d: 0xd1,     // Ñ\n  0x7e: 0xf1,     // ñ\n  0x7f: 0x2588,   // █\n  0x0130: 0xae,   // ®\n  0x0131: 0xb0,   // °\n  0x0132: 0xbd,   // ½\n  0x0133: 0xbf,   // ¿\n  0x0134: 0x2122, // ™\n  0x0135: 0xa2,   // ¢\n  0x0136: 0xa3,   // £\n  0x0137: 0x266a, // ♪\n  0x0138: 0xe0,   // à\n  0x0139: 0xa0,   //\n  0x013a: 0xe8,   // è\n  0x013b: 0xe2,   // â\n  0x013c: 0xea,   // ê\n  0x013d: 0xee,   // î\n  0x013e: 0xf4,   // ô\n  0x013f: 0xfb,   // û\n  0x0220: 0xc1,   // Á\n  0x0221: 0xc9,   // É\n  0x0222: 0xd3,   // Ó\n  0x0223: 0xda,   // Ú\n  0x0224: 0xdc,   // Ü\n  0x0225: 0xfc,   // ü\n  0x0226: 0x2018, // ‘\n  0x0227: 0xa1,   // ¡\n  0x0228: 0x2a,   // *\n  0x0229: 0x27,   // '\n  0x022a: 0x2014, // —\n  0x022b: 0xa9,   // ©\n  0x022c: 0x2120, // ℠\n  0x022d: 0x2022, // •\n  0x022e: 0x201c, // “\n  0x022f: 0x201d, // ”\n  0x0230: 0xc0,   // À\n  0x0231: 0xc2,   // Â\n  0x0232: 0xc7,   // Ç\n  0x0233: 0xc8,   // È\n  0x0234: 0xca,   // Ê\n  0x0235: 0xcb,   // Ë\n  0x0236: 0xeb,   // ë\n  0x0237: 0xce,   // Î\n  0x0238: 0xcf,   // Ï\n  0x0239: 0xef,   // ï\n  0x023a: 0xd4,   // Ô\n  0x023b: 0xd9,   // Ù\n  0x023c: 0xf9,   // ù\n  0x023d: 0xdb,   // Û\n  0x023e: 0xab,   // «\n  0x023f: 0xbb,   // »\n  0x0320: 0xc3,   // Ã\n  0x0321: 0xe3,   // ã\n  0x0322: 0xcd,   // Í\n  0x0323: 0xcc,   // Ì\n  0x0324: 0xec,   // ì\n  0x0325: 0xd2,   // Ò\n  0x0326: 0xf2,   // ò\n  0x0327: 0xd5,   // Õ\n  0x0328: 0xf5,   // õ\n  0x0329: 0x7b,   // {\n  0x032a: 0x7d,   // }\n  0x032b: 0x5c,   // \\\n  0x032c: 0x5e,   // ^\n  0x032d: 0x5f,   // _\n  0x032e: 0x7c,   // |\n  0x032f: 0x7e,   // ~\n  0x0330: 0xc4,   // Ä\n  0x0331: 0xe4,   // ä\n  0x0332: 0xd6,   // Ö\n  0x0333: 0xf6,   // ö\n  0x0334: 0xdf,   // ß\n  0x0335: 0xa5,   // ¥\n  0x0336: 0xa4,   // ¤\n  0x0337: 0x2502, // │\n  0x0338: 0xc5,   // Å\n  0x0339: 0xe5,   // å\n  0x033a: 0xd8,   // Ø\n  0x033b: 0xf8,   // ø\n  0x033c: 0x250c, // ┌\n  0x033d: 0x2510, // ┐\n  0x033e: 0x2514, // └\n  0x033f: 0x2518  // ┘\n};\n\nvar getCharFromCode = function(code) {\n  if (code === null) {\n    return '';\n  }\n  code = CHARACTER_TRANSLATION[code] || code;\n  return String.fromCharCode(code);\n};\n\n// the index of the last row in a CEA-608 display buffer\nvar BOTTOM_ROW = 14;\n\n// This array is used for mapping PACs -> row #, since there's no way of\n// getting it through bit logic.\nvar ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620,\n            0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420];\n\n// CEA-608 captions are rendered onto a 34x15 matrix of character\n// cells. The \"bottom\" row is the last element in the outer array.\nvar createDisplayBuffer = function() {\n  var result = [], i = BOTTOM_ROW + 1;\n  while (i--) {\n    result.push('');\n  }\n  return result;\n};\n\nvar Cea608Stream = function(field, dataChannel) {\n  Cea608Stream.prototype.init.call(this);\n\n  this.field_ = field || 0;\n  this.dataChannel_ = dataChannel || 0;\n\n  this.name_ = 'CC' + (((this.field_ << 1) | this.dataChannel_) + 1);\n\n  this.setConstants();\n  this.reset();\n\n  this.push = function(packet) {\n    var data, swap, char0, char1, text;\n    // remove the parity bits\n    data = packet.ccData & 0x7f7f;\n\n    // ignore duplicate control codes; the spec demands they're sent twice\n    if (data === this.lastControlCode_) {\n      this.lastControlCode_ = null;\n      return;\n    }\n\n    // Store control codes\n    if ((data & 0xf000) === 0x1000) {\n      this.lastControlCode_ = data;\n    } else if (data !== this.PADDING_) {\n      this.lastControlCode_ = null;\n    }\n\n    char0 = data >>> 8;\n    char1 = data & 0xff;\n\n    if (data === this.PADDING_) {\n      return;\n\n    } else if (data === this.RESUME_CAPTION_LOADING_) {\n      this.mode_ = 'popOn';\n\n    } else if (data === this.END_OF_CAPTION_) {\n      // If an EOC is received while in paint-on mode, the displayed caption\n      // text should be swapped to non-displayed memory as if it was a pop-on\n      // caption. Because of that, we should explicitly switch back to pop-on\n      // mode\n      this.mode_ = 'popOn';\n      this.clearFormatting(packet.pts);\n      // if a caption was being displayed, it's gone now\n      this.flushDisplayed(packet.pts);\n\n      // flip memory\n      swap = this.displayed_;\n      this.displayed_ = this.nonDisplayed_;\n      this.nonDisplayed_ = swap;\n\n      // start measuring the time to display the caption\n      this.startPts_ = packet.pts;\n\n    } else if (data === this.ROLL_UP_2_ROWS_) {\n      this.rollUpRows_ = 2;\n      this.setRollUp(packet.pts);\n    } else if (data === this.ROLL_UP_3_ROWS_) {\n      this.rollUpRows_ = 3;\n      this.setRollUp(packet.pts);\n    } else if (data === this.ROLL_UP_4_ROWS_) {\n      this.rollUpRows_ = 4;\n      this.setRollUp(packet.pts);\n    } else if (data === this.CARRIAGE_RETURN_) {\n      this.clearFormatting(packet.pts);\n      this.flushDisplayed(packet.pts);\n      this.shiftRowsUp_();\n      this.startPts_ = packet.pts;\n\n    } else if (data === this.BACKSPACE_) {\n      if (this.mode_ === 'popOn') {\n        this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n      } else {\n        this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n      }\n    } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n      this.flushDisplayed(packet.pts);\n      this.displayed_ = createDisplayBuffer();\n    } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n      this.nonDisplayed_ = createDisplayBuffer();\n\n    } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n      if (this.mode_ !== 'paintOn') {\n        // NOTE: This should be removed when proper caption positioning is\n        // implemented\n        this.flushDisplayed(packet.pts);\n        this.displayed_ = createDisplayBuffer();\n      }\n      this.mode_ = 'paintOn';\n      this.startPts_ = packet.pts;\n\n    // Append special characters to caption text\n    } else if (this.isSpecialCharacter(char0, char1)) {\n      // Bitmask char0 so that we can apply character transformations\n      // regardless of field and data channel.\n      // Then byte-shift to the left and OR with char1 so we can pass the\n      // entire character code to `getCharFromCode`.\n      char0 = (char0 & 0x03) << 8;\n      text = getCharFromCode(char0 | char1);\n      this[this.mode_](packet.pts, text);\n      this.column_++;\n\n    // Append extended characters to caption text\n    } else if (this.isExtCharacter(char0, char1)) {\n      // Extended characters always follow their \"non-extended\" equivalents.\n      // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n      // decoders are supposed to drop the \"è\", while compliant decoders\n      // backspace the \"e\" and insert \"è\".\n\n      // Delete the previous character\n      if (this.mode_ === 'popOn') {\n        this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n      } else {\n        this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n      }\n\n      // Bitmask char0 so that we can apply character transformations\n      // regardless of field and data channel.\n      // Then byte-shift to the left and OR with char1 so we can pass the\n      // entire character code to `getCharFromCode`.\n      char0 = (char0 & 0x03) << 8;\n      text = getCharFromCode(char0 | char1);\n      this[this.mode_](packet.pts, text);\n      this.column_++;\n\n    // Process mid-row codes\n    } else if (this.isMidRowCode(char0, char1)) {\n      // Attributes are not additive, so clear all formatting\n      this.clearFormatting(packet.pts);\n\n      // According to the standard, mid-row codes\n      // should be replaced with spaces, so add one now\n      this[this.mode_](packet.pts, ' ');\n      this.column_++;\n\n      if ((char1 & 0xe) === 0xe) {\n        this.addFormatting(packet.pts, ['i']);\n      }\n\n      if ((char1 & 0x1) === 0x1) {\n        this.addFormatting(packet.pts, ['u']);\n      }\n\n    // Detect offset control codes and adjust cursor\n    } else if (this.isOffsetControlCode(char0, char1)) {\n      // Cursor position is set by indent PAC (see below) in 4-column\n      // increments, with an additional offset code of 1-3 to reach any\n      // of the 32 columns specified by CEA-608. So all we need to do\n      // here is increment the column cursor by the given offset.\n      this.column_ += (char1 & 0x03);\n\n    // Detect PACs (Preamble Address Codes)\n    } else if (this.isPAC(char0, char1)) {\n\n      // There's no logic for PAC -> row mapping, so we have to just\n      // find the row code in an array and use its index :(\n      var row = ROWS.indexOf(data & 0x1f20);\n\n      // Configure the caption window if we're in roll-up mode\n      if (this.mode_ === 'rollUp') {\n        // This implies that the base row is incorrectly set.\n        // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n        // of roll-up rows set.\n        if (row - this.rollUpRows_ + 1 < 0) {\n          row = this.rollUpRows_ - 1;\n        }\n\n        this.setRollUp(packet.pts, row);\n      }\n\n      if (row !== this.row_) {\n        // formatting is only persistent for current row\n        this.clearFormatting(packet.pts);\n        this.row_ = row;\n      }\n      // All PACs can apply underline, so detect and apply\n      // (All odd-numbered second bytes set underline)\n      if ((char1 & 0x1) && (this.formatting_.indexOf('u') === -1)) {\n          this.addFormatting(packet.pts, ['u']);\n      }\n\n      if ((data & 0x10) === 0x10) {\n        // We've got an indent level code. Each successive even number\n        // increments the column cursor by 4, so we can get the desired\n        // column position by bit-shifting to the right (to get n/2)\n        // and multiplying by 4.\n        this.column_ = ((data & 0xe) >> 1) * 4;\n      }\n\n      if (this.isColorPAC(char1)) {\n        // it's a color code, though we only support white, which\n        // can be either normal or italicized. white italics can be\n        // either 0x4e or 0x6e depending on the row, so we just\n        // bitwise-and with 0xe to see if italics should be turned on\n        if ((char1 & 0xe) === 0xe) {\n          this.addFormatting(packet.pts, ['i']);\n        }\n      }\n\n    // We have a normal character in char0, and possibly one in char1\n    } else if (this.isNormalChar(char0)) {\n      if (char1 === 0x00) {\n        char1 = null;\n      }\n      text = getCharFromCode(char0);\n      text += getCharFromCode(char1);\n      this[this.mode_](packet.pts, text);\n      this.column_ += text.length;\n\n    } // finish data processing\n\n  };\n};\nCea608Stream.prototype = new Stream();\n// Trigger a cue point that captures the current state of the\n// display buffer\nCea608Stream.prototype.flushDisplayed = function(pts) {\n  var content = this.displayed_\n    // remove spaces from the start and end of the string\n    .map(function(row) {\n      try {\n        return row.trim();\n      } catch (e) {\n        // Ordinarily, this shouldn't happen. However, caption\n        // parsing errors should not throw exceptions and\n        // break playback.\n        // eslint-disable-next-line no-console\n        console.error('Skipping malformed caption.');\n        return '';\n      }\n    })\n    // combine all text rows to display in one cue\n    .join('\\n')\n    // and remove blank rows from the start and end, but not the middle\n    .replace(/^\\n+|\\n+$/g, '');\n\n  if (content.length) {\n    this.trigger('data', {\n      startPts: this.startPts_,\n      endPts: pts,\n      text: content,\n      stream: this.name_\n    });\n  }\n};\n\n/**\n * Zero out the data, used for startup and on seek\n */\nCea608Stream.prototype.reset = function() {\n  this.mode_ = 'popOn';\n  // When in roll-up mode, the index of the last row that will\n  // actually display captions. If a caption is shifted to a row\n  // with a lower index than this, it is cleared from the display\n  // buffer\n  this.topRow_ = 0;\n  this.startPts_ = 0;\n  this.displayed_ = createDisplayBuffer();\n  this.nonDisplayed_ = createDisplayBuffer();\n  this.lastControlCode_ = null;\n\n  // Track row and column for proper line-breaking and spacing\n  this.column_ = 0;\n  this.row_ = BOTTOM_ROW;\n  this.rollUpRows_ = 2;\n\n  // This variable holds currently-applied formatting\n  this.formatting_ = [];\n};\n\n/**\n * Sets up control code and related constants for this instance\n */\nCea608Stream.prototype.setConstants = function() {\n  // The following attributes have these uses:\n  // ext_ :    char0 for mid-row codes, and the base for extended\n  //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n  //           extended codes)\n  // control_: char0 for control codes, except byte-shifted to the\n  //           left so that we can do this.control_ | CONTROL_CODE\n  // offset_:  char0 for tab offset codes\n  //\n  // It's also worth noting that control codes, and _only_ control codes,\n  // differ between field 1 and field2. Field 2 control codes are always\n  // their field 1 value plus 1. That's why there's the \"| field\" on the\n  // control value.\n  if (this.dataChannel_ === 0) {\n    this.BASE_     = 0x10;\n    this.EXT_      = 0x11;\n    this.CONTROL_  = (0x14 | this.field_) << 8;\n    this.OFFSET_   = 0x17;\n  } else if (this.dataChannel_ === 1) {\n    this.BASE_     = 0x18;\n    this.EXT_      = 0x19;\n    this.CONTROL_  = (0x1c | this.field_) << 8;\n    this.OFFSET_   = 0x1f;\n  }\n\n  // Constants for the LSByte command codes recognized by Cea608Stream. This\n  // list is not exhaustive. For a more comprehensive listing and semantics see\n  // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n  // Padding\n  this.PADDING_                    = 0x0000;\n  // Pop-on Mode\n  this.RESUME_CAPTION_LOADING_     = this.CONTROL_ | 0x20;\n  this.END_OF_CAPTION_             = this.CONTROL_ | 0x2f;\n  // Roll-up Mode\n  this.ROLL_UP_2_ROWS_             = this.CONTROL_ | 0x25;\n  this.ROLL_UP_3_ROWS_             = this.CONTROL_ | 0x26;\n  this.ROLL_UP_4_ROWS_             = this.CONTROL_ | 0x27;\n  this.CARRIAGE_RETURN_            = this.CONTROL_ | 0x2d;\n  // paint-on mode\n  this.RESUME_DIRECT_CAPTIONING_   = this.CONTROL_ | 0x29;\n  // Erasure\n  this.BACKSPACE_                  = this.CONTROL_ | 0x21;\n  this.ERASE_DISPLAYED_MEMORY_     = this.CONTROL_ | 0x2c;\n  this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n};\n\n/**\n * Detects if the 2-byte packet data is a special character\n *\n * Special characters have a second byte in the range 0x30 to 0x3f,\n * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n * data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an special character\n */\nCea608Stream.prototype.isSpecialCharacter = function(char0, char1) {\n  return (char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f);\n};\n\n/**\n * Detects if the 2-byte packet data is an extended character\n *\n * Extended characters have a second byte in the range 0x20 to 0x3f,\n * with the first byte being 0x12 or 0x13 (for data channel 1) or\n * 0x1a or 0x1b (for data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an extended character\n */\nCea608Stream.prototype.isExtCharacter = function(char0, char1) {\n  return ((char0 === (this.EXT_ + 1) || char0 === (this.EXT_ + 2)) &&\n    (char1 >= 0x20 && char1 <= 0x3f));\n};\n\n/**\n * Detects if the 2-byte packet is a mid-row code\n *\n * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n * channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are a mid-row code\n */\nCea608Stream.prototype.isMidRowCode = function(char0, char1) {\n  return (char0 === this.EXT_ && (char1 >= 0x20 && char1 <= 0x2f));\n};\n\n/**\n * Detects if the 2-byte packet is an offset control code\n *\n * Offset control codes have a second byte in the range 0x21 to 0x23,\n * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n * data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an offset control code\n */\nCea608Stream.prototype.isOffsetControlCode = function(char0, char1) {\n  return (char0 === this.OFFSET_ && (char1 >= 0x21 && char1 <= 0x23));\n};\n\n/**\n * Detects if the 2-byte packet is a Preamble Address Code\n *\n * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n * range 0x40 to 0x7f.\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are a PAC\n */\nCea608Stream.prototype.isPAC = function(char0, char1) {\n  return (char0 >= this.BASE_ && char0 < (this.BASE_ + 8) &&\n    (char1 >= 0x40 && char1 <= 0x7f));\n};\n\n/**\n * Detects if a packet's second byte is in the range of a PAC color code\n *\n * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n * 0x60 to 0x6f.\n *\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the byte is a color PAC\n */\nCea608Stream.prototype.isColorPAC = function(char1) {\n  return ((char1 >= 0x40 && char1 <= 0x4f) || (char1 >= 0x60 && char1 <= 0x7f));\n};\n\n/**\n * Detects if a single byte is in the range of a normal character\n *\n * Normal text bytes are in the range 0x20 to 0x7f.\n *\n * @param  {Integer} char  The byte\n * @return {Boolean}       Whether the byte is a normal character\n */\nCea608Stream.prototype.isNormalChar = function(char) {\n  return (char >= 0x20 && char <= 0x7f);\n};\n\n/**\n * Configures roll-up\n *\n * @param  {Integer} pts         Current PTS\n * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n *                               a new position\n */\nCea608Stream.prototype.setRollUp = function(pts, newBaseRow) {\n  // Reset the base row to the bottom row when switching modes\n  if (this.mode_ !== 'rollUp') {\n    this.row_ = BOTTOM_ROW;\n    this.mode_ = 'rollUp';\n    // Spec says to wipe memories when switching to roll-up\n    this.flushDisplayed(pts);\n    this.nonDisplayed_ = createDisplayBuffer();\n    this.displayed_ = createDisplayBuffer();\n  }\n\n  if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n    // move currently displayed captions (up or down) to the new base row\n    for (var i = 0; i < this.rollUpRows_; i++) {\n      this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n      this.displayed_[this.row_ - i] = '';\n    }\n  }\n\n  if (newBaseRow === undefined) {\n    newBaseRow = this.row_;\n  }\n\n  this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n};\n\n// Adds the opening HTML tag for the passed character to the caption text,\n// and keeps track of it for later closing\nCea608Stream.prototype.addFormatting = function(pts, format) {\n  this.formatting_ = this.formatting_.concat(format);\n  var text = format.reduce(function(text, format) {\n    return text + '<' + format + '>';\n  }, '');\n  this[this.mode_](pts, text);\n};\n\n// Adds HTML closing tags for current formatting to caption text and\n// clears remembered formatting\nCea608Stream.prototype.clearFormatting = function(pts) {\n  if (!this.formatting_.length) {\n    return;\n  }\n  var text = this.formatting_.reverse().reduce(function(text, format) {\n    return text + '</' + format + '>';\n  }, '');\n  this.formatting_ = [];\n  this[this.mode_](pts, text);\n};\n\n// Mode Implementations\nCea608Stream.prototype.popOn = function(pts, text) {\n  var baseRow = this.nonDisplayed_[this.row_];\n\n  // buffer characters\n  baseRow += text;\n  this.nonDisplayed_[this.row_] = baseRow;\n};\n\nCea608Stream.prototype.rollUp = function(pts, text) {\n  var baseRow = this.displayed_[this.row_];\n\n  baseRow += text;\n  this.displayed_[this.row_] = baseRow;\n\n};\n\nCea608Stream.prototype.shiftRowsUp_ = function() {\n  var i;\n  // clear out inactive rows\n  for (i = 0; i < this.topRow_; i++) {\n    this.displayed_[i] = '';\n  }\n  for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n    this.displayed_[i] = '';\n  }\n  // shift displayed rows up\n  for (i = this.topRow_; i < this.row_; i++) {\n    this.displayed_[i] = this.displayed_[i + 1];\n  }\n  // clear out the bottom row\n  this.displayed_[this.row_] = '';\n};\n\nCea608Stream.prototype.paintOn = function(pts, text) {\n  var baseRow = this.displayed_[this.row_];\n\n  baseRow += text;\n  this.displayed_[this.row_] = baseRow;\n};\n\n// exports\nmodule.exports = {\n  CaptionStream: CaptionStream,\n  Cea608Stream: Cea608Stream\n};\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\n'use strict';\n\nvar Stream = require('../utils/stream.js');\n\nvar AdtsStream;\n\nvar\n  ADTS_SAMPLING_FREQUENCIES = [\n    96000,\n    88200,\n    64000,\n    48000,\n    44100,\n    32000,\n    24000,\n    22050,\n    16000,\n    12000,\n    11025,\n    8000,\n    7350\n  ];\n\n/*\n * Accepts a ElementaryStream and emits data events with parsed\n * AAC Audio Frames of the individual packets. Input audio in ADTS\n * format is unpacked and re-emitted as AAC frames.\n *\n * @see http://wiki.multimedia.cx/index.php?title=ADTS\n * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n */\nAdtsStream = function() {\n  var buffer;\n\n  AdtsStream.prototype.init.call(this);\n\n  this.push = function(packet) {\n    var\n      i = 0,\n      frameNum = 0,\n      frameLength,\n      protectionSkipBytes,\n      frameEnd,\n      oldBuffer,\n      sampleCount,\n      adtsFrameDuration;\n\n    if (packet.type !== 'audio') {\n      // ignore non-audio data\n      return;\n    }\n\n    // Prepend any data in the buffer to the input data so that we can parse\n    // aac frames the cross a PES packet boundary\n    if (buffer) {\n      oldBuffer = buffer;\n      buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n      buffer.set(oldBuffer);\n      buffer.set(packet.data, oldBuffer.byteLength);\n    } else {\n      buffer = packet.data;\n    }\n\n    // unpack any ADTS frames which have been fully received\n    // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n    while (i + 5 < buffer.length) {\n\n      // Loook for the start of an ADTS header..\n      if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n        // If a valid header was not found,  jump one forward and attempt to\n        // find a valid ADTS header starting at the next byte\n        i++;\n        continue;\n      }\n\n      // The protection skip bit tells us if we have 2 bytes of CRC data at the\n      // end of the ADTS header\n      protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2;\n\n      // Frame length is a 13 bit integer starting 16 bits from the\n      // end of the sync sequence\n      frameLength = ((buffer[i + 3] & 0x03) << 11) |\n        (buffer[i + 4] << 3) |\n        ((buffer[i + 5] & 0xe0) >> 5);\n\n      sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n      adtsFrameDuration = (sampleCount * 90000) /\n        ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n\n      frameEnd = i + frameLength;\n\n      // If we don't have enough data to actually finish this ADTS frame, return\n      // and wait for more data\n      if (buffer.byteLength < frameEnd) {\n        return;\n      }\n\n      // Otherwise, deliver the complete AAC frame\n      this.trigger('data', {\n        pts: packet.pts + (frameNum * adtsFrameDuration),\n        dts: packet.dts + (frameNum * adtsFrameDuration),\n        sampleCount: sampleCount,\n        audioobjecttype: ((buffer[i + 2] >>> 6) & 0x03) + 1,\n        channelcount: ((buffer[i + 2] & 1) << 2) |\n          ((buffer[i + 3] & 0xc0) >>> 6),\n        samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n        samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n        // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n        samplesize: 16,\n        data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n      });\n\n      // If the buffer is empty, clear it and return\n      if (buffer.byteLength === frameEnd) {\n        buffer = undefined;\n        return;\n      }\n\n      frameNum++;\n\n      // Remove the finished frame from the buffer and start the process again\n      buffer = buffer.subarray(frameEnd);\n    }\n  };\n  this.flush = function() {\n    this.trigger('done');\n  };\n};\n\nAdtsStream.prototype = new Stream();\n\nmodule.exports = AdtsStream;\n","exports.f = {}.propertyIsEnumerable;\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","'use strict';\nvar LIBRARY = require('./_library');\nvar global = require('./_global');\nvar ctx = require('./_ctx');\nvar classof = require('./_classof');\nvar $export = require('./_export');\nvar isObject = require('./_is-object');\nvar aFunction = require('./_a-function');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar speciesConstructor = require('./_species-constructor');\nvar task = require('./_task').set;\nvar microtask = require('./_microtask')();\nvar newPromiseCapabilityModule = require('./_new-promise-capability');\nvar perform = require('./_perform');\nvar userAgent = require('./_user-agent');\nvar promiseResolve = require('./_promise-resolve');\nvar PROMISE = 'Promise';\nvar TypeError = global.TypeError;\nvar process = global.process;\nvar versions = process && process.versions;\nvar v8 = versions && versions.v8 || '';\nvar $Promise = global[PROMISE];\nvar isNode = classof(process) == 'process';\nvar empty = function () { /* empty */ };\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\n\nvar USE_NATIVE = !!function () {\n  try {\n    // correct subclassing with @@species support\n    var promise = $Promise.resolve(1);\n    var FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function (exec) {\n      exec(empty, empty);\n    };\n    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n    return (isNode || typeof PromiseRejectionEvent == 'function')\n      && promise.then(empty) instanceof FakePromise\n      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n      // we can't detect it synchronously, so just check versions\n      && v8.indexOf('6.6') !== 0\n      && userAgent.indexOf('Chrome/66') === -1;\n  } catch (e) { /* empty */ }\n}();\n\n// helpers\nvar isThenable = function (it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar notify = function (promise, isReject) {\n  if (promise._n) return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function () {\n    var value = promise._v;\n    var ok = promise._s == 1;\n    var i = 0;\n    var run = function (reaction) {\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (promise._h == 2) onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if (handler === true) result = value;\n          else {\n            if (domain) domain.enter();\n            result = handler(value); // may throw\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (e) {\n        if (domain && !exited) domain.exit();\n        reject(e);\n      }\n    };\n    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach\n    promise._c = [];\n    promise._n = false;\n    if (isReject && !promise._h) onUnhandled(promise);\n  });\n};\nvar onUnhandled = function (promise) {\n  task.call(global, function () {\n    var value = promise._v;\n    var unhandled = isUnhandled(promise);\n    var result, handler, console;\n    if (unhandled) {\n      result = perform(function () {\n        if (isNode) {\n          process.emit('unhandledRejection', value, promise);\n        } else if (handler = global.onunhandledrejection) {\n          handler({ promise: promise, reason: value });\n        } else if ((console = global.console) && console.error) {\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    } promise._a = undefined;\n    if (unhandled && result.e) throw result.v;\n  });\n};\nvar isUnhandled = function (promise) {\n  return promise._h !== 1 && (promise._a || promise._c).length === 0;\n};\nvar onHandleUnhandled = function (promise) {\n  task.call(global, function () {\n    var handler;\n    if (isNode) {\n      process.emit('rejectionHandled', promise);\n    } else if (handler = global.onrejectionhandled) {\n      handler({ promise: promise, reason: promise._v });\n    }\n  });\n};\nvar $reject = function (value) {\n  var promise = this;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  promise._v = value;\n  promise._s = 2;\n  if (!promise._a) promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function (value) {\n  var promise = this;\n  var then;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    if (then = isThenable(value)) {\n      microtask(function () {\n        var wrapper = { _w: promise, _d: false }; // wrap\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch (e) {\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch (e) {\n    $reject.call({ _w: promise, _d: false }, e); // wrap\n  }\n};\n\n// constructor polyfill\nif (!USE_NATIVE) {\n  // 25.4.3.1 Promise(executor)\n  $Promise = function Promise(executor) {\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch (err) {\n      $reject.call(this, err);\n    }\n  };\n  // eslint-disable-next-line no-unused-vars\n  Internal = function Promise(executor) {\n    this._c = [];             // <- awaiting reactions\n    this._a = undefined;      // <- checked in isUnhandled reactions\n    this._s = 0;              // <- state\n    this._d = false;          // <- done\n    this._v = undefined;      // <- value\n    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n    this._n = false;          // <- notify\n  };\n  Internal.prototype = require('./_redefine-all')($Promise.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected) {\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if (this._a) this._a.push(reaction);\n      if (this._s) notify(this, false);\n      return reaction.promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function (onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function () {\n    var promise = new Internal();\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject = ctx($reject, promise, 1);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {\n    return C === $Promise || C === Wrapper\n      ? new OwnPromiseCapability(C)\n      : newGenericPromiseCapability(C);\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });\nrequire('./_set-to-string-tag')($Promise, PROMISE);\nrequire('./_set-species')(PROMISE);\nWrapper = require('./_core')[PROMISE];\n\n// statics\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    var $$reject = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x) {\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var values = [];\n      var index = 0;\n      var remaining = 1;\n      forOf(iterable, false, function (promise) {\n        var $index = index++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      forOf(iterable, false, function (promise) {\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  }\n});\n","var core = require('./_core');\nvar global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: require('./_library') ? 'pure' : 'global',\n  copyright: '© 2018 Denis Pushkarev (zloirock.ru)'\n});\n","'use strict';\n\nvar bind = require('function-bind');\nvar ES = require('es-abstract/es5');\nvar replace = bind.call(Function.call, String.prototype.replace);\n\n/* eslint-disable no-control-regex */\nvar leftWhitespace = /^[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]+/;\nvar rightWhitespace = /[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]+$/;\n/* eslint-enable no-control-regex */\n\nmodule.exports = function trim() {\n\tvar S = ES.ToString(ES.CheckObjectCoercible(this));\n\treturn replace(replace(S, leftWhitespace, ''), rightWhitespace, '');\n};\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Accepts program elementary stream (PES) data events and parses out\n * ID3 metadata from them, if present.\n * @see http://id3.org/id3v2.3.0\n */\n'use strict';\nvar\n  Stream = require('../utils/stream'),\n  StreamTypes = require('./stream-types'),\n  // return a percent-encoded representation of the specified byte range\n  // @see http://en.wikipedia.org/wiki/Percent-encoding\n  percentEncode = function(bytes, start, end) {\n    var i, result = '';\n    for (i = start; i < end; i++) {\n      result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n    }\n    return result;\n  },\n  // return the string representation of the specified byte range,\n  // interpreted as UTf-8.\n  parseUtf8 = function(bytes, start, end) {\n    return decodeURIComponent(percentEncode(bytes, start, end));\n  },\n  // return the string representation of the specified byte range,\n  // interpreted as ISO-8859-1.\n  parseIso88591 = function(bytes, start, end) {\n    return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n  },\n  parseSyncSafeInteger = function(data) {\n    return (data[0] << 21) |\n            (data[1] << 14) |\n            (data[2] << 7) |\n            (data[3]);\n  },\n  tagParsers = {\n    TXXX: function(tag) {\n      var i;\n      if (tag.data[0] !== 3) {\n        // ignore frames with unrecognized character encodings\n        return;\n      }\n\n      for (i = 1; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the text fields\n          tag.description = parseUtf8(tag.data, 1, i);\n          // do not include the null terminator in the tag value\n          tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n          break;\n        }\n      }\n      tag.data = tag.value;\n    },\n    WXXX: function(tag) {\n      var i;\n      if (tag.data[0] !== 3) {\n        // ignore frames with unrecognized character encodings\n        return;\n      }\n\n      for (i = 1; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the description and URL fields\n          tag.description = parseUtf8(tag.data, 1, i);\n          tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n          break;\n        }\n      }\n    },\n    PRIV: function(tag) {\n      var i;\n\n      for (i = 0; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the description and URL fields\n          tag.owner = parseIso88591(tag.data, 0, i);\n          break;\n        }\n      }\n      tag.privateData = tag.data.subarray(i + 1);\n      tag.data = tag.privateData;\n    }\n  },\n  MetadataStream;\n\nMetadataStream = function(options) {\n  var\n    settings = {\n      debug: !!(options && options.debug),\n\n      // the bytes of the program-level descriptor field in MP2T\n      // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n      // program element descriptors\"\n      descriptor: options && options.descriptor\n    },\n    // the total size in bytes of the ID3 tag being parsed\n    tagSize = 0,\n    // tag data that is not complete enough to be parsed\n    buffer = [],\n    // the total number of bytes currently in the buffer\n    bufferSize = 0,\n    i;\n\n  MetadataStream.prototype.init.call(this);\n\n  // calculate the text track in-band metadata track dispatch type\n  // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n  this.dispatchType = StreamTypes.METADATA_STREAM_TYPE.toString(16);\n  if (settings.descriptor) {\n    for (i = 0; i < settings.descriptor.length; i++) {\n      this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n    }\n  }\n\n  this.push = function(chunk) {\n    var tag, frameStart, frameSize, frame, i, frameHeader;\n    if (chunk.type !== 'timed-metadata') {\n      return;\n    }\n\n    // if data_alignment_indicator is set in the PES header,\n    // we must have the start of a new ID3 tag. Assume anything\n    // remaining in the buffer was malformed and throw it out\n    if (chunk.dataAlignmentIndicator) {\n      bufferSize = 0;\n      buffer.length = 0;\n    }\n\n    // ignore events that don't look like ID3 data\n    if (buffer.length === 0 &&\n        (chunk.data.length < 10 ||\n          chunk.data[0] !== 'I'.charCodeAt(0) ||\n          chunk.data[1] !== 'D'.charCodeAt(0) ||\n          chunk.data[2] !== '3'.charCodeAt(0))) {\n      if (settings.debug) {\n        // eslint-disable-next-line no-console\n        console.log('Skipping unrecognized metadata packet');\n      }\n      return;\n    }\n\n    // add this chunk to the data we've collected so far\n\n    buffer.push(chunk);\n    bufferSize += chunk.data.byteLength;\n\n    // grab the size of the entire frame from the ID3 header\n    if (buffer.length === 1) {\n      // the frame size is transmitted as a 28-bit integer in the\n      // last four bytes of the ID3 header.\n      // The most significant bit of each byte is dropped and the\n      // results concatenated to recover the actual value.\n      tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10));\n\n      // ID3 reports the tag size excluding the header but it's more\n      // convenient for our comparisons to include it\n      tagSize += 10;\n    }\n\n    // if the entire frame has not arrived, wait for more data\n    if (bufferSize < tagSize) {\n      return;\n    }\n\n    // collect the entire frame so it can be parsed\n    tag = {\n      data: new Uint8Array(tagSize),\n      frames: [],\n      pts: buffer[0].pts,\n      dts: buffer[0].dts\n    };\n    for (i = 0; i < tagSize;) {\n      tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n      i += buffer[0].data.byteLength;\n      bufferSize -= buffer[0].data.byteLength;\n      buffer.shift();\n    }\n\n    // find the start of the first frame and the end of the tag\n    frameStart = 10;\n    if (tag.data[5] & 0x40) {\n      // advance the frame start past the extended header\n      frameStart += 4; // header size field\n      frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14));\n\n      // clip any padding off the end\n      tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n    }\n\n    // parse one or more ID3 frames\n    // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n    do {\n      // determine the number of bytes in this frame\n      frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n      if (frameSize < 1) {\n         // eslint-disable-next-line no-console\n        return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n      }\n      frameHeader = String.fromCharCode(tag.data[frameStart],\n                                        tag.data[frameStart + 1],\n                                        tag.data[frameStart + 2],\n                                        tag.data[frameStart + 3]);\n\n\n      frame = {\n        id: frameHeader,\n        data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n      };\n      frame.key = frame.id;\n      if (tagParsers[frame.id]) {\n        tagParsers[frame.id](frame);\n\n        // handle the special PRIV frame used to indicate the start\n        // time for raw AAC data\n        if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n          var\n            d = frame.data,\n            size = ((d[3] & 0x01)  << 30) |\n                   (d[4]  << 22) |\n                   (d[5] << 14) |\n                   (d[6] << 6) |\n                   (d[7] >>> 2);\n\n          size *= 4;\n          size += d[7] & 0x03;\n          frame.timeStamp = size;\n          // in raw AAC, all subsequent data will be timestamped based\n          // on the value of this frame\n          // we couldn't have known the appropriate pts and dts before\n          // parsing this ID3 tag so set those values now\n          if (tag.pts === undefined && tag.dts === undefined) {\n            tag.pts = frame.timeStamp;\n            tag.dts = frame.timeStamp;\n          }\n          this.trigger('timestamp', frame);\n        }\n      }\n      tag.frames.push(frame);\n\n      frameStart += 10; // advance past the frame header\n      frameStart += frameSize; // advance past the frame body\n    } while (frameStart < tagSize);\n    this.trigger('data', tag);\n  };\n};\nMetadataStream.prototype = new Stream();\n\nmodule.exports = MetadataStream;\n","var global = require('./_global');\nvar core = require('./_core');\nvar hide = require('./_hide');\nvar redefine = require('./_redefine');\nvar ctx = require('./_ctx');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // extend global\n    if (target) redefine(target, key, out, type & $export.U);\n    // export\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","var ITERATOR = require('./_wks')('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () { SAFE_CLOSING = true; };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(riter, function () { throw 2; });\n} catch (e) { /* empty */ }\n\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () { return { done: safe = true }; };\n    arr[ITERATOR] = function () { return iter; };\n    exec(arr);\n  } catch (e) { /* empty */ }\n  return safe;\n};\n","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n","module.exports = function(module) {\r\n\tif (!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif (!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\n'use strict';\n\nvar Stream = require('../utils/stream.js');\nvar ExpGolomb = require('../utils/exp-golomb.js');\n\nvar H264Stream, NalByteStream;\nvar PROFILES_WITH_OPTIONAL_SPS_DATA;\n\n/**\n * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n */\nNalByteStream = function() {\n  var\n    syncPoint = 0,\n    i,\n    buffer;\n  NalByteStream.prototype.init.call(this);\n\n  /*\n   * Scans a byte stream and triggers a data event with the NAL units found.\n   * @param {Object} data Event received from H264Stream\n   * @param {Uint8Array} data.data The h264 byte stream to be scanned\n   *\n   * @see H264Stream.push\n   */\n  this.push = function(data) {\n    var swapBuffer;\n\n    if (!buffer) {\n      buffer = data.data;\n    } else {\n      swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n      swapBuffer.set(buffer);\n      swapBuffer.set(data.data, buffer.byteLength);\n      buffer = swapBuffer;\n    }\n\n    // Rec. ITU-T H.264, Annex B\n    // scan for NAL unit boundaries\n\n    // a match looks like this:\n    // 0 0 1 .. NAL .. 0 0 1\n    // ^ sync point        ^ i\n    // or this:\n    // 0 0 1 .. NAL .. 0 0 0\n    // ^ sync point        ^ i\n\n    // advance the sync point to a NAL start, if necessary\n    for (; syncPoint < buffer.byteLength - 3; syncPoint++) {\n      if (buffer[syncPoint + 2] === 1) {\n        // the sync point is properly aligned\n        i = syncPoint + 5;\n        break;\n      }\n    }\n\n    while (i < buffer.byteLength) {\n      // look at the current byte to determine if we've hit the end of\n      // a NAL unit boundary\n      switch (buffer[i]) {\n      case 0:\n        // skip past non-sync sequences\n        if (buffer[i - 1] !== 0) {\n          i += 2;\n          break;\n        } else if (buffer[i - 2] !== 0) {\n          i++;\n          break;\n        }\n\n        // deliver the NAL unit if it isn't empty\n        if (syncPoint + 3 !== i - 2) {\n          this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n        }\n\n        // drop trailing zeroes\n        do {\n          i++;\n        } while (buffer[i] !== 1 && i < buffer.length);\n        syncPoint = i - 2;\n        i += 3;\n        break;\n      case 1:\n        // skip past non-sync sequences\n        if (buffer[i - 1] !== 0 ||\n            buffer[i - 2] !== 0) {\n          i += 3;\n          break;\n        }\n\n        // deliver the NAL unit\n        this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n        syncPoint = i - 2;\n        i += 3;\n        break;\n      default:\n        // the current byte isn't a one or zero, so it cannot be part\n        // of a sync sequence\n        i += 3;\n        break;\n      }\n    }\n    // filter out the NAL units that were delivered\n    buffer = buffer.subarray(syncPoint);\n    i -= syncPoint;\n    syncPoint = 0;\n  };\n\n  this.flush = function() {\n    // deliver the last buffered NAL unit\n    if (buffer && buffer.byteLength > 3) {\n      this.trigger('data', buffer.subarray(syncPoint + 3));\n    }\n    // reset the stream state\n    buffer = null;\n    syncPoint = 0;\n    this.trigger('done');\n  };\n};\nNalByteStream.prototype = new Stream();\n\n// values of profile_idc that indicate additional fields are included in the SPS\n// see Recommendation ITU-T H.264 (4/2013),\n// 7.3.2.1.1 Sequence parameter set data syntax\nPROFILES_WITH_OPTIONAL_SPS_DATA = {\n  100: true,\n  110: true,\n  122: true,\n  244: true,\n  44: true,\n  83: true,\n  86: true,\n  118: true,\n  128: true,\n  138: true,\n  139: true,\n  134: true\n};\n\n/**\n * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n * events.\n */\nH264Stream = function() {\n  var\n    nalByteStream = new NalByteStream(),\n    self,\n    trackId,\n    currentPts,\n    currentDts,\n\n    discardEmulationPreventionBytes,\n    readSequenceParameterSet,\n    skipScalingList;\n\n  H264Stream.prototype.init.call(this);\n  self = this;\n\n  /*\n   * Pushes a packet from a stream onto the NalByteStream\n   *\n   * @param {Object} packet - A packet received from a stream\n   * @param {Uint8Array} packet.data - The raw bytes of the packet\n   * @param {Number} packet.dts - Decode timestamp of the packet\n   * @param {Number} packet.pts - Presentation timestamp of the packet\n   * @param {Number} packet.trackId - The id of the h264 track this packet came from\n   * @param {('video'|'audio')} packet.type - The type of packet\n   *\n   */\n  this.push = function(packet) {\n    if (packet.type !== 'video') {\n      return;\n    }\n    trackId = packet.trackId;\n    currentPts = packet.pts;\n    currentDts = packet.dts;\n\n    nalByteStream.push(packet);\n  };\n\n  /*\n   * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n   * for the NALUs to the next stream component.\n   * Also, preprocess caption and sequence parameter NALUs.\n   *\n   * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n   * @see NalByteStream.push\n   */\n  nalByteStream.on('data', function(data) {\n    var\n      event = {\n        trackId: trackId,\n        pts: currentPts,\n        dts: currentDts,\n        data: data\n      };\n\n    switch (data[0] & 0x1f) {\n    case 0x05:\n      event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n      break;\n    case 0x06:\n      event.nalUnitType = 'sei_rbsp';\n      event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n      break;\n    case 0x07:\n      event.nalUnitType = 'seq_parameter_set_rbsp';\n      event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n      event.config = readSequenceParameterSet(event.escapedRBSP);\n      break;\n    case 0x08:\n      event.nalUnitType = 'pic_parameter_set_rbsp';\n      break;\n    case 0x09:\n      event.nalUnitType = 'access_unit_delimiter_rbsp';\n      break;\n\n    default:\n      break;\n    }\n    // This triggers data on the H264Stream\n    self.trigger('data', event);\n  });\n  nalByteStream.on('done', function() {\n    self.trigger('done');\n  });\n\n  this.flush = function() {\n    nalByteStream.flush();\n  };\n\n  /**\n   * Advance the ExpGolomb decoder past a scaling list. The scaling\n   * list is optionally transmitted as part of a sequence parameter\n   * set and is not relevant to transmuxing.\n   * @param count {number} the number of entries in this scaling list\n   * @param expGolombDecoder {object} an ExpGolomb pointed to the\n   * start of a scaling list\n   * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n   */\n  skipScalingList = function(count, expGolombDecoder) {\n    var\n      lastScale = 8,\n      nextScale = 8,\n      j,\n      deltaScale;\n\n    for (j = 0; j < count; j++) {\n      if (nextScale !== 0) {\n        deltaScale = expGolombDecoder.readExpGolomb();\n        nextScale = (lastScale + deltaScale + 256) % 256;\n      }\n\n      lastScale = (nextScale === 0) ? lastScale : nextScale;\n    }\n  };\n\n  /**\n   * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n   * Sequence Payload\"\n   * @param data {Uint8Array} the bytes of a RBSP from a NAL\n   * unit\n   * @return {Uint8Array} the RBSP without any Emulation\n   * Prevention Bytes\n   */\n  discardEmulationPreventionBytes = function(data) {\n    var\n      length = data.byteLength,\n      emulationPreventionBytesPositions = [],\n      i = 1,\n      newLength, newData;\n\n    // Find all `Emulation Prevention Bytes`\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    }\n\n    // If no Emulation Prevention Bytes were found just return the original\n    // array\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    }\n\n    // Create a new array to hold the NAL unit data\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++;\n        // Remove this position index\n        emulationPreventionBytesPositions.shift();\n      }\n      newData[i] = data[sourceIndex];\n    }\n\n    return newData;\n  };\n\n  /**\n   * Read a sequence parameter set and return some interesting video\n   * properties. A sequence parameter set is the H264 metadata that\n   * describes the properties of upcoming video frames.\n   * @param data {Uint8Array} the bytes of a sequence parameter set\n   * @return {object} an object with configuration parsed from the\n   * sequence parameter set, including the dimensions of the\n   * associated video frames.\n   */\n  readSequenceParameterSet = function(data) {\n    var\n      frameCropLeftOffset = 0,\n      frameCropRightOffset = 0,\n      frameCropTopOffset = 0,\n      frameCropBottomOffset = 0,\n      sarScale = 1,\n      expGolombDecoder, profileIdc, levelIdc, profileCompatibility,\n      chromaFormatIdc, picOrderCntType,\n      numRefFramesInPicOrderCntCycle, picWidthInMbsMinus1,\n      picHeightInMapUnitsMinus1,\n      frameMbsOnlyFlag,\n      scalingListCount,\n      sarRatio,\n      aspectRatioIdc,\n      i;\n\n    expGolombDecoder = new ExpGolomb(data);\n    profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n    profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n    levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n    expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n\n    // some profiles have more optional data we don't need\n    if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n      chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n      if (chromaFormatIdc === 3) {\n        expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n      }\n      expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n      expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n      expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n      if (expGolombDecoder.readBoolean()) { // seq_scaling_matrix_present_flag\n        scalingListCount = (chromaFormatIdc !== 3) ? 8 : 12;\n        for (i = 0; i < scalingListCount; i++) {\n          if (expGolombDecoder.readBoolean()) { // seq_scaling_list_present_flag[ i ]\n            if (i < 6) {\n              skipScalingList(16, expGolombDecoder);\n            } else {\n              skipScalingList(64, expGolombDecoder);\n            }\n          }\n        }\n      }\n    }\n\n    expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n    picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n    if (picOrderCntType === 0) {\n      expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n    } else if (picOrderCntType === 1) {\n      expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n      expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n      expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n      numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n      for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n        expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n      }\n    }\n\n    expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n    expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n    picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n    picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n\n    frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n    if (frameMbsOnlyFlag === 0) {\n      expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n    }\n\n    expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n    if (expGolombDecoder.readBoolean()) { // frame_cropping_flag\n      frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n    }\n    if (expGolombDecoder.readBoolean()) {\n      // vui_parameters_present_flag\n      if (expGolombDecoder.readBoolean()) {\n        // aspect_ratio_info_present_flag\n        aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n        switch (aspectRatioIdc) {\n          case 1: sarRatio = [1, 1]; break;\n          case 2: sarRatio = [12, 11]; break;\n          case 3: sarRatio = [10, 11]; break;\n          case 4: sarRatio = [16, 11]; break;\n          case 5: sarRatio = [40, 33]; break;\n          case 6: sarRatio = [24, 11]; break;\n          case 7: sarRatio = [20, 11]; break;\n          case 8: sarRatio = [32, 11]; break;\n          case 9: sarRatio = [80, 33]; break;\n          case 10: sarRatio = [18, 11]; break;\n          case 11: sarRatio = [15, 11]; break;\n          case 12: sarRatio = [64, 33]; break;\n          case 13: sarRatio = [160, 99]; break;\n          case 14: sarRatio = [4, 3]; break;\n          case 15: sarRatio = [3, 2]; break;\n          case 16: sarRatio = [2, 1]; break;\n          case 255: {\n            sarRatio = [expGolombDecoder.readUnsignedByte() << 8 |\n                        expGolombDecoder.readUnsignedByte(),\n                        expGolombDecoder.readUnsignedByte() << 8 |\n                        expGolombDecoder.readUnsignedByte() ];\n            break;\n          }\n        }\n        if (sarRatio) {\n          sarScale = sarRatio[0] / sarRatio[1];\n        }\n      }\n    }\n    return {\n      profileIdc: profileIdc,\n      levelIdc: levelIdc,\n      profileCompatibility: profileCompatibility,\n      width: Math.ceil((((picWidthInMbsMinus1 + 1) * 16) - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n      height: ((2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16) - (frameCropTopOffset * 2) - (frameCropBottomOffset * 2)\n    };\n  };\n\n};\nH264Stream.prototype = new Stream();\n\nmodule.exports = {\n  H264Stream: H264Stream,\n  NalByteStream: NalByteStream\n};\n","var trim = require('string.prototype.trim')\n  , forEach = require('for-each')\n  , isArray = function(arg) {\n      return Object.prototype.toString.call(arg) === '[object Array]';\n    }\n\nmodule.exports = function (headers) {\n  if (!headers)\n    return {}\n\n  var result = {}\n\n  forEach(\n      trim(headers).split('\\n')\n    , function (row) {\n        var index = row.indexOf(':')\n          , key = trim(row.slice(0, index)).toLowerCase()\n          , value = trim(row.slice(index + 1))\n\n        if (typeof(result[key]) === 'undefined') {\n          result[key] = value\n        } else if (isArray(result[key])) {\n          result[key].push(value)\n        } else {\n          result[key] = [ result[key], value ]\n        }\n      }\n  )\n\n  return result\n}\n","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n","'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slice.call(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                args.concat(slice.call(arguments))\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        } else {\n            return target.apply(\n                that,\n                args.concat(slice.call(arguments))\n            );\n        }\n    };\n\n    var boundLength = Math.max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs.push('$' + i);\n    }\n\n    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","'use strict';\n\nvar GetIntrinsic = require('../GetIntrinsic');\n\nvar has = require('has');\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nmodule.exports = function IsPropertyDescriptor(ES, Desc) {\n\tif (ES.Type(Desc) !== 'Object') {\n\t\treturn false;\n\t}\n\tvar allowed = {\n\t\t'[[Configurable]]': true,\n\t\t'[[Enumerable]]': true,\n\t\t'[[Get]]': true,\n\t\t'[[Set]]': true,\n\t\t'[[Value]]': true,\n\t\t'[[Writable]]': true\n\t};\n\n    for (var key in Desc) { // eslint-disable-line\n\t\tif (has(Desc, key) && !allowed[key]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tif (ES.IsDataDescriptor(Desc) && ES.IsAccessorDescriptor(Desc)) {\n\t\tthrow new $TypeError('Property Descriptors may not be both accessor and data descriptors');\n\t}\n\treturn true;\n};\n","'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nvar toObject = require('./_to-object');\nvar IObject = require('./_iobject');\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || require('./_fails')(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n  } return T;\n} : $assign;\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","'use strict';\n\nmodule.exports = function mod(number, modulo) {\n\tvar remain = number % modulo;\n\treturn Math.floor(remain >= 0 ? remain : remain + modulo);\n};\n","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","'use strict';\nvar global = require('./_global');\nvar dP = require('./_object-dp');\nvar DESCRIPTORS = require('./_descriptors');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (KEY) {\n  var C = global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function () { return this; }\n  });\n};\n","'use strict';\n\nmodule.exports = Number.isNaN || function isNaN(a) {\n\treturn a !== a;\n};\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar highPrefix = [33, 16, 5, 32, 164, 27];\nvar lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\nvar zeroFill = function(count) {\n  var a = [];\n  while (count--) {\n    a.push(0);\n  }\n  return a;\n};\n\nvar makeTable = function(metaTable) {\n  return Object.keys(metaTable).reduce(function(obj, key) {\n    obj[key] = new Uint8Array(metaTable[key].reduce(function(arr, part) {\n      return arr.concat(part);\n    }, []));\n    return obj;\n  }, {});\n};\n\n// Frames-of-silence to use for filling in missing AAC frames\nvar coneOfSilence = {\n  96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n  88200: [highPrefix, [231], zeroFill(170), [56]],\n  64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n  48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n  44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n  32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n  24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n  16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n  12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n  11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n  8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n};\n\nmodule.exports = makeTable(coneOfSilence);\n","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar toUnsigned = function(value) {\n  return value >>> 0;\n};\n\nmodule.exports = {\n  toUnsigned: toUnsigned\n};\n","var global = require('./_global');\nvar macrotask = require('./_task').set;\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = require('./_cof')(process) == 'process';\n\nmodule.exports = function () {\n  var head, last, notify;\n\n  var flush = function () {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();\n        else last = undefined;\n        throw e;\n      }\n    } last = undefined;\n    if (parent) parent.enter();\n  };\n\n  // Node.js\n  if (isNode) {\n    notify = function () {\n      process.nextTick(flush);\n    };\n  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339\n  } else if (Observer && !(global.navigator && global.navigator.standalone)) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new\n    notify = function () {\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if (Promise && Promise.resolve) {\n    // Promise.resolve without an argument throws an error in LG WebOS 2\n    var promise = Promise.resolve(undefined);\n    notify = function () {\n      promise.then(flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function () {\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n\n  return function (fn) {\n    var task = { fn: fn, next: undefined };\n    if (last) last.next = task;\n    if (!head) {\n      head = task;\n      notify();\n    } last = task;\n  };\n};\n","module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n","var core = module.exports = { version: '2.5.7' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","'use strict';\n\n/* globals\n\tAtomics,\n\tSharedArrayBuffer,\n*/\n\nvar undefined; // eslint-disable-line no-shadow-restricted-names\n\nvar ThrowTypeError = Object.getOwnPropertyDescriptor\n\t? (function () { return Object.getOwnPropertyDescriptor(arguments, 'callee').get; }())\n\t: function () { throw new TypeError(); };\n\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol';\n\nvar getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto\n\nvar generator; // = function * () {};\nvar generatorFunction = generator ? getProto(generator) : undefined;\nvar asyncFn; // async function() {};\nvar asyncFunction = asyncFn ? asyncFn.constructor : undefined;\nvar asyncGen; // async function * () {};\nvar asyncGenFunction = asyncGen ? getProto(asyncGen) : undefined;\nvar asyncGenIterator = asyncGen ? asyncGen() : undefined;\n\nvar TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t'$ %Array%': Array,\n\t'$ %ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'$ %ArrayBufferPrototype%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer.prototype,\n\t'$ %ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,\n\t'$ %ArrayPrototype%': Array.prototype,\n\t'$ %ArrayProto_entries%': Array.prototype.entries,\n\t'$ %ArrayProto_forEach%': Array.prototype.forEach,\n\t'$ %ArrayProto_keys%': Array.prototype.keys,\n\t'$ %ArrayProto_values%': Array.prototype.values,\n\t'$ %AsyncFromSyncIteratorPrototype%': undefined,\n\t'$ %AsyncFunction%': asyncFunction,\n\t'$ %AsyncFunctionPrototype%': asyncFunction ? asyncFunction.prototype : undefined,\n\t'$ %AsyncGenerator%': asyncGen ? getProto(asyncGenIterator) : undefined,\n\t'$ %AsyncGeneratorFunction%': asyncGenFunction,\n\t'$ %AsyncGeneratorPrototype%': asyncGenFunction ? asyncGenFunction.prototype : undefined,\n\t'$ %AsyncIteratorPrototype%': asyncGenIterator && hasSymbols && Symbol.asyncIterator ? asyncGenIterator[Symbol.asyncIterator]() : undefined,\n\t'$ %Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'$ %Boolean%': Boolean,\n\t'$ %BooleanPrototype%': Boolean.prototype,\n\t'$ %DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'$ %DataViewPrototype%': typeof DataView === 'undefined' ? undefined : DataView.prototype,\n\t'$ %Date%': Date,\n\t'$ %DatePrototype%': Date.prototype,\n\t'$ %decodeURI%': decodeURI,\n\t'$ %decodeURIComponent%': decodeURIComponent,\n\t'$ %encodeURI%': encodeURI,\n\t'$ %encodeURIComponent%': encodeURIComponent,\n\t'$ %Error%': Error,\n\t'$ %ErrorPrototype%': Error.prototype,\n\t'$ %eval%': eval, // eslint-disable-line no-eval\n\t'$ %EvalError%': EvalError,\n\t'$ %EvalErrorPrototype%': EvalError.prototype,\n\t'$ %Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'$ %Float32ArrayPrototype%': typeof Float32Array === 'undefined' ? undefined : Float32Array.prototype,\n\t'$ %Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'$ %Float64ArrayPrototype%': typeof Float64Array === 'undefined' ? undefined : Float64Array.prototype,\n\t'$ %Function%': Function,\n\t'$ %FunctionPrototype%': Function.prototype,\n\t'$ %Generator%': generator ? getProto(generator()) : undefined,\n\t'$ %GeneratorFunction%': generatorFunction,\n\t'$ %GeneratorPrototype%': generatorFunction ? generatorFunction.prototype : undefined,\n\t'$ %Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'$ %Int8ArrayPrototype%': typeof Int8Array === 'undefined' ? undefined : Int8Array.prototype,\n\t'$ %Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'$ %Int16ArrayPrototype%': typeof Int16Array === 'undefined' ? undefined : Int8Array.prototype,\n\t'$ %Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'$ %Int32ArrayPrototype%': typeof Int32Array === 'undefined' ? undefined : Int32Array.prototype,\n\t'$ %isFinite%': isFinite,\n\t'$ %isNaN%': isNaN,\n\t'$ %IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'$ %JSON%': JSON,\n\t'$ %JSONParse%': JSON.parse,\n\t'$ %Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'$ %MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'$ %MapPrototype%': typeof Map === 'undefined' ? undefined : Map.prototype,\n\t'$ %Math%': Math,\n\t'$ %Number%': Number,\n\t'$ %NumberPrototype%': Number.prototype,\n\t'$ %Object%': Object,\n\t'$ %ObjectPrototype%': Object.prototype,\n\t'$ %ObjProto_toString%': Object.prototype.toString,\n\t'$ %ObjProto_valueOf%': Object.prototype.valueOf,\n\t'$ %parseFloat%': parseFloat,\n\t'$ %parseInt%': parseInt,\n\t'$ %Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'$ %PromisePrototype%': typeof Promise === 'undefined' ? undefined : Promise.prototype,\n\t'$ %PromiseProto_then%': typeof Promise === 'undefined' ? undefined : Promise.prototype.then,\n\t'$ %Promise_all%': typeof Promise === 'undefined' ? undefined : Promise.all,\n\t'$ %Promise_reject%': typeof Promise === 'undefined' ? undefined : Promise.reject,\n\t'$ %Promise_resolve%': typeof Promise === 'undefined' ? undefined : Promise.resolve,\n\t'$ %Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'$ %RangeError%': RangeError,\n\t'$ %RangeErrorPrototype%': RangeError.prototype,\n\t'$ %ReferenceError%': ReferenceError,\n\t'$ %ReferenceErrorPrototype%': ReferenceError.prototype,\n\t'$ %Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'$ %RegExp%': RegExp,\n\t'$ %RegExpPrototype%': RegExp.prototype,\n\t'$ %Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'$ %SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'$ %SetPrototype%': typeof Set === 'undefined' ? undefined : Set.prototype,\n\t'$ %SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'$ %SharedArrayBufferPrototype%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer.prototype,\n\t'$ %String%': String,\n\t'$ %StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,\n\t'$ %StringPrototype%': String.prototype,\n\t'$ %Symbol%': hasSymbols ? Symbol : undefined,\n\t'$ %SymbolPrototype%': hasSymbols ? Symbol.prototype : undefined,\n\t'$ %SyntaxError%': SyntaxError,\n\t'$ %SyntaxErrorPrototype%': SyntaxError.prototype,\n\t'$ %ThrowTypeError%': ThrowTypeError,\n\t'$ %TypedArray%': TypedArray,\n\t'$ %TypedArrayPrototype%': TypedArray ? TypedArray.prototype : undefined,\n\t'$ %TypeError%': TypeError,\n\t'$ %TypeErrorPrototype%': TypeError.prototype,\n\t'$ %Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'$ %Uint8ArrayPrototype%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array.prototype,\n\t'$ %Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'$ %Uint8ClampedArrayPrototype%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray.prototype,\n\t'$ %Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'$ %Uint16ArrayPrototype%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array.prototype,\n\t'$ %Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'$ %Uint32ArrayPrototype%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array.prototype,\n\t'$ %URIError%': URIError,\n\t'$ %URIErrorPrototype%': URIError.prototype,\n\t'$ %WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'$ %WeakMapPrototype%': typeof WeakMap === 'undefined' ? undefined : WeakMap.prototype,\n\t'$ %WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet,\n\t'$ %WeakSetPrototype%': typeof WeakSet === 'undefined' ? undefined : WeakSet.prototype\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tvar key = '$ ' + name;\n\tif (!(key in INTRINSICS)) {\n\t\tthrow new SyntaxError('intrinsic ' + name + ' does not exist!');\n\t}\n\n\t// istanbul ignore if // hopefully this is impossible to test :-)\n\tif (typeof INTRINSICS[key] === 'undefined' && !allowMissing) {\n\t\tthrow new TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t}\n\treturn INTRINSICS[key];\n};\n","/*! @name mpd-parser @version 0.8.1 @license Apache-2.0 */\nimport window$1 from 'global/window';\n\nvar version = \"0.8.1\";\n\nvar isObject = function isObject(obj) {\n  return !!obj && typeof obj === 'object';\n};\n\nvar merge = function merge() {\n  for (var _len = arguments.length, objects = new Array(_len), _key = 0; _key < _len; _key++) {\n    objects[_key] = arguments[_key];\n  }\n\n  return objects.reduce(function (result, source) {\n    Object.keys(source).forEach(function (key) {\n      if (Array.isArray(result[key]) && Array.isArray(source[key])) {\n        result[key] = result[key].concat(source[key]);\n      } else if (isObject(result[key]) && isObject(source[key])) {\n        result[key] = merge(result[key], source[key]);\n      } else {\n        result[key] = source[key];\n      }\n    });\n    return result;\n  }, {});\n};\nvar values = function values(o) {\n  return Object.keys(o).map(function (k) {\n    return o[k];\n  });\n};\n\nvar range = function range(start, end) {\n  var result = [];\n\n  for (var i = start; i < end; i++) {\n    result.push(i);\n  }\n\n  return result;\n};\nvar flatten = function flatten(lists) {\n  return lists.reduce(function (x, y) {\n    return x.concat(y);\n  }, []);\n};\nvar from = function from(list) {\n  if (!list.length) {\n    return [];\n  }\n\n  var result = [];\n\n  for (var i = 0; i < list.length; i++) {\n    result.push(list[i]);\n  }\n\n  return result;\n};\nvar findIndexes = function findIndexes(l, key) {\n  return l.reduce(function (a, e, i) {\n    if (e[key]) {\n      a.push(i);\n    }\n\n    return a;\n  }, []);\n};\n\nvar errors = {\n  INVALID_NUMBER_OF_PERIOD: 'INVALID_NUMBER_OF_PERIOD',\n  DASH_EMPTY_MANIFEST: 'DASH_EMPTY_MANIFEST',\n  DASH_INVALID_XML: 'DASH_INVALID_XML',\n  NO_BASE_URL: 'NO_BASE_URL',\n  MISSING_SEGMENT_INFORMATION: 'MISSING_SEGMENT_INFORMATION',\n  SEGMENT_TIME_UNSPECIFIED: 'SEGMENT_TIME_UNSPECIFIED',\n  UNSUPPORTED_UTC_TIMING_SCHEME: 'UNSUPPORTED_UTC_TIMING_SCHEME'\n};\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar urlToolkit = createCommonjsModule(function (module, exports) {\n// see https://tools.ietf.org/html/rfc1808\n\n/* jshint ignore:start */\n(function(root) { \n/* jshint ignore:end */\n\n  var URL_REGEX = /^((?:[a-zA-Z0-9+\\-.]+:)?)(\\/\\/[^\\/?#]*)?((?:[^\\/\\?#]*\\/)*.*?)??(;.*?)?(\\?.*?)?(#.*?)?$/;\n  var FIRST_SEGMENT_REGEX = /^([^\\/?#]*)(.*)$/;\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/).*?(?=\\/)/g;\n\n  var URLToolkit = { // jshint ignore:line\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n    // E.g\n    // With opts.alwaysNormalize = false (default, spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n    // With opts.alwaysNormalize = true (not spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n    buildAbsoluteURL: function(baseURL, relativeURL, opts) {\n      opts = opts || {};\n      // remove any remaining space and CRLF\n      baseURL = baseURL.trim();\n      relativeURL = relativeURL.trim();\n      if (!relativeURL) {\n        // 2a) If the embedded URL is entirely empty, it inherits the\n        // entire base URL (i.e., is set equal to the base URL)\n        // and we are done.\n        if (!opts.alwaysNormalize) {\n          return baseURL;\n        }\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n        if (!basePartsForNormalise) {\n          throw new Error('Error trying to parse base URL.');\n        }\n        basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\n      }\n      var relativeParts = URLToolkit.parseURL(relativeURL);\n      if (!relativeParts) {\n        throw new Error('Error trying to parse relative URL.');\n      }\n      if (relativeParts.scheme) {\n        // 2b) If the embedded URL starts with a scheme name, it is\n        // interpreted as an absolute URL and we are done.\n        if (!opts.alwaysNormalize) {\n          return relativeURL;\n        }\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n        return URLToolkit.buildURLFromParts(relativeParts);\n      }\n      var baseParts = URLToolkit.parseURL(baseURL);\n      if (!baseParts) {\n        throw new Error('Error trying to parse base URL.');\n      }\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n        baseParts.netLoc = pathParts[1];\n        baseParts.path = pathParts[2];\n      }\n      if (baseParts.netLoc && !baseParts.path) {\n        baseParts.path = '/';\n      }\n      var builtParts = {\n        // 2c) Otherwise, the embedded URL inherits the scheme of\n        // the base URL.\n        scheme: baseParts.scheme,\n        netLoc: relativeParts.netLoc,\n        path: null,\n        params: relativeParts.params,\n        query: relativeParts.query,\n        fragment: relativeParts.fragment\n      };\n      if (!relativeParts.netLoc) {\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n        // (if any) of the base URL.\n        builtParts.netLoc = baseParts.netLoc;\n        // 4) If the embedded URL path is preceded by a slash \"/\", the\n        // path is not relative and we skip to Step 7.\n        if (relativeParts.path[0] !== '/') {\n          if (!relativeParts.path) {\n            // 5) If the embedded URL path is empty (and not preceded by a\n            // slash), then the embedded URL inherits the base URL path\n            builtParts.path = baseParts.path;\n            // 5a) if the embedded URL's <params> is non-empty, we skip to\n            // step 7; otherwise, it inherits the <params> of the base\n            // URL (if any) and\n            if (!relativeParts.params) {\n              builtParts.params = baseParts.params;\n              // 5b) if the embedded URL's <query> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <query> of the base\n              // URL (if any) and we skip to step 7.\n              if (!relativeParts.query) {\n                builtParts.query = baseParts.query;\n              }\n            }\n          } else {\n            // 6) The last segment of the base URL's path (anything\n            // following the rightmost slash \"/\", or the entire path if no\n            // slash is present) is removed and the embedded URL's path is\n            // appended in its place.\n            var baseURLPath = baseParts.path;\n            var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\n            builtParts.path = URLToolkit.normalizePath(newPath);\n          }\n        }\n      }\n      if (builtParts.path === null) {\n        builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\n      }\n      return URLToolkit.buildURLFromParts(builtParts);\n    },\n    parseURL: function(url) {\n      var parts = URL_REGEX.exec(url);\n      if (!parts) {\n        return null;\n      }\n      return {\n        scheme: parts[1] || '',\n        netLoc: parts[2] || '',\n        path: parts[3] || '',\n        params: parts[4] || '',\n        query: parts[5] || '',\n        fragment: parts[6] || ''\n      };\n    },\n    normalizePath: function(path) {\n      // The following operations are\n      // then applied, in order, to the new path:\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\n      // segment, are removed.\n      // 6b) If the path ends with \".\" as a complete path segment,\n      // that \".\" is removed.\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');\n      // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n      // complete path segment not equal to \"..\", are removed.\n      // Removal of these path segments is performed iteratively,\n      // removing the leftmost matching pattern on each iteration,\n      // until no matching pattern remains.\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n      // complete path segment not equal to \"..\", that\n      // \"<segment>/..\" is removed.\n      while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {} // jshint ignore:line\n      return path.split('').reverse().join('');\n    },\n    buildURLFromParts: function(parts) {\n      return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\n    }\n  };\n\n/* jshint ignore:start */\n  module.exports = URLToolkit;\n})(commonjsGlobal);\n/* jshint ignore:end */\n});\n\nvar resolveUrl = function resolveUrl(baseUrl, relativeUrl) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeUrl)) {\n    return relativeUrl;\n  } // if the base URL is relative then combine with the current location\n\n\n  if (!/\\/\\//i.test(baseUrl)) {\n    baseUrl = urlToolkit.buildAbsoluteURL(window$1.location.href, baseUrl);\n  }\n\n  return urlToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n};\n\n/**\n * @typedef {Object} SingleUri\n * @property {string} uri - relative location of segment\n * @property {string} resolvedUri - resolved location of segment\n * @property {Object} byterange - Object containing information on how to make byte range\n *   requests following byte-range-spec per RFC2616.\n * @property {String} byterange.length - length of range request\n * @property {String} byterange.offset - byte offset of range request\n *\n * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1\n */\n\n/**\n * Converts a URLType node (5.3.9.2.3 Table 13) to a segment object\n * that conforms to how m3u8-parser is structured\n *\n * @see https://github.com/videojs/m3u8-parser\n *\n * @param {string} baseUrl - baseUrl provided by <BaseUrl> nodes\n * @param {string} source - source url for segment\n * @param {string} range - optional range used for range calls,\n *   follows  RFC 2616, Clause 14.35.1\n * @return {SingleUri} full segment information transformed into a format similar\n *   to m3u8-parser\n */\n\nvar urlTypeToSegment = function urlTypeToSegment(_ref) {\n  var _ref$baseUrl = _ref.baseUrl,\n      baseUrl = _ref$baseUrl === void 0 ? '' : _ref$baseUrl,\n      _ref$source = _ref.source,\n      source = _ref$source === void 0 ? '' : _ref$source,\n      _ref$range = _ref.range,\n      range = _ref$range === void 0 ? '' : _ref$range,\n      _ref$indexRange = _ref.indexRange,\n      indexRange = _ref$indexRange === void 0 ? '' : _ref$indexRange;\n  var segment = {\n    uri: source,\n    resolvedUri: resolveUrl(baseUrl || '', source)\n  };\n\n  if (range || indexRange) {\n    var rangeStr = range ? range : indexRange;\n    var ranges = rangeStr.split('-');\n    var startRange = parseInt(ranges[0], 10);\n    var endRange = parseInt(ranges[1], 10); // byterange should be inclusive according to\n    // RFC 2616, Clause 14.35.1\n\n    segment.byterange = {\n      length: endRange - startRange + 1,\n      offset: startRange\n    };\n  }\n\n  return segment;\n};\nvar byteRangeToString = function byteRangeToString(byterange) {\n  // `endRange` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  var endRange = byterange.offset + byterange.length - 1;\n  return byterange.offset + \"-\" + endRange;\n};\n\n/**\n * Functions for calculating the range of available segments in static and dynamic\n * manifests.\n */\n\nvar segmentRange = {\n  /**\n   * Returns the entire range of available segments for a static MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  static: function _static(attributes) {\n    var duration = attributes.duration,\n        _attributes$timescale = attributes.timescale,\n        timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n        sourceDuration = attributes.sourceDuration;\n    return {\n      start: 0,\n      end: Math.ceil(sourceDuration / (duration / timescale))\n    };\n  },\n\n  /**\n   * Returns the current live window range of available segments for a dynamic MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  dynamic: function dynamic(attributes) {\n    var NOW = attributes.NOW,\n        clientOffset = attributes.clientOffset,\n        availabilityStartTime = attributes.availabilityStartTime,\n        _attributes$timescale2 = attributes.timescale,\n        timescale = _attributes$timescale2 === void 0 ? 1 : _attributes$timescale2,\n        duration = attributes.duration,\n        _attributes$start = attributes.start,\n        start = _attributes$start === void 0 ? 0 : _attributes$start,\n        _attributes$minimumUp = attributes.minimumUpdatePeriod,\n        minimumUpdatePeriod = _attributes$minimumUp === void 0 ? 0 : _attributes$minimumUp,\n        _attributes$timeShift = attributes.timeShiftBufferDepth,\n        timeShiftBufferDepth = _attributes$timeShift === void 0 ? Infinity : _attributes$timeShift;\n    var now = (NOW + clientOffset) / 1000;\n    var periodStartWC = availabilityStartTime + start;\n    var periodEndWC = now + minimumUpdatePeriod;\n    var periodDuration = periodEndWC - periodStartWC;\n    var segmentCount = Math.ceil(periodDuration * timescale / duration);\n    var availableStart = Math.floor((now - periodStartWC - timeShiftBufferDepth) * timescale / duration);\n    var availableEnd = Math.floor((now - periodStartWC) * timescale / duration);\n    return {\n      start: Math.max(0, availableStart),\n      end: Math.min(segmentCount, availableEnd)\n    };\n  }\n};\n/**\n * Maps a range of numbers to objects with information needed to build the corresponding\n * segment list\n *\n * @name toSegmentsCallback\n * @function\n * @param {number} number\n *        Number of the segment\n * @param {number} index\n *        Index of the number in the range list\n * @return {{ number: Number, duration: Number, timeline: Number, time: Number }}\n *         Object with segment timing and duration info\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping a range of numbers to\n * information needed to build the segment list.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {toSegmentsCallback}\n *         Callback map function\n */\n\nvar toSegments = function toSegments(attributes) {\n  return function (number, index) {\n    var duration = attributes.duration,\n        _attributes$timescale3 = attributes.timescale,\n        timescale = _attributes$timescale3 === void 0 ? 1 : _attributes$timescale3,\n        periodIndex = attributes.periodIndex,\n        _attributes$startNumb = attributes.startNumber,\n        startNumber = _attributes$startNumb === void 0 ? 1 : _attributes$startNumb;\n    return {\n      number: startNumber + number,\n      duration: duration / timescale,\n      timeline: periodIndex,\n      time: index * duration\n    };\n  };\n};\n/**\n * Returns a list of objects containing segment timing and duration info used for\n * building the list of segments. This uses the @duration attribute specified\n * in the MPD manifest to derive the range of segments.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\nvar parseByDuration = function parseByDuration(attributes) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === void 0 ? 'static' : _attributes$type,\n      duration = attributes.duration,\n      _attributes$timescale4 = attributes.timescale,\n      timescale = _attributes$timescale4 === void 0 ? 1 : _attributes$timescale4,\n      sourceDuration = attributes.sourceDuration;\n\n  var _segmentRange$type = segmentRange[type](attributes),\n      start = _segmentRange$type.start,\n      end = _segmentRange$type.end;\n\n  var segments = range(start, end).map(toSegments(attributes));\n\n  if (type === 'static') {\n    var index = segments.length - 1; // final segment may be less than full segment duration\n\n    segments[index].duration = sourceDuration - duration / timescale * index;\n  }\n\n  return segments;\n};\n\n/**\n * Translates SegmentBase into a set of segments.\n * (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @return {Object.<Array>} list of segments\n */\n\nvar segmentsFromBase = function segmentsFromBase(attributes) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {} : _attributes$initializ,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n      _attributes$indexRang = attributes.indexRange,\n      indexRange = _attributes$indexRang === void 0 ? '' : _attributes$indexRang,\n      duration = attributes.duration; // base url is required for SegmentBase to work, per spec (Section 5.3.9.2.1)\n\n  if (!baseUrl) {\n    throw new Error(errors.NO_BASE_URL);\n  }\n\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  var segment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: baseUrl,\n    indexRange: indexRange\n  });\n  segment.map = initSegment; // If there is a duration, use it, otherwise use the given duration of the source\n  // (since SegmentBase is only for one total segment)\n\n  if (duration) {\n    var segmentTimeInfo = parseByDuration(attributes);\n\n    if (segmentTimeInfo.length) {\n      segment.duration = segmentTimeInfo[0].duration;\n      segment.timeline = segmentTimeInfo[0].timeline;\n    }\n  } else if (sourceDuration) {\n    segment.duration = sourceDuration / timescale;\n    segment.timeline = 0;\n  } // This is used for mediaSequence\n\n\n  segment.number = 0;\n  return [segment];\n};\n/**\n * Given a playlist, a sidx box, and a baseUrl, update the segment list of the playlist\n * according to the sidx information given.\n *\n * playlist.sidx has metadadata about the sidx where-as the sidx param\n * is the parsed sidx box itself.\n *\n * @param {Object} playlist the playlist to update the sidx information for\n * @param {Object} sidx the parsed sidx box\n * @return {Object} the playlist object with the updated sidx information\n */\n\nvar addSegmentsToPlaylist = function addSegmentsToPlaylist(playlist, sidx, baseUrl) {\n  // Retain init segment information\n  var initSegment = playlist.sidx.map ? playlist.sidx.map : null; // Retain source duration from initial master manifest parsing\n\n  var sourceDuration = playlist.sidx.duration; // Retain source timeline\n\n  var timeline = playlist.timeline || 0;\n  var sidxByteRange = playlist.sidx.byterange;\n  var sidxEnd = sidxByteRange.offset + sidxByteRange.length; // Retain timescale of the parsed sidx\n\n  var timescale = sidx.timescale; // referenceType 1 refers to other sidx boxes\n\n  var mediaReferences = sidx.references.filter(function (r) {\n    return r.referenceType !== 1;\n  });\n  var segments = []; // firstOffset is the offset from the end of the sidx box\n\n  var startIndex = sidxEnd + sidx.firstOffset;\n\n  for (var i = 0; i < mediaReferences.length; i++) {\n    var reference = sidx.references[i]; // size of the referenced (sub)segment\n\n    var size = reference.referencedSize; // duration of the referenced (sub)segment, in  the  timescale\n    // this will be converted to seconds when generating segments\n\n    var duration = reference.subsegmentDuration; // should be an inclusive range\n\n    var endIndex = startIndex + size - 1;\n    var indexRange = startIndex + \"-\" + endIndex;\n    var attributes = {\n      baseUrl: baseUrl,\n      timescale: timescale,\n      timeline: timeline,\n      // this is used in parseByDuration\n      periodIndex: timeline,\n      duration: duration,\n      sourceDuration: sourceDuration,\n      indexRange: indexRange\n    };\n    var segment = segmentsFromBase(attributes)[0];\n\n    if (initSegment) {\n      segment.map = initSegment;\n    }\n\n    segments.push(segment);\n    startIndex += size;\n  }\n\n  playlist.segments = segments;\n  return playlist;\n};\n\nvar mergeDiscontiguousPlaylists = function mergeDiscontiguousPlaylists(playlists) {\n  var mergedPlaylists = values(playlists.reduce(function (acc, playlist) {\n    // assuming playlist IDs are the same across periods\n    // TODO: handle multiperiod where representation sets are not the same\n    // across periods\n    var name = playlist.attributes.id + (playlist.attributes.lang || ''); // Periods after first\n\n    if (acc[name]) {\n      var _acc$name$segments;\n\n      // first segment of subsequent periods signal a discontinuity\n      if (playlist.segments[0]) {\n        playlist.segments[0].discontinuity = true;\n      }\n\n      (_acc$name$segments = acc[name].segments).push.apply(_acc$name$segments, playlist.segments); // bubble up contentProtection, this assumes all DRM content\n      // has the same contentProtection\n\n\n      if (playlist.attributes.contentProtection) {\n        acc[name].attributes.contentProtection = playlist.attributes.contentProtection;\n      }\n    } else {\n      // first Period\n      acc[name] = playlist;\n    }\n\n    return acc;\n  }, {}));\n  return mergedPlaylists.map(function (playlist) {\n    playlist.discontinuityStarts = findIndexes(playlist.segments, 'discontinuity');\n    return playlist;\n  });\n};\n\nvar addSegmentInfoFromSidx = function addSegmentInfoFromSidx(playlists, sidxMapping) {\n  if (sidxMapping === void 0) {\n    sidxMapping = {};\n  }\n\n  if (!Object.keys(sidxMapping).length) {\n    return playlists;\n  }\n\n  for (var i in playlists) {\n    var playlist = playlists[i];\n\n    if (!playlist.sidx) {\n      continue;\n    }\n\n    var sidxKey = playlist.sidx.uri + '-' + byteRangeToString(playlist.sidx.byterange);\n    var sidxMatch = sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx;\n\n    if (playlist.sidx && sidxMatch) {\n      addSegmentsToPlaylist(playlist, sidxMatch, playlist.sidx.resolvedUri);\n    }\n  }\n\n  return playlists;\n};\n\nvar formatAudioPlaylist = function formatAudioPlaylist(_ref) {\n  var _attributes;\n\n  var attributes = _ref.attributes,\n      segments = _ref.segments,\n      sidx = _ref.sidx;\n  var playlist = {\n    attributes: (_attributes = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth,\n      CODECS: attributes.codecs\n    }, _attributes['PROGRAM-ID'] = 1, _attributes),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  if (sidx) {\n    playlist.sidx = sidx;\n  }\n\n  return playlist;\n};\nvar formatVttPlaylist = function formatVttPlaylist(_ref2) {\n  var _attributes2;\n\n  var attributes = _ref2.attributes,\n      segments = _ref2.segments;\n\n  if (typeof segments === 'undefined') {\n    // vtt tracks may use single file in BaseURL\n    segments = [{\n      uri: attributes.baseUrl,\n      timeline: attributes.periodIndex,\n      resolvedUri: attributes.baseUrl || '',\n      duration: attributes.sourceDuration,\n      number: 0\n    }]; // targetDuration should be the same duration as the only segment\n\n    attributes.duration = attributes.sourceDuration;\n  }\n\n  return {\n    attributes: (_attributes2 = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes2['PROGRAM-ID'] = 1, _attributes2),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n};\nvar organizeAudioPlaylists = function organizeAudioPlaylists(playlists, sidxMapping) {\n  if (sidxMapping === void 0) {\n    sidxMapping = {};\n  }\n\n  var mainPlaylist;\n  var formattedPlaylists = playlists.reduce(function (a, playlist) {\n    var role = playlist.attributes.role && playlist.attributes.role.value || '';\n    var language = playlist.attributes.lang || '';\n    var label = 'main';\n\n    if (language) {\n      var roleLabel = role ? \" (\" + role + \")\" : '';\n      label = \"\" + playlist.attributes.lang + roleLabel;\n    } // skip if we already have the highest quality audio for a language\n\n\n    if (a[label] && a[label].playlists[0].attributes.BANDWIDTH > playlist.attributes.bandwidth) {\n      return a;\n    }\n\n    a[label] = {\n      language: language,\n      autoselect: true,\n      default: role === 'main',\n      playlists: addSegmentInfoFromSidx([formatAudioPlaylist(playlist)], sidxMapping),\n      uri: ''\n    };\n\n    if (typeof mainPlaylist === 'undefined' && role === 'main') {\n      mainPlaylist = playlist;\n      mainPlaylist.default = true;\n    }\n\n    return a;\n  }, {}); // if no playlists have role \"main\", mark the first as main\n\n  if (!mainPlaylist) {\n    var firstLabel = Object.keys(formattedPlaylists)[0];\n    formattedPlaylists[firstLabel].default = true;\n  }\n\n  return formattedPlaylists;\n};\nvar organizeVttPlaylists = function organizeVttPlaylists(playlists, sidxMapping) {\n  if (sidxMapping === void 0) {\n    sidxMapping = {};\n  }\n\n  return playlists.reduce(function (a, playlist) {\n    var label = playlist.attributes.lang || 'text'; // skip if we already have subtitles\n\n    if (a[label]) {\n      return a;\n    }\n\n    a[label] = {\n      language: label,\n      default: false,\n      autoselect: false,\n      playlists: addSegmentInfoFromSidx([formatVttPlaylist(playlist)], sidxMapping),\n      uri: ''\n    };\n    return a;\n  }, {});\n};\nvar formatVideoPlaylist = function formatVideoPlaylist(_ref3) {\n  var _attributes3;\n\n  var attributes = _ref3.attributes,\n      segments = _ref3.segments,\n      sidx = _ref3.sidx;\n  var playlist = {\n    attributes: (_attributes3 = {\n      NAME: attributes.id,\n      AUDIO: 'audio',\n      SUBTITLES: 'subs',\n      RESOLUTION: {\n        width: attributes.width,\n        height: attributes.height\n      },\n      CODECS: attributes.codecs,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes3['PROGRAM-ID'] = 1, _attributes3),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  if (sidx) {\n    playlist.sidx = sidx;\n  }\n\n  return playlist;\n};\nvar toM3u8 = function toM3u8(dashPlaylists, sidxMapping) {\n  var _mediaGroups;\n\n  if (sidxMapping === void 0) {\n    sidxMapping = {};\n  }\n\n  if (!dashPlaylists.length) {\n    return {};\n  } // grab all master attributes\n\n\n  var _dashPlaylists$0$attr = dashPlaylists[0].attributes,\n      duration = _dashPlaylists$0$attr.sourceDuration,\n      _dashPlaylists$0$attr2 = _dashPlaylists$0$attr.minimumUpdatePeriod,\n      minimumUpdatePeriod = _dashPlaylists$0$attr2 === void 0 ? 0 : _dashPlaylists$0$attr2;\n\n  var videoOnly = function videoOnly(_ref4) {\n    var attributes = _ref4.attributes;\n    return attributes.mimeType === 'video/mp4' || attributes.contentType === 'video';\n  };\n\n  var audioOnly = function audioOnly(_ref5) {\n    var attributes = _ref5.attributes;\n    return attributes.mimeType === 'audio/mp4' || attributes.contentType === 'audio';\n  };\n\n  var vttOnly = function vttOnly(_ref6) {\n    var attributes = _ref6.attributes;\n    return attributes.mimeType === 'text/vtt' || attributes.contentType === 'text';\n  };\n\n  var videoPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(videoOnly)).map(formatVideoPlaylist);\n  var audioPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(audioOnly));\n  var vttPlaylists = dashPlaylists.filter(vttOnly);\n  var master = {\n    allowCache: true,\n    discontinuityStarts: [],\n    segments: [],\n    endList: true,\n    mediaGroups: (_mediaGroups = {\n      AUDIO: {},\n      VIDEO: {}\n    }, _mediaGroups['CLOSED-CAPTIONS'] = {}, _mediaGroups.SUBTITLES = {}, _mediaGroups),\n    uri: '',\n    duration: duration,\n    playlists: addSegmentInfoFromSidx(videoPlaylists, sidxMapping),\n    minimumUpdatePeriod: minimumUpdatePeriod * 1000\n  };\n\n  if (audioPlaylists.length) {\n    master.mediaGroups.AUDIO.audio = organizeAudioPlaylists(audioPlaylists, sidxMapping);\n  }\n\n  if (vttPlaylists.length) {\n    master.mediaGroups.SUBTITLES.subs = organizeVttPlaylists(vttPlaylists, sidxMapping);\n  }\n\n  return master;\n};\n\n/**\n * Calculates the R (repetition) value for a live stream (for the final segment\n * in a manifest where the r value is negative 1)\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {number} time\n *        current time (typically the total time up until the final segment)\n * @param {number} duration\n *        duration property for the given <S />\n *\n * @return {number}\n *        R value to reach the end of the given period\n */\nvar getLiveRValue = function getLiveRValue(attributes, time, duration) {\n  var NOW = attributes.NOW,\n      clientOffset = attributes.clientOffset,\n      availabilityStartTime = attributes.availabilityStartTime,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n      _attributes$start = attributes.start,\n      start = _attributes$start === void 0 ? 0 : _attributes$start,\n      _attributes$minimumUp = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp === void 0 ? 0 : _attributes$minimumUp;\n  var now = (NOW + clientOffset) / 1000;\n  var periodStartWC = availabilityStartTime + start;\n  var periodEndWC = now + minimumUpdatePeriod;\n  var periodDuration = periodEndWC - periodStartWC;\n  return Math.ceil((periodDuration * timescale - time) / duration);\n};\n/**\n * Uses information provided by SegmentTemplate.SegmentTimeline to determine segment\n * timing and duration\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\n\nvar parseByTimeline = function parseByTimeline(attributes, segmentTimeline) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === void 0 ? 'static' : _attributes$type,\n      _attributes$minimumUp2 = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp2 === void 0 ? 0 : _attributes$minimumUp2,\n      _attributes$media = attributes.media,\n      media = _attributes$media === void 0 ? '' : _attributes$media,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale2 = attributes.timescale,\n      timescale = _attributes$timescale2 === void 0 ? 1 : _attributes$timescale2,\n      _attributes$startNumb = attributes.startNumber,\n      startNumber = _attributes$startNumb === void 0 ? 1 : _attributes$startNumb,\n      timeline = attributes.periodIndex;\n  var segments = [];\n  var time = -1;\n\n  for (var sIndex = 0; sIndex < segmentTimeline.length; sIndex++) {\n    var S = segmentTimeline[sIndex];\n    var duration = S.d;\n    var repeat = S.r || 0;\n    var segmentTime = S.t || 0;\n\n    if (time < 0) {\n      // first segment\n      time = segmentTime;\n    }\n\n    if (segmentTime && segmentTime > time) {\n      // discontinuity\n      // TODO: How to handle this type of discontinuity\n      // timeline++ here would treat it like HLS discontuity and content would\n      // get appended without gap\n      // E.G.\n      //  <S t=\"0\" d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S t=\"5\" d=\"1\" />\n      // would have $Time$ values of [0, 1, 2, 5]\n      // should this be appened at time positions [0, 1, 2, 3],(#EXT-X-DISCONTINUITY)\n      // or [0, 1, 2, gap, gap, 5]? (#EXT-X-GAP)\n      // does the value of sourceDuration consider this when calculating arbitrary\n      // negative @r repeat value?\n      // E.G. Same elements as above with this added at the end\n      //  <S d=\"1\" r=\"-1\" />\n      //  with a sourceDuration of 10\n      // Would the 2 gaps be included in the time duration calculations resulting in\n      // 8 segments with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9] or 10 segments\n      // with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9, 10, 11] ?\n      time = segmentTime;\n    }\n\n    var count = void 0;\n\n    if (repeat < 0) {\n      var nextS = sIndex + 1;\n\n      if (nextS === segmentTimeline.length) {\n        // last segment\n        if (type === 'dynamic' && minimumUpdatePeriod > 0 && media.indexOf('$Number$') > 0) {\n          count = getLiveRValue(attributes, time, duration);\n        } else {\n          // TODO: This may be incorrect depending on conclusion of TODO above\n          count = (sourceDuration * timescale - time) / duration;\n        }\n      } else {\n        count = (segmentTimeline[nextS].t - time) / duration;\n      }\n    } else {\n      count = repeat + 1;\n    }\n\n    var end = startNumber + segments.length + count;\n    var number = startNumber + segments.length;\n\n    while (number < end) {\n      segments.push({\n        number: number,\n        duration: duration / timescale,\n        time: time,\n        timeline: timeline\n      });\n      time += duration;\n      number++;\n    }\n  }\n\n  return segments;\n};\n\nvar identifierPattern = /\\$([A-z]*)(?:(%0)([0-9]+)d)?\\$/g;\n/**\n * Replaces template identifiers with corresponding values. To be used as the callback\n * for String.prototype.replace\n *\n * @name replaceCallback\n * @function\n * @param {string} match\n *        Entire match of identifier\n * @param {string} identifier\n *        Name of matched identifier\n * @param {string} format\n *        Format tag string. Its presence indicates that padding is expected\n * @param {string} width\n *        Desired length of the replaced value. Values less than this width shall be left\n *        zero padded\n * @return {string}\n *         Replacement for the matched identifier\n */\n\n/**\n * Returns a function to be used as a callback for String.prototype.replace to replace\n * template identifiers\n *\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {replaceCallback}\n *         Callback to be used with String.prototype.replace to replace identifiers\n */\n\nvar identifierReplacement = function identifierReplacement(values) {\n  return function (match, identifier, format, width) {\n    if (match === '$$') {\n      // escape sequence\n      return '$';\n    }\n\n    if (typeof values[identifier] === 'undefined') {\n      return match;\n    }\n\n    var value = '' + values[identifier];\n\n    if (identifier === 'RepresentationID') {\n      // Format tag shall not be present with RepresentationID\n      return value;\n    }\n\n    if (!format) {\n      width = 1;\n    } else {\n      width = parseInt(width, 10);\n    }\n\n    if (value.length >= width) {\n      return value;\n    }\n\n    return \"\" + new Array(width - value.length + 1).join('0') + value;\n  };\n};\n/**\n * Constructs a segment url from a template string\n *\n * @param {string} url\n *        Template string to construct url from\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {string}\n *         Segment url with identifiers replaced\n */\n\nvar constructTemplateUrl = function constructTemplateUrl(url, values) {\n  return url.replace(identifierPattern, identifierReplacement(values));\n};\n/**\n * Generates a list of objects containing timing and duration information about each\n * segment needed to generate segment uris and the complete segment object\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\nvar parseTemplateInfo = function parseTemplateInfo(attributes, segmentTimeline) {\n  if (!attributes.duration && !segmentTimeline) {\n    // if neither @duration or SegmentTimeline are present, then there shall be exactly\n    // one media segment\n    return [{\n      number: attributes.startNumber || 1,\n      duration: attributes.sourceDuration,\n      time: 0,\n      timeline: attributes.periodIndex\n    }];\n  }\n\n  if (attributes.duration) {\n    return parseByDuration(attributes);\n  }\n\n  return parseByTimeline(attributes, segmentTimeline);\n};\n/**\n * Generates a list of segments using information provided by the SegmentTemplate element\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object[]}\n *         List of segment objects\n */\n\nvar segmentsFromTemplate = function segmentsFromTemplate(attributes, segmentTimeline) {\n  var templateValues = {\n    RepresentationID: attributes.id,\n    Bandwidth: attributes.bandwidth || 0\n  };\n  var _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {\n    sourceURL: '',\n    range: ''\n  } : _attributes$initializ;\n  var mapSegment = urlTypeToSegment({\n    baseUrl: attributes.baseUrl,\n    source: constructTemplateUrl(initialization.sourceURL, templateValues),\n    range: initialization.range\n  });\n  var segments = parseTemplateInfo(attributes, segmentTimeline);\n  return segments.map(function (segment) {\n    templateValues.Number = segment.number;\n    templateValues.Time = segment.time;\n    var uri = constructTemplateUrl(attributes.media || '', templateValues);\n    return {\n      uri: uri,\n      timeline: segment.timeline,\n      duration: segment.duration,\n      resolvedUri: resolveUrl(attributes.baseUrl || '', uri),\n      map: mapSegment,\n      number: segment.number\n    };\n  });\n};\n\n/**\n * Converts a <SegmentUrl> (of type URLType from the DASH spec 5.3.9.2 Table 14)\n * to an object that matches the output of a segment in videojs/mpd-parser\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object} segmentUrl\n *   <SegmentURL> node to translate into a segment object\n * @return {Object} translated segment object\n */\n\nvar SegmentURLToSegmentObject = function SegmentURLToSegmentObject(attributes, segmentUrl) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {} : _attributes$initializ;\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  var segment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: segmentUrl.media,\n    range: segmentUrl.mediaRange\n  });\n  segment.map = initSegment;\n  return segment;\n};\n/**\n * Generates a list of segments using information provided by the SegmentList element\n * SegmentList (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object.<Array>} list of segments\n */\n\n\nvar segmentsFromList = function segmentsFromList(attributes, segmentTimeline) {\n  var duration = attributes.duration,\n      _attributes$segmentUr = attributes.segmentUrls,\n      segmentUrls = _attributes$segmentUr === void 0 ? [] : _attributes$segmentUr; // Per spec (5.3.9.2.1) no way to determine segment duration OR\n  // if both SegmentTimeline and @duration are defined, it is outside of spec.\n\n  if (!duration && !segmentTimeline || duration && segmentTimeline) {\n    throw new Error(errors.SEGMENT_TIME_UNSPECIFIED);\n  }\n\n  var segmentUrlMap = segmentUrls.map(function (segmentUrlObject) {\n    return SegmentURLToSegmentObject(attributes, segmentUrlObject);\n  });\n  var segmentTimeInfo;\n\n  if (duration) {\n    segmentTimeInfo = parseByDuration(attributes);\n  }\n\n  if (segmentTimeline) {\n    segmentTimeInfo = parseByTimeline(attributes, segmentTimeline);\n  }\n\n  var segments = segmentTimeInfo.map(function (segmentTime, index) {\n    if (segmentUrlMap[index]) {\n      var segment = segmentUrlMap[index];\n      segment.timeline = segmentTime.timeline;\n      segment.duration = segmentTime.duration;\n      segment.number = segmentTime.number;\n      return segment;\n    } // Since we're mapping we should get rid of any blank segments (in case\n    // the given SegmentTimeline is handling for more elements than we have\n    // SegmentURLs for).\n\n  }).filter(function (segment) {\n    return segment;\n  });\n  return segments;\n};\n\nvar generateSegments = function generateSegments(_ref) {\n  var attributes = _ref.attributes,\n      segmentInfo = _ref.segmentInfo;\n  var segmentAttributes;\n  var segmentsFn;\n\n  if (segmentInfo.template) {\n    segmentsFn = segmentsFromTemplate;\n    segmentAttributes = merge(attributes, segmentInfo.template);\n  } else if (segmentInfo.base) {\n    segmentsFn = segmentsFromBase;\n    segmentAttributes = merge(attributes, segmentInfo.base);\n  } else if (segmentInfo.list) {\n    segmentsFn = segmentsFromList;\n    segmentAttributes = merge(attributes, segmentInfo.list);\n  }\n\n  var segmentsInfo = {\n    attributes: attributes\n  };\n\n  if (!segmentsFn) {\n    return segmentsInfo;\n  }\n\n  var segments = segmentsFn(segmentAttributes, segmentInfo.timeline); // The @duration attribute will be used to determin the playlist's targetDuration which\n  // must be in seconds. Since we've generated the segment list, we no longer need\n  // @duration to be in @timescale units, so we can convert it here.\n\n  if (segmentAttributes.duration) {\n    var _segmentAttributes = segmentAttributes,\n        duration = _segmentAttributes.duration,\n        _segmentAttributes$ti = _segmentAttributes.timescale,\n        timescale = _segmentAttributes$ti === void 0 ? 1 : _segmentAttributes$ti;\n    segmentAttributes.duration = duration / timescale;\n  } else if (segments.length) {\n    // if there is no @duration attribute, use the largest segment duration as\n    // as target duration\n    segmentAttributes.duration = segments.reduce(function (max, segment) {\n      return Math.max(max, Math.ceil(segment.duration));\n    }, 0);\n  } else {\n    segmentAttributes.duration = 0;\n  }\n\n  segmentsInfo.attributes = segmentAttributes;\n  segmentsInfo.segments = segments; // This is a sidx box without actual segment information\n\n  if (segmentInfo.base && segmentAttributes.indexRange) {\n    segmentsInfo.sidx = segments[0];\n    segmentsInfo.segments = [];\n  }\n\n  return segmentsInfo;\n};\nvar toPlaylists = function toPlaylists(representations) {\n  return representations.map(generateSegments);\n};\n\nvar findChildren = function findChildren(element, name) {\n  return from(element.childNodes).filter(function (_ref) {\n    var tagName = _ref.tagName;\n    return tagName === name;\n  });\n};\nvar getContent = function getContent(element) {\n  return element.textContent.trim();\n};\n\nvar parseDuration = function parseDuration(str) {\n  var SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\n  var SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\n  var SECONDS_IN_DAY = 24 * 60 * 60;\n  var SECONDS_IN_HOUR = 60 * 60;\n  var SECONDS_IN_MIN = 60; // P10Y10M10DT10H10M10.1S\n\n  var durationRegex = /P(?:(\\d*)Y)?(?:(\\d*)M)?(?:(\\d*)D)?(?:T(?:(\\d*)H)?(?:(\\d*)M)?(?:([\\d.]*)S)?)?/;\n  var match = durationRegex.exec(str);\n\n  if (!match) {\n    return 0;\n  }\n\n  var _match$slice = match.slice(1),\n      year = _match$slice[0],\n      month = _match$slice[1],\n      day = _match$slice[2],\n      hour = _match$slice[3],\n      minute = _match$slice[4],\n      second = _match$slice[5];\n\n  return parseFloat(year || 0) * SECONDS_IN_YEAR + parseFloat(month || 0) * SECONDS_IN_MONTH + parseFloat(day || 0) * SECONDS_IN_DAY + parseFloat(hour || 0) * SECONDS_IN_HOUR + parseFloat(minute || 0) * SECONDS_IN_MIN + parseFloat(second || 0);\n};\nvar parseDate = function parseDate(str) {\n  // Date format without timezone according to ISO 8601\n  // YYY-MM-DDThh:mm:ss.ssssss\n  var dateRegex = /^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+(\\.\\d+)?$/; // If the date string does not specifiy a timezone, we must specifiy UTC. This is\n  // expressed by ending with 'Z'\n\n  if (dateRegex.test(str)) {\n    str += 'Z';\n  }\n\n  return Date.parse(str);\n};\n\nvar parsers = {\n  /**\n   * Specifies the duration of the entire Media Presentation. Format is a duration string\n   * as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  mediaPresentationDuration: function mediaPresentationDuration(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the Segment availability start time for all Segments referred to in this\n   * MPD. For a dynamic manifest, it specifies the anchor for the earliest availability\n   * time. Format is a date string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The date as seconds from unix epoch\n   */\n  availabilityStartTime: function availabilityStartTime(value) {\n    return parseDate(value) / 1000;\n  },\n\n  /**\n   * Specifies the smallest period between potential changes to the MPD. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  minimumUpdatePeriod: function minimumUpdatePeriod(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the duration of the smallest time shifting buffer for any Representation\n   * in the MPD. Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  timeShiftBufferDepth: function timeShiftBufferDepth(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the PeriodStart time of the Period relative to the availabilityStarttime.\n   * Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  start: function start(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the width of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed width\n   */\n  width: function width(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the height of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed height\n   */\n  height: function height(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the bitrate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed bandwidth\n   */\n  bandwidth: function bandwidth(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the number of the first Media Segment in this Representation in the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  startNumber: function startNumber(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the timescale in units per seconds\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The aprsed timescale\n   */\n  timescale: function timescale(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the constant approximate Segment duration\n   * NOTE: The <Period> element also contains an @duration attribute. This duration\n   *       specifies the duration of the Period. This attribute is currently not\n   *       supported by the rest of the parser, however we still check for it to prevent\n   *       errors.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  duration: function duration(value) {\n    var parsedValue = parseInt(value, 10);\n\n    if (isNaN(parsedValue)) {\n      return parseDuration(value);\n    }\n\n    return parsedValue;\n  },\n\n  /**\n   * Specifies the Segment duration, in units of the value of the @timescale.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  d: function d(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the MPD start time, in @timescale units, the first Segment in the series\n   * starts relative to the beginning of the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed time\n   */\n  t: function t(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the repeat count of the number of following contiguous Segments with the\n   * same duration expressed by the value of @d\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  r: function r(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Default parser for all other attributes. Acts as a no-op and just returns the value\n   * as a string\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {string}\n   *         Unparsed value\n   */\n  DEFAULT: function DEFAULT(value) {\n    return value;\n  }\n};\n/**\n * Gets all the attributes and values of the provided node, parses attributes with known\n * types, and returns an object with attribute names mapped to values.\n *\n * @param {Node} el\n *        The node to parse attributes from\n * @return {Object}\n *         Object with all attributes of el parsed\n */\n\nvar parseAttributes = function parseAttributes(el) {\n  if (!(el && el.attributes)) {\n    return {};\n  }\n\n  return from(el.attributes).reduce(function (a, e) {\n    var parseFn = parsers[e.name] || parsers.DEFAULT;\n    a[e.name] = parseFn(e.value);\n    return a;\n  }, {});\n};\n\nfunction decodeB64ToUint8Array(b64Text) {\n  var decodedString = window$1.atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n\n  return array;\n}\n\nvar keySystemsMap = {\n  'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',\n  'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',\n  'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',\n  'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime'\n};\n/**\n * Builds a list of urls that is the product of the reference urls and BaseURL values\n *\n * @param {string[]} referenceUrls\n *        List of reference urls to resolve to\n * @param {Node[]} baseUrlElements\n *        List of BaseURL nodes from the mpd\n * @return {string[]}\n *         List of resolved urls\n */\n\nvar buildBaseUrls = function buildBaseUrls(referenceUrls, baseUrlElements) {\n  if (!baseUrlElements.length) {\n    return referenceUrls;\n  }\n\n  return flatten(referenceUrls.map(function (reference) {\n    return baseUrlElements.map(function (baseUrlElement) {\n      return resolveUrl(reference, getContent(baseUrlElement));\n    });\n  }));\n};\n/**\n * Contains all Segment information for its containing AdaptationSet\n *\n * @typedef {Object} SegmentInformation\n * @property {Object|undefined} template\n *           Contains the attributes for the SegmentTemplate node\n * @property {Object[]|undefined} timeline\n *           Contains a list of atrributes for each S node within the SegmentTimeline node\n * @property {Object|undefined} list\n *           Contains the attributes for the SegmentList node\n * @property {Object|undefined} base\n *           Contains the attributes for the SegmentBase node\n */\n\n/**\n * Returns all available Segment information contained within the AdaptationSet node\n *\n * @param {Node} adaptationSet\n *        The AdaptationSet node to get Segment information from\n * @return {SegmentInformation}\n *         The Segment information contained within the provided AdaptationSet\n */\n\nvar getSegmentInformation = function getSegmentInformation(adaptationSet) {\n  var segmentTemplate = findChildren(adaptationSet, 'SegmentTemplate')[0];\n  var segmentList = findChildren(adaptationSet, 'SegmentList')[0];\n  var segmentUrls = segmentList && findChildren(segmentList, 'SegmentURL').map(function (s) {\n    return merge({\n      tag: 'SegmentURL'\n    }, parseAttributes(s));\n  });\n  var segmentBase = findChildren(adaptationSet, 'SegmentBase')[0];\n  var segmentTimelineParentNode = segmentList || segmentTemplate;\n  var segmentTimeline = segmentTimelineParentNode && findChildren(segmentTimelineParentNode, 'SegmentTimeline')[0];\n  var segmentInitializationParentNode = segmentList || segmentBase || segmentTemplate;\n  var segmentInitialization = segmentInitializationParentNode && findChildren(segmentInitializationParentNode, 'Initialization')[0]; // SegmentTemplate is handled slightly differently, since it can have both\n  // @initialization and an <Initialization> node.  @initialization can be templated,\n  // while the node can have a url and range specified.  If the <SegmentTemplate> has\n  // both @initialization and an <Initialization> subelement we opt to override with\n  // the node, as this interaction is not defined in the spec.\n\n  var template = segmentTemplate && parseAttributes(segmentTemplate);\n\n  if (template && segmentInitialization) {\n    template.initialization = segmentInitialization && parseAttributes(segmentInitialization);\n  } else if (template && template.initialization) {\n    // If it is @initialization we convert it to an object since this is the format that\n    // later functions will rely on for the initialization segment.  This is only valid\n    // for <SegmentTemplate>\n    template.initialization = {\n      sourceURL: template.initialization\n    };\n  }\n\n  var segmentInfo = {\n    template: template,\n    timeline: segmentTimeline && findChildren(segmentTimeline, 'S').map(function (s) {\n      return parseAttributes(s);\n    }),\n    list: segmentList && merge(parseAttributes(segmentList), {\n      segmentUrls: segmentUrls,\n      initialization: parseAttributes(segmentInitialization)\n    }),\n    base: segmentBase && merge(parseAttributes(segmentBase), {\n      initialization: parseAttributes(segmentInitialization)\n    })\n  };\n  Object.keys(segmentInfo).forEach(function (key) {\n    if (!segmentInfo[key]) {\n      delete segmentInfo[key];\n    }\n  });\n  return segmentInfo;\n};\n/**\n * Contains Segment information and attributes needed to construct a Playlist object\n * from a Representation\n *\n * @typedef {Object} RepresentationInformation\n * @property {SegmentInformation} segmentInfo\n *           Segment information for this Representation\n * @property {Object} attributes\n *           Inherited attributes for this Representation\n */\n\n/**\n * Maps a Representation node to an object containing Segment information and attributes\n *\n * @name inheritBaseUrlsCallback\n * @function\n * @param {Node} representation\n *        Representation node from the mpd\n * @return {RepresentationInformation}\n *         Representation information needed to construct a Playlist object\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Representation nodes to\n * Segment information and attributes using inherited BaseURL nodes.\n *\n * @param {Object} adaptationSetAttributes\n *        Contains attributes inherited by the AdaptationSet\n * @param {string[]} adaptationSetBaseUrls\n *        Contains list of resolved base urls inherited by the AdaptationSet\n * @param {SegmentInformation} adaptationSetSegmentInfo\n *        Contains Segment information for the AdaptationSet\n * @return {inheritBaseUrlsCallback}\n *         Callback map function\n */\n\nvar inheritBaseUrls = function inheritBaseUrls(adaptationSetAttributes, adaptationSetBaseUrls, adaptationSetSegmentInfo) {\n  return function (representation) {\n    var repBaseUrlElements = findChildren(representation, 'BaseURL');\n    var repBaseUrls = buildBaseUrls(adaptationSetBaseUrls, repBaseUrlElements);\n    var attributes = merge(adaptationSetAttributes, parseAttributes(representation));\n    var representationSegmentInfo = getSegmentInformation(representation);\n    return repBaseUrls.map(function (baseUrl) {\n      return {\n        segmentInfo: merge(adaptationSetSegmentInfo, representationSegmentInfo),\n        attributes: merge(attributes, {\n          baseUrl: baseUrl\n        })\n      };\n    });\n  };\n};\n/**\n * Tranforms a series of content protection nodes to\n * an object containing pssh data by key system\n *\n * @param {Node[]} contentProtectionNodes\n *        Content protection nodes\n * @return {Object}\n *        Object containing pssh data by key system\n */\n\nvar generateKeySystemInformation = function generateKeySystemInformation(contentProtectionNodes) {\n  return contentProtectionNodes.reduce(function (acc, node) {\n    var attributes = parseAttributes(node);\n    var keySystem = keySystemsMap[attributes.schemeIdUri];\n\n    if (keySystem) {\n      acc[keySystem] = {\n        attributes: attributes\n      };\n      var psshNode = findChildren(node, 'cenc:pssh')[0];\n\n      if (psshNode) {\n        var pssh = getContent(psshNode);\n        var psshBuffer = pssh && decodeB64ToUint8Array(pssh);\n        acc[keySystem].pssh = psshBuffer;\n      }\n    }\n\n    return acc;\n  }, {});\n};\n/**\n * Maps an AdaptationSet node to a list of Representation information objects\n *\n * @name toRepresentationsCallback\n * @function\n * @param {Node} adaptationSet\n *        AdaptationSet node from the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping AdaptationSet nodes to a list of\n * Representation information objects\n *\n * @param {Object} periodAttributes\n *        Contains attributes inherited by the Period\n * @param {string[]} periodBaseUrls\n *        Contains list of resolved base urls inherited by the Period\n * @param {string[]} periodSegmentInfo\n *        Contains Segment Information at the period level\n * @return {toRepresentationsCallback}\n *         Callback map function\n */\n\n\nvar toRepresentations = function toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo) {\n  return function (adaptationSet) {\n    var adaptationSetAttributes = parseAttributes(adaptationSet);\n    var adaptationSetBaseUrls = buildBaseUrls(periodBaseUrls, findChildren(adaptationSet, 'BaseURL'));\n    var role = findChildren(adaptationSet, 'Role')[0];\n    var roleAttributes = {\n      role: parseAttributes(role)\n    };\n    var attrs = merge(periodAttributes, adaptationSetAttributes, roleAttributes);\n    var contentProtection = generateKeySystemInformation(findChildren(adaptationSet, 'ContentProtection'));\n\n    if (Object.keys(contentProtection).length) {\n      attrs = merge(attrs, {\n        contentProtection: contentProtection\n      });\n    }\n\n    var segmentInfo = getSegmentInformation(adaptationSet);\n    var representations = findChildren(adaptationSet, 'Representation');\n    var adaptationSetSegmentInfo = merge(periodSegmentInfo, segmentInfo);\n    return flatten(representations.map(inheritBaseUrls(attrs, adaptationSetBaseUrls, adaptationSetSegmentInfo)));\n  };\n};\n/**\n * Maps an Period node to a list of Representation inforamtion objects for all\n * AdaptationSet nodes contained within the Period\n *\n * @name toAdaptationSetsCallback\n * @function\n * @param {Node} period\n *        Period node from the mpd\n * @param {number} periodIndex\n *        Index of the Period within the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Period nodes to a list of\n * Representation information objects\n *\n * @param {Object} mpdAttributes\n *        Contains attributes inherited by the mpd\n * @param {string[]} mpdBaseUrls\n *        Contains list of resolved base urls inherited by the mpd\n * @return {toAdaptationSetsCallback}\n *         Callback map function\n */\n\nvar toAdaptationSets = function toAdaptationSets(mpdAttributes, mpdBaseUrls) {\n  return function (period, index) {\n    var periodBaseUrls = buildBaseUrls(mpdBaseUrls, findChildren(period, 'BaseURL'));\n    var periodAtt = parseAttributes(period);\n    var parsedPeriodId = parseInt(periodAtt.id, 10); // fallback to mapping index if Period@id is not a number\n\n    var periodIndex = window$1.isNaN(parsedPeriodId) ? index : parsedPeriodId;\n    var periodAttributes = merge(mpdAttributes, {\n      periodIndex: periodIndex\n    });\n    var adaptationSets = findChildren(period, 'AdaptationSet');\n    var periodSegmentInfo = getSegmentInformation(period);\n    return flatten(adaptationSets.map(toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo)));\n  };\n};\n/**\n * Traverses the mpd xml tree to generate a list of Representation information objects\n * that have inherited attributes from parent nodes\n *\n * @param {Node} mpd\n *        The root node of the mpd\n * @param {Object} options\n *        Available options for inheritAttributes\n * @param {string} options.manifestUri\n *        The uri source of the mpd\n * @param {number} options.NOW\n *        Current time per DASH IOP.  Default is current time in ms since epoch\n * @param {number} options.clientOffset\n *        Client time difference from NOW (in milliseconds)\n * @return {RepresentationInformation[]}\n *         List of objects containing Representation information\n */\n\nvar inheritAttributes = function inheritAttributes(mpd, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$manifestUri = _options.manifestUri,\n      manifestUri = _options$manifestUri === void 0 ? '' : _options$manifestUri,\n      _options$NOW = _options.NOW,\n      NOW = _options$NOW === void 0 ? Date.now() : _options$NOW,\n      _options$clientOffset = _options.clientOffset,\n      clientOffset = _options$clientOffset === void 0 ? 0 : _options$clientOffset;\n  var periods = findChildren(mpd, 'Period');\n\n  if (!periods.length) {\n    throw new Error(errors.INVALID_NUMBER_OF_PERIOD);\n  }\n\n  var mpdAttributes = parseAttributes(mpd);\n  var mpdBaseUrls = buildBaseUrls([manifestUri], findChildren(mpd, 'BaseURL'));\n  mpdAttributes.sourceDuration = mpdAttributes.mediaPresentationDuration || 0;\n  mpdAttributes.NOW = NOW;\n  mpdAttributes.clientOffset = clientOffset;\n  return flatten(periods.map(toAdaptationSets(mpdAttributes, mpdBaseUrls)));\n};\n\nvar stringToMpdXml = function stringToMpdXml(manifestString) {\n  if (manifestString === '') {\n    throw new Error(errors.DASH_EMPTY_MANIFEST);\n  }\n\n  var parser = new window$1.DOMParser();\n  var xml = parser.parseFromString(manifestString, 'application/xml');\n  var mpd = xml && xml.documentElement.tagName === 'MPD' ? xml.documentElement : null;\n\n  if (!mpd || mpd && mpd.getElementsByTagName('parsererror').length > 0) {\n    throw new Error(errors.DASH_INVALID_XML);\n  }\n\n  return mpd;\n};\n\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} mpd\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\nvar parseUTCTimingScheme = function parseUTCTimingScheme(mpd) {\n  var UTCTimingNode = findChildren(mpd, 'UTCTiming')[0];\n\n  if (!UTCTimingNode) {\n    return null;\n  }\n\n  var attributes = parseAttributes(UTCTimingNode);\n\n  switch (attributes.schemeIdUri) {\n    case 'urn:mpeg:dash:utc:http-head:2014':\n    case 'urn:mpeg:dash:utc:http-head:2012':\n      attributes.method = 'HEAD';\n      break;\n\n    case 'urn:mpeg:dash:utc:http-xsdate:2014':\n    case 'urn:mpeg:dash:utc:http-iso:2014':\n    case 'urn:mpeg:dash:utc:http-xsdate:2012':\n    case 'urn:mpeg:dash:utc:http-iso:2012':\n      attributes.method = 'GET';\n      break;\n\n    case 'urn:mpeg:dash:utc:direct:2014':\n    case 'urn:mpeg:dash:utc:direct:2012':\n      attributes.method = 'DIRECT';\n      attributes.value = Date.parse(attributes.value);\n      break;\n\n    case 'urn:mpeg:dash:utc:http-ntp:2014':\n    case 'urn:mpeg:dash:utc:ntp:2014':\n    case 'urn:mpeg:dash:utc:sntp:2014':\n    default:\n      throw new Error(errors.UNSUPPORTED_UTC_TIMING_SCHEME);\n  }\n\n  return attributes;\n};\n\nvar VERSION = version;\nvar parse = function parse(manifestString, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return toM3u8(toPlaylists(inheritAttributes(stringToMpdXml(manifestString), options)), options.sidxMapping);\n};\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} manifestString\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\nvar parseUTCTiming = function parseUTCTiming(manifestString) {\n  return parseUTCTimingScheme(stringToMpdXml(manifestString));\n};\n\nexport { VERSION, parse, parseUTCTiming };\n","module.exports = {};\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","module.exports = SafeParseTuple\n\nfunction SafeParseTuple(obj, reviver) {\n    var json\n    var error = null\n\n    try {\n        json = JSON.parse(obj, reviver)\n    } catch (err) {\n        error = err\n    }\n\n    return [error, json]\n}\n","/**\n  * vue-router v3.0.1\n  * (c) 2017 Evan You\n  * @license MIT\n  */\n/*  */\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error((\"[vue-router] \" + message))\n  }\n}\n\nfunction warn (condition, message) {\n  if (process.env.NODE_ENV !== 'production' && !condition) {\n    typeof console !== 'undefined' && console.warn((\"[vue-router] \" + message));\n  }\n}\n\nfunction isError (err) {\n  return Object.prototype.toString.call(err).indexOf('Error') > -1\n}\n\nvar View = {\n  name: 'router-view',\n  functional: true,\n  props: {\n    name: {\n      type: String,\n      default: 'default'\n    }\n  },\n  render: function render (_, ref) {\n    var props = ref.props;\n    var children = ref.children;\n    var parent = ref.parent;\n    var data = ref.data;\n\n    data.routerView = true;\n\n    // directly use parent context's createElement() function\n    // so that components rendered by router-view can resolve named slots\n    var h = parent.$createElement;\n    var name = props.name;\n    var route = parent.$route;\n    var cache = parent._routerViewCache || (parent._routerViewCache = {});\n\n    // determine current view depth, also check to see if the tree\n    // has been toggled inactive but kept-alive.\n    var depth = 0;\n    var inactive = false;\n    while (parent && parent._routerRoot !== parent) {\n      if (parent.$vnode && parent.$vnode.data.routerView) {\n        depth++;\n      }\n      if (parent._inactive) {\n        inactive = true;\n      }\n      parent = parent.$parent;\n    }\n    data.routerViewDepth = depth;\n\n    // render previous view if the tree is inactive and kept-alive\n    if (inactive) {\n      return h(cache[name], data, children)\n    }\n\n    var matched = route.matched[depth];\n    // render empty node if no matched route\n    if (!matched) {\n      cache[name] = null;\n      return h()\n    }\n\n    var component = cache[name] = matched.components[name];\n\n    // attach instance registration hook\n    // this will be called in the instance's injected lifecycle hooks\n    data.registerRouteInstance = function (vm, val) {\n      // val could be undefined for unregistration\n      var current = matched.instances[name];\n      if (\n        (val && current !== vm) ||\n        (!val && current === vm)\n      ) {\n        matched.instances[name] = val;\n      }\n    }\n\n    // also register instance in prepatch hook\n    // in case the same component instance is reused across different routes\n    ;(data.hook || (data.hook = {})).prepatch = function (_, vnode) {\n      matched.instances[name] = vnode.componentInstance;\n    };\n\n    // resolve props\n    var propsToPass = data.props = resolveProps(route, matched.props && matched.props[name]);\n    if (propsToPass) {\n      // clone to prevent mutation\n      propsToPass = data.props = extend({}, propsToPass);\n      // pass non-declared props as attrs\n      var attrs = data.attrs = data.attrs || {};\n      for (var key in propsToPass) {\n        if (!component.props || !(key in component.props)) {\n          attrs[key] = propsToPass[key];\n          delete propsToPass[key];\n        }\n      }\n    }\n\n    return h(component, data, children)\n  }\n};\n\nfunction resolveProps (route, config) {\n  switch (typeof config) {\n    case 'undefined':\n      return\n    case 'object':\n      return config\n    case 'function':\n      return config(route)\n    case 'boolean':\n      return config ? route.params : undefined\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false,\n          \"props in \\\"\" + (route.path) + \"\\\" is a \" + (typeof config) + \", \" +\n          \"expecting an object, function or boolean.\"\n        );\n      }\n  }\n}\n\nfunction extend (to, from) {\n  for (var key in from) {\n    to[key] = from[key];\n  }\n  return to\n}\n\n/*  */\n\nvar encodeReserveRE = /[!'()*]/g;\nvar encodeReserveReplacer = function (c) { return '%' + c.charCodeAt(0).toString(16); };\nvar commaRE = /%2C/g;\n\n// fixed encodeURIComponent which is more conformant to RFC3986:\n// - escapes [!'()*]\n// - preserve commas\nvar encode = function (str) { return encodeURIComponent(str)\n  .replace(encodeReserveRE, encodeReserveReplacer)\n  .replace(commaRE, ','); };\n\nvar decode = decodeURIComponent;\n\nfunction resolveQuery (\n  query,\n  extraQuery,\n  _parseQuery\n) {\n  if ( extraQuery === void 0 ) extraQuery = {};\n\n  var parse = _parseQuery || parseQuery;\n  var parsedQuery;\n  try {\n    parsedQuery = parse(query || '');\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn(false, e.message);\n    parsedQuery = {};\n  }\n  for (var key in extraQuery) {\n    parsedQuery[key] = extraQuery[key];\n  }\n  return parsedQuery\n}\n\nfunction parseQuery (query) {\n  var res = {};\n\n  query = query.trim().replace(/^(\\?|#|&)/, '');\n\n  if (!query) {\n    return res\n  }\n\n  query.split('&').forEach(function (param) {\n    var parts = param.replace(/\\+/g, ' ').split('=');\n    var key = decode(parts.shift());\n    var val = parts.length > 0\n      ? decode(parts.join('='))\n      : null;\n\n    if (res[key] === undefined) {\n      res[key] = val;\n    } else if (Array.isArray(res[key])) {\n      res[key].push(val);\n    } else {\n      res[key] = [res[key], val];\n    }\n  });\n\n  return res\n}\n\nfunction stringifyQuery (obj) {\n  var res = obj ? Object.keys(obj).map(function (key) {\n    var val = obj[key];\n\n    if (val === undefined) {\n      return ''\n    }\n\n    if (val === null) {\n      return encode(key)\n    }\n\n    if (Array.isArray(val)) {\n      var result = [];\n      val.forEach(function (val2) {\n        if (val2 === undefined) {\n          return\n        }\n        if (val2 === null) {\n          result.push(encode(key));\n        } else {\n          result.push(encode(key) + '=' + encode(val2));\n        }\n      });\n      return result.join('&')\n    }\n\n    return encode(key) + '=' + encode(val)\n  }).filter(function (x) { return x.length > 0; }).join('&') : null;\n  return res ? (\"?\" + res) : ''\n}\n\n/*  */\n\n\nvar trailingSlashRE = /\\/?$/;\n\nfunction createRoute (\n  record,\n  location,\n  redirectedFrom,\n  router\n) {\n  var stringifyQuery$$1 = router && router.options.stringifyQuery;\n\n  var query = location.query || {};\n  try {\n    query = clone(query);\n  } catch (e) {}\n\n  var route = {\n    name: location.name || (record && record.name),\n    meta: (record && record.meta) || {},\n    path: location.path || '/',\n    hash: location.hash || '',\n    query: query,\n    params: location.params || {},\n    fullPath: getFullPath(location, stringifyQuery$$1),\n    matched: record ? formatMatch(record) : []\n  };\n  if (redirectedFrom) {\n    route.redirectedFrom = getFullPath(redirectedFrom, stringifyQuery$$1);\n  }\n  return Object.freeze(route)\n}\n\nfunction clone (value) {\n  if (Array.isArray(value)) {\n    return value.map(clone)\n  } else if (value && typeof value === 'object') {\n    var res = {};\n    for (var key in value) {\n      res[key] = clone(value[key]);\n    }\n    return res\n  } else {\n    return value\n  }\n}\n\n// the starting route that represents the initial state\nvar START = createRoute(null, {\n  path: '/'\n});\n\nfunction formatMatch (record) {\n  var res = [];\n  while (record) {\n    res.unshift(record);\n    record = record.parent;\n  }\n  return res\n}\n\nfunction getFullPath (\n  ref,\n  _stringifyQuery\n) {\n  var path = ref.path;\n  var query = ref.query; if ( query === void 0 ) query = {};\n  var hash = ref.hash; if ( hash === void 0 ) hash = '';\n\n  var stringify = _stringifyQuery || stringifyQuery;\n  return (path || '/') + stringify(query) + hash\n}\n\nfunction isSameRoute (a, b) {\n  if (b === START) {\n    return a === b\n  } else if (!b) {\n    return false\n  } else if (a.path && b.path) {\n    return (\n      a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query)\n    )\n  } else if (a.name && b.name) {\n    return (\n      a.name === b.name &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query) &&\n      isObjectEqual(a.params, b.params)\n    )\n  } else {\n    return false\n  }\n}\n\nfunction isObjectEqual (a, b) {\n  if ( a === void 0 ) a = {};\n  if ( b === void 0 ) b = {};\n\n  // handle null value #1566\n  if (!a || !b) { return a === b }\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false\n  }\n  return aKeys.every(function (key) {\n    var aVal = a[key];\n    var bVal = b[key];\n    // check nested equality\n    if (typeof aVal === 'object' && typeof bVal === 'object') {\n      return isObjectEqual(aVal, bVal)\n    }\n    return String(aVal) === String(bVal)\n  })\n}\n\nfunction isIncludedRoute (current, target) {\n  return (\n    current.path.replace(trailingSlashRE, '/').indexOf(\n      target.path.replace(trailingSlashRE, '/')\n    ) === 0 &&\n    (!target.hash || current.hash === target.hash) &&\n    queryIncludes(current.query, target.query)\n  )\n}\n\nfunction queryIncludes (current, target) {\n  for (var key in target) {\n    if (!(key in current)) {\n      return false\n    }\n  }\n  return true\n}\n\n/*  */\n\n// work around weird flow bug\nvar toTypes = [String, Object];\nvar eventTypes = [String, Array];\n\nvar Link = {\n  name: 'router-link',\n  props: {\n    to: {\n      type: toTypes,\n      required: true\n    },\n    tag: {\n      type: String,\n      default: 'a'\n    },\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String,\n    event: {\n      type: eventTypes,\n      default: 'click'\n    }\n  },\n  render: function render (h) {\n    var this$1 = this;\n\n    var router = this.$router;\n    var current = this.$route;\n    var ref = router.resolve(this.to, current, this.append);\n    var location = ref.location;\n    var route = ref.route;\n    var href = ref.href;\n\n    var classes = {};\n    var globalActiveClass = router.options.linkActiveClass;\n    var globalExactActiveClass = router.options.linkExactActiveClass;\n    // Support global empty active class\n    var activeClassFallback = globalActiveClass == null\n            ? 'router-link-active'\n            : globalActiveClass;\n    var exactActiveClassFallback = globalExactActiveClass == null\n            ? 'router-link-exact-active'\n            : globalExactActiveClass;\n    var activeClass = this.activeClass == null\n            ? activeClassFallback\n            : this.activeClass;\n    var exactActiveClass = this.exactActiveClass == null\n            ? exactActiveClassFallback\n            : this.exactActiveClass;\n    var compareTarget = location.path\n      ? createRoute(null, location, null, router)\n      : route;\n\n    classes[exactActiveClass] = isSameRoute(current, compareTarget);\n    classes[activeClass] = this.exact\n      ? classes[exactActiveClass]\n      : isIncludedRoute(current, compareTarget);\n\n    var handler = function (e) {\n      if (guardEvent(e)) {\n        if (this$1.replace) {\n          router.replace(location);\n        } else {\n          router.push(location);\n        }\n      }\n    };\n\n    var on = { click: guardEvent };\n    if (Array.isArray(this.event)) {\n      this.event.forEach(function (e) { on[e] = handler; });\n    } else {\n      on[this.event] = handler;\n    }\n\n    var data = {\n      class: classes\n    };\n\n    if (this.tag === 'a') {\n      data.on = on;\n      data.attrs = { href: href };\n    } else {\n      // find the first <a> child and apply listener and href\n      var a = findAnchor(this.$slots.default);\n      if (a) {\n        // in case the <a> is a static node\n        a.isStatic = false;\n        var extend = _Vue.util.extend;\n        var aData = a.data = extend({}, a.data);\n        aData.on = on;\n        var aAttrs = a.data.attrs = extend({}, a.data.attrs);\n        aAttrs.href = href;\n      } else {\n        // doesn't have <a> child, apply listener to self\n        data.on = on;\n      }\n    }\n\n    return h(this.tag, data, this.$slots.default)\n  }\n};\n\nfunction guardEvent (e) {\n  // don't redirect with control keys\n  if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) { return }\n  // don't redirect when preventDefault called\n  if (e.defaultPrevented) { return }\n  // don't redirect on right click\n  if (e.button !== undefined && e.button !== 0) { return }\n  // don't redirect if `target=\"_blank\"`\n  if (e.currentTarget && e.currentTarget.getAttribute) {\n    var target = e.currentTarget.getAttribute('target');\n    if (/\\b_blank\\b/i.test(target)) { return }\n  }\n  // this may be a Weex event which doesn't have this method\n  if (e.preventDefault) {\n    e.preventDefault();\n  }\n  return true\n}\n\nfunction findAnchor (children) {\n  if (children) {\n    var child;\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      if (child.tag === 'a') {\n        return child\n      }\n      if (child.children && (child = findAnchor(child.children))) {\n        return child\n      }\n    }\n  }\n}\n\nvar _Vue;\n\nfunction install (Vue) {\n  if (install.installed && _Vue === Vue) { return }\n  install.installed = true;\n\n  _Vue = Vue;\n\n  var isDef = function (v) { return v !== undefined; };\n\n  var registerInstance = function (vm, callVal) {\n    var i = vm.$options._parentVnode;\n    if (isDef(i) && isDef(i = i.data) && isDef(i = i.registerRouteInstance)) {\n      i(vm, callVal);\n    }\n  };\n\n  Vue.mixin({\n    beforeCreate: function beforeCreate () {\n      if (isDef(this.$options.router)) {\n        this._routerRoot = this;\n        this._router = this.$options.router;\n        this._router.init(this);\n        Vue.util.defineReactive(this, '_route', this._router.history.current);\n      } else {\n        this._routerRoot = (this.$parent && this.$parent._routerRoot) || this;\n      }\n      registerInstance(this, this);\n    },\n    destroyed: function destroyed () {\n      registerInstance(this);\n    }\n  });\n\n  Object.defineProperty(Vue.prototype, '$router', {\n    get: function get () { return this._routerRoot._router }\n  });\n\n  Object.defineProperty(Vue.prototype, '$route', {\n    get: function get () { return this._routerRoot._route }\n  });\n\n  Vue.component('router-view', View);\n  Vue.component('router-link', Link);\n\n  var strats = Vue.config.optionMergeStrategies;\n  // use the same hook merging strategy for route hooks\n  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.beforeRouteUpdate = strats.created;\n}\n\n/*  */\n\nvar inBrowser = typeof window !== 'undefined';\n\n/*  */\n\nfunction resolvePath (\n  relative,\n  base,\n  append\n) {\n  var firstChar = relative.charAt(0);\n  if (firstChar === '/') {\n    return relative\n  }\n\n  if (firstChar === '?' || firstChar === '#') {\n    return base + relative\n  }\n\n  var stack = base.split('/');\n\n  // remove trailing segment if:\n  // - not appending\n  // - appending to trailing slash (last segment is empty)\n  if (!append || !stack[stack.length - 1]) {\n    stack.pop();\n  }\n\n  // resolve relative path\n  var segments = relative.replace(/^\\//, '').split('/');\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    if (segment === '..') {\n      stack.pop();\n    } else if (segment !== '.') {\n      stack.push(segment);\n    }\n  }\n\n  // ensure leading slash\n  if (stack[0] !== '') {\n    stack.unshift('');\n  }\n\n  return stack.join('/')\n}\n\nfunction parsePath (path) {\n  var hash = '';\n  var query = '';\n\n  var hashIndex = path.indexOf('#');\n  if (hashIndex >= 0) {\n    hash = path.slice(hashIndex);\n    path = path.slice(0, hashIndex);\n  }\n\n  var queryIndex = path.indexOf('?');\n  if (queryIndex >= 0) {\n    query = path.slice(queryIndex + 1);\n    path = path.slice(0, queryIndex);\n  }\n\n  return {\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction cleanPath (path) {\n  return path.replace(/\\/\\//g, '/')\n}\n\nvar isarray = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n/**\n * Expose `pathToRegexp`.\n */\nvar pathToRegexp_1 = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || '/';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      continue\n    }\n\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7];\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    });\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index);\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (obj, opts) {\n    var path = '';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n\n        continue\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys;\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = '';\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = '(?:' + token.pattern + ')';\n\n      keys.push(token);\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = prefix + '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/');\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\n\npathToRegexp_1.parse = parse_1;\npathToRegexp_1.compile = compile_1;\npathToRegexp_1.tokensToFunction = tokensToFunction_1;\npathToRegexp_1.tokensToRegExp = tokensToRegExp_1;\n\n/*  */\n\n// $flow-disable-line\nvar regexpCompileCache = Object.create(null);\n\nfunction fillParams (\n  path,\n  params,\n  routeMsg\n) {\n  try {\n    var filler =\n      regexpCompileCache[path] ||\n      (regexpCompileCache[path] = pathToRegexp_1.compile(path));\n    return filler(params || {}, { pretty: true })\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn(false, (\"missing param for \" + routeMsg + \": \" + (e.message)));\n    }\n    return ''\n  }\n}\n\n/*  */\n\nfunction createRouteMap (\n  routes,\n  oldPathList,\n  oldPathMap,\n  oldNameMap\n) {\n  // the path list is used to control path matching priority\n  var pathList = oldPathList || [];\n  // $flow-disable-line\n  var pathMap = oldPathMap || Object.create(null);\n  // $flow-disable-line\n  var nameMap = oldNameMap || Object.create(null);\n\n  routes.forEach(function (route) {\n    addRouteRecord(pathList, pathMap, nameMap, route);\n  });\n\n  // ensure wildcard routes are always at the end\n  for (var i = 0, l = pathList.length; i < l; i++) {\n    if (pathList[i] === '*') {\n      pathList.push(pathList.splice(i, 1)[0]);\n      l--;\n      i--;\n    }\n  }\n\n  return {\n    pathList: pathList,\n    pathMap: pathMap,\n    nameMap: nameMap\n  }\n}\n\nfunction addRouteRecord (\n  pathList,\n  pathMap,\n  nameMap,\n  route,\n  parent,\n  matchAs\n) {\n  var path = route.path;\n  var name = route.name;\n  if (process.env.NODE_ENV !== 'production') {\n    assert(path != null, \"\\\"path\\\" is required in a route configuration.\");\n    assert(\n      typeof route.component !== 'string',\n      \"route config \\\"component\\\" for path: \" + (String(path || name)) + \" cannot be a \" +\n      \"string id. Use an actual component instead.\"\n    );\n  }\n\n  var pathToRegexpOptions = route.pathToRegexpOptions || {};\n  var normalizedPath = normalizePath(\n    path,\n    parent,\n    pathToRegexpOptions.strict\n  );\n\n  if (typeof route.caseSensitive === 'boolean') {\n    pathToRegexpOptions.sensitive = route.caseSensitive;\n  }\n\n  var record = {\n    path: normalizedPath,\n    regex: compileRouteRegex(normalizedPath, pathToRegexpOptions),\n    components: route.components || { default: route.component },\n    instances: {},\n    name: name,\n    parent: parent,\n    matchAs: matchAs,\n    redirect: route.redirect,\n    beforeEnter: route.beforeEnter,\n    meta: route.meta || {},\n    props: route.props == null\n      ? {}\n      : route.components\n        ? route.props\n        : { default: route.props }\n  };\n\n  if (route.children) {\n    // Warn if route is named, does not redirect and has a default child route.\n    // If users navigate to this route by name, the default child will\n    // not be rendered (GH Issue #629)\n    if (process.env.NODE_ENV !== 'production') {\n      if (route.name && !route.redirect && route.children.some(function (child) { return /^\\/?$/.test(child.path); })) {\n        warn(\n          false,\n          \"Named Route '\" + (route.name) + \"' has a default child route. \" +\n          \"When navigating to this named route (:to=\\\"{name: '\" + (route.name) + \"'\\\"), \" +\n          \"the default child route will not be rendered. Remove the name from \" +\n          \"this route and use the name of the default child route for named \" +\n          \"links instead.\"\n        );\n      }\n    }\n    route.children.forEach(function (child) {\n      var childMatchAs = matchAs\n        ? cleanPath((matchAs + \"/\" + (child.path)))\n        : undefined;\n      addRouteRecord(pathList, pathMap, nameMap, child, record, childMatchAs);\n    });\n  }\n\n  if (route.alias !== undefined) {\n    var aliases = Array.isArray(route.alias)\n      ? route.alias\n      : [route.alias];\n\n    aliases.forEach(function (alias) {\n      var aliasRoute = {\n        path: alias,\n        children: route.children\n      };\n      addRouteRecord(\n        pathList,\n        pathMap,\n        nameMap,\n        aliasRoute,\n        parent,\n        record.path || '/' // matchAs\n      );\n    });\n  }\n\n  if (!pathMap[record.path]) {\n    pathList.push(record.path);\n    pathMap[record.path] = record;\n  }\n\n  if (name) {\n    if (!nameMap[name]) {\n      nameMap[name] = record;\n    } else if (process.env.NODE_ENV !== 'production' && !matchAs) {\n      warn(\n        false,\n        \"Duplicate named routes definition: \" +\n        \"{ name: \\\"\" + name + \"\\\", path: \\\"\" + (record.path) + \"\\\" }\"\n      );\n    }\n  }\n}\n\nfunction compileRouteRegex (path, pathToRegexpOptions) {\n  var regex = pathToRegexp_1(path, [], pathToRegexpOptions);\n  if (process.env.NODE_ENV !== 'production') {\n    var keys = Object.create(null);\n    regex.keys.forEach(function (key) {\n      warn(!keys[key.name], (\"Duplicate param keys in route with path: \\\"\" + path + \"\\\"\"));\n      keys[key.name] = true;\n    });\n  }\n  return regex\n}\n\nfunction normalizePath (path, parent, strict) {\n  if (!strict) { path = path.replace(/\\/$/, ''); }\n  if (path[0] === '/') { return path }\n  if (parent == null) { return path }\n  return cleanPath(((parent.path) + \"/\" + path))\n}\n\n/*  */\n\n\nfunction normalizeLocation (\n  raw,\n  current,\n  append,\n  router\n) {\n  var next = typeof raw === 'string' ? { path: raw } : raw;\n  // named target\n  if (next.name || next._normalized) {\n    return next\n  }\n\n  // relative params\n  if (!next.path && next.params && current) {\n    next = assign({}, next);\n    next._normalized = true;\n    var params = assign(assign({}, current.params), next.params);\n    if (current.name) {\n      next.name = current.name;\n      next.params = params;\n    } else if (current.matched.length) {\n      var rawPath = current.matched[current.matched.length - 1].path;\n      next.path = fillParams(rawPath, params, (\"path \" + (current.path)));\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn(false, \"relative params navigation requires a current route.\");\n    }\n    return next\n  }\n\n  var parsedPath = parsePath(next.path || '');\n  var basePath = (current && current.path) || '/';\n  var path = parsedPath.path\n    ? resolvePath(parsedPath.path, basePath, append || next.append)\n    : basePath;\n\n  var query = resolveQuery(\n    parsedPath.query,\n    next.query,\n    router && router.options.parseQuery\n  );\n\n  var hash = next.hash || parsedPath.hash;\n  if (hash && hash.charAt(0) !== '#') {\n    hash = \"#\" + hash;\n  }\n\n  return {\n    _normalized: true,\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction assign (a, b) {\n  for (var key in b) {\n    a[key] = b[key];\n  }\n  return a\n}\n\n/*  */\n\n\nfunction createMatcher (\n  routes,\n  router\n) {\n  var ref = createRouteMap(routes);\n  var pathList = ref.pathList;\n  var pathMap = ref.pathMap;\n  var nameMap = ref.nameMap;\n\n  function addRoutes (routes) {\n    createRouteMap(routes, pathList, pathMap, nameMap);\n  }\n\n  function match (\n    raw,\n    currentRoute,\n    redirectedFrom\n  ) {\n    var location = normalizeLocation(raw, currentRoute, false, router);\n    var name = location.name;\n\n    if (name) {\n      var record = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        warn(record, (\"Route with name '\" + name + \"' does not exist\"));\n      }\n      if (!record) { return _createRoute(null, location) }\n      var paramNames = record.regex.keys\n        .filter(function (key) { return !key.optional; })\n        .map(function (key) { return key.name; });\n\n      if (typeof location.params !== 'object') {\n        location.params = {};\n      }\n\n      if (currentRoute && typeof currentRoute.params === 'object') {\n        for (var key in currentRoute.params) {\n          if (!(key in location.params) && paramNames.indexOf(key) > -1) {\n            location.params[key] = currentRoute.params[key];\n          }\n        }\n      }\n\n      if (record) {\n        location.path = fillParams(record.path, location.params, (\"named route \\\"\" + name + \"\\\"\"));\n        return _createRoute(record, location, redirectedFrom)\n      }\n    } else if (location.path) {\n      location.params = {};\n      for (var i = 0; i < pathList.length; i++) {\n        var path = pathList[i];\n        var record$1 = pathMap[path];\n        if (matchRoute(record$1.regex, location.path, location.params)) {\n          return _createRoute(record$1, location, redirectedFrom)\n        }\n      }\n    }\n    // no match\n    return _createRoute(null, location)\n  }\n\n  function redirect (\n    record,\n    location\n  ) {\n    var originalRedirect = record.redirect;\n    var redirect = typeof originalRedirect === 'function'\n        ? originalRedirect(createRoute(record, location, null, router))\n        : originalRedirect;\n\n    if (typeof redirect === 'string') {\n      redirect = { path: redirect };\n    }\n\n    if (!redirect || typeof redirect !== 'object') {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false, (\"invalid redirect option: \" + (JSON.stringify(redirect)))\n        );\n      }\n      return _createRoute(null, location)\n    }\n\n    var re = redirect;\n    var name = re.name;\n    var path = re.path;\n    var query = location.query;\n    var hash = location.hash;\n    var params = location.params;\n    query = re.hasOwnProperty('query') ? re.query : query;\n    hash = re.hasOwnProperty('hash') ? re.hash : hash;\n    params = re.hasOwnProperty('params') ? re.params : params;\n\n    if (name) {\n      // resolved named direct\n      var targetRecord = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        assert(targetRecord, (\"redirect failed: named route \\\"\" + name + \"\\\" not found.\"));\n      }\n      return match({\n        _normalized: true,\n        name: name,\n        query: query,\n        hash: hash,\n        params: params\n      }, undefined, location)\n    } else if (path) {\n      // 1. resolve relative redirect\n      var rawPath = resolveRecordPath(path, record);\n      // 2. resolve params\n      var resolvedPath = fillParams(rawPath, params, (\"redirect route with path \\\"\" + rawPath + \"\\\"\"));\n      // 3. rematch with existing query and hash\n      return match({\n        _normalized: true,\n        path: resolvedPath,\n        query: query,\n        hash: hash\n      }, undefined, location)\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(false, (\"invalid redirect option: \" + (JSON.stringify(redirect))));\n      }\n      return _createRoute(null, location)\n    }\n  }\n\n  function alias (\n    record,\n    location,\n    matchAs\n  ) {\n    var aliasedPath = fillParams(matchAs, location.params, (\"aliased route with path \\\"\" + matchAs + \"\\\"\"));\n    var aliasedMatch = match({\n      _normalized: true,\n      path: aliasedPath\n    });\n    if (aliasedMatch) {\n      var matched = aliasedMatch.matched;\n      var aliasedRecord = matched[matched.length - 1];\n      location.params = aliasedMatch.params;\n      return _createRoute(aliasedRecord, location)\n    }\n    return _createRoute(null, location)\n  }\n\n  function _createRoute (\n    record,\n    location,\n    redirectedFrom\n  ) {\n    if (record && record.redirect) {\n      return redirect(record, redirectedFrom || location)\n    }\n    if (record && record.matchAs) {\n      return alias(record, location, record.matchAs)\n    }\n    return createRoute(record, location, redirectedFrom, router)\n  }\n\n  return {\n    match: match,\n    addRoutes: addRoutes\n  }\n}\n\nfunction matchRoute (\n  regex,\n  path,\n  params\n) {\n  var m = path.match(regex);\n\n  if (!m) {\n    return false\n  } else if (!params) {\n    return true\n  }\n\n  for (var i = 1, len = m.length; i < len; ++i) {\n    var key = regex.keys[i - 1];\n    var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i];\n    if (key) {\n      params[key.name] = val;\n    }\n  }\n\n  return true\n}\n\nfunction resolveRecordPath (path, record) {\n  return resolvePath(path, record.parent ? record.parent.path : '/', true)\n}\n\n/*  */\n\n\nvar positionStore = Object.create(null);\n\nfunction setupScroll () {\n  // Fix for #1585 for Firefox\n  window.history.replaceState({ key: getStateKey() }, '');\n  window.addEventListener('popstate', function (e) {\n    saveScrollPosition();\n    if (e.state && e.state.key) {\n      setStateKey(e.state.key);\n    }\n  });\n}\n\nfunction handleScroll (\n  router,\n  to,\n  from,\n  isPop\n) {\n  if (!router.app) {\n    return\n  }\n\n  var behavior = router.options.scrollBehavior;\n  if (!behavior) {\n    return\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(typeof behavior === 'function', \"scrollBehavior must be a function\");\n  }\n\n  // wait until re-render finishes before scrolling\n  router.app.$nextTick(function () {\n    var position = getScrollPosition();\n    var shouldScroll = behavior(to, from, isPop ? position : null);\n\n    if (!shouldScroll) {\n      return\n    }\n\n    if (typeof shouldScroll.then === 'function') {\n      shouldScroll.then(function (shouldScroll) {\n        scrollToPosition((shouldScroll), position);\n      }).catch(function (err) {\n        if (process.env.NODE_ENV !== 'production') {\n          assert(false, err.toString());\n        }\n      });\n    } else {\n      scrollToPosition(shouldScroll, position);\n    }\n  });\n}\n\nfunction saveScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    positionStore[key] = {\n      x: window.pageXOffset,\n      y: window.pageYOffset\n    };\n  }\n}\n\nfunction getScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    return positionStore[key]\n  }\n}\n\nfunction getElementPosition (el, offset) {\n  var docEl = document.documentElement;\n  var docRect = docEl.getBoundingClientRect();\n  var elRect = el.getBoundingClientRect();\n  return {\n    x: elRect.left - docRect.left - offset.x,\n    y: elRect.top - docRect.top - offset.y\n  }\n}\n\nfunction isValidPosition (obj) {\n  return isNumber(obj.x) || isNumber(obj.y)\n}\n\nfunction normalizePosition (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : window.pageXOffset,\n    y: isNumber(obj.y) ? obj.y : window.pageYOffset\n  }\n}\n\nfunction normalizeOffset (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : 0,\n    y: isNumber(obj.y) ? obj.y : 0\n  }\n}\n\nfunction isNumber (v) {\n  return typeof v === 'number'\n}\n\nfunction scrollToPosition (shouldScroll, position) {\n  var isObject = typeof shouldScroll === 'object';\n  if (isObject && typeof shouldScroll.selector === 'string') {\n    var el = document.querySelector(shouldScroll.selector);\n    if (el) {\n      var offset = shouldScroll.offset && typeof shouldScroll.offset === 'object' ? shouldScroll.offset : {};\n      offset = normalizeOffset(offset);\n      position = getElementPosition(el, offset);\n    } else if (isValidPosition(shouldScroll)) {\n      position = normalizePosition(shouldScroll);\n    }\n  } else if (isObject && isValidPosition(shouldScroll)) {\n    position = normalizePosition(shouldScroll);\n  }\n\n  if (position) {\n    window.scrollTo(position.x, position.y);\n  }\n}\n\n/*  */\n\nvar supportsPushState = inBrowser && (function () {\n  var ua = window.navigator.userAgent;\n\n  if (\n    (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&\n    ua.indexOf('Mobile Safari') !== -1 &&\n    ua.indexOf('Chrome') === -1 &&\n    ua.indexOf('Windows Phone') === -1\n  ) {\n    return false\n  }\n\n  return window.history && 'pushState' in window.history\n})();\n\n// use User Timing api (if present) for more accurate key precision\nvar Time = inBrowser && window.performance && window.performance.now\n  ? window.performance\n  : Date;\n\nvar _key = genKey();\n\nfunction genKey () {\n  return Time.now().toFixed(3)\n}\n\nfunction getStateKey () {\n  return _key\n}\n\nfunction setStateKey (key) {\n  _key = key;\n}\n\nfunction pushState (url, replace) {\n  saveScrollPosition();\n  // try...catch the pushState call to get around Safari\n  // DOM Exception 18 where it limits to 100 pushState calls\n  var history = window.history;\n  try {\n    if (replace) {\n      history.replaceState({ key: _key }, '', url);\n    } else {\n      _key = genKey();\n      history.pushState({ key: _key }, '', url);\n    }\n  } catch (e) {\n    window.location[replace ? 'replace' : 'assign'](url);\n  }\n}\n\nfunction replaceState (url) {\n  pushState(url, true);\n}\n\n/*  */\n\nfunction runQueue (queue, fn, cb) {\n  var step = function (index) {\n    if (index >= queue.length) {\n      cb();\n    } else {\n      if (queue[index]) {\n        fn(queue[index], function () {\n          step(index + 1);\n        });\n      } else {\n        step(index + 1);\n      }\n    }\n  };\n  step(0);\n}\n\n/*  */\n\nfunction resolveAsyncComponents (matched) {\n  return function (to, from, next) {\n    var hasAsync = false;\n    var pending = 0;\n    var error = null;\n\n    flatMapComponents(matched, function (def, _, match, key) {\n      // if it's a function and doesn't have cid attached,\n      // assume it's an async component resolve function.\n      // we are not using Vue's default async resolving mechanism because\n      // we want to halt the navigation until the incoming component has been\n      // resolved.\n      if (typeof def === 'function' && def.cid === undefined) {\n        hasAsync = true;\n        pending++;\n\n        var resolve = once(function (resolvedDef) {\n          if (isESModule(resolvedDef)) {\n            resolvedDef = resolvedDef.default;\n          }\n          // save resolved on async factory in case it's used elsewhere\n          def.resolved = typeof resolvedDef === 'function'\n            ? resolvedDef\n            : _Vue.extend(resolvedDef);\n          match.components[key] = resolvedDef;\n          pending--;\n          if (pending <= 0) {\n            next();\n          }\n        });\n\n        var reject = once(function (reason) {\n          var msg = \"Failed to resolve async component \" + key + \": \" + reason;\n          process.env.NODE_ENV !== 'production' && warn(false, msg);\n          if (!error) {\n            error = isError(reason)\n              ? reason\n              : new Error(msg);\n            next(error);\n          }\n        });\n\n        var res;\n        try {\n          res = def(resolve, reject);\n        } catch (e) {\n          reject(e);\n        }\n        if (res) {\n          if (typeof res.then === 'function') {\n            res.then(resolve, reject);\n          } else {\n            // new syntax in Vue 2.3\n            var comp = res.component;\n            if (comp && typeof comp.then === 'function') {\n              comp.then(resolve, reject);\n            }\n          }\n        }\n      }\n    });\n\n    if (!hasAsync) { next(); }\n  }\n}\n\nfunction flatMapComponents (\n  matched,\n  fn\n) {\n  return flatten(matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) { return fn(\n      m.components[key],\n      m.instances[key],\n      m, key\n    ); })\n  }))\n}\n\nfunction flatten (arr) {\n  return Array.prototype.concat.apply([], arr)\n}\n\nvar hasSymbol =\n  typeof Symbol === 'function' &&\n  typeof Symbol.toStringTag === 'symbol';\n\nfunction isESModule (obj) {\n  return obj.__esModule || (hasSymbol && obj[Symbol.toStringTag] === 'Module')\n}\n\n// in Webpack 2, require.ensure now also returns a Promise\n// so the resolve/reject functions may get called an extra time\n// if the user uses an arrow function shorthand that happens to\n// return that Promise.\nfunction once (fn) {\n  var called = false;\n  return function () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    if (called) { return }\n    called = true;\n    return fn.apply(this, args)\n  }\n}\n\n/*  */\n\nvar History = function History (router, base) {\n  this.router = router;\n  this.base = normalizeBase(base);\n  // start with a route object that stands for \"nowhere\"\n  this.current = START;\n  this.pending = null;\n  this.ready = false;\n  this.readyCbs = [];\n  this.readyErrorCbs = [];\n  this.errorCbs = [];\n};\n\nHistory.prototype.listen = function listen (cb) {\n  this.cb = cb;\n};\n\nHistory.prototype.onReady = function onReady (cb, errorCb) {\n  if (this.ready) {\n    cb();\n  } else {\n    this.readyCbs.push(cb);\n    if (errorCb) {\n      this.readyErrorCbs.push(errorCb);\n    }\n  }\n};\n\nHistory.prototype.onError = function onError (errorCb) {\n  this.errorCbs.push(errorCb);\n};\n\nHistory.prototype.transitionTo = function transitionTo (location, onComplete, onAbort) {\n    var this$1 = this;\n\n  var route = this.router.match(location, this.current);\n  this.confirmTransition(route, function () {\n    this$1.updateRoute(route);\n    onComplete && onComplete(route);\n    this$1.ensureURL();\n\n    // fire ready cbs once\n    if (!this$1.ready) {\n      this$1.ready = true;\n      this$1.readyCbs.forEach(function (cb) { cb(route); });\n    }\n  }, function (err) {\n    if (onAbort) {\n      onAbort(err);\n    }\n    if (err && !this$1.ready) {\n      this$1.ready = true;\n      this$1.readyErrorCbs.forEach(function (cb) { cb(err); });\n    }\n  });\n};\n\nHistory.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {\n    var this$1 = this;\n\n  var current = this.current;\n  var abort = function (err) {\n    if (isError(err)) {\n      if (this$1.errorCbs.length) {\n        this$1.errorCbs.forEach(function (cb) { cb(err); });\n      } else {\n        warn(false, 'uncaught error during route navigation:');\n        console.error(err);\n      }\n    }\n    onAbort && onAbort(err);\n  };\n  if (\n    isSameRoute(route, current) &&\n    // in the case the route map has been dynamically appended to\n    route.matched.length === current.matched.length\n  ) {\n    this.ensureURL();\n    return abort()\n  }\n\n  var ref = resolveQueue(this.current.matched, route.matched);\n    var updated = ref.updated;\n    var deactivated = ref.deactivated;\n    var activated = ref.activated;\n\n  var queue = [].concat(\n    // in-component leave guards\n    extractLeaveGuards(deactivated),\n    // global before hooks\n    this.router.beforeHooks,\n    // in-component update hooks\n    extractUpdateHooks(updated),\n    // in-config enter guards\n    activated.map(function (m) { return m.beforeEnter; }),\n    // async components\n    resolveAsyncComponents(activated)\n  );\n\n  this.pending = route;\n  var iterator = function (hook, next) {\n    if (this$1.pending !== route) {\n      return abort()\n    }\n    try {\n      hook(route, current, function (to) {\n        if (to === false || isError(to)) {\n          // next(false) -> abort navigation, ensure current URL\n          this$1.ensureURL(true);\n          abort(to);\n        } else if (\n          typeof to === 'string' ||\n          (typeof to === 'object' && (\n            typeof to.path === 'string' ||\n            typeof to.name === 'string'\n          ))\n        ) {\n          // next('/') or next({ path: '/' }) -> redirect\n          abort();\n          if (typeof to === 'object' && to.replace) {\n            this$1.replace(to);\n          } else {\n            this$1.push(to);\n          }\n        } else {\n          // confirm transition and pass on the value\n          next(to);\n        }\n      });\n    } catch (e) {\n      abort(e);\n    }\n  };\n\n  runQueue(queue, iterator, function () {\n    var postEnterCbs = [];\n    var isValid = function () { return this$1.current === route; };\n    // wait until async components are resolved before\n    // extracting in-component enter guards\n    var enterGuards = extractEnterGuards(activated, postEnterCbs, isValid);\n    var queue = enterGuards.concat(this$1.router.resolveHooks);\n    runQueue(queue, iterator, function () {\n      if (this$1.pending !== route) {\n        return abort()\n      }\n      this$1.pending = null;\n      onComplete(route);\n      if (this$1.router.app) {\n        this$1.router.app.$nextTick(function () {\n          postEnterCbs.forEach(function (cb) { cb(); });\n        });\n      }\n    });\n  });\n};\n\nHistory.prototype.updateRoute = function updateRoute (route) {\n  var prev = this.current;\n  this.current = route;\n  this.cb && this.cb(route);\n  this.router.afterHooks.forEach(function (hook) {\n    hook && hook(route, prev);\n  });\n};\n\nfunction normalizeBase (base) {\n  if (!base) {\n    if (inBrowser) {\n      // respect <base> tag\n      var baseEl = document.querySelector('base');\n      base = (baseEl && baseEl.getAttribute('href')) || '/';\n      // strip full URL origin\n      base = base.replace(/^https?:\\/\\/[^\\/]+/, '');\n    } else {\n      base = '/';\n    }\n  }\n  // make sure there's the starting slash\n  if (base.charAt(0) !== '/') {\n    base = '/' + base;\n  }\n  // remove trailing slash\n  return base.replace(/\\/$/, '')\n}\n\nfunction resolveQueue (\n  current,\n  next\n) {\n  var i;\n  var max = Math.max(current.length, next.length);\n  for (i = 0; i < max; i++) {\n    if (current[i] !== next[i]) {\n      break\n    }\n  }\n  return {\n    updated: next.slice(0, i),\n    activated: next.slice(i),\n    deactivated: current.slice(i)\n  }\n}\n\nfunction extractGuards (\n  records,\n  name,\n  bind,\n  reverse\n) {\n  var guards = flatMapComponents(records, function (def, instance, match, key) {\n    var guard = extractGuard(def, name);\n    if (guard) {\n      return Array.isArray(guard)\n        ? guard.map(function (guard) { return bind(guard, instance, match, key); })\n        : bind(guard, instance, match, key)\n    }\n  });\n  return flatten(reverse ? guards.reverse() : guards)\n}\n\nfunction extractGuard (\n  def,\n  key\n) {\n  if (typeof def !== 'function') {\n    // extend now so that global mixins are applied.\n    def = _Vue.extend(def);\n  }\n  return def.options[key]\n}\n\nfunction extractLeaveGuards (deactivated) {\n  return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true)\n}\n\nfunction extractUpdateHooks (updated) {\n  return extractGuards(updated, 'beforeRouteUpdate', bindGuard)\n}\n\nfunction bindGuard (guard, instance) {\n  if (instance) {\n    return function boundRouteGuard () {\n      return guard.apply(instance, arguments)\n    }\n  }\n}\n\nfunction extractEnterGuards (\n  activated,\n  cbs,\n  isValid\n) {\n  return extractGuards(activated, 'beforeRouteEnter', function (guard, _, match, key) {\n    return bindEnterGuard(guard, match, key, cbs, isValid)\n  })\n}\n\nfunction bindEnterGuard (\n  guard,\n  match,\n  key,\n  cbs,\n  isValid\n) {\n  return function routeEnterGuard (to, from, next) {\n    return guard(to, from, function (cb) {\n      next(cb);\n      if (typeof cb === 'function') {\n        cbs.push(function () {\n          // #750\n          // if a router-view is wrapped with an out-in transition,\n          // the instance may not have been registered at this time.\n          // we will need to poll for registration until current route\n          // is no longer valid.\n          poll(cb, match.instances, key, isValid);\n        });\n      }\n    })\n  }\n}\n\nfunction poll (\n  cb, // somehow flow cannot infer this is a function\n  instances,\n  key,\n  isValid\n) {\n  if (instances[key]) {\n    cb(instances[key]);\n  } else if (isValid()) {\n    setTimeout(function () {\n      poll(cb, instances, key, isValid);\n    }, 16);\n  }\n}\n\n/*  */\n\n\nvar HTML5History = (function (History$$1) {\n  function HTML5History (router, base) {\n    var this$1 = this;\n\n    History$$1.call(this, router, base);\n\n    var expectScroll = router.options.scrollBehavior;\n\n    if (expectScroll) {\n      setupScroll();\n    }\n\n    var initLocation = getLocation(this.base);\n    window.addEventListener('popstate', function (e) {\n      var current = this$1.current;\n\n      // Avoiding first `popstate` event dispatched in some browsers but first\n      // history route not updated since async guard at the same time.\n      var location = getLocation(this$1.base);\n      if (this$1.current === START && location === initLocation) {\n        return\n      }\n\n      this$1.transitionTo(location, function (route) {\n        if (expectScroll) {\n          handleScroll(router, route, current, true);\n        }\n      });\n    });\n  }\n\n  if ( History$$1 ) HTML5History.__proto__ = History$$1;\n  HTML5History.prototype = Object.create( History$$1 && History$$1.prototype );\n  HTML5History.prototype.constructor = HTML5History;\n\n  HTML5History.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HTML5History.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.ensureURL = function ensureURL (push) {\n    if (getLocation(this.base) !== this.current.fullPath) {\n      var current = cleanPath(this.base + this.current.fullPath);\n      push ? pushState(current) : replaceState(current);\n    }\n  };\n\n  HTML5History.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getLocation(this.base)\n  };\n\n  return HTML5History;\n}(History));\n\nfunction getLocation (base) {\n  var path = window.location.pathname;\n  if (base && path.indexOf(base) === 0) {\n    path = path.slice(base.length);\n  }\n  return (path || '/') + window.location.search + window.location.hash\n}\n\n/*  */\n\n\nvar HashHistory = (function (History$$1) {\n  function HashHistory (router, base, fallback) {\n    History$$1.call(this, router, base);\n    // check history fallback deeplinking\n    if (fallback && checkFallback(this.base)) {\n      return\n    }\n    ensureSlash();\n  }\n\n  if ( History$$1 ) HashHistory.__proto__ = History$$1;\n  HashHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  HashHistory.prototype.constructor = HashHistory;\n\n  // this is delayed until the app mounts\n  // to avoid the hashchange listener being fired too early\n  HashHistory.prototype.setupListeners = function setupListeners () {\n    var this$1 = this;\n\n    var router = this.router;\n    var expectScroll = router.options.scrollBehavior;\n    var supportsScroll = supportsPushState && expectScroll;\n\n    if (supportsScroll) {\n      setupScroll();\n    }\n\n    window.addEventListener(supportsPushState ? 'popstate' : 'hashchange', function () {\n      var current = this$1.current;\n      if (!ensureSlash()) {\n        return\n      }\n      this$1.transitionTo(getHash(), function (route) {\n        if (supportsScroll) {\n          handleScroll(this$1.router, route, current, true);\n        }\n        if (!supportsPushState) {\n          replaceHash(route.fullPath);\n        }\n      });\n    });\n  };\n\n  HashHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushHash(route.fullPath);\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceHash(route.fullPath);\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HashHistory.prototype.ensureURL = function ensureURL (push) {\n    var current = this.current.fullPath;\n    if (getHash() !== current) {\n      push ? pushHash(current) : replaceHash(current);\n    }\n  };\n\n  HashHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getHash()\n  };\n\n  return HashHistory;\n}(History));\n\nfunction checkFallback (base) {\n  var location = getLocation(base);\n  if (!/^\\/#/.test(location)) {\n    window.location.replace(\n      cleanPath(base + '/#' + location)\n    );\n    return true\n  }\n}\n\nfunction ensureSlash () {\n  var path = getHash();\n  if (path.charAt(0) === '/') {\n    return true\n  }\n  replaceHash('/' + path);\n  return false\n}\n\nfunction getHash () {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var index = href.indexOf('#');\n  return index === -1 ? '' : href.slice(index + 1)\n}\n\nfunction getUrl (path) {\n  var href = window.location.href;\n  var i = href.indexOf('#');\n  var base = i >= 0 ? href.slice(0, i) : href;\n  return (base + \"#\" + path)\n}\n\nfunction pushHash (path) {\n  if (supportsPushState) {\n    pushState(getUrl(path));\n  } else {\n    window.location.hash = path;\n  }\n}\n\nfunction replaceHash (path) {\n  if (supportsPushState) {\n    replaceState(getUrl(path));\n  } else {\n    window.location.replace(getUrl(path));\n  }\n}\n\n/*  */\n\n\nvar AbstractHistory = (function (History$$1) {\n  function AbstractHistory (router, base) {\n    History$$1.call(this, router, base);\n    this.stack = [];\n    this.index = -1;\n  }\n\n  if ( History$$1 ) AbstractHistory.__proto__ = History$$1;\n  AbstractHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  AbstractHistory.prototype.constructor = AbstractHistory;\n\n  AbstractHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);\n      this$1.index++;\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.go = function go (n) {\n    var this$1 = this;\n\n    var targetIndex = this.index + n;\n    if (targetIndex < 0 || targetIndex >= this.stack.length) {\n      return\n    }\n    var route = this.stack[targetIndex];\n    this.confirmTransition(route, function () {\n      this$1.index = targetIndex;\n      this$1.updateRoute(route);\n    });\n  };\n\n  AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    var current = this.stack[this.stack.length - 1];\n    return current ? current.fullPath : '/'\n  };\n\n  AbstractHistory.prototype.ensureURL = function ensureURL () {\n    // noop\n  };\n\n  return AbstractHistory;\n}(History));\n\n/*  */\n\nvar VueRouter = function VueRouter (options) {\n  if ( options === void 0 ) options = {};\n\n  this.app = null;\n  this.apps = [];\n  this.options = options;\n  this.beforeHooks = [];\n  this.resolveHooks = [];\n  this.afterHooks = [];\n  this.matcher = createMatcher(options.routes || [], this);\n\n  var mode = options.mode || 'hash';\n  this.fallback = mode === 'history' && !supportsPushState && options.fallback !== false;\n  if (this.fallback) {\n    mode = 'hash';\n  }\n  if (!inBrowser) {\n    mode = 'abstract';\n  }\n  this.mode = mode;\n\n  switch (mode) {\n    case 'history':\n      this.history = new HTML5History(this, options.base);\n      break\n    case 'hash':\n      this.history = new HashHistory(this, options.base, this.fallback);\n      break\n    case 'abstract':\n      this.history = new AbstractHistory(this, options.base);\n      break\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        assert(false, (\"invalid mode: \" + mode));\n      }\n  }\n};\n\nvar prototypeAccessors = { currentRoute: { configurable: true } };\n\nVueRouter.prototype.match = function match (\n  raw,\n  current,\n  redirectedFrom\n) {\n  return this.matcher.match(raw, current, redirectedFrom)\n};\n\nprototypeAccessors.currentRoute.get = function () {\n  return this.history && this.history.current\n};\n\nVueRouter.prototype.init = function init (app /* Vue component instance */) {\n    var this$1 = this;\n\n  process.env.NODE_ENV !== 'production' && assert(\n    install.installed,\n    \"not installed. Make sure to call `Vue.use(VueRouter)` \" +\n    \"before creating root instance.\"\n  );\n\n  this.apps.push(app);\n\n  // main app already initialized.\n  if (this.app) {\n    return\n  }\n\n  this.app = app;\n\n  var history = this.history;\n\n  if (history instanceof HTML5History) {\n    history.transitionTo(history.getCurrentLocation());\n  } else if (history instanceof HashHistory) {\n    var setupHashListener = function () {\n      history.setupListeners();\n    };\n    history.transitionTo(\n      history.getCurrentLocation(),\n      setupHashListener,\n      setupHashListener\n    );\n  }\n\n  history.listen(function (route) {\n    this$1.apps.forEach(function (app) {\n      app._route = route;\n    });\n  });\n};\n\nVueRouter.prototype.beforeEach = function beforeEach (fn) {\n  return registerHook(this.beforeHooks, fn)\n};\n\nVueRouter.prototype.beforeResolve = function beforeResolve (fn) {\n  return registerHook(this.resolveHooks, fn)\n};\n\nVueRouter.prototype.afterEach = function afterEach (fn) {\n  return registerHook(this.afterHooks, fn)\n};\n\nVueRouter.prototype.onReady = function onReady (cb, errorCb) {\n  this.history.onReady(cb, errorCb);\n};\n\nVueRouter.prototype.onError = function onError (errorCb) {\n  this.history.onError(errorCb);\n};\n\nVueRouter.prototype.push = function push (location, onComplete, onAbort) {\n  this.history.push(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.replace = function replace (location, onComplete, onAbort) {\n  this.history.replace(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.go = function go (n) {\n  this.history.go(n);\n};\n\nVueRouter.prototype.back = function back () {\n  this.go(-1);\n};\n\nVueRouter.prototype.forward = function forward () {\n  this.go(1);\n};\n\nVueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {\n  var route = to\n    ? to.matched\n      ? to\n      : this.resolve(to).route\n    : this.currentRoute;\n  if (!route) {\n    return []\n  }\n  return [].concat.apply([], route.matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) {\n      return m.components[key]\n    })\n  }))\n};\n\nVueRouter.prototype.resolve = function resolve (\n  to,\n  current,\n  append\n) {\n  var location = normalizeLocation(\n    to,\n    current || this.history.current,\n    append,\n    this\n  );\n  var route = this.match(location, current);\n  var fullPath = route.redirectedFrom || route.fullPath;\n  var base = this.history.base;\n  var href = createHref(base, fullPath, this.mode);\n  return {\n    location: location,\n    route: route,\n    href: href,\n    // for backwards compat\n    normalizedTo: location,\n    resolved: route\n  }\n};\n\nVueRouter.prototype.addRoutes = function addRoutes (routes) {\n  this.matcher.addRoutes(routes);\n  if (this.history.current !== START) {\n    this.history.transitionTo(this.history.getCurrentLocation());\n  }\n};\n\nObject.defineProperties( VueRouter.prototype, prototypeAccessors );\n\nfunction registerHook (list, fn) {\n  list.push(fn);\n  return function () {\n    var i = list.indexOf(fn);\n    if (i > -1) { list.splice(i, 1); }\n  }\n}\n\nfunction createHref (base, fullPath, mode) {\n  var path = mode === 'hash' ? '#' + fullPath : fullPath;\n  return base ? cleanPath(base + '/' + path) : path\n}\n\nVueRouter.install = install;\nVueRouter.version = '3.0.1';\n\nif (inBrowser && window.Vue) {\n  window.Vue.use(VueRouter);\n}\n\nexport default VueRouter;\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Parse the internal MP4 structure into an equivalent javascript\n * object.\n */\n'use strict';\n\nvar\n  inspectMp4,\n  textifyMp4,\n\n  parseType = require('../mp4/probe').parseType,\n  parseMp4Date = function(seconds) {\n    return new Date(seconds * 1000 - 2082844800000);\n  },\n  parseSampleFlags = function(flags) {\n    return {\n      isLeading: (flags[0] & 0x0c) >>> 2,\n      dependsOn: flags[0] & 0x03,\n      isDependedOn: (flags[1] & 0xc0) >>> 6,\n      hasRedundancy: (flags[1] & 0x30) >>> 4,\n      paddingValue: (flags[1] & 0x0e) >>> 1,\n      isNonSyncSample: flags[1] & 0x01,\n      degradationPriority: (flags[2] << 8) | flags[3]\n    };\n  },\n  nalParse = function(avcStream) {\n    var\n      avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n      result = [],\n      i,\n      length;\n    for (i = 0; i + 4 < avcStream.length; i += length) {\n      length = avcView.getUint32(i);\n      i += 4;\n\n      // bail if this doesn't appear to be an H264 stream\n      if (length <= 0) {\n        result.push('<span style=\\'color:red;\\'>MALFORMED DATA</span>');\n        continue;\n      }\n\n      switch (avcStream[i] & 0x1F) {\n      case 0x01:\n        result.push('slice_layer_without_partitioning_rbsp');\n        break;\n      case 0x05:\n        result.push('slice_layer_without_partitioning_rbsp_idr');\n        break;\n      case 0x06:\n        result.push('sei_rbsp');\n        break;\n      case 0x07:\n        result.push('seq_parameter_set_rbsp');\n        break;\n      case 0x08:\n        result.push('pic_parameter_set_rbsp');\n        break;\n      case 0x09:\n        result.push('access_unit_delimiter_rbsp');\n        break;\n      default:\n        result.push('UNKNOWN NAL - ' + avcStream[i] & 0x1F);\n        break;\n      }\n    }\n    return result;\n  },\n\n  // registry of handlers for individual mp4 box types\n  parse = {\n    // codingname, not a first-class box type. stsd entries share the\n    // same format as real boxes so the parsing infrastructure can be\n    // shared\n    avc1: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        dataReferenceIndex: view.getUint16(6),\n        width: view.getUint16(24),\n        height: view.getUint16(26),\n        horizresolution: view.getUint16(28) + (view.getUint16(30) / 16),\n        vertresolution: view.getUint16(32) + (view.getUint16(34) / 16),\n        frameCount: view.getUint16(40),\n        depth: view.getUint16(74),\n        config: inspectMp4(data.subarray(78, data.byteLength))\n      };\n    },\n    avcC: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          configurationVersion: data[0],\n          avcProfileIndication: data[1],\n          profileCompatibility: data[2],\n          avcLevelIndication: data[3],\n          lengthSizeMinusOne: data[4] & 0x03,\n          sps: [],\n          pps: []\n        },\n        numOfSequenceParameterSets = data[5] & 0x1f,\n        numOfPictureParameterSets,\n        nalSize,\n        offset,\n        i;\n\n      // iterate past any SPSs\n      offset = 6;\n      for (i = 0; i < numOfSequenceParameterSets; i++) {\n        nalSize = view.getUint16(offset);\n        offset += 2;\n        result.sps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n        offset += nalSize;\n      }\n      // iterate past any PPSs\n      numOfPictureParameterSets = data[offset];\n      offset++;\n      for (i = 0; i < numOfPictureParameterSets; i++) {\n        nalSize = view.getUint16(offset);\n        offset += 2;\n        result.pps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n        offset += nalSize;\n      }\n      return result;\n    },\n    btrt: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        bufferSizeDB: view.getUint32(0),\n        maxBitrate: view.getUint32(4),\n        avgBitrate: view.getUint32(8)\n      };\n    },\n    esds: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        esId: (data[6] << 8) | data[7],\n        streamPriority: data[8] & 0x1f,\n        decoderConfig: {\n          objectProfileIndication: data[11],\n          streamType: (data[12] >>> 2) & 0x3f,\n          bufferSize: (data[13] << 16) | (data[14] << 8) | data[15],\n          maxBitrate: (data[16] << 24) |\n            (data[17] << 16) |\n            (data[18] <<  8) |\n            data[19],\n          avgBitrate: (data[20] << 24) |\n            (data[21] << 16) |\n            (data[22] <<  8) |\n            data[23],\n          decoderConfigDescriptor: {\n            tag: data[24],\n            length: data[25],\n            audioObjectType: (data[26] >>> 3) & 0x1f,\n            samplingFrequencyIndex: ((data[26] & 0x07) << 1) |\n              ((data[27] >>> 7) & 0x01),\n            channelConfiguration: (data[27] >>> 3) & 0x0f\n          }\n        }\n      };\n    },\n    ftyp: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          majorBrand: parseType(data.subarray(0, 4)),\n          minorVersion: view.getUint32(4),\n          compatibleBrands: []\n        },\n        i = 8;\n      while (i < data.byteLength) {\n        result.compatibleBrands.push(parseType(data.subarray(i, i + 4)));\n        i += 4;\n      }\n      return result;\n    },\n    dinf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    dref: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        dataReferences: inspectMp4(data.subarray(8))\n      };\n    },\n    hdlr: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          handlerType: parseType(data.subarray(8, 12)),\n          name: ''\n        },\n        i = 8;\n\n      // parse out the name field\n      for (i = 24; i < data.byteLength; i++) {\n        if (data[i] === 0x00) {\n          // the name field is null-terminated\n          i++;\n          break;\n        }\n        result.name += String.fromCharCode(data[i]);\n      }\n      // decode UTF-8 to javascript's internal representation\n      // see http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\n      result.name = decodeURIComponent(escape(result.name));\n\n      return result;\n    },\n    mdat: function(data) {\n      return {\n        byteLength: data.byteLength,\n        nals: nalParse(data)\n      };\n    },\n    mdhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        language,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          language: ''\n        };\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n      // language is stored as an ISO-639-2/T code in an array of three 5-bit fields\n      // each field is the packed difference between its ASCII value and 0x60\n      language = view.getUint16(i);\n      result.language += String.fromCharCode((language >> 10) + 0x60);\n      result.language += String.fromCharCode(((language & 0x03e0) >> 5) + 0x60);\n      result.language += String.fromCharCode((language & 0x1f) + 0x60);\n\n      return result;\n    },\n    mdia: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mfhd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        sequenceNumber: (data[4] << 24) |\n          (data[5] << 16) |\n          (data[6] << 8) |\n          (data[7])\n      };\n    },\n    minf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    // codingname, not a first-class box type. stsd entries share the\n    // same format as real boxes so the parsing infrastructure can be\n    // shared\n    mp4a: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          // 6 bytes reserved\n          dataReferenceIndex: view.getUint16(6),\n          // 4 + 4 bytes reserved\n          channelcount: view.getUint16(16),\n          samplesize: view.getUint16(18),\n          // 2 bytes pre_defined\n          // 2 bytes reserved\n          samplerate: view.getUint16(24) + (view.getUint16(26) / 65536)\n        };\n\n      // if there are more bytes to process, assume this is an ISO/IEC\n      // 14496-14 MP4AudioSampleEntry and parse the ESDBox\n      if (data.byteLength > 28) {\n        result.streamDescriptor = inspectMp4(data.subarray(28))[0];\n      }\n      return result;\n    },\n    moof: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    moov: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mvex: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mvhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n\n      // convert fixed-point, base 16 back to a number\n      result.rate = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      i += 4;\n      result.volume = view.getUint8(i) + (view.getUint8(i + 1) / 8);\n      i += 2;\n      i += 2;\n      i += 2 * 4;\n      result.matrix = new Uint32Array(data.subarray(i, i + (9 * 4)));\n      i += 9 * 4;\n      i += 6 * 4;\n      result.nextTrackId = view.getUint32(i);\n      return result;\n    },\n    pdin: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: view.getUint8(0),\n        flags: new Uint8Array(data.subarray(1, 4)),\n        rate: view.getUint32(4),\n        initialDelay: view.getUint32(8)\n      };\n    },\n    sdtp: function(data) {\n      var\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        }, i;\n\n      for (i = 4; i < data.byteLength; i++) {\n        result.samples.push({\n          dependsOn: (data[i] & 0x30) >> 4,\n          isDependedOn: (data[i] & 0x0c) >> 2,\n          hasRedundancy: data[i] & 0x03\n        });\n      }\n      return result;\n    },\n    sidx: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          result = {\n            version: data[0],\n            flags: new Uint8Array(data.subarray(1, 4)),\n            references: [],\n            referenceId: view.getUint32(4),\n            timescale: view.getUint32(8),\n            earliestPresentationTime: view.getUint32(12),\n            firstOffset: view.getUint32(16)\n          },\n          referenceCount = view.getUint16(22),\n          i;\n\n      for (i = 24; referenceCount; i += 12, referenceCount--) {\n        result.references.push({\n          referenceType: (data[i] & 0x80) >>> 7,\n          referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n          subsegmentDuration: view.getUint32(i + 4),\n          startsWithSap: !!(data[i + 8] & 0x80),\n          sapType: (data[i + 8] & 0x70) >>> 4,\n          sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n        });\n      }\n\n      return result;\n    },\n    smhd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        balance: data[4] + (data[5] / 256)\n      };\n    },\n    stbl: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    stco: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          chunkOffsets: []\n        },\n        entryCount = view.getUint32(4),\n        i;\n      for (i = 8; entryCount; i += 4, entryCount--) {\n        result.chunkOffsets.push(view.getUint32(i));\n      }\n      return result;\n    },\n    stsc: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        entryCount = view.getUint32(4),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleToChunks: []\n        },\n        i;\n      for (i = 8; entryCount; i += 12, entryCount--) {\n        result.sampleToChunks.push({\n          firstChunk: view.getUint32(i),\n          samplesPerChunk: view.getUint32(i + 4),\n          sampleDescriptionIndex: view.getUint32(i + 8)\n        });\n      }\n      return result;\n    },\n    stsd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        sampleDescriptions: inspectMp4(data.subarray(8))\n      };\n    },\n    stsz: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleSize: view.getUint32(4),\n          entries: []\n        },\n        i;\n      for (i = 12; i < data.byteLength; i += 4) {\n        result.entries.push(view.getUint32(i));\n      }\n      return result;\n    },\n    stts: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          timeToSamples: []\n        },\n        entryCount = view.getUint32(4),\n        i;\n\n      for (i = 8; entryCount; i += 8, entryCount--) {\n        result.timeToSamples.push({\n          sampleCount: view.getUint32(i),\n          sampleDelta: view.getUint32(i + 4)\n        });\n      }\n      return result;\n    },\n    styp: function(data) {\n      return parse.ftyp(data);\n    },\n    tfdt: function(data) {\n      var result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        baseMediaDecodeTime: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n      };\n      if (result.version === 1) {\n        result.baseMediaDecodeTime *= Math.pow(2, 32);\n        result.baseMediaDecodeTime += data[8] << 24 | data[9] << 16 | data[10] << 8 | data[11];\n      }\n      return result;\n    },\n    tfhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4)\n        },\n        baseDataOffsetPresent = result.flags[2] & 0x01,\n        sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n        defaultSampleDurationPresent = result.flags[2] & 0x08,\n        defaultSampleSizePresent = result.flags[2] & 0x10,\n        defaultSampleFlagsPresent = result.flags[2] & 0x20,\n        durationIsEmpty = result.flags[0] & 0x010000,\n        defaultBaseIsMoof =  result.flags[0] & 0x020000,\n        i;\n\n      i = 8;\n      if (baseDataOffsetPresent) {\n        i += 4; // truncate top 4 bytes\n        // FIXME: should we read the full 64 bits?\n        result.baseDataOffset = view.getUint32(12);\n        i += 4;\n      }\n      if (sampleDescriptionIndexPresent) {\n        result.sampleDescriptionIndex = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleDurationPresent) {\n        result.defaultSampleDuration = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleSizePresent) {\n        result.defaultSampleSize = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleFlagsPresent) {\n        result.defaultSampleFlags = view.getUint32(i);\n      }\n      if (durationIsEmpty) {\n        result.durationIsEmpty = true;\n      }\n      if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n        result.baseDataOffsetIsMoof = true;\n      }\n      return result;\n    },\n    tkhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.trackId = view.getUint32(i);\n        i += 4;\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.trackId = view.getUint32(i);\n        i += 4;\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n      i += 2 * 4;\n      result.layer = view.getUint16(i);\n      i += 2;\n      result.alternateGroup = view.getUint16(i);\n      i += 2;\n      // convert fixed-point, base 16 back to a number\n      result.volume = view.getUint8(i) + (view.getUint8(i + 1) / 8);\n      i += 2;\n      i += 2;\n      result.matrix = new Uint32Array(data.subarray(i, i + (9 * 4)));\n      i += 9 * 4;\n      result.width = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      i += 4;\n      result.height = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      return result;\n    },\n    traf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    trak: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    trex: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        trackId: view.getUint32(4),\n        defaultSampleDescriptionIndex: view.getUint32(8),\n        defaultSampleDuration: view.getUint32(12),\n        defaultSampleSize: view.getUint32(16),\n        sampleDependsOn: data[20] & 0x03,\n        sampleIsDependedOn: (data[21] & 0xc0) >> 6,\n        sampleHasRedundancy: (data[21] & 0x30) >> 4,\n        samplePaddingValue: (data[21] & 0x0e) >> 1,\n        sampleIsDifferenceSample: !!(data[21] & 0x01),\n        sampleDegradationPriority: view.getUint16(22)\n      };\n    },\n    trun: function(data) {\n      var\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        // Flag interpretation\n        dataOffsetPresent = result.flags[2] & 0x01, // compare with 2nd byte of 0x1\n        firstSampleFlagsPresent = result.flags[2] & 0x04, // compare with 2nd byte of 0x4\n        sampleDurationPresent = result.flags[1] & 0x01, // compare with 2nd byte of 0x100\n        sampleSizePresent = result.flags[1] & 0x02, // compare with 2nd byte of 0x200\n        sampleFlagsPresent = result.flags[1] & 0x04, // compare with 2nd byte of 0x400\n        sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08, // compare with 2nd byte of 0x800\n        sampleCount = view.getUint32(4),\n        offset = 8,\n        sample;\n\n      if (dataOffsetPresent) {\n        // 32 bit signed integer\n        result.dataOffset = view.getInt32(offset);\n        offset += 4;\n      }\n\n      // Overrides the flags for the first sample only. The order of\n      // optional values will be: duration, size, compositionTimeOffset\n      if (firstSampleFlagsPresent && sampleCount) {\n        sample = {\n          flags: parseSampleFlags(data.subarray(offset, offset + 4))\n        };\n        offset += 4;\n        if (sampleDurationPresent) {\n          sample.duration = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleSizePresent) {\n          sample.size = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleCompositionTimeOffsetPresent) {\n          // Note: this should be a signed int if version is 1\n          sample.compositionTimeOffset = view.getUint32(offset);\n          offset += 4;\n        }\n        result.samples.push(sample);\n        sampleCount--;\n      }\n\n      while (sampleCount--) {\n        sample = {};\n        if (sampleDurationPresent) {\n          sample.duration = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleSizePresent) {\n          sample.size = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleFlagsPresent) {\n          sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n          offset += 4;\n        }\n        if (sampleCompositionTimeOffsetPresent) {\n          // Note: this should be a signed int if version is 1\n          sample.compositionTimeOffset = view.getUint32(offset);\n          offset += 4;\n        }\n        result.samples.push(sample);\n      }\n      return result;\n    },\n    'url ': function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4))\n      };\n    },\n    vmhd: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        graphicsmode: view.getUint16(4),\n        opcolor: new Uint16Array([view.getUint16(6),\n                                  view.getUint16(8),\n                                  view.getUint16(10)])\n      };\n    }\n  };\n\n\n/**\n * Return a javascript array of box objects parsed from an ISO base\n * media file.\n * @param data {Uint8Array} the binary data of the media to be inspected\n * @return {array} a javascript array of potentially nested box objects\n */\ninspectMp4 = function(data) {\n  var\n    i = 0,\n    result = [],\n    view,\n    size,\n    type,\n    end,\n    box;\n\n  // Convert data from Uint8Array to ArrayBuffer, to follow Dataview API\n  var ab = new ArrayBuffer(data.length);\n  var v = new Uint8Array(ab);\n  for (var z = 0; z < data.length; ++z) {\n      v[z] = data[z];\n  }\n  view = new DataView(ab);\n\n  while (i < data.byteLength) {\n    // parse box data\n    size = view.getUint32(i);\n    type =  parseType(data.subarray(i + 4, i + 8));\n    end = size > 1 ? i + size : data.byteLength;\n\n    // parse type-specific data\n    box = (parse[type] || function(data) {\n      return {\n        data: data\n      };\n    })(data.subarray(i + 8, end));\n    box.size = size;\n    box.type = type;\n\n    // store this box and move to the next\n    result.push(box);\n    i = end;\n  }\n  return result;\n};\n\n/**\n * Returns a textual representation of the javascript represtentation\n * of an MP4 file. You can use it as an alternative to\n * JSON.stringify() to compare inspected MP4s.\n * @param inspectedMp4 {array} the parsed array of boxes in an MP4\n * file\n * @param depth {number} (optional) the number of ancestor boxes of\n * the elements of inspectedMp4. Assumed to be zero if unspecified.\n * @return {string} a text representation of the parsed MP4\n */\ntextifyMp4 = function(inspectedMp4, depth) {\n  var indent;\n  depth = depth || 0;\n  indent = new Array(depth * 2 + 1).join(' ');\n\n  // iterate over all the boxes\n  return inspectedMp4.map(function(box, index) {\n\n    // list the box type first at the current indentation level\n    return indent + box.type + '\\n' +\n\n      // the type is already included and handle child boxes separately\n      Object.keys(box).filter(function(key) {\n        return key !== 'type' && key !== 'boxes';\n\n      // output all the box properties\n      }).map(function(key) {\n        var prefix = indent + '  ' + key + ': ',\n            value = box[key];\n\n        // print out raw bytes as hexademical\n        if (value instanceof Uint8Array || value instanceof Uint32Array) {\n          var bytes = Array.prototype.slice.call(new Uint8Array(value.buffer, value.byteOffset, value.byteLength))\n              .map(function(byte) {\n                return ' ' + ('00' + byte.toString(16)).slice(-2);\n              }).join('').match(/.{1,24}/g);\n          if (!bytes) {\n            return prefix + '<>';\n          }\n          if (bytes.length === 1) {\n            return prefix + '<' + bytes.join('').slice(1) + '>';\n          }\n          return prefix + '<\\n' + bytes.map(function(line) {\n            return indent + '  ' + line;\n          }).join('\\n') + '\\n' + indent + '  >';\n        }\n\n        // stringify generic objects\n        return prefix +\n            JSON.stringify(value, null, 2)\n              .split('\\n').map(function(line, index) {\n                if (index === 0) {\n                  return line;\n                }\n                return indent + '  ' + line;\n              }).join('\\n');\n      }).join('\\n') +\n\n    // recursively textify the child boxes\n    (box.boxes ? '\\n' + textifyMp4(box.boxes, depth + 1) : '');\n  }).join('\\n');\n};\n\nmodule.exports = {\n  inspect: inspectMp4,\n  textify: textifyMp4,\n  parseTfdt: parse.tfdt,\n  parseHdlr: parse.hdlr,\n  parseTfhd: parse.tfhd,\n  parseTrun: parse.trun,\n  parseSidx: parse.sidx\n};\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","// 22.1.3.31 Array.prototype[@@unscopables]\nvar UNSCOPABLES = require('./_wks')('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) require('./_hide')(ArrayProto, UNSCOPABLES, {});\nmodule.exports = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n","module.exports = function (exec) {\n  try {\n    return { e: false, v: exec() };\n  } catch (e) {\n    return { e: true, v: e };\n  }\n};\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * A stream-based aac to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\nvar Stream = require('../utils/stream.js');\nvar aacUtils = require('./utils');\n\n// Constants\nvar AacStream;\n\n/**\n * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n */\n\nAacStream = function() {\n  var\n    everything = new Uint8Array(),\n    timeStamp = 0;\n\n  AacStream.prototype.init.call(this);\n\n  this.setTimestamp = function(timestamp) {\n    timeStamp = timestamp;\n  };\n\n  this.push = function(bytes) {\n    var\n      frameSize = 0,\n      byteIndex = 0,\n      bytesLeft,\n      chunk,\n      packet,\n      tempLength;\n\n    // If there are bytes remaining from the last segment, prepend them to the\n    // bytes that were pushed in\n    if (everything.length) {\n      tempLength = everything.length;\n      everything = new Uint8Array(bytes.byteLength + tempLength);\n      everything.set(everything.subarray(0, tempLength));\n      everything.set(bytes, tempLength);\n    } else {\n      everything = bytes;\n    }\n\n    while (everything.length - byteIndex >= 3) {\n      if ((everything[byteIndex] === 'I'.charCodeAt(0)) &&\n          (everything[byteIndex + 1] === 'D'.charCodeAt(0)) &&\n          (everything[byteIndex + 2] === '3'.charCodeAt(0))) {\n\n        // Exit early because we don't have enough to parse\n        // the ID3 tag header\n        if (everything.length - byteIndex < 10) {\n          break;\n        }\n\n        // check framesize\n        frameSize = aacUtils.parseId3TagSize(everything, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        // Add to byteIndex to support multiple ID3 tags in sequence\n        if (byteIndex + frameSize > everything.length) {\n          break;\n        }\n        chunk = {\n          type: 'timed-metadata',\n          data: everything.subarray(byteIndex, byteIndex + frameSize)\n        };\n        this.trigger('data', chunk);\n        byteIndex += frameSize;\n        continue;\n      } else if (((everything[byteIndex] & 0xff) === 0xff) &&\n                 ((everything[byteIndex + 1] & 0xf0) === 0xf0)) {\n\n        // Exit early because we don't have enough to parse\n        // the ADTS frame header\n        if (everything.length - byteIndex < 7) {\n          break;\n        }\n\n        frameSize = aacUtils.parseAdtsSize(everything, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (byteIndex + frameSize > everything.length) {\n          break;\n        }\n\n        packet = {\n          type: 'audio',\n          data: everything.subarray(byteIndex, byteIndex + frameSize),\n          pts: timeStamp,\n          dts: timeStamp\n        };\n        this.trigger('data', packet);\n        byteIndex += frameSize;\n        continue;\n      }\n      byteIndex++;\n    }\n    bytesLeft = everything.length - byteIndex;\n\n    if (bytesLeft > 0) {\n      everything = everything.subarray(byteIndex);\n    } else {\n      everything = new Uint8Array();\n    }\n  };\n};\n\nAacStream.prototype = new Stream();\n\nmodule.exports = AacStream;\n","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","'use strict';\n\nvar $isNaN = Number.isNaN || function (a) { return a !== a; };\n\nmodule.exports = Number.isFinite || function (x) { return typeof x === 'number' && !$isNaN(x) && x !== Infinity && x !== -Infinity; };\n","'use strict';\n\nvar bind = require('function-bind');\n\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);\n","var global = require('./_global');\nvar navigator = global.navigator;\n\nmodule.exports = navigator && navigator.userAgent || '';\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","'use strict';\n// 25.4.1.5 NewPromiseCapability(C)\nvar aFunction = require('./_a-function');\n\nfunction PromiseCapability(C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n}\n\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nvar script = {\r\n  name: \"Ribbon\",\r\n  props: {\r\n    text: {\r\n      type: String,\r\n      default: \"vue-ribbon: check it out!\"\r\n    },\r\n\r\n    url: {\r\n      type: String,\r\n      default: \"https://flatmap.it/vue-ribbon\"\r\n    },\r\n    position: {\r\n      type: String,\r\n      validator: function(value) {\r\n        return (\r\n          value === \"left-top\" ||\r\n          value === \"right-top\" ||\r\n          value === \"left-bottom\" ||\r\n          value === \"right-bottom\"\r\n        );\r\n      },\r\n      default: \"right-top\"\r\n    },\r\n    fixed: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    color: {\r\n      type: String,\r\n      validator: function(value) {\r\n        return value.length === 7;\r\n      },\r\n      default: \"#364a5e\"\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    ribbonClass: function ribbonClass() {\n      var obj;\n\r\n      return ( obj = {\r\n        \"vue-ribbon\": true\r\n      }, obj[(\"\" + (this.position))] = true, obj.fixed = this.fixed, obj );\r\n    },\r\n\r\n    href: function href() {\r\n      return this.url;\r\n    },\r\n\r\n    componentId: function componentId() {\r\n      return (\"vue-ribbon-\" + (this._uid));\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    isLightColor: function isLightColor() {\r\n      var rgb = parseInt(this.color.substring(1), 16);\r\n      var r = (rgb >> 16) & 0xff;\r\n      var g = (rgb >> 8) & 0xff;\r\n      var b = (rgb >> 0) & 0xff;\r\n      var luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\r\n      return luma > 128;\r\n    },\r\n\r\n    dynamicCSSClass: function dynamicCSSClass() {\r\n      var nodeId = \"vue-ribbon-bkg-\" + this._uid;\r\n      var style = document.getElementById(nodeId);\r\n      if (!style) {\r\n        style = document.createElement(\"style\");\r\n        style.id = nodeId;\r\n        style.type = \"text/css\";\r\n        this.$el.appendChild(style);\r\n      }\r\n      var cssClass = \"#\" + (this.componentId) + \":before { background-color: \" + (this.color) + \"} \";\r\n      if (this.isLightColor()) {\r\n        cssClass += \"#\" + (this.componentId) + \":after { color: #000; border-color: #000;}\";\r\n      }\r\n      style.innerHTML = cssClass;\r\n    }\r\n  },\r\n\r\n  mounted: function() {\r\n    this.dynamicCSSClass();\r\n  },\r\n\r\n  beforeUpdate: function() {\r\n    this.dynamicCSSClass();\r\n  }\r\n};\n\nfunction normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier\n/* server only */\n, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\n  if (typeof shadowMode !== 'boolean') {\n    createInjectorSSR = createInjector;\n    createInjector = shadowMode;\n    shadowMode = false;\n  } // Vue.extend constructor export interop.\n\n\n  var options = typeof script === 'function' ? script.options : script; // render functions\n\n  if (template && template.render) {\n    options.render = template.render;\n    options.staticRenderFns = template.staticRenderFns;\n    options._compiled = true; // functional template\n\n    if (isFunctionalTemplate) {\n      options.functional = true;\n    }\n  } // scopedId\n\n\n  if (scopeId) {\n    options._scopeId = scopeId;\n  }\n\n  var hook;\n\n  if (moduleIdentifier) {\n    // server build\n    hook = function hook(context) {\n      // 2.3 injection\n      context = context || // cached call\n      this.$vnode && this.$vnode.ssrContext || // stateful\n      this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext; // functional\n      // 2.2 with runInNewContext: true\n\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__;\n      } // inject component styles\n\n\n      if (style) {\n        style.call(this, createInjectorSSR(context));\n      } // register component module identifier for async chunk inference\n\n\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier);\n      }\n    }; // used by ssr in case component is cached and beforeCreate\n    // never gets called\n\n\n    options._ssrRegister = hook;\n  } else if (style) {\n    hook = shadowMode ? function () {\n      style.call(this, createInjectorShadow(this.$root.$options.shadowRoot));\n    } : function (context) {\n      style.call(this, createInjector(context));\n    };\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // register for functional component in vue file\n      var originalRender = options.render;\n\n      options.render = function renderWithStyleInjection(h, context) {\n        hook.call(context);\n        return originalRender(h, context);\n      };\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate;\n      options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\n    }\n  }\n\n  return script;\n}\n\nvar normalizeComponent_1 = normalizeComponent;\n\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase());\nfunction createInjector(context) {\n  return function (id, style) {\n    return addStyle(id, style);\n  };\n}\nvar HEAD = document.head || document.getElementsByTagName('head')[0];\nvar styles = {};\n\nfunction addStyle(id, css) {\n  var group = isOldIE ? css.media || 'default' : id;\n  var style = styles[group] || (styles[group] = {\n    ids: new Set(),\n    styles: []\n  });\n\n  if (!style.ids.has(id)) {\n    style.ids.add(id);\n    var code = css.source;\n\n    if (css.map) {\n      // https://developer.chrome.com/devtools/docs/javascript-debugging\n      // this makes source maps inside style tags work properly in Chrome\n      code += '\\n/*# sourceURL=' + css.map.sources[0] + ' */'; // http://stackoverflow.com/a/26603875\n\n      code += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(css.map)))) + ' */';\n    }\n\n    if (!style.element) {\n      style.element = document.createElement('style');\n      style.element.type = 'text/css';\n      if (css.media) { style.element.setAttribute('media', css.media); }\n      HEAD.appendChild(style.element);\n    }\n\n    if ('styleSheet' in style.element) {\n      style.styles.push(code);\n      style.element.styleSheet.cssText = style.styles.filter(Boolean).join('\\n');\n    } else {\n      var index = style.ids.size - 1;\n      var textNode = document.createTextNode(code);\n      var nodes = style.element.childNodes;\n      if (nodes[index]) { style.element.removeChild(nodes[index]); }\n      if (nodes.length) { style.element.insertBefore(textNode, nodes[index]); }else { style.element.appendChild(textNode); }\n    }\n  }\n}\n\nvar browser = createInjector;\n\n/* script */\nvar __vue_script__ = script;\n\n/* template */\nvar __vue_render__ = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"vue-ribbon-box\"}},[_c('a',{class:_vm.ribbonClass,attrs:{\"id\":_vm.componentId,\"href\":_vm.href,\"title\":_vm.text,\"data-ribbon\":_vm.text}},[_vm._v(_vm._s(_vm.text))])])};\nvar __vue_staticRenderFns__ = [];\n\n  /* style */\n  var __vue_inject_styles__ = function (inject) {\n    if (!inject) { return }\n    inject(\"data-v-5d582780_0\", { source: \".vue-ribbon[data-v-5d582780]{width:12.1em;height:12.1em;position:absolute;overflow:hidden;top:0;right:0;z-index:9999;pointer-events:none;font-size:13px;text-decoration:none;text-indent:-999999px}.vue-ribbon.fixed[data-v-5d582780]{position:fixed}.vue-ribbon[data-v-5d582780]:active,.vue-ribbon[data-v-5d582780]:hover{background-color:rgba(0,0,0,0)}.vue-ribbon[data-v-5d582780]:after,.vue-ribbon[data-v-5d582780]:before{position:absolute;display:block;width:15.38em;height:1.54em;top:3.23em;right:-3.23em;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;-webkit-transform:rotate(45deg);-moz-transform:rotate(45deg);-ms-transform:rotate(45deg);-o-transform:rotate(45deg);transform:rotate(45deg)}.vue-ribbon[data-v-5d582780]:before{content:\\\"\\\";padding:.38em 0;background-image:-webkit-gradient(linear,left top,left bottom,from(rgba(0,0,0,0)),to(rgba(0,0,0,.15)));background-image:-webkit-linear-gradient(top,rgba(0,0,0,0),rgba(0,0,0,.15));background-image:-moz-linear-gradient(top,rgba(92,60,60,0),rgba(0,0,0,.15));background-image:-ms-linear-gradient(top,rgba(0,0,0,0),rgba(0,0,0,.15));background-image:-o-linear-gradient(top,rgba(0,0,0,0),rgba(0,0,0,.15));background-image:linear-gradient(to bottom,rgba(0,0,0,0),rgba(0,0,0,.15));-webkit-box-shadow:0 .15em .23em 0 rgba(0,0,0,.5);-moz-box-shadow:0 .15em .23em 0 rgba(0,0,0,.5);box-shadow:0 .15em .23em 0 rgba(0,0,0,.5);pointer-events:auto}.vue-ribbon[data-v-5d582780]:after{content:attr(data-ribbon);color:#fff;font:700 1em \\\"Helvetica Neue\\\",Helvetica,Arial,sans-serif;line-height:1.54em;text-decoration:none;text-shadow:0 -.08em rgba(0,0,0,.5);text-align:center;text-indent:0;padding:.15em 0;margin:.15em 0;border-width:.08em 0;border-style:dotted;border-color:#fff;border-color:rgba(255,255,255,.7)}.vue-ribbon.left-bottom[data-v-5d582780],.vue-ribbon.left-top[data-v-5d582780]{right:auto;left:0}.vue-ribbon.left-bottom[data-v-5d582780],.vue-ribbon.right-bottom[data-v-5d582780]{top:auto;bottom:0}.vue-ribbon.left-bottom[data-v-5d582780]:after,.vue-ribbon.left-bottom[data-v-5d582780]:before,.vue-ribbon.left-top[data-v-5d582780]:after,.vue-ribbon.left-top[data-v-5d582780]:before{right:auto;left:-3.23em}.vue-ribbon.left-bottom[data-v-5d582780]:after,.vue-ribbon.left-bottom[data-v-5d582780]:before,.vue-ribbon.right-bottom[data-v-5d582780]:after,.vue-ribbon.right-bottom[data-v-5d582780]:before{top:auto;bottom:3.23em}.vue-ribbon.left-top[data-v-5d582780]:after,.vue-ribbon.left-top[data-v-5d582780]:before,.vue-ribbon.right-bottom[data-v-5d582780]:after,.vue-ribbon.right-bottom[data-v-5d582780]:before{-webkit-transform:rotate(-45deg);-moz-transform:rotate(-45deg);-ms-transform:rotate(-45deg);-o-transform:rotate(-45deg);transform:rotate(-45deg)}\", map: undefined, media: undefined });\n\n  };\n  /* scoped */\n  var __vue_scope_id__ = \"data-v-5d582780\";\n  /* module identifier */\n  var __vue_module_identifier__ = undefined;\n  /* functional template */\n  var __vue_is_functional_template__ = false;\n  /* style inject SSR */\n  \n\n  \n  var component = normalizeComponent_1(\n    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },\n    __vue_inject_styles__,\n    __vue_script__,\n    __vue_scope_id__,\n    __vue_is_functional_template__,\n    __vue_module_identifier__,\n    browser,\n    undefined\n  );\n\n// Import vue component\r\n\r\n// install function executed by Vue.use()\r\nfunction install(Vue) {\r\n  if (install.installed) { return; }\r\n  install.installed = true;\r\n  Vue.component('Ribbon', component);\r\n}\r\n\r\n// Create module definition for Vue.use()\r\nvar plugin = {\r\n  install: install,\r\n};\r\n\r\n// To auto-install when vue is found\r\n/* global window global */\r\nvar GlobalVue = null;\r\nif (typeof window !== 'undefined') {\r\n  GlobalVue = window.Vue;\r\n} else if (typeof global !== 'undefined') {\r\n  GlobalVue = global.Vue;\r\n}\r\nif (GlobalVue) {\r\n  GlobalVue.use(plugin);\r\n}\r\n\r\n// Inject install function into component - allows component\r\n// to be registered via Vue.use() as well as Vue.component()\r\ncomponent.install = install;\r\n\r\n// It's possible to expose named exports when writing components that can\r\n// also be used as directives, etc. - eg. import { RollupDemoDirective } from 'rollup-demo';\r\n// export const RollupDemoDirective = component;\n\nexport default component;\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Reads in-band CEA-708 captions out of FMP4 segments.\n * @see https://en.wikipedia.org/wiki/CEA-708\n */\n'use strict';\n\nvar discardEmulationPreventionBytes = require('../tools/caption-packet-parser').discardEmulationPreventionBytes;\nvar CaptionStream = require('../m2ts/caption-stream').CaptionStream;\nvar probe = require('./probe');\nvar inspect = require('../tools/mp4-inspector');\n\n/**\n  * Maps an offset in the mdat to a sample based on the the size of the samples.\n  * Assumes that `parseSamples` has been called first.\n  *\n  * @param {Number} offset - The offset into the mdat\n  * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n  * @return {?Object} The matching sample, or null if no match was found.\n  *\n  * @see ISO-BMFF-12/2015, Section 8.8.8\n **/\nvar mapToSample = function(offset, samples) {\n  var approximateOffset = offset;\n\n  for (var i = 0; i < samples.length; i++) {\n    var sample = samples[i];\n\n    if (approximateOffset < sample.size) {\n      return sample;\n    }\n\n    approximateOffset -= sample.size;\n  }\n\n  return null;\n};\n\n/**\n  * Finds SEI nal units contained in a Media Data Box.\n  * Assumes that `parseSamples` has been called first.\n  *\n  * @param {Uint8Array} avcStream - The bytes of the mdat\n  * @param {Object[]} samples - The samples parsed out by `parseSamples`\n  * @param {Number} trackId - The trackId of this video track\n  * @return {Object[]} seiNals - the parsed SEI NALUs found.\n  *   The contents of the seiNal should match what is expected by\n  *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n  *\n  * @see ISO-BMFF-12/2015, Section 8.1.1\n  * @see Rec. ITU-T H.264, 7.3.2.3.1\n **/\nvar findSeiNals = function(avcStream, samples, trackId) {\n  var\n    avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n    result = [],\n    seiNal,\n    i,\n    length,\n    lastMatchedSample;\n\n  for (i = 0; i + 4 < avcStream.length; i += length) {\n    length = avcView.getUint32(i);\n    i += 4;\n\n    // Bail if this doesn't appear to be an H264 stream\n    if (length <= 0) {\n      continue;\n    }\n\n    switch (avcStream[i] & 0x1F) {\n    case 0x06:\n      var data = avcStream.subarray(i + 1, i + 1 + length);\n      var matchingSample = mapToSample(i, samples);\n\n      seiNal = {\n        nalUnitType: 'sei_rbsp',\n        size: length,\n        data: data,\n        escapedRBSP: discardEmulationPreventionBytes(data),\n        trackId: trackId\n      };\n\n      if (matchingSample) {\n        seiNal.pts = matchingSample.pts;\n        seiNal.dts = matchingSample.dts;\n        lastMatchedSample = matchingSample;\n      } else {\n        // If a matching sample cannot be found, use the last\n        // sample's values as they should be as close as possible\n        seiNal.pts = lastMatchedSample.pts;\n        seiNal.dts = lastMatchedSample.dts;\n      }\n\n      result.push(seiNal);\n      break;\n    default:\n      break;\n    }\n  }\n\n  return result;\n};\n\n/**\n  * Parses sample information out of Track Run Boxes and calculates\n  * the absolute presentation and decode timestamps of each sample.\n  *\n  * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n  * @param {Number} baseMediaDecodeTime - base media decode time from tfdt\n      @see ISO-BMFF-12/2015, Section 8.8.12\n  * @param {Object} tfhd - The parsed Track Fragment Header\n  *   @see inspect.parseTfhd\n  * @return {Object[]} the parsed samples\n  *\n  * @see ISO-BMFF-12/2015, Section 8.8.8\n **/\nvar parseSamples = function(truns, baseMediaDecodeTime, tfhd) {\n  var currentDts = baseMediaDecodeTime;\n  var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n  var defaultSampleSize = tfhd.defaultSampleSize || 0;\n  var trackId = tfhd.trackId;\n  var allSamples = [];\n\n  truns.forEach(function(trun) {\n    // Note: We currently do not parse the sample table as well\n    // as the trun. It's possible some sources will require this.\n    // moov > trak > mdia > minf > stbl\n    var trackRun = inspect.parseTrun(trun);\n    var samples = trackRun.samples;\n\n    samples.forEach(function(sample) {\n      if (sample.duration === undefined) {\n        sample.duration = defaultSampleDuration;\n      }\n      if (sample.size === undefined) {\n        sample.size = defaultSampleSize;\n      }\n      sample.trackId = trackId;\n      sample.dts = currentDts;\n      if (sample.compositionTimeOffset === undefined) {\n        sample.compositionTimeOffset = 0;\n      }\n      sample.pts = currentDts + sample.compositionTimeOffset;\n\n      currentDts += sample.duration;\n    });\n\n    allSamples = allSamples.concat(samples);\n  });\n\n  return allSamples;\n};\n\n/**\n  * Parses out caption nals from an FMP4 segment's video tracks.\n  *\n  * @param {Uint8Array} segment - The bytes of a single segment\n  * @param {Number} videoTrackId - The trackId of a video track in the segment\n  * @return {Object.<Number, Object[]>} A mapping of video trackId to\n  *   a list of seiNals found in that track\n **/\nvar parseCaptionNals = function(segment, videoTrackId) {\n  // To get the samples\n  var trafs = probe.findBox(segment, ['moof', 'traf']);\n  // To get SEI NAL units\n  var mdats = probe.findBox(segment, ['mdat']);\n  var captionNals = {};\n  var mdatTrafPairs = [];\n\n  // Pair up each traf with a mdat as moofs and mdats are in pairs\n  mdats.forEach(function(mdat, index) {\n    var matchingTraf = trafs[index];\n    mdatTrafPairs.push({\n      mdat: mdat,\n      traf: matchingTraf\n    });\n  });\n\n  mdatTrafPairs.forEach(function(pair) {\n    var mdat = pair.mdat;\n    var traf = pair.traf;\n    var tfhd = probe.findBox(traf, ['tfhd']);\n    // Exactly 1 tfhd per traf\n    var headerInfo = inspect.parseTfhd(tfhd[0]);\n    var trackId = headerInfo.trackId;\n    var tfdt = probe.findBox(traf, ['tfdt']);\n    // Either 0 or 1 tfdt per traf\n    var baseMediaDecodeTime = (tfdt.length > 0) ? inspect.parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\n    var truns = probe.findBox(traf, ['trun']);\n    var samples;\n    var seiNals;\n\n    // Only parse video data for the chosen video track\n    if (videoTrackId === trackId && truns.length > 0) {\n      samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n\n      seiNals = findSeiNals(mdat, samples, trackId);\n\n      if (!captionNals[trackId]) {\n        captionNals[trackId] = [];\n      }\n\n      captionNals[trackId] = captionNals[trackId].concat(seiNals);\n    }\n  });\n\n  return captionNals;\n};\n\n/**\n  * Parses out inband captions from an MP4 container and returns\n  * caption objects that can be used by WebVTT and the TextTrack API.\n  * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n  * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n  * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n  *\n  * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n  * @param {Number} trackId - The id of the video track to parse\n  * @param {Number} timescale - The timescale for the video track from the init segment\n  *\n  * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n  * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n  * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n  * @return {String} parsedCaptions[].text - The visible content of the caption\n **/\nvar parseEmbeddedCaptions = function(segment, trackId, timescale) {\n  var seiNals;\n\n  if (!trackId) {\n    return null;\n  }\n\n  seiNals = parseCaptionNals(segment, trackId);\n\n  return {\n    seiNals: seiNals[trackId],\n    timescale: timescale\n  };\n};\n\n/**\n  * Converts SEI NALUs into captions that can be used by video.js\n **/\nvar CaptionParser = function() {\n  var isInitialized = false;\n  var captionStream;\n\n  // Stores segments seen before trackId and timescale are set\n  var segmentCache;\n  // Stores video track ID of the track being parsed\n  var trackId;\n  // Stores the timescale of the track being parsed\n  var timescale;\n  // Stores captions parsed so far\n  var parsedCaptions;\n\n  /**\n    * A method to indicate whether a CaptionParser has been initalized\n    * @returns {Boolean}\n   **/\n  this.isInitialized = function() {\n    return isInitialized;\n  };\n\n  /**\n    * Initializes the underlying CaptionStream, SEI NAL parsing\n    * and management, and caption collection\n   **/\n  this.init = function() {\n    captionStream = new CaptionStream();\n    isInitialized = true;\n\n    // Collect dispatched captions\n    captionStream.on('data', function(event) {\n      // Convert to seconds in the source's timescale\n      event.startTime = event.startPts / timescale;\n      event.endTime = event.endPts / timescale;\n\n      parsedCaptions.captions.push(event);\n      parsedCaptions.captionStreams[event.stream] = true;\n    });\n  };\n\n  /**\n    * Determines if a new video track will be selected\n    * or if the timescale changed\n    * @return {Boolean}\n   **/\n  this.isNewInit = function(videoTrackIds, timescales) {\n    if ((videoTrackIds && videoTrackIds.length === 0) ||\n        (timescales && typeof timescales === 'object' &&\n          Object.keys(timescales).length === 0)) {\n      return false;\n    }\n\n    return trackId !== videoTrackIds[0] ||\n      timescale !== timescales[trackId];\n  };\n\n  /**\n    * Parses out SEI captions and interacts with underlying\n    * CaptionStream to return dispatched captions\n    *\n    * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n    * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n    * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n    * @see parseEmbeddedCaptions\n    * @see m2ts/caption-stream.js\n   **/\n  this.parse = function(segment, videoTrackIds, timescales) {\n    var parsedData;\n\n    if (!this.isInitialized()) {\n      return null;\n\n    // This is not likely to be a video segment\n    } else if (!videoTrackIds || !timescales) {\n      return null;\n\n    } else if (this.isNewInit(videoTrackIds, timescales)) {\n      // Use the first video track only as there is no\n      // mechanism to switch to other video tracks\n      trackId = videoTrackIds[0];\n      timescale = timescales[trackId];\n\n    // If an init segment has not been seen yet, hold onto segment\n    // data until we have one\n    } else if (!trackId || !timescale) {\n      segmentCache.push(segment);\n      return null;\n    }\n\n    // Now that a timescale and trackId is set, parse cached segments\n    while (segmentCache.length > 0) {\n      var cachedSegment = segmentCache.shift();\n\n      this.parse(cachedSegment, videoTrackIds, timescales);\n    }\n\n    parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n\n    if (parsedData === null || !parsedData.seiNals) {\n      return null;\n    }\n\n    this.pushNals(parsedData.seiNals);\n    // Force the parsed captions to be dispatched\n    this.flushStream();\n\n    return parsedCaptions;\n  };\n\n  /**\n    * Pushes SEI NALUs onto CaptionStream\n    * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n    * Assumes that `parseCaptionNals` has been called first\n    * @see m2ts/caption-stream.js\n    **/\n  this.pushNals = function(nals) {\n    if (!this.isInitialized() || !nals || nals.length === 0) {\n      return null;\n    }\n\n    nals.forEach(function(nal) {\n      captionStream.push(nal);\n    });\n  };\n\n  /**\n    * Flushes underlying CaptionStream to dispatch processed, displayable captions\n    * @see m2ts/caption-stream.js\n   **/\n  this.flushStream = function() {\n    if (!this.isInitialized()) {\n      return null;\n    }\n\n    captionStream.flush();\n  };\n\n  /**\n    * Reset caption buckets for new data\n   **/\n  this.clearParsedCaptions = function() {\n    parsedCaptions.captions = [];\n    parsedCaptions.captionStreams = {};\n  };\n\n  /**\n    * Resets underlying CaptionStream\n    * @see m2ts/caption-stream.js\n   **/\n  this.resetCaptionStream = function() {\n    if (!this.isInitialized()) {\n      return null;\n    }\n\n    captionStream.reset();\n  };\n\n  /**\n    * Convenience method to clear all captions flushed from the\n    * CaptionStream and still being parsed\n    * @see m2ts/caption-stream.js\n   **/\n  this.clearAllCaptions = function() {\n    this.clearParsedCaptions();\n    this.resetCaptionStream();\n  };\n\n  /**\n    * Reset caption parser\n   **/\n  this.reset = function() {\n    segmentCache = [];\n    trackId = null;\n    timescale = null;\n\n    if (!parsedCaptions) {\n      parsedCaptions = {\n        captions: [],\n        // CC1, CC2, CC3, CC4\n        captionStreams: {}\n      };\n    } else {\n      this.clearParsedCaptions();\n    }\n\n    this.resetCaptionStream();\n  };\n\n  this.reset();\n};\n\nmodule.exports = CaptionParser;\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\n'use strict';\n\nmodule.exports = {\n  H264_STREAM_TYPE: 0x1B,\n  ADTS_STREAM_TYPE: 0x0F,\n  METADATA_STREAM_TYPE: 0x15\n};\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar autoKeyword = \"auto\";\nvar directionSetting = {\n  \"\": 1,\n  \"lr\": 1,\n  \"rl\": 1\n};\nvar alignSetting = {\n  \"start\": 1,\n  \"middle\": 1,\n  \"end\": 1,\n  \"left\": 1,\n  \"right\": 1\n};\n\nfunction findDirectionSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var dir = directionSetting[value.toLowerCase()];\n  return dir ? value.toLowerCase() : false;\n}\n\nfunction findAlignSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var align = alignSetting[value.toLowerCase()];\n  return align ? value.toLowerCase() : false;\n}\n\nfunction VTTCue(startTime, endTime, text) {\n  /**\n   * Shim implementation specific properties. These properties are not in\n   * the spec.\n   */\n\n  // Lets us know when the VTTCue's data has changed in such a way that we need\n  // to recompute its display state. This lets us compute its display state\n  // lazily.\n  this.hasBeenReset = false;\n\n  /**\n   * VTTCue and TextTrackCue properties\n   * http://dev.w3.org/html5/webvtt/#vttcue-interface\n   */\n\n  var _id = \"\";\n  var _pauseOnExit = false;\n  var _startTime = startTime;\n  var _endTime = endTime;\n  var _text = text;\n  var _region = null;\n  var _vertical = \"\";\n  var _snapToLines = true;\n  var _line = \"auto\";\n  var _lineAlign = \"start\";\n  var _position = 50;\n  var _positionAlign = \"middle\";\n  var _size = 50;\n  var _align = \"middle\";\n\n  Object.defineProperties(this, {\n    \"id\": {\n      enumerable: true,\n      get: function() {\n        return _id;\n      },\n      set: function(value) {\n        _id = \"\" + value;\n      }\n    },\n\n    \"pauseOnExit\": {\n      enumerable: true,\n      get: function() {\n        return _pauseOnExit;\n      },\n      set: function(value) {\n        _pauseOnExit = !!value;\n      }\n    },\n\n    \"startTime\": {\n      enumerable: true,\n      get: function() {\n        return _startTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Start time must be set to a number.\");\n        }\n        _startTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"endTime\": {\n      enumerable: true,\n      get: function() {\n        return _endTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"End time must be set to a number.\");\n        }\n        _endTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"text\": {\n      enumerable: true,\n      get: function() {\n        return _text;\n      },\n      set: function(value) {\n        _text = \"\" + value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"region\": {\n      enumerable: true,\n      get: function() {\n        return _region;\n      },\n      set: function(value) {\n        _region = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"vertical\": {\n      enumerable: true,\n      get: function() {\n        return _vertical;\n      },\n      set: function(value) {\n        var setting = findDirectionSetting(value);\n        // Have to check for false because the setting an be an empty string.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _vertical = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"snapToLines\": {\n      enumerable: true,\n      get: function() {\n        return _snapToLines;\n      },\n      set: function(value) {\n        _snapToLines = !!value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"line\": {\n      enumerable: true,\n      get: function() {\n        return _line;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\" && value !== autoKeyword) {\n          throw new SyntaxError(\"An invalid number or illegal string was specified.\");\n        }\n        _line = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"lineAlign\": {\n      enumerable: true,\n      get: function() {\n        return _lineAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _lineAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"position\": {\n      enumerable: true,\n      get: function() {\n        return _position;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Position must be between 0 and 100.\");\n        }\n        _position = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"positionAlign\": {\n      enumerable: true,\n      get: function() {\n        return _positionAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _positionAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"size\": {\n      enumerable: true,\n      get: function() {\n        return _size;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Size must be between 0 and 100.\");\n        }\n        _size = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"align\": {\n      enumerable: true,\n      get: function() {\n        return _align;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _align = setting;\n        this.hasBeenReset = true;\n      }\n    }\n  });\n\n  /**\n   * Other <track> spec defined properties\n   */\n\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n  this.displayState = undefined;\n}\n\n/**\n * VTTCue methods\n */\n\nVTTCue.prototype.getCueAsHTML = function() {\n  // Assume WebVTT.convertCueToDOMTree is on the global.\n  return WebVTT.convertCueToDOMTree(window, this.text);\n};\n\nmodule.exports = VTTCue;\n","'use strict';\n\nvar define = require('define-properties');\nvar getPolyfill = require('./polyfill');\n\nmodule.exports = function shimStringTrim() {\n\tvar polyfill = getPolyfill();\n\tdefine(String.prototype, { trim: polyfill }, {\n\t\ttrim: function testTrim() {\n\t\t\treturn String.prototype.trim !== polyfill;\n\t\t}\n\t});\n\treturn polyfill;\n};\n","var anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar newPromiseCapability = require('./_new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n","'use strict';\n\nmodule.exports = function sign(number) {\n\treturn number >= 0 ? 1 : -1;\n};\n","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","'use strict';\n\nvar bind = require('function-bind');\nvar define = require('define-properties');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar boundTrim = bind.call(Function.call, getPolyfill());\n\ndefine(boundTrim, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = boundTrim;\n","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","'use strict';\n\nvar isCallable = require('is-callable');\n\nvar toStr = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar forEachArray = function forEachArray(array, iterator, receiver) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            if (receiver == null) {\n                iterator(array[i], i, array);\n            } else {\n                iterator.call(receiver, array[i], i, array);\n            }\n        }\n    }\n};\n\nvar forEachString = function forEachString(string, iterator, receiver) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        if (receiver == null) {\n            iterator(string.charAt(i), i, string);\n        } else {\n            iterator.call(receiver, string.charAt(i), i, string);\n        }\n    }\n};\n\nvar forEachObject = function forEachObject(object, iterator, receiver) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            if (receiver == null) {\n                iterator(object[k], k, object);\n            } else {\n                iterator.call(receiver, object[k], k, object);\n            }\n        }\n    }\n};\n\nvar forEach = function forEach(list, iterator, thisArg) {\n    if (!isCallable(iterator)) {\n        throw new TypeError('iterator must be a function');\n    }\n\n    var receiver;\n    if (arguments.length >= 3) {\n        receiver = thisArg;\n    }\n\n    if (toStr.call(list) === '[object Array]') {\n        forEachArray(list, iterator, receiver);\n    } else if (typeof list === 'string') {\n        forEachString(list, iterator, receiver);\n    } else {\n        forEachObject(list, iterator, receiver);\n    }\n};\n\nmodule.exports = forEach;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\nvar _objCreate = Object.create || (function() {\n  function F() {}\n  return function(o) {\n    if (arguments.length !== 1) {\n      throw new Error('Object.create shim only accepts one parameter.');\n    }\n    F.prototype = o;\n    return new F();\n  };\n})();\n\n// Creates a new ParserError object from an errorData object. The errorData\n// object should have default code and message properties. The default message\n// property can be overriden by passing in a message parameter.\n// See ParsingError.Errors below for acceptable errors.\nfunction ParsingError(errorData, message) {\n  this.name = \"ParsingError\";\n  this.code = errorData.code;\n  this.message = message || errorData.message;\n}\nParsingError.prototype = _objCreate(Error.prototype);\nParsingError.prototype.constructor = ParsingError;\n\n// ParsingError metadata for acceptable ParsingErrors.\nParsingError.Errors = {\n  BadSignature: {\n    code: 0,\n    message: \"Malformed WebVTT signature.\"\n  },\n  BadTimeStamp: {\n    code: 1,\n    message: \"Malformed time stamp.\"\n  }\n};\n\n// Try to parse input as a time stamp.\nfunction parseTimeStamp(input) {\n\n  function computeSeconds(h, m, s, f) {\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n  }\n\n  var m = input.match(/^(\\d+):(\\d{2})(:\\d{2})?\\.(\\d{3})/);\n  if (!m) {\n    return null;\n  }\n\n  if (m[3]) {\n    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n    return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n  } else if (m[1] > 59) {\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n    // First position is hours as it's over 59.\n    return computeSeconds(m[1], m[2], 0,  m[4]);\n  } else {\n    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n    return computeSeconds(0, m[1], m[2], m[4]);\n  }\n}\n\n// A settings object holds key/value pairs and will ignore anything but the first\n// assignment to a specific key.\nfunction Settings() {\n  this.values = _objCreate(null);\n}\n\nSettings.prototype = {\n  // Only accept the first assignment to any key.\n  set: function(k, v) {\n    if (!this.get(k) && v !== \"\") {\n      this.values[k] = v;\n    }\n  },\n  // Return the value for a key, or a default value.\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n  // a number of possible default values as properties where 'defaultKey' is\n  // the key of the property that will be chosen; otherwise it's assumed to be\n  // a single value.\n  get: function(k, dflt, defaultKey) {\n    if (defaultKey) {\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\n    }\n    return this.has(k) ? this.values[k] : dflt;\n  },\n  // Check whether we have a value for a key.\n  has: function(k) {\n    return k in this.values;\n  },\n  // Accept a setting if its one of the given alternatives.\n  alt: function(k, v, a) {\n    for (var n = 0; n < a.length; ++n) {\n      if (v === a[n]) {\n        this.set(k, v);\n        break;\n      }\n    }\n  },\n  // Accept a setting if its a valid (signed) integer.\n  integer: function(k, v) {\n    if (/^-?\\d+$/.test(v)) { // integer\n      this.set(k, parseInt(v, 10));\n    }\n  },\n  // Accept a setting if its a valid percentage.\n  percent: function(k, v) {\n    var m;\n    if ((m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/))) {\n      v = parseFloat(v);\n      if (v >= 0 && v <= 100) {\n        this.set(k, v);\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\n// Helper function to parse input into groups separated by 'groupDelim', and\n// interprete each group as a key/value pair separated by 'keyValueDelim'.\nfunction parseOptions(input, callback, keyValueDelim, groupDelim) {\n  var groups = groupDelim ? input.split(groupDelim) : [input];\n  for (var i in groups) {\n    if (typeof groups[i] !== \"string\") {\n      continue;\n    }\n    var kv = groups[i].split(keyValueDelim);\n    if (kv.length !== 2) {\n      continue;\n    }\n    var k = kv[0];\n    var v = kv[1];\n    callback(k, v);\n  }\n}\n\nfunction parseCue(input, cue, regionList) {\n  // Remember the original input if we need to throw an error.\n  var oInput = input;\n  // 4.1 WebVTT timestamp\n  function consumeTimeStamp() {\n    var ts = parseTimeStamp(input);\n    if (ts === null) {\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                            \"Malformed timestamp: \" + oInput);\n    }\n    // Remove time stamp from input.\n    input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n    return ts;\n  }\n\n  // 4.4.2 WebVTT cue settings\n  function consumeCueSettings(input, cue) {\n    var settings = new Settings();\n\n    parseOptions(input, function (k, v) {\n      switch (k) {\n      case \"region\":\n        // Find the last region we parsed with the same region id.\n        for (var i = regionList.length - 1; i >= 0; i--) {\n          if (regionList[i].id === v) {\n            settings.set(k, regionList[i].region);\n            break;\n          }\n        }\n        break;\n      case \"vertical\":\n        settings.alt(k, v, [\"rl\", \"lr\"]);\n        break;\n      case \"line\":\n        var vals = v.split(\",\"),\n            vals0 = vals[0];\n        settings.integer(k, vals0);\n        settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n        settings.alt(k, vals0, [\"auto\"]);\n        if (vals.length === 2) {\n          settings.alt(\"lineAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"position\":\n        vals = v.split(\",\");\n        settings.percent(k, vals[0]);\n        if (vals.length === 2) {\n          settings.alt(\"positionAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"size\":\n        settings.percent(k, v);\n        break;\n      case \"align\":\n        settings.alt(k, v, [\"start\", \"middle\", \"end\", \"left\", \"right\"]);\n        break;\n      }\n    }, /:/, /\\s/);\n\n    // Apply default values for any missing fields.\n    cue.region = settings.get(\"region\", null);\n    cue.vertical = settings.get(\"vertical\", \"\");\n    cue.line = settings.get(\"line\", \"auto\");\n    cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n    cue.snapToLines = settings.get(\"snapToLines\", true);\n    cue.size = settings.get(\"size\", 100);\n    cue.align = settings.get(\"align\", \"middle\");\n    cue.position = settings.get(\"position\", {\n      start: 0,\n      left: 0,\n      middle: 50,\n      end: 100,\n      right: 100\n    }, cue.align);\n    cue.positionAlign = settings.get(\"positionAlign\", {\n      start: \"start\",\n      left: \"start\",\n      middle: \"middle\",\n      end: \"end\",\n      right: \"end\"\n    }, cue.align);\n  }\n\n  function skipWhitespace() {\n    input = input.replace(/^\\s+/, \"\");\n  }\n\n  // 4.1 WebVTT cue timings.\n  skipWhitespace();\n  cue.startTime = consumeTimeStamp();   // (1) collect cue start time\n  skipWhitespace();\n  if (input.substr(0, 3) !== \"-->\") {     // (3) next characters must match \"-->\"\n    throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                           \"Malformed time stamp (time stamps must be separated by '-->'): \" +\n                           oInput);\n  }\n  input = input.substr(3);\n  skipWhitespace();\n  cue.endTime = consumeTimeStamp();     // (5) collect cue end time\n\n  // 4.1 WebVTT cue settings list.\n  skipWhitespace();\n  consumeCueSettings(input, cue);\n}\n\nvar ESCAPE = {\n  \"&amp;\": \"&\",\n  \"&lt;\": \"<\",\n  \"&gt;\": \">\",\n  \"&lrm;\": \"\\u200e\",\n  \"&rlm;\": \"\\u200f\",\n  \"&nbsp;\": \"\\u00a0\"\n};\n\nvar TAG_NAME = {\n  c: \"span\",\n  i: \"i\",\n  b: \"b\",\n  u: \"u\",\n  ruby: \"ruby\",\n  rt: \"rt\",\n  v: \"span\",\n  lang: \"span\"\n};\n\nvar TAG_ANNOTATION = {\n  v: \"title\",\n  lang: \"lang\"\n};\n\nvar NEEDS_PARENT = {\n  rt: \"ruby\"\n};\n\n// Parse content into a document fragment.\nfunction parseContent(window, input) {\n  function nextToken() {\n    // Check for end-of-string.\n    if (!input) {\n      return null;\n    }\n\n    // Consume 'n' characters from the input.\n    function consume(result) {\n      input = input.substr(result.length);\n      return result;\n    }\n\n    var m = input.match(/^([^<]*)(<[^>]*>?)?/);\n    // If there is some text before the next tag, return it, otherwise return\n    // the tag.\n    return consume(m[1] ? m[1] : m[2]);\n  }\n\n  // Unescape a string 's'.\n  function unescape1(e) {\n    return ESCAPE[e];\n  }\n  function unescape(s) {\n    while ((m = s.match(/&(amp|lt|gt|lrm|rlm|nbsp);/))) {\n      s = s.replace(m[0], unescape1);\n    }\n    return s;\n  }\n\n  function shouldAdd(current, element) {\n    return !NEEDS_PARENT[element.localName] ||\n           NEEDS_PARENT[element.localName] === current.localName;\n  }\n\n  // Create an element for this tag.\n  function createElement(type, annotation) {\n    var tagName = TAG_NAME[type];\n    if (!tagName) {\n      return null;\n    }\n    var element = window.document.createElement(tagName);\n    element.localName = tagName;\n    var name = TAG_ANNOTATION[type];\n    if (name && annotation) {\n      element[name] = annotation.trim();\n    }\n    return element;\n  }\n\n  var rootDiv = window.document.createElement(\"div\"),\n      current = rootDiv,\n      t,\n      tagStack = [];\n\n  while ((t = nextToken()) !== null) {\n    if (t[0] === '<') {\n      if (t[1] === \"/\") {\n        // If the closing tag matches, move back up to the parent node.\n        if (tagStack.length &&\n            tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n          tagStack.pop();\n          current = current.parentNode;\n        }\n        // Otherwise just ignore the end tag.\n        continue;\n      }\n      var ts = parseTimeStamp(t.substr(1, t.length - 2));\n      var node;\n      if (ts) {\n        // Timestamps are lead nodes as well.\n        node = window.document.createProcessingInstruction(\"timestamp\", ts);\n        current.appendChild(node);\n        continue;\n      }\n      var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/);\n      // If we can't parse the tag, skip to the next tag.\n      if (!m) {\n        continue;\n      }\n      // Try to construct an element, and ignore the tag if we couldn't.\n      node = createElement(m[1], m[3]);\n      if (!node) {\n        continue;\n      }\n      // Determine if the tag should be added based on the context of where it\n      // is placed in the cuetext.\n      if (!shouldAdd(current, node)) {\n        continue;\n      }\n      // Set the class list (as a list of classes, separated by space).\n      if (m[2]) {\n        node.className = m[2].substr(1).replace('.', ' ');\n      }\n      // Append the node to the current node, and enter the scope of the new\n      // node.\n      tagStack.push(m[1]);\n      current.appendChild(node);\n      current = node;\n      continue;\n    }\n\n    // Text nodes are leaf nodes.\n    current.appendChild(window.document.createTextNode(unescape(t)));\n  }\n\n  return rootDiv;\n}\n\n// This is a list of all the Unicode characters that have a strong\n// right-to-left category. What this means is that these characters are\n// written right-to-left for sure. It was generated by pulling all the strong\n// right-to-left characters out of the Unicode data table. That table can\n// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\nvar strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6],\n [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d],\n [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6],\n [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5],\n [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815],\n [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858],\n [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f],\n [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c],\n [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1],\n [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc],\n [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808],\n [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855],\n [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f],\n [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13],\n [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58],\n [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72],\n [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f],\n [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32],\n [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42],\n [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f],\n [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59],\n [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62],\n [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77],\n [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b],\n [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\nfunction isStrongRTLChar(charCode) {\n  for (var i = 0; i < strongRTLRanges.length; i++) {\n    var currentRange = strongRTLRanges[i];\n    if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction determineBidi(cueDiv) {\n  var nodeStack = [],\n      text = \"\",\n      charCode;\n\n  if (!cueDiv || !cueDiv.childNodes) {\n    return \"ltr\";\n  }\n\n  function pushNodes(nodeStack, node) {\n    for (var i = node.childNodes.length - 1; i >= 0; i--) {\n      nodeStack.push(node.childNodes[i]);\n    }\n  }\n\n  function nextTextNode(nodeStack) {\n    if (!nodeStack || !nodeStack.length) {\n      return null;\n    }\n\n    var node = nodeStack.pop(),\n        text = node.textContent || node.innerText;\n    if (text) {\n      // TODO: This should match all unicode type B characters (paragraph\n      // separator characters). See issue #115.\n      var m = text.match(/^.*(\\n|\\r)/);\n      if (m) {\n        nodeStack.length = 0;\n        return m[0];\n      }\n      return text;\n    }\n    if (node.tagName === \"ruby\") {\n      return nextTextNode(nodeStack);\n    }\n    if (node.childNodes) {\n      pushNodes(nodeStack, node);\n      return nextTextNode(nodeStack);\n    }\n  }\n\n  pushNodes(nodeStack, cueDiv);\n  while ((text = nextTextNode(nodeStack))) {\n    for (var i = 0; i < text.length; i++) {\n      charCode = text.charCodeAt(i);\n      if (isStrongRTLChar(charCode)) {\n        return \"rtl\";\n      }\n    }\n  }\n  return \"ltr\";\n}\n\nfunction computeLinePos(cue) {\n  if (typeof cue.line === \"number\" &&\n      (cue.snapToLines || (cue.line >= 0 && cue.line <= 100))) {\n    return cue.line;\n  }\n  if (!cue.track || !cue.track.textTrackList ||\n      !cue.track.textTrackList.mediaElement) {\n    return -1;\n  }\n  var track = cue.track,\n      trackList = track.textTrackList,\n      count = 0;\n  for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n    if (trackList[i].mode === \"showing\") {\n      count++;\n    }\n  }\n  return ++count * -1;\n}\n\nfunction StyleBox() {\n}\n\n// Apply styles to a div. If there is no div passed then it defaults to the\n// div on 'this'.\nStyleBox.prototype.applyStyles = function(styles, div) {\n  div = div || this.div;\n  for (var prop in styles) {\n    if (styles.hasOwnProperty(prop)) {\n      div.style[prop] = styles[prop];\n    }\n  }\n};\n\nStyleBox.prototype.formatStyle = function(val, unit) {\n  return val === 0 ? 0 : val + unit;\n};\n\n// Constructs the computed display state of the cue (a div). Places the div\n// into the overlay which should be a block level element (usually a div).\nfunction CueStyleBox(window, cue, styleOptions) {\n  StyleBox.call(this);\n  this.cue = cue;\n\n  // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n  // have inline positioning and will function as the cue background box.\n  this.cueDiv = parseContent(window, cue.text);\n  var styles = {\n    color: \"rgba(255, 255, 255, 1)\",\n    backgroundColor:  \"rgba(0, 0, 0, 0.8)\",\n    position: \"relative\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"inline\",\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\"\n  };\n\n  this.applyStyles(styles, this.cueDiv);\n\n  // Create an absolutely positioned div that will be used to position the cue\n  // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n  // mirrors of them except \"middle\" which is \"center\" in CSS.\n  this.div = window.document.createElement(\"div\");\n  styles = {\n    direction: determineBidi(this.cueDiv),\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\",\n    textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n    font: styleOptions.font,\n    whiteSpace: \"pre-line\",\n    position: \"absolute\"\n  };\n\n  this.applyStyles(styles);\n  this.div.appendChild(this.cueDiv);\n\n  // Calculate the distance from the reference edge of the viewport to the text\n  // position of the cue box. The reference edge will be resolved later when\n  // the box orientation styles are applied.\n  var textPos = 0;\n  switch (cue.positionAlign) {\n  case \"start\":\n    textPos = cue.position;\n    break;\n  case \"middle\":\n    textPos = cue.position - (cue.size / 2);\n    break;\n  case \"end\":\n    textPos = cue.position - cue.size;\n    break;\n  }\n\n  // Horizontal box orientation; textPos is the distance from the left edge of the\n  // area to the left edge of the box and cue.size is the distance extending to\n  // the right from there.\n  if (cue.vertical === \"\") {\n    this.applyStyles({\n      left:  this.formatStyle(textPos, \"%\"),\n      width: this.formatStyle(cue.size, \"%\")\n    });\n  // Vertical box orientation; textPos is the distance from the top edge of the\n  // area to the top edge of the box and cue.size is the height extending\n  // downwards from there.\n  } else {\n    this.applyStyles({\n      top: this.formatStyle(textPos, \"%\"),\n      height: this.formatStyle(cue.size, \"%\")\n    });\n  }\n\n  this.move = function(box) {\n    this.applyStyles({\n      top: this.formatStyle(box.top, \"px\"),\n      bottom: this.formatStyle(box.bottom, \"px\"),\n      left: this.formatStyle(box.left, \"px\"),\n      right: this.formatStyle(box.right, \"px\"),\n      height: this.formatStyle(box.height, \"px\"),\n      width: this.formatStyle(box.width, \"px\")\n    });\n  };\n}\nCueStyleBox.prototype = _objCreate(StyleBox.prototype);\nCueStyleBox.prototype.constructor = CueStyleBox;\n\n// Represents the co-ordinates of an Element in a way that we can easily\n// compute things with such as if it overlaps or intersects with another Element.\n// Can initialize it with either a StyleBox or another BoxPosition.\nfunction BoxPosition(obj) {\n  // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n  // was passed in and we need to copy the results of 'getBoundingClientRect'\n  // as the object returned is readonly. All co-ordinate values are in reference\n  // to the viewport origin (top left).\n  var lh, height, width, top;\n  if (obj.div) {\n    height = obj.div.offsetHeight;\n    width = obj.div.offsetWidth;\n    top = obj.div.offsetTop;\n\n    var rects = (rects = obj.div.childNodes) && (rects = rects[0]) &&\n                rects.getClientRects && rects.getClientRects();\n    obj = obj.div.getBoundingClientRect();\n    // In certain cases the outter div will be slightly larger then the sum of\n    // the inner div's lines. This could be due to bold text, etc, on some platforms.\n    // In this case we should get the average line height and use that. This will\n    // result in the desired behaviour.\n    lh = rects ? Math.max((rects[0] && rects[0].height) || 0, obj.height / rects.length)\n               : 0;\n\n  }\n  this.left = obj.left;\n  this.right = obj.right;\n  this.top = obj.top || top;\n  this.height = obj.height || height;\n  this.bottom = obj.bottom || (top + (obj.height || height));\n  this.width = obj.width || width;\n  this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n}\n\n// Move the box along a particular axis. Optionally pass in an amount to move\n// the box. If no amount is passed then the default is the line height of the\n// box.\nBoxPosition.prototype.move = function(axis, toMove) {\n  toMove = toMove !== undefined ? toMove : this.lineHeight;\n  switch (axis) {\n  case \"+x\":\n    this.left += toMove;\n    this.right += toMove;\n    break;\n  case \"-x\":\n    this.left -= toMove;\n    this.right -= toMove;\n    break;\n  case \"+y\":\n    this.top += toMove;\n    this.bottom += toMove;\n    break;\n  case \"-y\":\n    this.top -= toMove;\n    this.bottom -= toMove;\n    break;\n  }\n};\n\n// Check if this box overlaps another box, b2.\nBoxPosition.prototype.overlaps = function(b2) {\n  return this.left < b2.right &&\n         this.right > b2.left &&\n         this.top < b2.bottom &&\n         this.bottom > b2.top;\n};\n\n// Check if this box overlaps any other boxes in boxes.\nBoxPosition.prototype.overlapsAny = function(boxes) {\n  for (var i = 0; i < boxes.length; i++) {\n    if (this.overlaps(boxes[i])) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Check if this box is within another box.\nBoxPosition.prototype.within = function(container) {\n  return this.top >= container.top &&\n         this.bottom <= container.bottom &&\n         this.left >= container.left &&\n         this.right <= container.right;\n};\n\n// Check if this box is entirely within the container or it is overlapping\n// on the edge opposite of the axis direction passed. For example, if \"+x\" is\n// passed and the box is overlapping on the left edge of the container, then\n// return true.\nBoxPosition.prototype.overlapsOppositeAxis = function(container, axis) {\n  switch (axis) {\n  case \"+x\":\n    return this.left < container.left;\n  case \"-x\":\n    return this.right > container.right;\n  case \"+y\":\n    return this.top < container.top;\n  case \"-y\":\n    return this.bottom > container.bottom;\n  }\n};\n\n// Find the percentage of the area that this box is overlapping with another\n// box.\nBoxPosition.prototype.intersectPercentage = function(b2) {\n  var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n      intersectArea = x * y;\n  return intersectArea / (this.height * this.width);\n};\n\n// Convert the positions from this box to CSS compatible positions using\n// the reference container's positions. This has to be done because this\n// box's positions are in reference to the viewport origin, whereas, CSS\n// values are in referecne to their respective edges.\nBoxPosition.prototype.toCSSCompatValues = function(reference) {\n  return {\n    top: this.top - reference.top,\n    bottom: reference.bottom - this.bottom,\n    left: this.left - reference.left,\n    right: reference.right - this.right,\n    height: this.height,\n    width: this.width\n  };\n};\n\n// Get an object that represents the box's position without anything extra.\n// Can pass a StyleBox, HTMLElement, or another BoxPositon.\nBoxPosition.getSimpleBoxPosition = function(obj) {\n  var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n  var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n  var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n\n  obj = obj.div ? obj.div.getBoundingClientRect() :\n                obj.tagName ? obj.getBoundingClientRect() : obj;\n  var ret = {\n    left: obj.left,\n    right: obj.right,\n    top: obj.top || top,\n    height: obj.height || height,\n    bottom: obj.bottom || (top + (obj.height || height)),\n    width: obj.width || width\n  };\n  return ret;\n};\n\n// Move a StyleBox to its specified, or next best, position. The containerBox\n// is the box that contains the StyleBox, such as a div. boxPositions are\n// a list of other boxes that the styleBox can't overlap with.\nfunction moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n\n  // Find the best position for a cue box, b, on the video. The axis parameter\n  // is a list of axis, the order of which, it will move the box along. For example:\n  // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n  // direction. If it doesn't find a good position for it there it will then move\n  // it along the x axis in the negative direction.\n  function findBestPosition(b, axis) {\n    var bestPosition,\n        specifiedPosition = new BoxPosition(b),\n        percentage = 1; // Highest possible so the first thing we get is better.\n\n    for (var i = 0; i < axis.length; i++) {\n      while (b.overlapsOppositeAxis(containerBox, axis[i]) ||\n             (b.within(containerBox) && b.overlapsAny(boxPositions))) {\n        b.move(axis[i]);\n      }\n      // We found a spot where we aren't overlapping anything. This is our\n      // best position.\n      if (b.within(containerBox)) {\n        return b;\n      }\n      var p = b.intersectPercentage(containerBox);\n      // If we're outside the container box less then we were on our last try\n      // then remember this position as the best position.\n      if (percentage > p) {\n        bestPosition = new BoxPosition(b);\n        percentage = p;\n      }\n      // Reset the box position to the specified position.\n      b = new BoxPosition(specifiedPosition);\n    }\n    return bestPosition || specifiedPosition;\n  }\n\n  var boxPosition = new BoxPosition(styleBox),\n      cue = styleBox.cue,\n      linePos = computeLinePos(cue),\n      axis = [];\n\n  // If we have a line number to align the cue to.\n  if (cue.snapToLines) {\n    var size;\n    switch (cue.vertical) {\n    case \"\":\n      axis = [ \"+y\", \"-y\" ];\n      size = \"height\";\n      break;\n    case \"rl\":\n      axis = [ \"+x\", \"-x\" ];\n      size = \"width\";\n      break;\n    case \"lr\":\n      axis = [ \"-x\", \"+x\" ];\n      size = \"width\";\n      break;\n    }\n\n    var step = boxPosition.lineHeight,\n        position = step * Math.round(linePos),\n        maxPosition = containerBox[size] + step,\n        initialAxis = axis[0];\n\n    // If the specified intial position is greater then the max position then\n    // clamp the box to the amount of steps it would take for the box to\n    // reach the max position.\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    }\n\n    // If computed line position returns negative then line numbers are\n    // relative to the bottom of the video instead of the top. Therefore, we\n    // need to increase our initial position by the length or width of the\n    // video, depending on the writing direction, and reverse our axis directions.\n    if (linePos < 0) {\n      position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n      axis = axis.reverse();\n    }\n\n    // Move the box to the specified position. This may not be its best\n    // position.\n    boxPosition.move(initialAxis, position);\n\n  } else {\n    // If we have a percentage line value for the cue.\n    var calculatedPercentage = (boxPosition.lineHeight / containerBox.height) * 100;\n\n    switch (cue.lineAlign) {\n    case \"middle\":\n      linePos -= (calculatedPercentage / 2);\n      break;\n    case \"end\":\n      linePos -= calculatedPercentage;\n      break;\n    }\n\n    // Apply initial line position to the cue box.\n    switch (cue.vertical) {\n    case \"\":\n      styleBox.applyStyles({\n        top: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"rl\":\n      styleBox.applyStyles({\n        left: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"lr\":\n      styleBox.applyStyles({\n        right: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    }\n\n    axis = [ \"+y\", \"-x\", \"+x\", \"-y\" ];\n\n    // Get the box position again after we've applied the specified positioning\n    // to it.\n    boxPosition = new BoxPosition(styleBox);\n  }\n\n  var bestPosition = findBestPosition(boxPosition, axis);\n  styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n}\n\nfunction WebVTT() {\n  // Nothing\n}\n\n// Helper to allow strings to be decoded instead of the default binary utf8 data.\nWebVTT.StringDecoder = function() {\n  return {\n    decode: function(data) {\n      if (!data) {\n        return \"\";\n      }\n      if (typeof data !== \"string\") {\n        throw new Error(\"Error - expected string data.\");\n      }\n      return decodeURIComponent(encodeURIComponent(data));\n    }\n  };\n};\n\nWebVTT.convertCueToDOMTree = function(window, cuetext) {\n  if (!window || !cuetext) {\n    return null;\n  }\n  return parseContent(window, cuetext);\n};\n\nvar FONT_SIZE_PERCENT = 0.05;\nvar FONT_STYLE = \"sans-serif\";\nvar CUE_BACKGROUND_PADDING = \"1.5%\";\n\n// Runs the processing model over the cues and regions passed to it.\n// @param overlay A block level element (usually a div) that the computed cues\n//                and regions will be placed into.\nWebVTT.processCues = function(window, cues, overlay) {\n  if (!window || !cues || !overlay) {\n    return null;\n  }\n\n  // Remove all previous children.\n  while (overlay.firstChild) {\n    overlay.removeChild(overlay.firstChild);\n  }\n\n  var paddedOverlay = window.document.createElement(\"div\");\n  paddedOverlay.style.position = \"absolute\";\n  paddedOverlay.style.left = \"0\";\n  paddedOverlay.style.right = \"0\";\n  paddedOverlay.style.top = \"0\";\n  paddedOverlay.style.bottom = \"0\";\n  paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n  overlay.appendChild(paddedOverlay);\n\n  // Determine if we need to compute the display states of the cues. This could\n  // be the case if a cue's state has been changed since the last computation or\n  // if it has not been computed yet.\n  function shouldCompute(cues) {\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i].hasBeenReset || !cues[i].displayState) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // We don't need to recompute the cues' display states. Just reuse them.\n  if (!shouldCompute(cues)) {\n    for (var i = 0; i < cues.length; i++) {\n      paddedOverlay.appendChild(cues[i].displayState);\n    }\n    return;\n  }\n\n  var boxPositions = [],\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n  var styleOptions = {\n    font: fontSize + \"px \" + FONT_STYLE\n  };\n\n  (function() {\n    var styleBox, cue;\n\n    for (var i = 0; i < cues.length; i++) {\n      cue = cues[i];\n\n      // Compute the intial position and styles of the cue div.\n      styleBox = new CueStyleBox(window, cue, styleOptions);\n      paddedOverlay.appendChild(styleBox.div);\n\n      // Move the cue div to it's correct line position.\n      moveBoxToLinePosition(window, styleBox, containerBox, boxPositions);\n\n      // Remember the computed div so that we don't have to recompute it later\n      // if we don't have too.\n      cue.displayState = styleBox.div;\n\n      boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n    }\n  })();\n};\n\nWebVTT.Parser = function(window, vttjs, decoder) {\n  if (!decoder) {\n    decoder = vttjs;\n    vttjs = {};\n  }\n  if (!vttjs) {\n    vttjs = {};\n  }\n\n  this.window = window;\n  this.vttjs = vttjs;\n  this.state = \"INITIAL\";\n  this.buffer = \"\";\n  this.decoder = decoder || new TextDecoder(\"utf8\");\n  this.regionList = [];\n};\n\nWebVTT.Parser.prototype = {\n  // If the error is a ParsingError then report it to the consumer if\n  // possible. If it's not a ParsingError then throw it like normal.\n  reportOrThrowError: function(e) {\n    if (e instanceof ParsingError) {\n      this.onparsingerror && this.onparsingerror(e);\n    } else {\n      throw e;\n    }\n  },\n  parse: function (data) {\n    var self = this;\n\n    // If there is no data then we won't decode it, but will just try to parse\n    // whatever is in buffer already. This may occur in circumstances, for\n    // example when flush() is called.\n    if (data) {\n      // Try to decode the data that we received.\n      self.buffer += self.decoder.decode(data, {stream: true});\n    }\n\n    function collectNextLine() {\n      var buffer = self.buffer;\n      var pos = 0;\n      while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n        ++pos;\n      }\n      var line = buffer.substr(0, pos);\n      // Advance the buffer early in case we fail below.\n      if (buffer[pos] === '\\r') {\n        ++pos;\n      }\n      if (buffer[pos] === '\\n') {\n        ++pos;\n      }\n      self.buffer = buffer.substr(pos);\n      return line;\n    }\n\n    // 3.4 WebVTT region and WebVTT region settings syntax\n    function parseRegion(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function (k, v) {\n        switch (k) {\n        case \"id\":\n          settings.set(k, v);\n          break;\n        case \"width\":\n          settings.percent(k, v);\n          break;\n        case \"lines\":\n          settings.integer(k, v);\n          break;\n        case \"regionanchor\":\n        case \"viewportanchor\":\n          var xy = v.split(',');\n          if (xy.length !== 2) {\n            break;\n          }\n          // We have to make sure both x and y parse, so use a temporary\n          // settings object here.\n          var anchor = new Settings();\n          anchor.percent(\"x\", xy[0]);\n          anchor.percent(\"y\", xy[1]);\n          if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n            break;\n          }\n          settings.set(k + \"X\", anchor.get(\"x\"));\n          settings.set(k + \"Y\", anchor.get(\"y\"));\n          break;\n        case \"scroll\":\n          settings.alt(k, v, [\"up\"]);\n          break;\n        }\n      }, /=/, /\\s/);\n\n      // Create the region, using default values for any values that were not\n      // specified.\n      if (settings.has(\"id\")) {\n        var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n        region.width = settings.get(\"width\", 100);\n        region.lines = settings.get(\"lines\", 3);\n        region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n        region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n        region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n        region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n        region.scroll = settings.get(\"scroll\", \"\");\n        // Register the region.\n        self.onregion && self.onregion(region);\n        // Remember the VTTRegion for later in case we parse any VTTCues that\n        // reference it.\n        self.regionList.push({\n          id: settings.get(\"id\"),\n          region: region\n        });\n      }\n    }\n\n    // draft-pantos-http-live-streaming-20\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n    // 3.5 WebVTT\n    function parseTimestampMap(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function(k, v) {\n        switch(k) {\n        case \"MPEGT\":\n          settings.integer(k + 'S', v);\n          break;\n        case \"LOCA\":\n          settings.set(k + 'L', parseTimeStamp(v));\n          break;\n        }\n      }, /[^\\d]:/, /,/);\n\n      self.ontimestampmap && self.ontimestampmap({\n        \"MPEGTS\": settings.get(\"MPEGTS\"),\n        \"LOCAL\": settings.get(\"LOCAL\")\n      });\n    }\n\n    // 3.2 WebVTT metadata header syntax\n    function parseHeader(input) {\n      if (input.match(/X-TIMESTAMP-MAP/)) {\n        // This line contains HLS X-TIMESTAMP-MAP metadata\n        parseOptions(input, function(k, v) {\n          switch(k) {\n          case \"X-TIMESTAMP-MAP\":\n            parseTimestampMap(v);\n            break;\n          }\n        }, /=/);\n      } else {\n        parseOptions(input, function (k, v) {\n          switch (k) {\n          case \"Region\":\n            // 3.3 WebVTT region metadata header syntax\n            parseRegion(v);\n            break;\n          }\n        }, /:/);\n      }\n\n    }\n\n    // 5.1 WebVTT file parsing.\n    try {\n      var line;\n      if (self.state === \"INITIAL\") {\n        // We can't start parsing until we have the first line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        line = collectNextLine();\n\n        var m = line.match(/^WEBVTT([ \\t].*)?$/);\n        if (!m || !m[0]) {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n\n        self.state = \"HEADER\";\n      }\n\n      var alreadyCollectedLine = false;\n      while (self.buffer) {\n        // We can't parse a line until we have the full line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        if (!alreadyCollectedLine) {\n          line = collectNextLine();\n        } else {\n          alreadyCollectedLine = false;\n        }\n\n        switch (self.state) {\n        case \"HEADER\":\n          // 13-18 - Allow a header (metadata) under the WEBVTT line.\n          if (/:/.test(line)) {\n            parseHeader(line);\n          } else if (!line) {\n            // An empty line terminates the header and starts the body (cues).\n            self.state = \"ID\";\n          }\n          continue;\n        case \"NOTE\":\n          // Ignore NOTE blocks.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        case \"ID\":\n          // Check for the start of NOTE blocks.\n          if (/^NOTE($|[ \\t])/.test(line)) {\n            self.state = \"NOTE\";\n            break;\n          }\n          // 19-29 - Allow any number of line terminators, then initialize new cue values.\n          if (!line) {\n            continue;\n          }\n          self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n          self.state = \"CUE\";\n          // 30-39 - Check if self line contains an optional identifier or timing data.\n          if (line.indexOf(\"-->\") === -1) {\n            self.cue.id = line;\n            continue;\n          }\n          // Process line as start of a cue.\n          /*falls through*/\n        case \"CUE\":\n          // 40 - Collect cue timings and settings.\n          try {\n            parseCue(line, self.cue, self.regionList);\n          } catch (e) {\n            self.reportOrThrowError(e);\n            // In case of an error ignore rest of the cue.\n            self.cue = null;\n            self.state = \"BADCUE\";\n            continue;\n          }\n          self.state = \"CUETEXT\";\n          continue;\n        case \"CUETEXT\":\n          var hasSubstring = line.indexOf(\"-->\") !== -1;\n          // 34 - If we have an empty line then report the cue.\n          // 35 - If we have the special substring '-->' then report the cue,\n          // but do not collect the line as we need to process the current\n          // one as a new cue.\n          if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n            // We are done parsing self cue.\n            self.oncue && self.oncue(self.cue);\n            self.cue = null;\n            self.state = \"ID\";\n            continue;\n          }\n          if (self.cue.text) {\n            self.cue.text += \"\\n\";\n          }\n          self.cue.text += line;\n          continue;\n        case \"BADCUE\": // BADCUE\n          // 54-62 - Collect and discard the remaining cue.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        }\n      }\n    } catch (e) {\n      self.reportOrThrowError(e);\n\n      // If we are currently parsing a cue, report what we have.\n      if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n        self.oncue(self.cue);\n      }\n      self.cue = null;\n      // Enter BADWEBVTT state if header was not parsed correctly otherwise\n      // another exception occurred so enter BADCUE state.\n      self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n    }\n    return this;\n  },\n  flush: function () {\n    var self = this;\n    try {\n      // Finish decoding the stream.\n      self.buffer += self.decoder.decode();\n      // Synthesize the end of the current cue or region.\n      if (self.cue || self.state === \"HEADER\") {\n        self.buffer += \"\\n\\n\";\n        self.parse();\n      }\n      // If we've flushed, parsed, and we're still on the INITIAL state then\n      // that means we don't have enough of the stream to parse the first\n      // line.\n      if (self.state === \"INITIAL\") {\n        throw new ParsingError(ParsingError.Errors.BadSignature);\n      }\n    } catch(e) {\n      self.reportOrThrowError(e);\n    }\n    self.onflush && self.onflush();\n    return this;\n  }\n};\n\nmodule.exports = WebVTT;\n","// see https://tools.ietf.org/html/rfc1808\n\n/* jshint ignore:start */\n(function(root) { \n/* jshint ignore:end */\n\n  var URL_REGEX = /^((?:[a-zA-Z0-9+\\-.]+:)?)(\\/\\/[^\\/?#]*)?((?:[^\\/\\?#]*\\/)*.*?)??(;.*?)?(\\?.*?)?(#.*?)?$/;\n  var FIRST_SEGMENT_REGEX = /^([^\\/?#]*)(.*)$/;\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/).*?(?=\\/)/g;\n\n  var URLToolkit = { // jshint ignore:line\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n    // E.g\n    // With opts.alwaysNormalize = false (default, spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n    // With opts.alwaysNormalize = true (not spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n    buildAbsoluteURL: function(baseURL, relativeURL, opts) {\n      opts = opts || {};\n      // remove any remaining space and CRLF\n      baseURL = baseURL.trim();\n      relativeURL = relativeURL.trim();\n      if (!relativeURL) {\n        // 2a) If the embedded URL is entirely empty, it inherits the\n        // entire base URL (i.e., is set equal to the base URL)\n        // and we are done.\n        if (!opts.alwaysNormalize) {\n          return baseURL;\n        }\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n        if (!basePartsForNormalise) {\n          throw new Error('Error trying to parse base URL.');\n        }\n        basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\n      }\n      var relativeParts = URLToolkit.parseURL(relativeURL);\n      if (!relativeParts) {\n        throw new Error('Error trying to parse relative URL.');\n      }\n      if (relativeParts.scheme) {\n        // 2b) If the embedded URL starts with a scheme name, it is\n        // interpreted as an absolute URL and we are done.\n        if (!opts.alwaysNormalize) {\n          return relativeURL;\n        }\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n        return URLToolkit.buildURLFromParts(relativeParts);\n      }\n      var baseParts = URLToolkit.parseURL(baseURL);\n      if (!baseParts) {\n        throw new Error('Error trying to parse base URL.');\n      }\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n        baseParts.netLoc = pathParts[1];\n        baseParts.path = pathParts[2];\n      }\n      if (baseParts.netLoc && !baseParts.path) {\n        baseParts.path = '/';\n      }\n      var builtParts = {\n        // 2c) Otherwise, the embedded URL inherits the scheme of\n        // the base URL.\n        scheme: baseParts.scheme,\n        netLoc: relativeParts.netLoc,\n        path: null,\n        params: relativeParts.params,\n        query: relativeParts.query,\n        fragment: relativeParts.fragment\n      };\n      if (!relativeParts.netLoc) {\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n        // (if any) of the base URL.\n        builtParts.netLoc = baseParts.netLoc;\n        // 4) If the embedded URL path is preceded by a slash \"/\", the\n        // path is not relative and we skip to Step 7.\n        if (relativeParts.path[0] !== '/') {\n          if (!relativeParts.path) {\n            // 5) If the embedded URL path is empty (and not preceded by a\n            // slash), then the embedded URL inherits the base URL path\n            builtParts.path = baseParts.path;\n            // 5a) if the embedded URL's <params> is non-empty, we skip to\n            // step 7; otherwise, it inherits the <params> of the base\n            // URL (if any) and\n            if (!relativeParts.params) {\n              builtParts.params = baseParts.params;\n              // 5b) if the embedded URL's <query> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <query> of the base\n              // URL (if any) and we skip to step 7.\n              if (!relativeParts.query) {\n                builtParts.query = baseParts.query;\n              }\n            }\n          } else {\n            // 6) The last segment of the base URL's path (anything\n            // following the rightmost slash \"/\", or the entire path if no\n            // slash is present) is removed and the embedded URL's path is\n            // appended in its place.\n            var baseURLPath = baseParts.path;\n            var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\n            builtParts.path = URLToolkit.normalizePath(newPath);\n          }\n        }\n      }\n      if (builtParts.path === null) {\n        builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\n      }\n      return URLToolkit.buildURLFromParts(builtParts);\n    },\n    parseURL: function(url) {\n      var parts = URL_REGEX.exec(url);\n      if (!parts) {\n        return null;\n      }\n      return {\n        scheme: parts[1] || '',\n        netLoc: parts[2] || '',\n        path: parts[3] || '',\n        params: parts[4] || '',\n        query: parts[5] || '',\n        fragment: parts[6] || ''\n      };\n    },\n    normalizePath: function(path) {\n      // The following operations are\n      // then applied, in order, to the new path:\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\n      // segment, are removed.\n      // 6b) If the path ends with \".\" as a complete path segment,\n      // that \".\" is removed.\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');\n      // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n      // complete path segment not equal to \"..\", are removed.\n      // Removal of these path segments is performed iteratively,\n      // removing the leftmost matching pattern on each iteration,\n      // until no matching pattern remains.\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n      // complete path segment not equal to \"..\", that\n      // \"<segment>/..\" is removed.\n      while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {} // jshint ignore:line\n      return path.split('').reverse().join('');\n    },\n    buildURLFromParts: function(parts) {\n      return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\n    }\n  };\n\n/* jshint ignore:start */\n  if(typeof exports === 'object' && typeof module === 'object')\n    module.exports = URLToolkit;\n  else if(typeof define === 'function' && define.amd)\n    define([], function() { return URLToolkit; });\n  else if(typeof exports === 'object')\n    exports[\"URLToolkit\"] = URLToolkit;\n  else\n    root[\"URLToolkit\"] = URLToolkit;\n})(this);\n/* jshint ignore:end */\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n\tvar str = toStr.call(value);\n\tvar isArgs = str === '[object Arguments]';\n\tif (!isArgs) {\n\t\tisArgs = str !== '[object Array]' &&\n\t\t\tvalue !== null &&\n\t\t\ttypeof value === 'object' &&\n\t\t\ttypeof value.length === 'number' &&\n\t\t\tvalue.length >= 0 &&\n\t\t\ttoStr.call(value.callee) === '[object Function]';\n\t}\n\treturn isArgs;\n};\n","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n","'use strict';\n\n// modified from https://github.com/es-shims/es5-shim\nvar has = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar slice = Array.prototype.slice;\nvar isArgs = require('./isArguments');\nvar isEnumerable = Object.prototype.propertyIsEnumerable;\nvar hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');\nvar hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\nvar dontEnums = [\n\t'toString',\n\t'toLocaleString',\n\t'valueOf',\n\t'hasOwnProperty',\n\t'isPrototypeOf',\n\t'propertyIsEnumerable',\n\t'constructor'\n];\nvar equalsConstructorPrototype = function (o) {\n\tvar ctor = o.constructor;\n\treturn ctor && ctor.prototype === o;\n};\nvar excludedKeys = {\n\t$applicationCache: true,\n\t$console: true,\n\t$external: true,\n\t$frame: true,\n\t$frameElement: true,\n\t$frames: true,\n\t$innerHeight: true,\n\t$innerWidth: true,\n\t$outerHeight: true,\n\t$outerWidth: true,\n\t$pageXOffset: true,\n\t$pageYOffset: true,\n\t$parent: true,\n\t$scrollLeft: true,\n\t$scrollTop: true,\n\t$scrollX: true,\n\t$scrollY: true,\n\t$self: true,\n\t$webkitIndexedDB: true,\n\t$webkitStorageInfo: true,\n\t$window: true\n};\nvar hasAutomationEqualityBug = (function () {\n\t/* global window */\n\tif (typeof window === 'undefined') { return false; }\n\tfor (var k in window) {\n\t\ttry {\n\t\t\tif (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n\t\t\t\ttry {\n\t\t\t\t\tequalsConstructorPrototype(window[k]);\n\t\t\t\t} catch (e) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}());\nvar equalsConstructorPrototypeIfNotBuggy = function (o) {\n\t/* global window */\n\tif (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n\t\treturn equalsConstructorPrototype(o);\n\t}\n\ttry {\n\t\treturn equalsConstructorPrototype(o);\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\n\nvar keysShim = function keys(object) {\n\tvar isObject = object !== null && typeof object === 'object';\n\tvar isFunction = toStr.call(object) === '[object Function]';\n\tvar isArguments = isArgs(object);\n\tvar isString = isObject && toStr.call(object) === '[object String]';\n\tvar theKeys = [];\n\n\tif (!isObject && !isFunction && !isArguments) {\n\t\tthrow new TypeError('Object.keys called on a non-object');\n\t}\n\n\tvar skipProto = hasProtoEnumBug && isFunction;\n\tif (isString && object.length > 0 && !has.call(object, 0)) {\n\t\tfor (var i = 0; i < object.length; ++i) {\n\t\t\ttheKeys.push(String(i));\n\t\t}\n\t}\n\n\tif (isArguments && object.length > 0) {\n\t\tfor (var j = 0; j < object.length; ++j) {\n\t\t\ttheKeys.push(String(j));\n\t\t}\n\t} else {\n\t\tfor (var name in object) {\n\t\t\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\n\t\t\t\ttheKeys.push(String(name));\n\t\t\t}\n\t\t}\n\t}\n\n\tif (hasDontEnumBug) {\n\t\tvar skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n\t\tfor (var k = 0; k < dontEnums.length; ++k) {\n\t\t\tif (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n\t\t\t\ttheKeys.push(dontEnums[k]);\n\t\t\t}\n\t\t}\n\t}\n\treturn theKeys;\n};\n\nkeysShim.shim = function shimObjectKeys() {\n\tif (Object.keys) {\n\t\tvar keysWorksWithArguments = (function () {\n\t\t\t// Safari 5.0 bug\n\t\t\treturn (Object.keys(arguments) || '').length === 2;\n\t\t}(1, 2));\n\t\tif (!keysWorksWithArguments) {\n\t\t\tvar originalKeys = Object.keys;\n\t\t\tObject.keys = function keys(object) { // eslint-disable-line func-name-matching\n\t\t\t\tif (isArgs(object)) {\n\t\t\t\t\treturn originalKeys(slice.call(object));\n\t\t\t\t} else {\n\t\t\t\t\treturn originalKeys(object);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t} else {\n\t\tObject.keys = keysShim;\n\t}\n\treturn Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;\n","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Parse mpeg2 transport stream packets to extract basic timing information\n */\n'use strict';\n\nvar StreamTypes = require('../m2ts/stream-types.js');\nvar handleRollover = require('../m2ts/timestamp-rollover-stream.js').handleRollover;\nvar probe = {};\nprobe.ts = require('../m2ts/probe.js');\nprobe.aac = require('../aac/utils.js');\n\n\nvar\n  PES_TIMESCALE = 90000,\n  MP2T_PACKET_LENGTH = 188, // bytes\n  SYNC_BYTE = 0x47;\n\n/**\n * walks through segment data looking for pat and pmt packets to parse out\n * program map table information\n */\nvar parsePsi_ = function(bytes, pmt) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type;\n\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pat':\n          if (!pmt.pid) {\n            pmt.pid = probe.ts.parsePat(packet);\n          }\n          break;\n        case 'pmt':\n          if (!pmt.table) {\n            pmt.table = probe.ts.parsePmt(packet);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // Found the pat and pmt, we can stop walking the segment\n      if (pmt.pid && pmt.table) {\n        return;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n};\n\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last audio pes packets\n */\nvar parseAudioPes_ = function(bytes, pmt, result) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type, pesType, pusi, parsed;\n\n  var endLoop = false;\n\n  // Start walking from start of segment to get first audio packet\n  while (endIndex <= bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE &&\n        (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n\n  // Start walking from end of segment to get last audio packet\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE &&\n        (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex--;\n    endIndex--;\n  }\n};\n\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last video pes packets as well as timing information for the first\n * key frame.\n */\nvar parseVideoPes_ = function(bytes, pmt, result) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type, pesType, pusi, parsed, frame, i, pes;\n\n  var endLoop = false;\n\n  var currentFrame = {\n    data: [],\n    size: 0\n  };\n\n  // Start walking from start of segment to get first video packet\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'video') {\n            if (pusi && !endLoop) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n            }\n            if (!result.firstKeyFrame) {\n              if (pusi) {\n                if (currentFrame.size !== 0) {\n                  frame = new Uint8Array(currentFrame.size);\n                  i = 0;\n                  while (currentFrame.data.length) {\n                    pes = currentFrame.data.shift();\n                    frame.set(pes, i);\n                    i += pes.byteLength;\n                  }\n                  if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n                    var firstKeyFrame = probe.ts.parsePesTime(frame);\n\n                    // PTS/DTS may not be available. Simply *not* setting\n                    // the keyframe seems to work fine with HLS playback\n                    // and definitely preferable to a crash with TypeError...\n                    if (firstKeyFrame) {\n                      result.firstKeyFrame = firstKeyFrame;\n                      result.firstKeyFrame.type = 'video';\n                    } else {\n                      // eslint-disable-next-line\n                      console.warn(\n                        'Failed to extract PTS/DTS from PES at first keyframe. ' +\n                        'This could be an unusual TS segment, or else mux.js did not ' +\n                        'parse your TS segment correctly. If you know your TS ' +\n                        'segments do contain PTS/DTS on keyframes please file a bug ' +\n                        'report! You can try ffprobe to double check for yourself.'\n                      );\n                    }\n                  }\n                  currentFrame.size = 0;\n                }\n              }\n              currentFrame.data.push(packet);\n              currentFrame.size += packet.byteLength;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop && result.firstKeyFrame) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n\n  // Start walking from end of segment to get last video packet\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'video' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex--;\n    endIndex--;\n  }\n};\n\n/**\n * Adjusts the timestamp information for the segment to account for\n * rollover and convert to seconds based on pes packet timescale (90khz clock)\n */\nvar adjustTimestamp_ = function(segmentInfo, baseTimestamp) {\n  if (segmentInfo.audio && segmentInfo.audio.length) {\n    var audioBaseTimestamp = baseTimestamp;\n    if (typeof audioBaseTimestamp === 'undefined') {\n      audioBaseTimestamp = segmentInfo.audio[0].dts;\n    }\n    segmentInfo.audio.forEach(function(info) {\n      info.dts = handleRollover(info.dts, audioBaseTimestamp);\n      info.pts = handleRollover(info.pts, audioBaseTimestamp);\n      // time in seconds\n      info.dtsTime = info.dts / PES_TIMESCALE;\n      info.ptsTime = info.pts / PES_TIMESCALE;\n    });\n  }\n\n  if (segmentInfo.video && segmentInfo.video.length) {\n    var videoBaseTimestamp = baseTimestamp;\n    if (typeof videoBaseTimestamp === 'undefined') {\n      videoBaseTimestamp = segmentInfo.video[0].dts;\n    }\n    segmentInfo.video.forEach(function(info) {\n      info.dts = handleRollover(info.dts, videoBaseTimestamp);\n      info.pts = handleRollover(info.pts, videoBaseTimestamp);\n      // time in seconds\n      info.dtsTime = info.dts / PES_TIMESCALE;\n      info.ptsTime = info.pts / PES_TIMESCALE;\n    });\n    if (segmentInfo.firstKeyFrame) {\n      var frame = segmentInfo.firstKeyFrame;\n      frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n      frame.pts = handleRollover(frame.pts, videoBaseTimestamp);\n      // time in seconds\n      frame.dtsTime = frame.dts / PES_TIMESCALE;\n      frame.ptsTime = frame.dts / PES_TIMESCALE;\n    }\n  }\n};\n\n/**\n * inspects the aac data stream for start and end time information\n */\nvar inspectAac_ = function(bytes) {\n  var\n    endLoop = false,\n    audioCount = 0,\n    sampleRate = null,\n    timestamp = null,\n    frameSize = 0,\n    byteIndex = 0,\n    packet;\n\n  while (bytes.length - byteIndex >= 3) {\n    var type = probe.aac.parseType(bytes, byteIndex);\n    switch (type) {\n      case 'timed-metadata':\n        // Exit early because we don't have enough to parse\n        // the ID3 tag header\n        if (bytes.length - byteIndex < 10) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseId3TagSize(bytes, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n        if (timestamp === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          timestamp = probe.aac.parseAacTimestamp(packet);\n        }\n        byteIndex += frameSize;\n        break;\n      case 'audio':\n        // Exit early because we don't have enough to parse\n        // the ADTS frame header\n        if (bytes.length - byteIndex < 7) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseAdtsSize(bytes, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n        if (sampleRate === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          sampleRate = probe.aac.parseSampleRate(packet);\n        }\n        audioCount++;\n        byteIndex += frameSize;\n        break;\n      default:\n        byteIndex++;\n        break;\n    }\n    if (endLoop) {\n      return null;\n    }\n  }\n  if (sampleRate === null || timestamp === null) {\n    return null;\n  }\n\n  var audioTimescale = PES_TIMESCALE / sampleRate;\n\n  var result = {\n    audio: [\n      {\n        type: 'audio',\n        dts: timestamp,\n        pts: timestamp\n      },\n      {\n        type: 'audio',\n        dts: timestamp + (audioCount * 1024 * audioTimescale),\n        pts: timestamp + (audioCount * 1024 * audioTimescale)\n      }\n    ]\n  };\n\n  return result;\n};\n\n/**\n * inspects the transport stream segment data for start and end time information\n * of the audio and video tracks (when present) as well as the first key frame's\n * start time.\n */\nvar inspectTs_ = function(bytes) {\n  var pmt = {\n    pid: null,\n    table: null\n  };\n\n  var result = {};\n\n  parsePsi_(bytes, pmt);\n\n  for (var pid in pmt.table) {\n    if (pmt.table.hasOwnProperty(pid)) {\n      var type = pmt.table[pid];\n      switch (type) {\n        case StreamTypes.H264_STREAM_TYPE:\n          result.video = [];\n          parseVideoPes_(bytes, pmt, result);\n          if (result.video.length === 0) {\n            delete result.video;\n          }\n          break;\n        case StreamTypes.ADTS_STREAM_TYPE:\n          result.audio = [];\n          parseAudioPes_(bytes, pmt, result);\n          if (result.audio.length === 0) {\n            delete result.audio;\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * Inspects segment byte data and returns an object with start and end timing information\n *\n * @param {Uint8Array} bytes The segment byte data\n * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n *  timestamps for rollover. This value must be in 90khz clock.\n * @return {Object} Object containing start and end frame timing info of segment.\n */\nvar inspect = function(bytes, baseTimestamp) {\n  var isAacData = probe.aac.isLikelyAacData(bytes);\n\n  var result;\n\n  if (isAacData) {\n    result = inspectAac_(bytes);\n  } else {\n    result = inspectTs_(bytes);\n  }\n\n  if (!result || (!result.audio && !result.video)) {\n    return null;\n  }\n\n  adjustTimestamp_(result, baseTimestamp);\n\n  return result;\n};\n\nmodule.exports = {\n  inspect: inspect,\n  parseAudioPes_: parseAudioPes_\n};\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Reads in-band caption information from a video elementary\n * stream. Captions must follow the CEA-708 standard for injection\n * into an MPEG-2 transport streams.\n * @see https://en.wikipedia.org/wiki/CEA-708\n * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n */\n\n'use strict';\n\n// Supplemental enhancement information (SEI) NAL units have a\n// payload type field to indicate how they are to be\n// interpreted. CEAS-708 caption content is always transmitted with\n// payload type 0x04.\nvar USER_DATA_REGISTERED_ITU_T_T35 = 4,\n    RBSP_TRAILING_BITS = 128;\n\n/**\n  * Parse a supplemental enhancement information (SEI) NAL unit.\n  * Stops parsing once a message of type ITU T T35 has been found.\n  *\n  * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n  * @return {object} the parsed SEI payload\n  * @see Rec. ITU-T H.264, 7.3.2.3.1\n  */\nvar parseSei = function(bytes) {\n  var\n    i = 0,\n    result = {\n      payloadType: -1,\n      payloadSize: 0\n    },\n    payloadType = 0,\n    payloadSize = 0;\n\n  // go through the sei_rbsp parsing each each individual sei_message\n  while (i < bytes.byteLength) {\n    // stop once we have hit the end of the sei_rbsp\n    if (bytes[i] === RBSP_TRAILING_BITS) {\n      break;\n    }\n\n    // Parse payload type\n    while (bytes[i] === 0xFF) {\n      payloadType += 255;\n      i++;\n    }\n    payloadType += bytes[i++];\n\n    // Parse payload size\n    while (bytes[i] === 0xFF) {\n      payloadSize += 255;\n      i++;\n    }\n    payloadSize += bytes[i++];\n\n    // this sei_message is a 608/708 caption so save it and break\n    // there can only ever be one caption message in a frame's sei\n    if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n      result.payloadType = payloadType;\n      result.payloadSize = payloadSize;\n      result.payload = bytes.subarray(i, i + payloadSize);\n      break;\n    }\n\n    // skip the payload and parse the next message\n    i += payloadSize;\n    payloadType = 0;\n    payloadSize = 0;\n  }\n\n  return result;\n};\n\n// see ANSI/SCTE 128-1 (2013), section 8.1\nvar parseUserData = function(sei) {\n  // itu_t_t35_contry_code must be 181 (United States) for\n  // captions\n  if (sei.payload[0] !== 181) {\n    return null;\n  }\n\n  // itu_t_t35_provider_code should be 49 (ATSC) for captions\n  if (((sei.payload[1] << 8) | sei.payload[2]) !== 49) {\n    return null;\n  }\n\n  // the user_identifier should be \"GA94\" to indicate ATSC1 data\n  if (String.fromCharCode(sei.payload[3],\n                          sei.payload[4],\n                          sei.payload[5],\n                          sei.payload[6]) !== 'GA94') {\n    return null;\n  }\n\n  // finally, user_data_type_code should be 0x03 for caption data\n  if (sei.payload[7] !== 0x03) {\n    return null;\n  }\n\n  // return the user_data_type_structure and strip the trailing\n  // marker bits\n  return sei.payload.subarray(8, sei.payload.length - 1);\n};\n\n// see CEA-708-D, section 4.4\nvar parseCaptionPackets = function(pts, userData) {\n  var results = [], i, count, offset, data;\n\n  // if this is just filler, return immediately\n  if (!(userData[0] & 0x40)) {\n    return results;\n  }\n\n  // parse out the cc_data_1 and cc_data_2 fields\n  count = userData[0] & 0x1f;\n  for (i = 0; i < count; i++) {\n    offset = i * 3;\n    data = {\n      type: userData[offset + 2] & 0x03,\n      pts: pts\n    };\n\n    // capture cc data when cc_valid is 1\n    if (userData[offset + 2] & 0x04) {\n      data.ccData = (userData[offset + 3] << 8) | userData[offset + 4];\n      results.push(data);\n    }\n  }\n  return results;\n};\n\nvar discardEmulationPreventionBytes = function(data) {\n    var\n      length = data.byteLength,\n      emulationPreventionBytesPositions = [],\n      i = 1,\n      newLength, newData;\n\n    // Find all `Emulation Prevention Bytes`\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    }\n\n    // If no Emulation Prevention Bytes were found just return the original\n    // array\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    }\n\n    // Create a new array to hold the NAL unit data\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++;\n        // Remove this position index\n        emulationPreventionBytesPositions.shift();\n      }\n      newData[i] = data[sourceIndex];\n    }\n\n    return newData;\n};\n\n// exports\nmodule.exports = {\n  parseSei: parseSei,\n  parseUserData: parseUserData,\n  parseCaptionPackets: parseCaptionPackets,\n  discardEmulationPreventionBytes: discardEmulationPreventionBytes,\n  USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n};\n","var redefine = require('./_redefine');\nmodule.exports = function (target, src, safe) {\n  for (var key in src) redefine(target, key, src[key], safe);\n  return target;\n};\n","// Source: http://jsfiddle.net/vWx8V/\n// http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes\n\n/**\n * Conenience method returns corresponding value for given keyName or keyCode.\n *\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Mixed}\n * @api public\n */\n\nfunction keyCode(searchInput) {\n  // Keyboard Events\n  if (searchInput && 'object' === typeof searchInput) {\n    var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode\n    if (hasKeyCode) searchInput = hasKeyCode\n  }\n\n  // Numbers\n  if ('number' === typeof searchInput) return names[searchInput]\n\n  // Everything else (cast to string)\n  var search = String(searchInput)\n\n  // check codes\n  var foundNamedKey = codes[search.toLowerCase()]\n  if (foundNamedKey) return foundNamedKey\n\n  // check aliases\n  var foundNamedKey = aliases[search.toLowerCase()]\n  if (foundNamedKey) return foundNamedKey\n\n  // weird character?\n  if (search.length === 1) return search.charCodeAt(0)\n\n  return undefined\n}\n\n/**\n * Compares a keyboard event with a given keyCode or keyName.\n *\n * @param {Event} event Keyboard event that should be tested\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Boolean}\n * @api public\n */\nkeyCode.isEventKey = function isEventKey(event, nameOrCode) {\n  if (event && 'object' === typeof event) {\n    var keyCode = event.which || event.keyCode || event.charCode\n    if (keyCode === null || keyCode === undefined) { return false; }\n    if (typeof nameOrCode === 'string') {\n      // check codes\n      var foundNamedKey = codes[nameOrCode.toLowerCase()]\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\n    \n      // check aliases\n      var foundNamedKey = aliases[nameOrCode.toLowerCase()]\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\n    } else if (typeof nameOrCode === 'number') {\n      return nameOrCode === keyCode;\n    }\n    return false;\n  }\n}\n\nexports = module.exports = keyCode;\n\n/**\n * Get by name\n *\n *   exports.code['enter'] // => 13\n */\n\nvar codes = exports.code = exports.codes = {\n  'backspace': 8,\n  'tab': 9,\n  'enter': 13,\n  'shift': 16,\n  'ctrl': 17,\n  'alt': 18,\n  'pause/break': 19,\n  'caps lock': 20,\n  'esc': 27,\n  'space': 32,\n  'page up': 33,\n  'page down': 34,\n  'end': 35,\n  'home': 36,\n  'left': 37,\n  'up': 38,\n  'right': 39,\n  'down': 40,\n  'insert': 45,\n  'delete': 46,\n  'command': 91,\n  'left command': 91,\n  'right command': 93,\n  'numpad *': 106,\n  'numpad +': 107,\n  'numpad -': 109,\n  'numpad .': 110,\n  'numpad /': 111,\n  'num lock': 144,\n  'scroll lock': 145,\n  'my computer': 182,\n  'my calculator': 183,\n  ';': 186,\n  '=': 187,\n  ',': 188,\n  '-': 189,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '[': 219,\n  '\\\\': 220,\n  ']': 221,\n  \"'\": 222\n}\n\n// Helper aliases\n\nvar aliases = exports.aliases = {\n  'windows': 91,\n  '⇧': 16,\n  '⌥': 18,\n  '⌃': 17,\n  '⌘': 91,\n  'ctl': 17,\n  'control': 17,\n  'option': 18,\n  'pause': 19,\n  'break': 19,\n  'caps': 20,\n  'return': 13,\n  'escape': 27,\n  'spc': 32,\n  'spacebar': 32,\n  'pgup': 33,\n  'pgdn': 34,\n  'ins': 45,\n  'del': 46,\n  'cmd': 91\n}\n\n/*!\n * Programatically add the following\n */\n\n// lower case chars\nfor (i = 97; i < 123; i++) codes[String.fromCharCode(i)] = i - 32\n\n// numbers\nfor (var i = 48; i < 58; i++) codes[i - 48] = i\n\n// function keys\nfor (i = 1; i < 13; i++) codes['f'+i] = i + 111\n\n// numpad keys\nfor (i = 0; i < 10; i++) codes['numpad '+i] = i + 96\n\n/**\n * Get by code\n *\n *   exports.name[13] // => 'Enter'\n */\n\nvar names = exports.names = exports.title = {} // title for backward compat\n\n// Create reverse mapping\nfor (i in codes) names[codes[i]] = i\n\n// Add aliases\nfor (var alias in aliases) {\n  codes[alias] = aliases[alias]\n}\n","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n","// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject = require('./_an-object');\nvar aFunction = require('./_a-function');\nvar SPECIES = require('./_wks')('species');\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar ONE_SECOND_IN_TS = 90000; // 90kHz clock\n\n/**\n * Store information about the start and end of the track and the\n * duration for each frame/sample we process in order to calculate\n * the baseMediaDecodeTime\n */\nvar collectDtsInfo = function(track, data) {\n  if (typeof data.pts === 'number') {\n    if (track.timelineStartInfo.pts === undefined) {\n      track.timelineStartInfo.pts = data.pts;\n    }\n\n    if (track.minSegmentPts === undefined) {\n      track.minSegmentPts = data.pts;\n    } else {\n      track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n    }\n\n    if (track.maxSegmentPts === undefined) {\n      track.maxSegmentPts = data.pts;\n    } else {\n      track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n    }\n  }\n\n  if (typeof data.dts === 'number') {\n    if (track.timelineStartInfo.dts === undefined) {\n      track.timelineStartInfo.dts = data.dts;\n    }\n\n    if (track.minSegmentDts === undefined) {\n      track.minSegmentDts = data.dts;\n    } else {\n      track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n    }\n\n    if (track.maxSegmentDts === undefined) {\n      track.maxSegmentDts = data.dts;\n    } else {\n      track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n    }\n  }\n};\n\n/**\n * Clear values used to calculate the baseMediaDecodeTime between\n * tracks\n */\nvar clearDtsInfo = function(track) {\n  delete track.minSegmentDts;\n  delete track.maxSegmentDts;\n  delete track.minSegmentPts;\n  delete track.maxSegmentPts;\n};\n\n/**\n * Calculate the track's baseMediaDecodeTime based on the earliest\n * DTS the transmuxer has ever seen and the minimum DTS for the\n * current track\n * @param track {object} track metadata configuration\n * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\nvar calculateTrackBaseMediaDecodeTime = function(track, keepOriginalTimestamps) {\n  var\n    baseMediaDecodeTime,\n    scale,\n    minSegmentDts = track.minSegmentDts;\n\n  // Optionally adjust the time so the first segment starts at zero.\n  if (!keepOriginalTimestamps) {\n    minSegmentDts -= track.timelineStartInfo.dts;\n  }\n\n  // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n  // we want the start of the first segment to be placed\n  baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime;\n\n  // Add to that the distance this segment is from the very first\n  baseMediaDecodeTime += minSegmentDts;\n\n  // baseMediaDecodeTime must not become negative\n  baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n  if (track.type === 'audio') {\n    // Audio has a different clock equal to the sampling_rate so we need to\n    // scale the PTS values into the clock rate of the track\n    scale = track.samplerate / ONE_SECOND_IN_TS;\n    baseMediaDecodeTime *= scale;\n    baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n  }\n\n  return baseMediaDecodeTime;\n};\n\nmodule.exports = {\n  clearDtsInfo: clearDtsInfo,\n  calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n  collectDtsInfo: collectDtsInfo\n};\n","\"use strict\";\nvar window = require(\"global/window\")\nvar isFunction = require(\"is-function\")\nvar parseHeaders = require(\"parse-headers\")\nvar xtend = require(\"xtend\")\n\nmodule.exports = createXHR\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop\ncreateXHR.XDomainRequest = \"withCredentials\" in (new createXHR.XMLHttpRequest()) ? createXHR.XMLHttpRequest : window.XDomainRequest\n\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function(method) {\n    createXHR[method === \"delete\" ? \"del\" : method] = function(uri, options, callback) {\n        options = initParams(uri, options, callback)\n        options.method = method.toUpperCase()\n        return _createXHR(options)\n    }\n})\n\nfunction forEachArray(array, iterator) {\n    for (var i = 0; i < array.length; i++) {\n        iterator(array[i])\n    }\n}\n\nfunction isEmpty(obj){\n    for(var i in obj){\n        if(obj.hasOwnProperty(i)) return false\n    }\n    return true\n}\n\nfunction initParams(uri, options, callback) {\n    var params = uri\n\n    if (isFunction(options)) {\n        callback = options\n        if (typeof uri === \"string\") {\n            params = {uri:uri}\n        }\n    } else {\n        params = xtend(options, {uri: uri})\n    }\n\n    params.callback = callback\n    return params\n}\n\nfunction createXHR(uri, options, callback) {\n    options = initParams(uri, options, callback)\n    return _createXHR(options)\n}\n\nfunction _createXHR(options) {\n    if(typeof options.callback === \"undefined\"){\n        throw new Error(\"callback argument missing\")\n    }\n\n    var called = false\n    var callback = function cbOnce(err, response, body){\n        if(!called){\n            called = true\n            options.callback(err, response, body)\n        }\n    }\n\n    function readystatechange() {\n        if (xhr.readyState === 4) {\n            setTimeout(loadFunc, 0)\n        }\n    }\n\n    function getBody() {\n        // Chrome with requestType=blob throws errors arround when even testing access to responseText\n        var body = undefined\n\n        if (xhr.response) {\n            body = xhr.response\n        } else {\n            body = xhr.responseText || getXml(xhr)\n        }\n\n        if (isJson) {\n            try {\n                body = JSON.parse(body)\n            } catch (e) {}\n        }\n\n        return body\n    }\n\n    function errorFunc(evt) {\n        clearTimeout(timeoutTimer)\n        if(!(evt instanceof Error)){\n            evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\") )\n        }\n        evt.statusCode = 0\n        return callback(evt, failureResponse)\n    }\n\n    // will load the data & process the response in a special response object\n    function loadFunc() {\n        if (aborted) return\n        var status\n        clearTimeout(timeoutTimer)\n        if(options.useXDR && xhr.status===undefined) {\n            //IE8 CORS GET successful response doesn't have a status field, but body is fine\n            status = 200\n        } else {\n            status = (xhr.status === 1223 ? 204 : xhr.status)\n        }\n        var response = failureResponse\n        var err = null\n\n        if (status !== 0){\n            response = {\n                body: getBody(),\n                statusCode: status,\n                method: method,\n                headers: {},\n                url: uri,\n                rawRequest: xhr\n            }\n            if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE\n                response.headers = parseHeaders(xhr.getAllResponseHeaders())\n            }\n        } else {\n            err = new Error(\"Internal XMLHttpRequest Error\")\n        }\n        return callback(err, response, response.body)\n    }\n\n    var xhr = options.xhr || null\n\n    if (!xhr) {\n        if (options.cors || options.useXDR) {\n            xhr = new createXHR.XDomainRequest()\n        }else{\n            xhr = new createXHR.XMLHttpRequest()\n        }\n    }\n\n    var key\n    var aborted\n    var uri = xhr.url = options.uri || options.url\n    var method = xhr.method = options.method || \"GET\"\n    var body = options.body || options.data\n    var headers = xhr.headers = options.headers || {}\n    var sync = !!options.sync\n    var isJson = false\n    var timeoutTimer\n    var failureResponse = {\n        body: undefined,\n        headers: {},\n        statusCode: 0,\n        method: method,\n        url: uri,\n        rawRequest: xhr\n    }\n\n    if (\"json\" in options && options.json !== false) {\n        isJson = true\n        headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\") //Don't override existing accept header declared by user\n        if (method !== \"GET\" && method !== \"HEAD\") {\n            headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\") //Don't override existing accept header declared by user\n            body = JSON.stringify(options.json === true ? body : options.json)\n        }\n    }\n\n    xhr.onreadystatechange = readystatechange\n    xhr.onload = loadFunc\n    xhr.onerror = errorFunc\n    // IE9 must have onprogress be set to a unique function.\n    xhr.onprogress = function () {\n        // IE must die\n    }\n    xhr.onabort = function(){\n        aborted = true;\n    }\n    xhr.ontimeout = errorFunc\n    xhr.open(method, uri, !sync, options.username, options.password)\n    //has to be after open\n    if(!sync) {\n        xhr.withCredentials = !!options.withCredentials\n    }\n    // Cannot set timeout with sync request\n    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n    if (!sync && options.timeout > 0 ) {\n        timeoutTimer = setTimeout(function(){\n            if (aborted) return\n            aborted = true//IE9 may still call readystatechange\n            xhr.abort(\"timeout\")\n            var e = new Error(\"XMLHttpRequest timeout\")\n            e.code = \"ETIMEDOUT\"\n            errorFunc(e)\n        }, options.timeout )\n    }\n\n    if (xhr.setRequestHeader) {\n        for(key in headers){\n            if(headers.hasOwnProperty(key)){\n                xhr.setRequestHeader(key, headers[key])\n            }\n        }\n    } else if (options.headers && !isEmpty(options.headers)) {\n        throw new Error(\"Headers cannot be set on an XDomainRequest object\")\n    }\n\n    if (\"responseType\" in options) {\n        xhr.responseType = options.responseType\n    }\n\n    if (\"beforeSend\" in options &&\n        typeof options.beforeSend === \"function\"\n    ) {\n        options.beforeSend(xhr)\n    }\n\n    // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n    // XMLHttpRequest spec says to pass null as body to indicate no body\n    // See https://github.com/naugtur/xhr/issues/100.\n    xhr.send(body || null)\n\n    return xhr\n\n\n}\n\nfunction getXml(xhr) {\n    if (xhr.responseType === \"document\") {\n        return xhr.responseXML\n    }\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\"\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n        return xhr.responseXML\n    }\n\n    return null\n}\n\nfunction noop() {}\n","var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n    doccy = document;\n} else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n}\n\nmodule.exports = doccy;\n","/*! @name m3u8-parser @version 4.3.0 @license Apache-2.0 */\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\n/**\n * @file stream.js\n */\n\n/**\n * A lightweight readable stream implementation that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream =\n/*#__PURE__*/\nfunction () {\n  function Stream() {\n    this.listeners = {};\n  }\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  var _proto = Stream.prototype;\n\n  _proto.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n\n    this.listeners[type].push(listener);\n  };\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {boolean} if we could turn it off or not\n   */\n\n\n  _proto.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener);\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  };\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {string} type the event name\n   */\n\n\n  _proto.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n    var i;\n    var length;\n    var args;\n\n    if (!callbacks) {\n      return;\n    } // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n\n\n    if (arguments.length === 2) {\n      length = callbacks.length;\n\n      for (i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      args = Array.prototype.slice.call(arguments, 1);\n      length = callbacks.length;\n\n      for (i = 0; i < length; ++i) {\n        callbacks[i].apply(this, args);\n      }\n    }\n  };\n  /**\n   * Destroys the stream and cleans up.\n   */\n\n\n  _proto.dispose = function dispose() {\n    this.listeners = {};\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  _proto.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\n\nvar LineStream =\n/*#__PURE__*/\nfunction (_Stream) {\n  _inheritsLoose(LineStream, _Stream);\n\n  function LineStream() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.buffer = '';\n    return _this;\n  }\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {string} data the text to process\n   */\n\n\n  var _proto = LineStream.prototype;\n\n  _proto.push = function push(data) {\n    var nextNewline;\n    this.buffer += data;\n    nextNewline = this.buffer.indexOf('\\n');\n\n    for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n      this.trigger('data', this.buffer.substring(0, nextNewline));\n      this.buffer = this.buffer.substring(nextNewline + 1);\n    }\n  };\n\n  return LineStream;\n}(Stream);\n\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\n\nvar attributeSeparator = function attributeSeparator() {\n  var key = '[^=]*';\n  var value = '\"[^\"]*\"|[^,]*';\n  var keyvalue = '(?:' + key + ')=(?:' + value + ')';\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n/**\n * Parse attributes from a line given the separator\n *\n * @param {string} attributes the attribute line to parse\n */\n\n\nvar parseAttributes = function parseAttributes(attributes) {\n  // split the string using attributes as the separator\n  var attrs = attributes.split(attributeSeparator());\n  var result = {};\n  var i = attrs.length;\n  var attr;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    } // split the key and value\n\n\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1); // trim whitespace and remove optional quotes around the value\n\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n\n  return result;\n};\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\n\nvar ParseStream =\n/*#__PURE__*/\nfunction (_Stream) {\n  _inheritsLoose(ParseStream, _Stream);\n\n  function ParseStream() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.customParsers = [];\n    _this.tagMappers = [];\n    return _this;\n  }\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {string} line a single line of an M3U8 file to parse\n   */\n\n\n  var _proto = ParseStream.prototype;\n\n  _proto.push = function push(line) {\n    var _this2 = this;\n\n    var match;\n    var event; // strip whitespace\n\n    line = line.trim();\n\n    if (line.length === 0) {\n      // ignore empty lines\n      return;\n    } // URIs\n\n\n    if (line[0] !== '#') {\n      this.trigger('data', {\n        type: 'uri',\n        uri: line\n      });\n      return;\n    } // map tags\n\n\n    var newLines = this.tagMappers.reduce(function (acc, mapper) {\n      var mappedLine = mapper(line); // skip if unchanged\n\n      if (mappedLine === line) {\n        return acc;\n      }\n\n      return acc.concat([mappedLine]);\n    }, [line]);\n    newLines.forEach(function (newLine) {\n      for (var i = 0; i < _this2.customParsers.length; i++) {\n        if (_this2.customParsers[i].call(_this2, newLine)) {\n          return;\n        }\n      } // Comments\n\n\n      if (newLine.indexOf('#EXT') !== 0) {\n        _this2.trigger('data', {\n          type: 'comment',\n          text: newLine.slice(1)\n        });\n\n        return;\n      } // strip off any carriage returns here so the regex matching\n      // doesn't have to account for them.\n\n\n      newLine = newLine.replace('\\r', ''); // Tags\n\n      match = /^#EXTM3U/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'm3u'\n        });\n\n        return;\n      }\n\n      match = /^#EXTINF:?([0-9\\.]*)?,?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'inf'\n        };\n\n        if (match[1]) {\n          event.duration = parseFloat(match[1]);\n        }\n\n        if (match[2]) {\n          event.title = match[2];\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'targetduration'\n        };\n\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#ZEN-TOTAL-DURATION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'totalduration'\n        };\n\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'version'\n        };\n\n        if (match[1]) {\n          event.version = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'discontinuity-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'playlist-type'\n        };\n\n        if (match[1]) {\n          event.playlistType = match[1];\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-BYTERANGE:?([0-9.]*)?@?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'byterange'\n        };\n\n        if (match[1]) {\n          event.length = parseInt(match[1], 10);\n        }\n\n        if (match[2]) {\n          event.offset = parseInt(match[2], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'allow-cache'\n        };\n\n        if (match[1]) {\n          event.allowed = !/NO/.test(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MAP:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'map'\n        };\n\n        if (match[1]) {\n          var attributes = parseAttributes(match[1]);\n\n          if (attributes.URI) {\n            event.uri = attributes.URI;\n          }\n\n          if (attributes.BYTERANGE) {\n            var _attributes$BYTERANGE = attributes.BYTERANGE.split('@'),\n                length = _attributes$BYTERANGE[0],\n                offset = _attributes$BYTERANGE[1];\n\n            event.byterange = {};\n\n            if (length) {\n              event.byterange.length = parseInt(length, 10);\n            }\n\n            if (offset) {\n              event.byterange.offset = parseInt(offset, 10);\n            }\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-STREAM-INF:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'stream-inf'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n\n          if (event.attributes.RESOLUTION) {\n            var split = event.attributes.RESOLUTION.split('x');\n            var resolution = {};\n\n            if (split[0]) {\n              resolution.width = parseInt(split[0], 10);\n            }\n\n            if (split[1]) {\n              resolution.height = parseInt(split[1], 10);\n            }\n\n            event.attributes.RESOLUTION = resolution;\n          }\n\n          if (event.attributes.BANDWIDTH) {\n            event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n          }\n\n          if (event.attributes['PROGRAM-ID']) {\n            event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-ENDLIST/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'endlist'\n        });\n\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'discontinuity'\n        });\n\n        return;\n      }\n\n      match = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'program-date-time'\n        };\n\n        if (match[1]) {\n          event.dateTimeString = match[1];\n          event.dateTimeObject = new Date(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-KEY:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'key'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]); // parse the IV string into a Uint32Array\n\n          if (event.attributes.IV) {\n            if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n              event.attributes.IV = event.attributes.IV.substring(2);\n            }\n\n            event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n            event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n            event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n            event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n            event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n            event.attributes.IV = new Uint32Array(event.attributes.IV);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-START:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'start'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n          event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n          event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out-cont'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-IN:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-in'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      } // unknown tag type\n\n\n      _this2.trigger('data', {\n        type: 'tag',\n        data: newLine.slice(4)\n      });\n    });\n  };\n  /**\n   * Add a parser for custom headers\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  _proto.addParser = function addParser(_ref) {\n    var _this3 = this;\n\n    var expression = _ref.expression,\n        customType = _ref.customType,\n        dataParser = _ref.dataParser,\n        segment = _ref.segment;\n\n    if (typeof dataParser !== 'function') {\n      dataParser = function dataParser(line) {\n        return line;\n      };\n    }\n\n    this.customParsers.push(function (line) {\n      var match = expression.exec(line);\n\n      if (match) {\n        _this3.trigger('data', {\n          type: 'custom',\n          data: dataParser(line),\n          customType: customType,\n          segment: segment\n        });\n\n        return true;\n      }\n    });\n  };\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n\n\n  _proto.addTagMapper = function addTagMapper(_ref2) {\n    var expression = _ref2.expression,\n        map = _ref2.map;\n\n    var mapFn = function mapFn(line) {\n      if (expression.test(line)) {\n        return map(line);\n      }\n\n      return line;\n    };\n\n    this.tagMappers.push(mapFn);\n  };\n\n  return ParseStream;\n}(Stream);\n\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\n\nvar Parser =\n/*#__PURE__*/\nfunction (_Stream) {\n  _inheritsLoose(Parser, _Stream);\n\n  function Parser() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.lineStream = new LineStream();\n    _this.parseStream = new ParseStream();\n\n    _this.lineStream.pipe(_this.parseStream);\n    /* eslint-disable consistent-this */\n\n\n    var self = _assertThisInitialized(_assertThisInitialized(_this));\n    /* eslint-enable consistent-this */\n\n\n    var uris = [];\n    var currentUri = {}; // if specified, the active EXT-X-MAP definition\n\n    var currentMap; // if specified, the active decryption key\n\n    var _key;\n\n    var noop = function noop() {};\n\n    var defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    }; // group segments into numbered timelines delineated by discontinuities\n\n    var currentTimeline = 0; // the manifest is empty until the parse stream begins delivering data\n\n    _this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: []\n    }; // update the manifest with the m3u8 entry from the parse stream\n\n    _this.parseStream.on('data', function (entry) {\n      var mediaGroup;\n      var rendition;\n      ({\n        tag: function tag() {\n          // switch based on the tag type\n          (({\n            'allow-cache': function allowCache() {\n              this.manifest.allowCache = entry.allowed;\n\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n            byterange: function byterange() {\n              var byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  this.trigger('info', {\n                    message: 'defaulting offset to zero'\n                  });\n                  entry.offset = 0;\n                }\n              }\n\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n            },\n            endlist: function endlist() {\n              this.manifest.endList = true;\n            },\n            inf: function inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n            key: function key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              } // clear the active encryption key\n\n\n              if (entry.attributes.METHOD === 'NONE') {\n                _key = null;\n                return;\n              }\n\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              } // setup an encryption key for upcoming segments\n\n\n              _key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                _key.iv = entry.attributes.IV;\n              }\n            },\n            'media-sequence': function mediaSequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.mediaSequence = entry.number;\n            },\n            'discontinuity-sequence': function discontinuitySequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n            'playlist-type': function playlistType() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n\n              this.manifest.playlistType = entry.playlistType;\n            },\n            map: function map() {\n              currentMap = {};\n\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n            },\n            'stream-inf': function streamInf() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n\n              _extends(currentUri.attributes, entry.attributes);\n            },\n            media: function media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              } // find the media group, creating defaults as necessary\n\n\n              var mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']]; // collect the rendition metadata\n\n              rendition = {\n                default: /yes/i.test(entry.attributes.DEFAULT)\n              };\n\n              if (rendition.default) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              } // insert the new rendition\n\n\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n            discontinuity: function discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n            'program-date-time': function programDateTime() {\n              if (typeof this.manifest.dateTimeString === 'undefined') {\n                // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                // to the manifest object\n                // TODO: Consider removing this in future major version\n                this.manifest.dateTimeString = entry.dateTimeString;\n                this.manifest.dateTimeObject = entry.dateTimeObject;\n              }\n\n              currentUri.dateTimeString = entry.dateTimeString;\n              currentUri.dateTimeObject = entry.dateTimeObject;\n            },\n            targetduration: function targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.targetDuration = entry.duration;\n            },\n            totalduration: function totalduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid total duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.totalDuration = entry.duration;\n            },\n            start: function start() {\n              if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                this.trigger('warn', {\n                  message: 'ignoring start declaration without appropriate attribute list'\n                });\n                return;\n              }\n\n              this.manifest.start = {\n                timeOffset: entry.attributes['TIME-OFFSET'],\n                precise: entry.attributes.PRECISE\n              };\n            },\n            'cue-out': function cueOut() {\n              currentUri.cueOut = entry.data;\n            },\n            'cue-out-cont': function cueOutCont() {\n              currentUri.cueOutCont = entry.data;\n            },\n            'cue-in': function cueIn() {\n              currentUri.cueIn = entry.data;\n            }\n          })[entry.tagType] || noop).call(self);\n        },\n        uri: function uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri); // if no explicit duration was declared, use the target duration\n\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          } // annotate with encryption information, if necessary\n\n\n          if (_key) {\n            currentUri.key = _key;\n          }\n\n          currentUri.timeline = currentTimeline; // annotate with initialization segment information, if necessary\n\n          if (currentMap) {\n            currentUri.map = currentMap;\n          } // prepare for the next URI\n\n\n          currentUri = {};\n        },\n        comment: function comment() {// comments are not important for playback\n        },\n        custom: function custom() {\n          // if this is segment-level data attach the output to the segment\n          if (entry.segment) {\n            currentUri.custom = currentUri.custom || {};\n            currentUri.custom[entry.customType] = entry.data; // if this is manifest-level data attach to the top level manifest object\n          } else {\n            this.manifest.custom = this.manifest.custom || {};\n            this.manifest.custom[entry.customType] = entry.data;\n          }\n        }\n      })[entry.type].call(self);\n    });\n\n    return _this;\n  }\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {string} chunk a potentially incomplete portion of the manifest\n   */\n\n\n  var _proto = Parser.prototype;\n\n  _proto.push = function push(chunk) {\n    this.lineStream.push(chunk);\n  };\n  /**\n   * Flush any remaining input. This can be handy if the last line of an M3U8\n   * manifest did not contain a trailing newline but the file has been\n   * completely received.\n   */\n\n\n  _proto.end = function end() {\n    // flush any buffered input\n    this.lineStream.push('\\n');\n  };\n  /**\n   * Add an additional parser for non-standard tags\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.type         the type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  _proto.addParser = function addParser(options) {\n    this.parseStream.addParser(options);\n  };\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n\n\n  _proto.addTagMapper = function addTagMapper(options) {\n    this.parseStream.addTagMapper(options);\n  };\n\n  return Parser;\n}(Stream);\n\n/**\n * @file m3u8/index.js\n *\n * Utilities for parsing M3U8 files. If the entire manifest is available,\n * `Parser` will create an object representation with enough detail for managing\n * playback. `ParseStream` and `LineStream` are lower-level parsing primitives\n * that do not assume the entirety of the manifest is ready and expose a\n * ReadableStream-like interface.\n */\n\nexport { LineStream, ParseStream, Parser };\n","/*\n * pkcs7.pad\n * https://github.com/brightcove/pkcs7\n *\n * Copyright (c) 2014 Brightcove\n * Licensed under the apache2 license.\n */\n\nvar PADDING = void 0;\n\n/**\n * Returns a new Uint8Array that is padded with PKCS#7 padding.\n * @param plaintext {Uint8Array} the input bytes before encryption\n * @return {Uint8Array} the padded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\nfunction pad(plaintext) {\n  var padding = PADDING[plaintext.byteLength % 16 || 0];\n  var result = new Uint8Array(plaintext.byteLength + padding.length);\n\n  result.set(plaintext);\n  result.set(padding, plaintext.byteLength);\n\n  return result;\n}\n\n// pre-define the padding values\nPADDING = [[16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16], [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15], [14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14], [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13], [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11], [10, 10, 10, 10, 10, 10, 10, 10, 10, 10], [9, 9, 9, 9, 9, 9, 9, 9, 9], [8, 8, 8, 8, 8, 8, 8, 8], [7, 7, 7, 7, 7, 7, 7], [6, 6, 6, 6, 6, 6], [5, 5, 5, 5, 5], [4, 4, 4, 4], [3, 3, 3], [2, 2], [1]];\n\n/**\n * Returns the subarray of a Uint8Array without PKCS#7 padding.\n * @param padded {Uint8Array} unencrypted bytes that have been padded\n * @return {Uint8Array} the unpadded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\nfunction unpad(padded) {\n  return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n}\n\nvar version = \"1.0.2\";\n\nexport { pad, unpad, version as VERSION };\n","import { unpad } from 'pkcs7';\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n/**\n * @file aes.js\n *\n * This file contains an adaptation of the AES decryption algorithm\n * from the Standford Javascript Cryptography Library. That work is\n * covered by the following copyright and permissions notice:\n *\n * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation\n * are those of the authors and should not be interpreted as representing\n * official policies, either expressed or implied, of the authors.\n */\n\n/**\n * Expand the S-box tables.\n *\n * @private\n */\nvar precompute = function precompute() {\n  var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n  var encTable = tables[0];\n  var decTable = tables[1];\n  var sbox = encTable[4];\n  var sboxInv = decTable[4];\n  var i = void 0;\n  var x = void 0;\n  var xInv = void 0;\n  var d = [];\n  var th = [];\n  var x2 = void 0;\n  var x4 = void 0;\n  var x8 = void 0;\n  var s = void 0;\n  var tEnc = void 0;\n  var tDec = void 0;\n\n  // Compute double and third tables\n  for (i = 0; i < 256; i++) {\n    th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n  }\n\n  for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n    // Compute sbox\n    s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n    s = s >> 8 ^ s & 255 ^ 99;\n    sbox[x] = s;\n    sboxInv[s] = x;\n\n    // Compute MixColumns\n    x8 = d[x4 = d[x2 = d[x]]];\n    tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n    tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n    for (i = 0; i < 4; i++) {\n      encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n      decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n    }\n  }\n\n  // Compactify. Considerable speedup on Firefox.\n  for (i = 0; i < 5; i++) {\n    encTable[i] = encTable[i].slice(0);\n    decTable[i] = decTable[i].slice(0);\n  }\n  return tables;\n};\nvar aesTables = null;\n\n/**\n * Schedule out an AES key for both encryption and decryption. This\n * is a low-level class. Use a cipher mode to do bulk encryption.\n *\n * @class AES\n * @param key {Array} The key as an array of 4, 6 or 8 words.\n */\n\nvar AES = function () {\n  function AES(key) {\n    classCallCheck(this, AES);\n\n    /**\n     * The expanded S-box and inverse S-box tables. These will be computed\n     * on the client so that we don't have to send them down the wire.\n     *\n     * There are two tables, _tables[0] is for encryption and\n     * _tables[1] is for decryption.\n     *\n     * The first 4 sub-tables are the expanded S-box with MixColumns. The\n     * last (_tables[01][4]) is the S-box itself.\n     *\n     * @private\n     */\n    // if we have yet to precompute the S-box tables\n    // do so now\n    if (!aesTables) {\n      aesTables = precompute();\n    }\n    // then make a copy of that object for use\n    this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n    var i = void 0;\n    var j = void 0;\n    var tmp = void 0;\n    var encKey = void 0;\n    var decKey = void 0;\n    var sbox = this._tables[0][4];\n    var decTable = this._tables[1];\n    var keyLen = key.length;\n    var rcon = 1;\n\n    if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n      throw new Error('Invalid aes key size');\n    }\n\n    encKey = key.slice(0);\n    decKey = [];\n    this._key = [encKey, decKey];\n\n    // schedule encryption keys\n    for (i = keyLen; i < 4 * keyLen + 28; i++) {\n      tmp = encKey[i - 1];\n\n      // apply sbox\n      if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n        tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255];\n\n        // shift rows and add rcon\n        if (i % keyLen === 0) {\n          tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n          rcon = rcon << 1 ^ (rcon >> 7) * 283;\n        }\n      }\n\n      encKey[i] = encKey[i - keyLen] ^ tmp;\n    }\n\n    // schedule decryption keys\n    for (j = 0; i; j++, i--) {\n      tmp = encKey[j & 3 ? i : i - 4];\n      if (i <= 4 || j < 4) {\n        decKey[j] = tmp;\n      } else {\n        decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n      }\n    }\n  }\n\n  /**\n   * Decrypt 16 bytes, specified as four 32-bit words.\n   *\n   * @param {Number} encrypted0 the first word to decrypt\n   * @param {Number} encrypted1 the second word to decrypt\n   * @param {Number} encrypted2 the third word to decrypt\n   * @param {Number} encrypted3 the fourth word to decrypt\n   * @param {Int32Array} out the array to write the decrypted words\n   * into\n   * @param {Number} offset the offset into the output array to start\n   * writing results\n   * @return {Array} The plaintext.\n   */\n\n\n  AES.prototype.decrypt = function decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n    var key = this._key[1];\n    // state variables a,b,c,d are loaded with pre-whitened data\n    var a = encrypted0 ^ key[0];\n    var b = encrypted3 ^ key[1];\n    var c = encrypted2 ^ key[2];\n    var d = encrypted1 ^ key[3];\n    var a2 = void 0;\n    var b2 = void 0;\n    var c2 = void 0;\n\n    // key.length === 2 ?\n    var nInnerRounds = key.length / 4 - 2;\n    var i = void 0;\n    var kIndex = 4;\n    var table = this._tables[1];\n\n    // load up the tables\n    var table0 = table[0];\n    var table1 = table[1];\n    var table2 = table[2];\n    var table3 = table[3];\n    var sbox = table[4];\n\n    // Inner rounds. Cribbed from OpenSSL.\n    for (i = 0; i < nInnerRounds; i++) {\n      a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n      b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n      c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n      d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n      kIndex += 4;\n      a = a2;b = b2;c = c2;\n    }\n\n    // Last round.\n    for (i = 0; i < 4; i++) {\n      out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n      a2 = a;a = b;b = c;c = d;d = a2;\n    }\n  };\n\n  return AES;\n}();\n\n/**\n * @file stream.js\n */\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream = function () {\n  function Stream() {\n    classCallCheck(this, Stream);\n\n    this.listeners = {};\n  }\n\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  Stream.prototype.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n    this.listeners[type].push(listener);\n  };\n\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {Boolean} if we could turn it off or not\n   */\n\n\n  Stream.prototype.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener);\n\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  };\n\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {String} type the event name\n   */\n\n\n  Stream.prototype.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n\n    if (!callbacks) {\n      return;\n    }\n\n    // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n    if (arguments.length === 2) {\n      var length = callbacks.length;\n\n      for (var i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      var args = Array.prototype.slice.call(arguments, 1);\n      var _length = callbacks.length;\n\n      for (var _i = 0; _i < _length; ++_i) {\n        callbacks[_i].apply(this, args);\n      }\n    }\n  };\n\n  /**\n   * Destroys the stream and cleans up.\n   */\n\n\n  Stream.prototype.dispose = function dispose() {\n    this.listeners = {};\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  Stream.prototype.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\n/**\n * @file async-stream.js\n */\n/**\n * A wrapper around the Stream class to use setTiemout\n * and run stream \"jobs\" Asynchronously\n *\n * @class AsyncStream\n * @extends Stream\n */\n\nvar AsyncStream = function (_Stream) {\n  inherits(AsyncStream, _Stream);\n\n  function AsyncStream() {\n    classCallCheck(this, AsyncStream);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this, Stream));\n\n    _this.jobs = [];\n    _this.delay = 1;\n    _this.timeout_ = null;\n    return _this;\n  }\n\n  /**\n   * process an async job\n   *\n   * @private\n   */\n\n\n  AsyncStream.prototype.processJob_ = function processJob_() {\n    this.jobs.shift()();\n    if (this.jobs.length) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    } else {\n      this.timeout_ = null;\n    }\n  };\n\n  /**\n   * push a job into the stream\n   *\n   * @param {Function} job the job to push into the stream\n   */\n\n\n  AsyncStream.prototype.push = function push(job) {\n    this.jobs.push(job);\n    if (!this.timeout_) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    }\n  };\n\n  return AsyncStream;\n}(Stream);\n\n/**\n * @file decrypter.js\n *\n * An asynchronous implementation of AES-128 CBC decryption with\n * PKCS#7 padding.\n */\n\n/**\n * Convert network-order (big-endian) bytes into their little-endian\n * representation.\n */\nvar ntoh = function ntoh(word) {\n  return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n};\n\n/**\n * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * use for the first round of CBC.\n * @return {Uint8Array} the decrypted bytes\n *\n * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n * @see https://tools.ietf.org/html/rfc2315\n */\nvar decrypt = function decrypt(encrypted, key, initVector) {\n  // word-level access to the encrypted bytes\n  var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n\n  var decipher = new AES(Array.prototype.slice.call(key));\n\n  // byte and word-level access for the decrypted output\n  var decrypted = new Uint8Array(encrypted.byteLength);\n  var decrypted32 = new Int32Array(decrypted.buffer);\n\n  // temporary variables for working with the IV, encrypted, and\n  // decrypted data\n  var init0 = void 0;\n  var init1 = void 0;\n  var init2 = void 0;\n  var init3 = void 0;\n  var encrypted0 = void 0;\n  var encrypted1 = void 0;\n  var encrypted2 = void 0;\n  var encrypted3 = void 0;\n\n  // iteration variable\n  var wordIx = void 0;\n\n  // pull out the words of the IV to ensure we don't modify the\n  // passed-in reference and easier access\n  init0 = initVector[0];\n  init1 = initVector[1];\n  init2 = initVector[2];\n  init3 = initVector[3];\n\n  // decrypt four word sequences, applying cipher-block chaining (CBC)\n  // to each decrypted block\n  for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n    // convert big-endian (network order) words into little-endian\n    // (javascript order)\n    encrypted0 = ntoh(encrypted32[wordIx]);\n    encrypted1 = ntoh(encrypted32[wordIx + 1]);\n    encrypted2 = ntoh(encrypted32[wordIx + 2]);\n    encrypted3 = ntoh(encrypted32[wordIx + 3]);\n\n    // decrypt the block\n    decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx);\n\n    // XOR with the IV, and restore network byte-order to obtain the\n    // plaintext\n    decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n    decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n    decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n    decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3);\n\n    // setup the IV for the next round\n    init0 = encrypted0;\n    init1 = encrypted1;\n    init2 = encrypted2;\n    init3 = encrypted3;\n  }\n\n  return decrypted;\n};\n\n/**\n * The `Decrypter` class that manages decryption of AES\n * data through `AsyncStream` objects and the `decrypt`\n * function\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * @param {Function} done the function to run when done\n * @class Decrypter\n */\n\nvar Decrypter = function () {\n  function Decrypter(encrypted, key, initVector, done) {\n    classCallCheck(this, Decrypter);\n\n    var step = Decrypter.STEP;\n    var encrypted32 = new Int32Array(encrypted.buffer);\n    var decrypted = new Uint8Array(encrypted.byteLength);\n    var i = 0;\n\n    this.asyncStream_ = new AsyncStream();\n\n    // split up the encryption job and do the individual chunks asynchronously\n    this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    for (i = step; i < encrypted32.length; i += step) {\n      initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n      this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    }\n    // invoke the done() callback when everything is finished\n    this.asyncStream_.push(function () {\n      // remove pkcs#7 padding from the decrypted bytes\n      done(null, unpad(decrypted));\n    });\n  }\n\n  /**\n   * a getter for step the maximum number of bytes to process at one time\n   *\n   * @return {Number} the value of step 32000\n   */\n\n\n  /**\n   * @private\n   */\n  Decrypter.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n    return function () {\n      var bytes = decrypt(encrypted, key, initVector);\n\n      decrypted.set(bytes, encrypted.byteOffset);\n    };\n  };\n\n  createClass(Decrypter, null, [{\n    key: 'STEP',\n    get: function get$$1() {\n      // 4 * 8000;\n      return 32000;\n    }\n  }]);\n  return Decrypter;\n}();\n\n/**\n * @file index.js\n *\n * Index module to easily import the primary components of AES-128\n * decryption. Like this:\n *\n * ```js\n * import {Decrypter, decrypt, AsyncStream} from 'aes-decrypter';\n * ```\n */\n\nexport { decrypt, Decrypter, AsyncStream };\n","/**\n * @license\n * Video.js 7.6.0 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/master/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/master/LICENSE>\n */\n\nimport window$1 from 'global/window';\nimport document from 'global/document';\nimport tsml from 'tsml';\nimport safeParseTuple from 'safe-json-parse/tuple';\nimport keycode from 'keycode';\nimport XHR from 'xhr';\nimport vtt from 'videojs-vtt.js';\nimport URLToolkit from 'url-toolkit';\nimport { Parser } from 'm3u8-parser';\nimport { parse, parseUTCTiming } from 'mpd-parser';\nimport mp4Inspector from 'mux.js/lib/tools/mp4-inspector';\nimport mp4probe from 'mux.js/lib/mp4/probe';\nimport { CaptionParser } from 'mux.js/lib/mp4';\nimport tsInspector from 'mux.js/lib/tools/ts-inspector.js';\nimport { Decrypter, AsyncStream, decrypt } from 'aes-decrypter';\n\nvar version = \"7.6.0\";\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}\n\n/**\n * @file create-logger.js\n * @module create-logger\n */\n\nvar history = [];\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n */\n\nvar LogByTypeFactory = function LogByTypeFactory(name, log) {\n  return function (type, level, args) {\n    var lvl = log.levels[level];\n    var lvlRegExp = new RegExp(\"^(\" + lvl + \")$\");\n\n    if (type !== 'log') {\n      // Add the type to the front of the message when it's not \"log\".\n      args.unshift(type.toUpperCase() + ':');\n    } // Add console prefix after adding to history.\n\n\n    args.unshift(name + ':'); // Add a clone of the args at this point to history.\n\n    if (history) {\n      history.push([].concat(args));\n    } // If there's no console then don't try to output messages, but they will\n    // still be stored in history.\n\n\n    if (!window$1.console) {\n      return;\n    } // Was setting these once outside of this function, but containing them\n    // in the function makes it easier to test cases where console doesn't exist\n    // when the module is executed.\n\n\n    var fn = window$1.console[type];\n\n    if (!fn && type === 'debug') {\n      // Certain browsers don't have support for console.debug. For those, we\n      // should default to the closest comparable log.\n      fn = window$1.console.info || window$1.console.log;\n    } // Bail out if there's no console or if this type is not allowed by the\n    // current logging level.\n\n\n    if (!fn || !lvl || !lvlRegExp.test(type)) {\n      return;\n    }\n\n    fn[Array.isArray(args) ? 'apply' : 'call'](window$1.console, args);\n  };\n};\n\nfunction createLogger(name) {\n  // This is the private tracking variable for logging level.\n  var level = 'info'; // the curried logByType bound to the specific log and history\n\n  var logByType;\n  /**\n   * Logs plain debug messages. Similar to `console.log`.\n   *\n   * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n   * of our JSDoc template, we cannot properly document this as both a function\n   * and a namespace, so its function signature is documented here.\n   *\n   * #### Arguments\n   * ##### *args\n   * Mixed[]\n   *\n   * Any combination of values that could be passed to `console.log()`.\n   *\n   * #### Return Value\n   *\n   * `undefined`\n   *\n   * @namespace\n   * @param    {Mixed[]} args\n   *           One or more messages or objects that should be logged.\n   */\n\n  var log = function log() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    logByType('log', level, args);\n  }; // This is the logByType helper that the logging methods below use\n\n\n  logByType = LogByTypeFactory(name, log);\n  /**\n   * Create a new sublogger which chains the old name to the new name.\n   *\n   * For example, doing `videojs.log.createLogger('player')` and then using that logger will log the following:\n   * ```js\n   *  mylogger('foo');\n   *  // > VIDEOJS: player: foo\n   * ```\n   *\n   * @param {string} name\n   *        The name to add call the new logger\n   * @return {Object}\n   */\n\n  log.createLogger = function (subname) {\n    return createLogger(name + ': ' + subname);\n  };\n  /**\n   * Enumeration of available logging levels, where the keys are the level names\n   * and the values are `|`-separated strings containing logging methods allowed\n   * in that logging level. These strings are used to create a regular expression\n   * matching the function name being called.\n   *\n   * Levels provided by Video.js are:\n   *\n   * - `off`: Matches no calls. Any value that can be cast to `false` will have\n   *   this effect. The most restrictive.\n   * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n   *   `log.warn`, and `log.error`).\n   * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n   * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n   * - `warn`: Matches `log.warn` and `log.error` calls.\n   * - `error`: Matches only `log.error` calls.\n   *\n   * @type {Object}\n   */\n\n\n  log.levels = {\n    all: 'debug|log|warn|error',\n    off: '',\n    debug: 'debug|log|warn|error',\n    info: 'log|warn|error',\n    warn: 'warn|error',\n    error: 'error',\n    DEFAULT: level\n  };\n  /**\n   * Get or set the current logging level.\n   *\n   * If a string matching a key from {@link module:log.levels} is provided, acts\n   * as a setter.\n   *\n   * @param  {string} [lvl]\n   *         Pass a valid level to set a new logging level.\n   *\n   * @return {string}\n   *         The current logging level.\n   */\n\n  log.level = function (lvl) {\n    if (typeof lvl === 'string') {\n      if (!log.levels.hasOwnProperty(lvl)) {\n        throw new Error(\"\\\"\" + lvl + \"\\\" in not a valid log level\");\n      }\n\n      level = lvl;\n    }\n\n    return level;\n  };\n  /**\n   * Returns an array containing everything that has been logged to the history.\n   *\n   * This array is a shallow clone of the internal history record. However, its\n   * contents are _not_ cloned; so, mutating objects inside this array will\n   * mutate them in history.\n   *\n   * @return {Array}\n   */\n\n\n  log.history = function () {\n    return history ? [].concat(history) : [];\n  };\n  /**\n   * Allows you to filter the history by the given logger name\n   *\n   * @param {string} fname\n   *        The name to filter by\n   *\n   * @return {Array}\n   *         The filtered list to return\n   */\n\n\n  log.history.filter = function (fname) {\n    return (history || []).filter(function (historyItem) {\n      // if the first item in each historyItem includes `fname`, then it's a match\n      return new RegExp(\".*\" + fname + \".*\").test(historyItem[0]);\n    });\n  };\n  /**\n   * Clears the internal history tracking, but does not prevent further history\n   * tracking.\n   */\n\n\n  log.history.clear = function () {\n    if (history) {\n      history.length = 0;\n    }\n  };\n  /**\n   * Disable history tracking if it is currently enabled.\n   */\n\n\n  log.history.disable = function () {\n    if (history !== null) {\n      history.length = 0;\n      history = null;\n    }\n  };\n  /**\n   * Enable history tracking if it is currently disabled.\n   */\n\n\n  log.history.enable = function () {\n    if (history === null) {\n      history = [];\n    }\n  };\n  /**\n   * Logs error messages. Similar to `console.error`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as an error\n   */\n\n\n  log.error = function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return logByType('error', level, args);\n  };\n  /**\n   * Logs warning messages. Similar to `console.warn`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as a warning.\n   */\n\n\n  log.warn = function () {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    return logByType('warn', level, args);\n  };\n  /**\n   * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n   * log if `console.debug` is not available\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as debug.\n   */\n\n\n  log.debug = function () {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return logByType('debug', level, args);\n  };\n\n  return log;\n}\n\n/**\n * @file log.js\n * @module log\n */\nvar log = createLogger('VIDEOJS');\nvar createLogger$1 = log.createLogger;\n\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */\nvar toString = Object.prototype.toString;\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\n\nvar keys = function keys(object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\n\n\nfunction each(object, fn) {\n  keys(object).forEach(function (key) {\n    return fn(object[key], key);\n  });\n}\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */\n\nfunction reduce(object, fn, initial) {\n  if (initial === void 0) {\n    initial = 0;\n  }\n\n  return keys(object).reduce(function (accum, key) {\n    return fn(accum, object[key], key);\n  }, initial);\n}\n/**\n * Object.assign-style object shallow merge/extend.\n *\n * @param  {Object} target\n * @param  {Object} ...sources\n * @return {Object}\n */\n\nfunction assign(target) {\n  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (Object.assign) {\n    return Object.assign.apply(Object, [target].concat(sources));\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      target[key] = value;\n    });\n  });\n  return target;\n}\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\n\nfunction isObject(value) {\n  return !!value && typeof value === 'object';\n}\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\n\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n\n/**\n * @file computed-style.js\n * @module computed-style\n */\n/**\n * A safe getComputedStyle.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a\n * null-check to make sure that the player doesn't break in these cases.\n *\n * @function\n * @param    {Element} el\n *           The element you want the computed style of\n *\n * @param    {string} prop\n *           The property name you want\n *\n * @see      https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\n\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n\n  if (typeof window$1.getComputedStyle === 'function') {\n    var cs = window$1.getComputedStyle(el);\n    return cs ? cs[prop] : '';\n  }\n\n  return '';\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set \", \" to \", \".\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @private\n * @param  {string} str\n *         The string to check\n *\n * @return {boolean}\n *         Will be `true` if the string is non-blank, `false` otherwise.\n *\n */\n\nfunction isNonBlankString(str) {\n  return typeof str === 'string' && /\\S/.test(str);\n}\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @private\n * @param  {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n */\n\n\nfunction throwIfWhitespace(str) {\n  if (/\\s/.test(str)) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n/**\n * Produce a regular expression for matching a className within an elements className.\n *\n * @private\n * @param  {string} className\n *         The className to generate the RegExp for.\n *\n * @return {RegExp}\n *         The RegExp that will check for a specific `className` in an elements\n *         className.\n */\n\n\nfunction classRegExp(className) {\n  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n}\n/**\n * Whether the current DOM interface appears to be real (i.e. not simulated).\n *\n * @return {boolean}\n *         Will be `true` if the DOM appears to be real, `false` otherwise.\n */\n\n\nfunction isReal() {\n  // Both document and window will never be undefined thanks to `global`.\n  return document === window$1.document;\n}\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param  {Mixed} value\n *         The value to check.\n *\n * @return {boolean}\n *         Will be `true` if the value is a DOM element, `false` otherwise.\n */\n\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *         Will be `true` if the DOM is embedded in an iframe, `false`\n *         otherwise.\n */\n\nfunction isInFrame() {\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window$1.parent !== window$1.self;\n  } catch (x) {\n    return true;\n  }\n}\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @private\n * @param   {string} method\n *          The method to create the query with.\n *\n * @return  {Function}\n *          The query method\n */\n\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n\n    var ctx = isEl(context) ? context : document;\n    return ctx[method] && ctx[method](selector);\n  };\n}\n/**\n * Creates an element and applies properties, attributes, and inserts content.\n *\n * @param  {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param  {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param  {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor object.\n *\n * @return {Element}\n *         The element that was created.\n */\n\n\nfunction createEl(tagName, properties, attributes, content) {\n  if (tagName === void 0) {\n    tagName = 'div';\n  }\n\n  if (properties === void 0) {\n    properties = {};\n  }\n\n  if (attributes === void 0) {\n    attributes = {};\n  }\n\n  var el = document.createElement(tagName);\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    var val = properties[propName]; // See #2176\n    // We originally were accepting both properties and attributes in the\n    // same object, but that doesn't work so well.\n\n    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n      log.warn(tsml(_templateObject(), propName, val));\n      el.setAttribute(propName, val); // Handle textContent since it's not supported everywhere and we have a\n      // method for it.\n    } else if (propName === 'textContent') {\n      textContent(el, val);\n    } else {\n      el[propName] = val;\n    }\n  });\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n\n  if (content) {\n    appendContent(el, content);\n  }\n\n  return el;\n}\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param  {Element} el\n *         The element to add text content into\n *\n * @param  {string} text\n *         The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\n\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n\n  return el;\n}\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\n\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n/**\n * Check if an element has a class name.\n *\n * @param  {Element} element\n *         Element to check\n *\n * @param  {string} classToCheck\n *         Class name to check for\n *\n * @return {boolean}\n *         Will be `true` if the element has a class, `false` otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\n\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n\n  if (element.classList) {\n    return element.classList.contains(classToCheck);\n  }\n\n  return classRegExp(classToCheck).test(element.className);\n}\n/**\n * Add a class name to an element.\n *\n * @param  {Element} element\n *         Element to add class name to.\n *\n * @param  {string} classToAdd\n *         Class name to add.\n *\n * @return {Element}\n *         The DOM element with the added class name.\n */\n\nfunction addClass(element, classToAdd) {\n  if (element.classList) {\n    element.classList.add(classToAdd); // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n    // in the case of classList not being supported.\n  } else if (!hasClass(element, classToAdd)) {\n    element.className = (element.className + ' ' + classToAdd).trim();\n  }\n\n  return element;\n}\n/**\n * Remove a class name from an element.\n *\n * @param  {Element} element\n *         Element to remove a class name from.\n *\n * @param  {string} classToRemove\n *         Class name to remove\n *\n * @return {Element}\n *         The DOM element with class name removed.\n */\n\nfunction removeClass(element, classToRemove) {\n  if (element.classList) {\n    element.classList.remove(classToRemove);\n  } else {\n    throwIfWhitespace(classToRemove);\n    element.className = element.className.split(/\\s+/).filter(function (c) {\n      return c !== classToRemove;\n    }).join(' ');\n  }\n\n  return element;\n}\n/**\n * The callback definition for toggleClass.\n *\n * @callback module:dom~PredicateCallback\n * @param    {Element} element\n *           The DOM element of the Component.\n *\n * @param    {string} classToToggle\n *           The `className` that wants to be toggled\n *\n * @return   {boolean|undefined}\n *           If `true` is returned, the `classToToggle` will be added to the\n *           `element`. If `false`, the `classToToggle` will be removed from\n *           the `element`. If `undefined`, the callback will be ignored.\n */\n\n/**\n * Adds or removes a class name to/from an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param  {Element} element\n *         The element to toggle a class name on.\n *\n * @param  {string} classToToggle\n *         The class that should be toggled.\n *\n * @param  {boolean|module:dom~PredicateCallback} [predicate]\n *         See the return value for {@link module:dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\n\nfunction toggleClass(element, classToToggle, predicate) {\n  // This CANNOT use `classList` internally because IE11 does not support the\n  // second parameter to the `classList.toggle()` method! Which is fine because\n  // `classList` will be used by the add/remove functions.\n  var has = hasClass(element, classToToggle);\n\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n\n  if (typeof predicate !== 'boolean') {\n    predicate = !has;\n  } // If the necessary class operation matches the current state of the\n  // element, no action is required.\n\n\n  if (predicate === has) {\n    return;\n  }\n\n  if (predicate) {\n    addClass(element, classToToggle);\n  } else {\n    removeClass(element, classToToggle);\n  }\n\n  return element;\n}\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\n\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    var attrValue = attributes[attrName];\n\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n/**\n * Get an element's attribute values, as defined on the HTML tag.\n *\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute.\n *\n * @param  {Element} tag\n *         Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element. Boolean attributes will be `true` or\n *         `false`, others will be strings.\n */\n\nfunction getAttributes(tag) {\n  var obj = {}; // known boolean attributes\n  // we can check for matching boolean properties, but not all browsers\n  // and not all tags know about these attributes, so, we still want to check them manually\n\n  var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    var attrs = tag.attributes;\n\n    for (var i = attrs.length - 1; i >= 0; i--) {\n      var attrName = attrs[i].name;\n      var attrVal = attrs[i].value; // check for known booleans\n      // the matching element property will return a value for typeof\n\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n\n      obj[attrName] = attrVal;\n    }\n  }\n\n  return obj;\n}\n/**\n * Get the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to get the value of.\n *\n * @return {string}\n *         The value of the attribute.\n */\n\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n/**\n * Set the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to set.\n *\n * @param {string} value\n *        Value to set the attribute to.\n */\n\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n/**\n * Remove an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to remove.\n */\n\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n/**\n * Attempt to block the ability to select text.\n */\n\nfunction blockTextSelection() {\n  document.body.focus();\n\n  document.onselectstart = function () {\n    return false;\n  };\n}\n/**\n * Turn off text selection blocking.\n */\n\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain object - or `undefined` if it cannot.\n */\n\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    var rect = el.getBoundingClientRect();\n    var result = {};\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n\n    return result;\n  }\n}\n/**\n * Represents the position of a DOM element on the page.\n *\n * @typedef  {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left.\n *\n * @property {number} top\n *           Pixels from the top.\n */\n\n/**\n * Get the position of an element in the DOM.\n *\n * Uses `getBoundingClientRect` technique from John Resig.\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param  {Element} el\n *         Element from which to get offset.\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\n\nfunction findPosition(el) {\n  var box;\n\n  if (el.getBoundingClientRect && el.parentNode) {\n    box = el.getBoundingClientRect();\n  }\n\n  if (!box) {\n    return {\n      left: 0,\n      top: 0\n    };\n  }\n\n  var docEl = document.documentElement;\n  var body = document.body;\n  var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n  var scrollLeft = window$1.pageXOffset || body.scrollLeft;\n  var left = box.left + scrollLeft - clientLeft;\n  var clientTop = docEl.clientTop || body.clientTop || 0;\n  var scrollTop = window$1.pageYOffset || body.scrollTop;\n  var top = box.top + scrollTop - clientTop; // Android sometimes returns slightly off decimal values, so need to round\n\n  return {\n    left: Math.round(left),\n    top: Math.round(top)\n  };\n}\n/**\n * Represents x and y coordinates for a DOM element or mouse pointer.\n *\n * @typedef  {Object} module:dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get the pointer position within an element.\n *\n * The base on the coordinates are the bottom left of the element.\n *\n * @param  {Element} el\n *         Element on which to get the pointer position on.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {module:dom~Coordinates}\n *         A coordinates object corresponding to the mouse position.\n *\n */\n\nfunction getPointerPosition(el, event) {\n  var position = {};\n  var box = findPosition(el);\n  var boxW = el.offsetWidth;\n  var boxH = el.offsetHeight;\n  var boxY = box.top;\n  var boxX = box.left;\n  var pageY = event.pageY;\n  var pageX = event.pageX;\n\n  if (event.changedTouches) {\n    pageX = event.changedTouches[0].pageX;\n    pageY = event.changedTouches[0].pageY;\n  }\n\n  position.y = Math.max(0, Math.min(1, (boxY - pageY + boxH) / boxH));\n  position.x = Math.max(0, Math.min(1, (pageX - boxX) / boxW));\n  return position;\n}\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param  {Mixed} value\n *         Check if this value is a text node.\n *\n * @return {boolean}\n *         Will be `true` if the value is a text node, `false` otherwise.\n */\n\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n/**\n * Empties the contents of an element.\n *\n * @param  {Element} el\n *         The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\n\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n\n  return el;\n}\n/**\n * This is a mixed value that describes content to be injected into the DOM\n * via some method. It can be of the following types:\n *\n * Type       | Description\n * -----------|-------------\n * `string`   | The value will be normalized into a text node.\n * `Element`  | The value will be accepted as-is.\n * `TextNode` | The value will be accepted as-is.\n * `Array`    | A one-dimensional array of strings, elements, text nodes, or functions. These functions should return a string, element, or text node (any other return value, like an array, will be ignored).\n * `Function` | A function, which is expected to return a string, element, text node, or array - any of the other possible values described above. This means that a content descriptor could be a function that returns an array of functions, but those second-level functions must return strings, elements, or text nodes.\n *\n * @typedef {string|Element|TextNode|Array|Function} module:dom~ContentDescriptor\n */\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but helps protect\n * from falling into the trap of simply writing to `innerHTML`, which could\n * be an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Array}\n *         All of the content that was passed in, normalized to an array of\n *         elements or text nodes.\n */\n\nfunction normalizeContent(content) {\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  } // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n\n\n  return (Array.isArray(content) ? content : [content]).map(function (value) {\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(function (value) {\n    return value;\n  });\n}\n/**\n * Normalizes and appends content to an element.\n *\n * @param  {Element} el\n *         Element to append normalized content to.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\n\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(function (node) {\n    return el.appendChild(node);\n  });\n  return el;\n}\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with inserted normalized content.\n */\n\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n/**\n * Check if an event was a single left click.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {boolean}\n *         Will be `true` if a single left click, `false` otherwise.\n */\n\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n    return true;\n  }\n\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n    return true;\n  } // `mouseup` event on a single left click has\n  // `button` and `buttons` equal to 0\n\n\n  if (event.button === 0 && event.buttons === 0) {\n    return true;\n  }\n\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n    return false;\n  }\n\n  return true;\n}\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\n\nvar $ = createQuerier('querySelector');\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none\n *         were found.\n *\n */\n\nvar $$ = createQuerier('querySelectorAll');\n\nvar Dom = /*#__PURE__*/Object.freeze({\n  isReal: isReal,\n  isEl: isEl,\n  isInFrame: isInFrame,\n  createEl: createEl,\n  textContent: textContent,\n  prependTo: prependTo,\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  setAttributes: setAttributes,\n  getAttributes: getAttributes,\n  getAttribute: getAttribute,\n  setAttribute: setAttribute,\n  removeAttribute: removeAttribute,\n  blockTextSelection: blockTextSelection,\n  unblockTextSelection: unblockTextSelection,\n  getBoundingClientRect: getBoundingClientRect,\n  findPosition: findPosition,\n  getPointerPosition: getPointerPosition,\n  isTextNode: isTextNode,\n  emptyEl: emptyEl,\n  normalizeContent: normalizeContent,\n  appendContent: appendContent,\n  insertContent: insertContent,\n  isSingleLeftClick: isSingleLeftClick,\n  $: $,\n  $$: $$\n});\n\n/**\n * @file guid.js\n * @module guid\n */\n\n/**\n * Unique ID for an element or function\n * @type {Number}\n */\nvar _guid = 1;\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\n\nfunction newGUID() {\n  return _guid++;\n}\n\n/**\n * @file dom-data.js\n * @module dom-data\n */\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\n\nvar elData = {};\n/*\n * Unique attribute name to store an element's guid in\n *\n * @type {String}\n * @constant\n * @private\n */\n\nvar elIdAttr = 'vdata' + Math.floor(window$1.performance && window$1.performance.now() || Date.now());\n/**\n * Returns the cache object where data for an element is stored\n *\n * @param {Element} el\n *        Element to store data for.\n *\n * @return {Object}\n *         The cache object for that el that was passed in.\n */\n\nfunction getData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    id = el[elIdAttr] = newGUID();\n  }\n\n  if (!elData[id]) {\n    elData[id] = {};\n  }\n\n  return elData[id];\n}\n/**\n * Returns whether or not an element has cached data\n *\n * @param {Element} el\n *        Check if this element has cached data.\n *\n * @return {boolean}\n *         - True if the DOM element has cached data.\n *         - False otherwise.\n */\n\nfunction hasData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return false;\n  }\n\n  return !!Object.getOwnPropertyNames(elData[id]).length;\n}\n/**\n * Delete data for the element from the cache and the guid attr from getElementById\n *\n * @param {Element} el\n *        Remove cached data for this element.\n */\n\nfunction removeData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return;\n  } // Remove all stored data\n\n\n  delete elData[id]; // Remove the elIdAttr property from the DOM node\n\n  try {\n    delete el[elIdAttr];\n  } catch (e) {\n    if (el.removeAttribute) {\n      el.removeAttribute(elIdAttr);\n    } else {\n      // IE doesn't appear to support removeAttribute on the document element\n      el[elIdAttr] = null;\n    }\n  }\n}\n\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @file events.js\n * @module events\n */\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\n\nfunction _cleanUpEvents(elem, type) {\n  var data = getData(elem); // Remove the events of a particular type if there are none left\n\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type]; // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n    // Remove the meta-handler from the element\n\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  } // Remove the events object if there are no types left\n\n\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  } // Finally remove the element data if there is no data left\n\n\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    removeData(elem);\n  }\n}\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */\n\n\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\n\n\nfunction fixEvent(event) {\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  } // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n\n\n  if (!event || !event.isPropagationStopped) {\n    var old = event || window$1.event;\n    event = {}; // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n\n    for (var key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    } // The event occurred on this element\n\n\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    } // Handle which other element the event is related to\n\n\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    } // Stop the default browser action\n\n\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n\n    event.defaultPrevented = false; // Stop the event from bubbling\n\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n\n    event.isPropagationStopped = returnFalse; // Stop the event from bubbling and executing other handlers\n\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n\n    event.isImmediatePropagationStopped = returnFalse; // Handle mouse position\n\n    if (event.clientX !== null && event.clientX !== undefined) {\n      var doc = document.documentElement;\n      var body = document.body;\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    } // Handle key presses\n\n\n    event.which = event.charCode || event.keyCode; // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n\n    if (event.button !== null && event.button !== undefined) {\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  } // Returns fixed-up instance\n\n\n  return event;\n}\n/**\n * Whether passive event listeners are supported\n */\n\nvar _supportsPassive = false;\n\n(function () {\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        _supportsPassive = true;\n      }\n    });\n    window$1.addEventListener('test', null, opts);\n    window$1.removeEventListener('test', null, opts);\n  } catch (e) {// disregard\n  }\n})();\n/**\n * Touch events Chrome expects to be passive\n */\n\n\nvar passiveEvents = ['touchstart', 'touchmove'];\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */\n\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n\n  var data = getData(elem); // We need a place to store all our handler data\n\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  data.handlers[type].push(fn);\n\n  if (!data.dispatcher) {\n    data.disabled = false;\n\n    data.dispatcher = function (event, hash) {\n      if (data.disabled) {\n        return;\n      }\n\n      event = fixEvent(event);\n      var handlers = data.handlers[event.type];\n\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        var handlersCopy = handlers.slice(0);\n\n        for (var m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      var options = false;\n\n      if (_supportsPassive && passiveEvents.indexOf(type) > -1) {\n        options = {\n          passive: true\n        };\n      }\n\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\n\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!hasData(elem)) {\n    return;\n  }\n\n  var data = getData(elem); // If no events exist, nothing to unbind\n\n  if (!data.handlers) {\n    return;\n  }\n\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  } // Utility function\n\n\n  var removeType = function removeType(el, t) {\n    data.handlers[t] = [];\n\n    _cleanUpEvents(el, t);\n  }; // Are we removing all bound events?\n\n\n  if (type === undefined) {\n    for (var t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n\n    return;\n  }\n\n  var handlers = data.handlers[type]; // If no handlers exist, nothing to unbind\n\n  if (!handlers) {\n    return;\n  } // If no listener was provided, remove all listeners for type\n\n\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  } // We're only removing a single handler\n\n\n  if (fn.guid) {\n    for (var n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n\n  _cleanUpEvents(elem, type);\n}\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         Returns the opposite of `defaultPrevented` if default was\n *         prevented. Otherwise, returns `undefined`\n */\n\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  var elemData = hasData(elem) ? getData(elem) : {};\n  var parent = elem.parentNode || elem.ownerDocument; // type = event.type || event,\n  // handler;\n  // If an event name was passed as a string, creates an event out of it\n\n  if (typeof event === 'string') {\n    event = {\n      type: event,\n      target: elem\n    };\n  } else if (!event.target) {\n    event.target = elem;\n  } // Normalizes the event properties.\n\n\n  event = fixEvent(event); // If the passed element has a dispatcher, executes the established handlers.\n\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  } // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n\n\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash); // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented && event.target && event.target[event.type]) {\n    var targetData = getData(event.target); // Checks if the target has a default action for this event.\n\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true; // Executes the default action.\n\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      } // Re-enables event dispatching.\n\n\n      targetData.disabled = false;\n    }\n  } // Inform the triggerer if the default was prevented by returning false\n\n\n  return !event.defaultPrevented;\n}\n/**\n * Trigger a listener only once for an event.\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\n\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n/**\n * Trigger a listener only once and then turn if off for all\n * configured events\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\n\nfunction any(elem, type, fn) {\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n  func.guid = fn.guid = fn.guid || newGUID(); // multiple ons, but one off for everything\n\n  on(elem, type, func);\n}\n\nvar Events = /*#__PURE__*/Object.freeze({\n  fixEvent: fixEvent,\n  on: on,\n  off: off,\n  trigger: trigger,\n  one: one,\n  any: any\n});\n\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\nvar _windowLoaded = false;\nvar videojs;\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\n\nvar autoSetup = function autoSetup() {\n  // Protect against breakage in non-browser environments and check global autoSetup option.\n  if (!isReal() || videojs.options.autoSetup === false) {\n    return;\n  }\n\n  var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  var divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n  var mediaEls = vids.concat(audios, divs); // Check if any media elements exist\n\n  if (mediaEls && mediaEls.length > 0) {\n    for (var i = 0, e = mediaEls.length; i < e; i++) {\n      var mediaEl = mediaEls[i]; // Check if element exists, has getAttribute func.\n\n      if (mediaEl && mediaEl.getAttribute) {\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          var options = mediaEl.getAttribute('data-setup'); // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs(mediaEl);\n          }\n        } // If getAttribute isn't defined, we need to wait for the DOM.\n\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    } // No videos were found, so keep looping unless page is finished loading.\n\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\n\n\nfunction autoSetupTimeout(wait, vjs) {\n  if (vjs) {\n    videojs = vjs;\n  }\n\n  window$1.setTimeout(autoSetup, wait);\n}\n\nif (isReal() && document.readyState === 'complete') {\n  _windowLoaded = true;\n} else {\n  /**\n   * Listen for the load event on window, and set _windowLoaded to true.\n   *\n   * @listens load\n   */\n  one(window$1, 'load', function () {\n    _windowLoaded = true;\n  });\n}\n\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n/**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\n\nvar createStyleElement = function createStyleElement(className) {\n  var style = document.createElement('style');\n  style.className = className;\n  return style;\n};\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\n\nvar setTextContent = function setTextContent(el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n\n/**\n * @file fn.js\n * @module fn\n */\n/**\n * Bind (a.k.a proxy or context). A simple method for changing the context of\n * a function.\n *\n * It also stores a unique id on the function so it can be easily removed from\n * events.\n *\n * @function\n * @param    {Mixed} context\n *           The object to bind as scope.\n *\n * @param    {Function} fn\n *           The function to be bound to a scope.\n *\n * @param    {number} [uid]\n *           An optional unique ID for the function to be set\n *\n * @return   {Function}\n *           The new function that will be bound into the context given\n */\n\nvar bind = function bind(context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  } // Create the new function that changes the context\n\n\n  var bound = function bound() {\n    return fn.apply(context, arguments);\n  }; // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n\n\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n  return bound;\n};\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @function\n * @param    {Function} fn\n *           The function to be throttled.\n *\n * @param    {number}   wait\n *           The number of milliseconds by which to throttle.\n *\n * @return   {Function}\n */\n\nvar throttle = function throttle(fn, wait) {\n  var last = window$1.performance.now();\n\n  var throttled = function throttled() {\n    var now = window$1.performance.now();\n\n    if (now - last >= wait) {\n      fn.apply(void 0, arguments);\n      last = now;\n    }\n  };\n\n  return throttled;\n};\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @function\n * @param    {Function} func\n *           The function to wrap with debounce behavior.\n *\n * @param    {number} wait\n *           The number of milliseconds to wait after the last invocation.\n *\n * @param    {boolean} [immediate]\n *           Whether or not to invoke the function immediately upon creation.\n *\n * @param    {Object} [context=window]\n *           The \"context\" in which the debounced function should debounce. For\n *           example, if this function should be tied to a Video.js player,\n *           the player can be passed here. Alternatively, defaults to the\n *           global `window` object.\n *\n * @return   {Function}\n *           A debounced function.\n */\n\nvar debounce = function debounce(func, wait, immediate, context) {\n  if (context === void 0) {\n    context = window$1;\n  }\n\n  var timeout;\n\n  var cancel = function cancel() {\n    context.clearTimeout(timeout);\n    timeout = null;\n  };\n  /* eslint-disable consistent-this */\n\n\n  var debounced = function debounced() {\n    var self = this;\n    var args = arguments;\n\n    var _later = function later() {\n      timeout = null;\n      _later = null;\n\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(_later, wait);\n  };\n  /* eslint-enable consistent-this */\n\n\n  debounced.cancel = cancel;\n  return debounced;\n};\n\n/**\n * @file src/js/event-target.js\n */\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\n\nvar EventTarget = function EventTarget() {};\n/**\n * A Custom DOM event.\n *\n * @typedef {Object} EventTarget~Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\n\n\nEventTarget.prototype.allowedEvents_ = {};\n/**\n * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n * function that will get called when an event with a certain name gets triggered.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to call with `EventTarget`s\n */\n\nEventTarget.prototype.on = function (type, fn) {\n  // Remove the addEventListener alias before calling Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  on(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\n\n\nEventTarget.prototype.addEventListener = EventTarget.prototype.on;\n/**\n * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n * This makes it so that the `event listener` will no longer get called when the\n * named event happens.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to remove.\n */\n\nEventTarget.prototype.off = function (type, fn) {\n  off(this, type, fn);\n};\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\n\n\nEventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n/**\n * This function will add an `event listener` that gets triggered only once. After the\n * first trigger it will get removed. This is like adding an `event listener`\n * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to be called once for each event name.\n */\n\nEventTarget.prototype.one = function (type, fn) {\n  // Remove the addEventListener aliasing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  one(this, type, fn);\n  this.addEventListener = ael;\n};\n\nEventTarget.prototype.any = function (type, fn) {\n  // Remove the addEventListener aliasing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  any(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * This function causes an event to happen. This will then cause any `event listeners`\n * that are waiting for that event, to get called. If there are no `event listeners`\n * for an event then nothing will happen.\n *\n * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n * Trigger will also call the `on` + `uppercaseEventName` function.\n *\n * Example:\n * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n * `onClick` if it exists.\n *\n * @param {string|EventTarget~Event|Object} event\n *        The name of the event, an `Event`, or an object with a key of type set to\n *        an event name.\n */\n\n\nEventTarget.prototype.trigger = function (event) {\n  var type = event.type || event; // deprecation\n  // In a future version we should default target to `this`\n  // similar to how we default the target to `elem` in\n  // `Events.trigger`. Right now the default `target` will be\n  // `document` due to the `Event.fixEvent` call.\n\n  if (typeof event === 'string') {\n    event = {\n      type: type\n    };\n  }\n\n  event = fixEvent(event);\n\n  if (this.allowedEvents_[type] && this['on' + type]) {\n    this['on' + type](event);\n  }\n\n  trigger(this, event);\n};\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\n\n\nEventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\nvar EVENT_MAP;\n\nEventTarget.prototype.queueTrigger = function (event) {\n  var _this = this;\n\n  // only set up EVENT_MAP if it'll be used\n  if (!EVENT_MAP) {\n    EVENT_MAP = new Map();\n  }\n\n  var type = event.type || event;\n  var map = EVENT_MAP.get(this);\n\n  if (!map) {\n    map = new Map();\n    EVENT_MAP.set(this, map);\n  }\n\n  var oldTimeout = map.get(type);\n  map[\"delete\"](type);\n  window$1.clearTimeout(oldTimeout);\n  var timeout = window$1.setTimeout(function () {\n    // if we cleared out all timeouts for the current target, delete its map\n    if (map.size === 0) {\n      map = null;\n      EVENT_MAP[\"delete\"](_this);\n    }\n\n    _this.trigger(event);\n  }, 0);\n  map.set(type, timeout);\n};\n\n/**\n * @file mixins/evented.js\n * @module evented\n */\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\n\nvar isEvented = function isEvented(object) {\n  return object instanceof EventTarget || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\n    return typeof object[k] === 'function';\n  });\n};\n/**\n * Adds a callback to run after the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to Add\n * @param  {Function} callback\n *         The callback to run.\n */\n\n\nvar addEventedCallback = function addEventedCallback(target, callback) {\n  if (isEvented(target)) {\n    callback();\n  } else {\n    if (!target.eventedCallbacks) {\n      target.eventedCallbacks = [];\n    }\n\n    target.eventedCallbacks.push(callback);\n  }\n};\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\n\n\nvar isValidEventType = function isValidEventType(type) {\n  return (// The regex here verifies that the `type` contains at least one non-\n    // whitespace character.\n    typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\n  );\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n */\n\n\nvar validateTarget = function validateTarget(target) {\n  if (!target.nodeName && !isEvented(target)) {\n    throw new Error('Invalid target; must be a DOM node or evented object.');\n  }\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n */\n\n\nvar validateEventType = function validateEventType(type) {\n  if (!isValidEventType(type)) {\n    throw new Error('Invalid event type; must be a non-empty string or array.');\n  }\n};\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n */\n\n\nvar validateListener = function validateListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new Error('Invalid listener; must be a function.');\n  }\n};\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\n\n\nvar normalizeListenArgs = function normalizeListenArgs(self, args) {\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  var target;\n  var type;\n  var listener;\n\n  if (isTargetingSelf) {\n    target = self.eventBusEl_; // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n\n    if (args.length >= 3) {\n      args.shift();\n    }\n\n    type = args[0];\n    listener = args[1];\n  } else {\n    target = args[0];\n    type = args[1];\n    listener = args[2];\n  }\n\n  validateTarget(target);\n  validateEventType(type);\n  validateListener(listener);\n  listener = bind(self, listener);\n  return {\n    isTargetingSelf: isTargetingSelf,\n    target: target,\n    type: type,\n    listener: listener\n  };\n};\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\n\n\nvar listen = function listen(target, method, type, listener) {\n  validateTarget(target);\n\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n/**\n * Contains methods that provide event capabilities to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\n\n\nvar EventedMixin = {\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on: function on() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _normalizeListenArgs = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\n        target = _normalizeListenArgs.target,\n        type = _normalizeListenArgs.type,\n        listener = _normalizeListenArgs.listener;\n\n    listen(target, 'on', type, listener); // If this object is listening to another evented object.\n\n    if (!isTargetingSelf) {\n      // If this object is disposed, remove the listener.\n      var removeListenerOnDispose = function removeListenerOnDispose() {\n        return _this.off(target, type, listener);\n      }; // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n\n\n      removeListenerOnDispose.guid = listener.guid; // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n\n      var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\n        return _this.off('dispose', removeListenerOnDispose);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      removeRemoverOnTargetDispose.guid = listener.guid;\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will be called once per event and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one: function one() {\n    var _this2 = this;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var _normalizeListenArgs2 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\n        target = _normalizeListenArgs2.target,\n        type = _normalizeListenArgs2.type,\n        listener = _normalizeListenArgs2.listener; // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener); // Targeting another evented object.\n    } else {\n      // TODO: This wrapper is incorrect! It should only\n      //       remove the wrapper for the event type that called it.\n      //       Instead all listners are removed on the first trigger!\n      //       see https://github.com/videojs/video.js/issues/5962\n      var wrapper = function wrapper() {\n        _this2.off(target, type, wrapper);\n\n        for (var _len3 = arguments.length, largs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          largs[_key3] = arguments[_key3];\n        }\n\n        listener.apply(null, largs);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once for the first event that is triggered\n   * then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  any: function any() {\n    var _this3 = this;\n\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    var _normalizeListenArgs3 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs3.isTargetingSelf,\n        target = _normalizeListenArgs3.target,\n        type = _normalizeListenArgs3.type,\n        listener = _normalizeListenArgs3.listener; // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'any', type, listener); // Targeting another evented object.\n    } else {\n      var wrapper = function wrapper() {\n        _this3.off(target, type, wrapper);\n\n        for (var _len5 = arguments.length, largs = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n          largs[_key5] = arguments[_key5];\n        }\n\n        listener.apply(null, largs);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      wrapper.guid = listener.guid;\n      listen(target, 'any', type, wrapper);\n    }\n  },\n\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off: function off$1(targetOrType, typeOrListener, listener) {\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener); // Targeting another evented object.\n    } else {\n      var target = targetOrType;\n      var type = typeOrListener; // Fail fast and in a meaningful way!\n\n      validateTarget(target);\n      validateEventType(type);\n      validateListener(listener); // Ensure there's at least a guid, even if the function hasn't been used\n\n      listener = bind(this, listener); // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n\n      this.off('dispose', listener);\n\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @return {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger: function trigger$1(event, hash) {\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {string} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\n\nfunction evented(target, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      eventBusKey = _options.eventBusKey; // Set or create the eventBusEl_.\n\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error(\"The eventBusKey \\\"\" + eventBusKey + \"\\\" does not refer to an element.\");\n    }\n\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', {\n      className: 'vjs-event-bus'\n    });\n  }\n\n  assign(target, EventedMixin);\n\n  if (target.eventedCallbacks) {\n    target.eventedCallbacks.forEach(function (callback) {\n      callback();\n    });\n  } // When any evented object is disposed, it removes all its listeners.\n\n\n  target.on('dispose', function () {\n    target.off();\n    window$1.setTimeout(function () {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n  return target;\n}\n\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\n\nvar StatefulMixin = {\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @return {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState: function setState(stateUpdates) {\n    var _this = this;\n\n    // Support providing the `stateUpdates` state as a function.\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n\n    var changes;\n    each(stateUpdates, function (value, key) {\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (_this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: _this.state[key],\n          to: value\n        };\n      }\n\n      _this.state[key] = value;\n    }); // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n\n    if (changes && isEvented(this)) {\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes: changes,\n        type: 'statechanged'\n      });\n    }\n\n    return changes;\n  }\n};\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @return {Object}\n *          Returns the `target`.\n */\n\nfunction stateful(target, defaultState) {\n  assign(target, StatefulMixin); // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n\n  target.state = assign({}, target.state, defaultState); // Auto-bind the `handleStateChanged` method of the target object if it exists.\n\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n\n  return target;\n}\n\n/**\n * @file to-title-case.js\n * @module to-title-case\n */\n\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\nfunction toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\n\nfunction titleCaseEquals(str1, str2) {\n  return toTitleCase(str1) === toTitleCase(str2);\n}\n\n/**\n * @file merge-options.js\n * @module merge-options\n */\n/**\n * Merge two objects recursively.\n *\n * Performs a deep merge like\n * {@link https://lodash.com/docs/4.17.10#merge|lodash.merge}, but only merges\n * plain objects (not arrays, elements, or anything else).\n *\n * Non-plain object values will be copied directly from the right-most\n * argument.\n *\n * @static\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @return {Object}\n *          A new object that is the merged result of all sources.\n */\n\nfunction mergeOptions() {\n  var result = {};\n\n  for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n\n      result[key] = mergeOptions(result[key], value);\n    });\n  });\n  return result;\n}\n\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\n\nvar Component =\n/*#__PURE__*/\nfunction () {\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * paramters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to intialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  function Component(player, options, ready) {\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    } // Hold the reference to the parent component via `addChild` method\n\n\n    this.parentComponent_ = null; // Make a copy of prototype.options_ to protect against overriding defaults\n\n    this.options_ = mergeOptions({}, this.options_); // Updated options with supplied options\n\n    options = this.options_ = mergeOptions(this.options_, options); // Get ID from options or options element if one is supplied\n\n    this.id_ = options.id || options.el && options.el.id; // If there was no ID from the options, generate one\n\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      var id = player && player.id && player.id() || 'no_player';\n      this.id_ = id + \"_component_\" + newGUID();\n    }\n\n    this.name_ = options.name || null; // Create element if one wasn't provided in options\n\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    } // if evented is anything except false, we want to mixin in evented\n\n\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, {\n        eventBusKey: this.el_ ? 'el_' : null\n      });\n    }\n\n    stateful(this, this.constructor.defaultState);\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {}; // Add any child components in options\n\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    this.ready(ready); // Don't want to trigger ready here or it will before init is actually\n    // finished for all children that run this constructor\n\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   */\n\n\n  var _proto = Component.prototype;\n\n  _proto.dispose = function dispose() {\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up\n     */\n    this.trigger({\n      type: 'dispose',\n      bubbles: false\n    }); // Dispose all children.\n\n    if (this.children_) {\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    } // Delete child references\n\n\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n    this.parentComponent_ = null;\n\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        this.el_.parentNode.removeChild(this.el_);\n      }\n\n      removeData(this.el_);\n      this.el_ = null;\n    } // remove reference to the player after disposing of the element\n\n\n    this.player_ = null;\n  }\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n  ;\n\n  _proto.player = function player() {\n    return this.player_;\n  }\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:mergeOptions}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   */\n  ;\n\n  _proto.options = function options(obj) {\n    if (!obj) {\n      return this.options_;\n    }\n\n    this.options_ = mergeOptions(this.options_, obj);\n    return this.options_;\n  }\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n  ;\n\n  _proto.el = function el() {\n    return this.el_;\n  }\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  }\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n  ;\n\n  _proto.localize = function localize(string, tokens, defaultValue) {\n    if (defaultValue === void 0) {\n      defaultValue = string;\n    }\n\n    var code = this.player_.language && this.player_.language();\n    var languages = this.player_.languages && this.player_.languages();\n    var language = languages && languages[code];\n    var primaryCode = code && code.split('-')[0];\n    var primaryLang = languages && languages[primaryCode];\n    var localizedString = defaultValue;\n\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        var value = tokens[index - 1];\n        var ret = value;\n\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n\n        return ret;\n      });\n    }\n\n    return localizedString;\n  }\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n  ;\n\n  _proto.contentEl = function contentEl() {\n    return this.contentEl_ || this.el_;\n  }\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n  ;\n\n  _proto.id = function id() {\n    return this.id_;\n  }\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n  ;\n\n  _proto.name = function name() {\n    return this.name_;\n  }\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n  ;\n\n  _proto.children = function children() {\n    return this.children_;\n  }\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n  ;\n\n  _proto.getChildById = function getChildById(id) {\n    return this.childIndex_[id];\n  }\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n  ;\n\n  _proto.getChild = function getChild(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n    return this.childNameIndex_[name];\n  }\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n  ;\n\n  _proto.addChild = function addChild(child, options, index) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (index === void 0) {\n      index = this.children_.length;\n    }\n\n    var component;\n    var componentName; // If child is a string, create component with options\n\n    if (typeof child === 'string') {\n      componentName = toTitleCase(child);\n      var componentClassName = options.componentClass || componentName; // Set name through options\n\n      options.name = componentName; // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n\n      var ComponentClass = Component.getComponent(componentClassName);\n\n      if (!ComponentClass) {\n        throw new Error(\"Component \" + componentClassName + \" does not exist\");\n      } // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n\n\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n\n      component = new ComponentClass(this.player_ || this, options); // child is a component instance\n    } else {\n      component = child;\n    }\n\n    if (component.parentComponent_) {\n      component.parentComponent_.removeChild(component);\n    }\n\n    this.children_.splice(index, 0, component);\n    component.parentComponent_ = this;\n\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    } // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n\n\n    componentName = componentName || component.name && toTitleCase(component.name());\n\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n    } // Add the UI object's element to the container div (box)\n    // Having an element is not required\n\n\n    if (typeof component.el === 'function' && component.el()) {\n      var childNodes = this.contentEl().children;\n      var refNode = childNodes[index] || null;\n      this.contentEl().insertBefore(component.el(), refNode);\n    } // Return so it can stored on parent object if desired.\n\n\n    return component;\n  }\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n  ;\n\n  _proto.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    if (!component || !this.children_) {\n      return;\n    }\n\n    var childFound = false;\n\n    for (var i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!childFound) {\n      return;\n    }\n\n    component.parentComponent_ = null;\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[component.name()] = null;\n    var compEl = component.el();\n\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  }\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n  ;\n\n  _proto.initChildren = function initChildren() {\n    var _this = this;\n\n    var children = this.options_.children;\n\n    if (children) {\n      // `this` is `parent`\n      var parentOptions = this.options_;\n\n      var handleAdd = function handleAdd(child) {\n        var name = child.name;\n        var opts = child.opts; // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        } // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n\n\n        if (opts === false) {\n          return;\n        } // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n\n\n        if (opts === true) {\n          opts = {};\n        } // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n\n\n        opts.playerOptions = _this.options_.playerOptions; // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n\n        var newChild = _this.addChild(name, opts);\n\n        if (newChild) {\n          _this[name] = newChild;\n        }\n      }; // Allow for an array of children details to passed in the options\n\n\n      var workingChildren;\n      var Tech = Component.getComponent('Tech');\n\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n\n      workingChildren // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n\n          return child === wchild.name;\n        });\n      })).map(function (child) {\n        var name;\n        var opts;\n\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || _this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n\n        return {\n          name: name,\n          opts: opts\n        };\n      }).filter(function (child) {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registerd as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        var c = Component.getComponent(child.opts.componentClass || toTitleCase(child.name));\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  }\n  /**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  }\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n  ;\n\n  _proto.ready = function ready(fn, sync) {\n    if (sync === void 0) {\n      sync = false;\n    }\n\n    if (!fn) {\n      return;\n    }\n\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  }\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n  ;\n\n  _proto.triggerReady = function triggerReady() {\n    this.isReady_ = true; // Ensure ready is triggered asynchronously\n\n    this.setTimeout(function () {\n      var readyQueue = this.readyQueue_; // Reset Ready Queue\n\n      this.readyQueue_ = [];\n\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      } // Allow for using event listeners also\n\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */\n\n\n      this.trigger('ready');\n    }, 1);\n  }\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  ;\n\n  _proto.$ = function $$1(selector, context) {\n    return $(selector, context || this.contentEl());\n  }\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  ;\n\n  _proto.$$ = function $$$1(selector, context) {\n    return $$(selector, context || this.contentEl());\n  }\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n  ;\n\n  _proto.hasClass = function hasClass$1(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  }\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {string} classToAdd\n   *        CSS class name to add\n   */\n  ;\n\n  _proto.addClass = function addClass$1(classToAdd) {\n    addClass(this.el_, classToAdd);\n  }\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {string} classToRemove\n   *        CSS class name to remove\n   */\n  ;\n\n  _proto.removeClass = function removeClass$1(classToRemove) {\n    removeClass(this.el_, classToRemove);\n  }\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n  ;\n\n  _proto.toggleClass = function toggleClass$1(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  }\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n  ;\n\n  _proto.show = function show() {\n    this.removeClass('vjs-hidden');\n  }\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n  ;\n\n  _proto.hide = function hide() {\n    this.addClass('vjs-hidden');\n  }\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  ;\n\n  _proto.lockShowing = function lockShowing() {\n    this.addClass('vjs-lock-showing');\n  }\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  ;\n\n  _proto.unlockShowing = function unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  }\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n  ;\n\n  _proto.getAttribute = function getAttribute$1(attribute) {\n    return getAttribute(this.el_, attribute);\n  }\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n  ;\n\n  _proto.setAttribute = function setAttribute$1(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  }\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n  ;\n\n  _proto.removeAttribute = function removeAttribute$1(attribute) {\n    removeAttribute(this.el_, attribute);\n  }\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n  ;\n\n  _proto.width = function width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  }\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n  ;\n\n  _proto.height = function height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  }\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n  ;\n\n  _proto.dimensions = function dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  }\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n  ;\n\n  _proto.dimension = function dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      } // Check if using css width/height (% or px) and adjust\n\n\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      } // skipListeners allows us to avoid triggering the resize event when setting both width and height\n\n\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {EventTarget~Event}\n         */\n        this.trigger('componentresize');\n      }\n\n      return;\n    } // Not setting a value, so getting it\n    // Make sure element exists\n\n\n    if (!this.el_) {\n      return 0;\n    } // Get dimension value from style\n\n\n    var val = this.el_.style[widthOrHeight];\n    var pxIndex = val.indexOf('px');\n\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    } // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n\n\n    return parseInt(this.el_['offset' + toTitleCase(widthOrHeight)], 10);\n  }\n  /**\n   * Get the computed width or the height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n  ;\n\n  _proto.currentDimension = function currentDimension(widthOrHeight) {\n    var computedWidthOrHeight = 0;\n\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n\n    if (typeof window$1.getComputedStyle === 'function') {\n      var computedStyle = window$1.getComputedStyle(this.el_);\n      computedWidthOrHeight = computedStyle.getPropertyValue(widthOrHeight) || computedStyle[widthOrHeight];\n    } // remove 'px' from variable and parse as integer\n\n\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight); // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs wherever getComputedStyle doesn't exist.\n\n    if (computedWidthOrHeight === 0) {\n      var rule = \"offset\" + toTitleCase(widthOrHeight);\n      computedWidthOrHeight = this.el_[rule];\n    }\n\n    return computedWidthOrHeight;\n  }\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains computed width and height values of the\n   * component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {Component~DimensionObject}\n   *         The computed dimensions of the component's element.\n   */\n  ;\n\n  _proto.currentDimensions = function currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  }\n  /**\n   * Get the computed width of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed width of the component's element.\n   */\n  ;\n\n  _proto.currentWidth = function currentWidth() {\n    return this.currentDimension('width');\n  }\n  /**\n   * Get the computed height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed height of the component's element.\n   */\n  ;\n\n  _proto.currentHeight = function currentHeight() {\n    return this.currentDimension('height');\n  }\n  /**\n   * Set the focus to this component\n   */\n  ;\n\n  _proto.focus = function focus() {\n    this.el_.focus();\n  }\n  /**\n   * Remove the focus from this component\n   */\n  ;\n\n  _proto.blur = function blur() {\n    this.el_.blur();\n  }\n  /**\n   * When this Component receives a `keydown` event which it does not process,\n   *  it passes the event to the Player for handling.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (this.player_) {\n      // We only stop propagation here because we want unhandled events to fall\n      // back to the browser.\n      event.stopPropagation();\n      this.player_.handleKeyDown(event);\n    }\n  }\n  /**\n   * Many components used to have a `handleKeyPress` method, which was poorly\n   * named because it listened to a `keydown` event. This method name now\n   * delegates to `handleKeyDown`. This means anyone calling `handleKeyPress`\n   * will not see their method calls stop working.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    this.handleKeyDown(event);\n  }\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n  ;\n\n  _proto.emitTapEvents = function emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    var touchStart = 0;\n    var firstTouch = null; // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n\n    var tapMovementThreshold = 10; // The maximum length a touch can be while still being considered a tap\n\n    var touchTimeThreshold = 200;\n    var couldBeTap;\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        }; // Record start time so we can detect a tap vs. \"touch and hold\"\n\n        touchStart = window$1.performance.now(); // Reset couldBeTap tracking\n\n        couldBeTap = true;\n      }\n    });\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        var xdiff = event.touches[0].pageX - firstTouch.pageX;\n        var ydiff = event.touches[0].pageY - firstTouch.pageY;\n        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n\n    var noTap = function noTap() {\n      couldBeTap = false;\n    }; // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n\n\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap); // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n\n    this.on('touchend', function (event) {\n      firstTouch = null; // Proceed only if the touchmove/leave/cancel event didn't happen\n\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        var touchTime = window$1.performance.now() - touchStart; // Make sure the touch was less than the threshold to be considered a tap\n\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */\n\n          this.trigger('tap'); // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  }\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n  ;\n\n  _proto.enableTouchActivity = function enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    } // listener for reporting that the user is active\n\n\n    var report = bind(this.player(), this.player().reportUserActivity);\n    var touchHolding;\n    this.on('touchstart', function () {\n      report(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(touchHolding); // report at the same interval as activityCheck\n\n      touchHolding = this.setInterval(report, 250);\n    });\n\n    var touchEnd = function touchEnd(event) {\n      report(); // stop the interval that maintains activity if the touch is holding\n\n      this.clearInterval(touchHolding);\n    };\n\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  }\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n  ;\n\n  _proto.setTimeout = function setTimeout(fn, timeout) {\n    var _this2 = this;\n\n    // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n    var timeoutId, disposeFn;\n    fn = bind(this, fn);\n    timeoutId = window$1.setTimeout(function () {\n      _this2.off('dispose', disposeFn);\n\n      fn();\n    }, timeout);\n\n    disposeFn = function disposeFn() {\n      return _this2.clearTimeout(timeoutId);\n    };\n\n    disposeFn.guid = \"vjs-timeout-\" + timeoutId;\n    this.on('dispose', disposeFn);\n    return timeoutId;\n  }\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n  ;\n\n  _proto.clearTimeout = function clearTimeout(timeoutId) {\n    window$1.clearTimeout(timeoutId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = \"vjs-timeout-\" + timeoutId;\n    this.off('dispose', disposeFn);\n    return timeoutId;\n  }\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n  ;\n\n  _proto.setInterval = function setInterval(fn, interval) {\n    var _this3 = this;\n\n    fn = bind(this, fn);\n    var intervalId = window$1.setInterval(fn, interval);\n\n    var disposeFn = function disposeFn() {\n      return _this3.clearInterval(intervalId);\n    };\n\n    disposeFn.guid = \"vjs-interval-\" + intervalId;\n    this.on('dispose', disposeFn);\n    return intervalId;\n  }\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n  ;\n\n  _proto.clearInterval = function clearInterval(intervalId) {\n    window$1.clearInterval(intervalId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = \"vjs-interval-\" + intervalId;\n    this.off('dispose', disposeFn);\n    return intervalId;\n  }\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n  ;\n\n  _proto.requestAnimationFrame = function requestAnimationFrame(fn) {\n    var _this4 = this;\n\n    // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n    var id, disposeFn;\n\n    if (this.supportsRaf_) {\n      fn = bind(this, fn);\n      id = window$1.requestAnimationFrame(function () {\n        _this4.off('dispose', disposeFn);\n\n        fn();\n      });\n\n      disposeFn = function disposeFn() {\n        return _this4.cancelAnimationFrame(id);\n      };\n\n      disposeFn.guid = \"vjs-raf-\" + id;\n      this.on('dispose', disposeFn);\n      return id;\n    } // Fall back to using a timer.\n\n\n    return this.setTimeout(fn, 1000 / 60);\n  }\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n  ;\n\n  _proto.cancelAnimationFrame = function cancelAnimationFrame(id) {\n    if (this.supportsRaf_) {\n      window$1.cancelAnimationFrame(id);\n\n      var disposeFn = function disposeFn() {};\n\n      disposeFn.guid = \"vjs-raf-\" + id;\n      this.off('dispose', disposeFn);\n      return id;\n    } // Fall back to using a timer.\n\n\n    return this.clearTimeout(id);\n  }\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n  ;\n\n  Component.registerComponent = function registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error(\"Illegal component name, \\\"\" + name + \"\\\"; must be a non-empty string.\");\n    }\n\n    var Tech = Component.getComponent('Tech'); // We need to make sure this check is only done if Tech has been registered.\n\n    var isTech = Tech && Tech.isTech(ComponentToRegister);\n    var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n\n    if (isTech || !isComp) {\n      var reason;\n\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n\n      throw new Error(\"Illegal component, \\\"\" + name + \"\\\"; \" + reason + \".\");\n    }\n\n    name = toTitleCase(name);\n\n    if (!Component.components_) {\n      Component.components_ = {};\n    }\n\n    var Player = Component.getComponent('Player');\n\n    if (name === 'Player' && Player && Player.players) {\n      var players = Player.players;\n      var playerNames = Object.keys(players); // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n\n      if (players && playerNames.length > 0 && playerNames.map(function (pname) {\n        return players[pname];\n      }).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n\n    Component.components_[name] = ComponentToRegister;\n    return ComponentToRegister;\n  }\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   *\n   * @deprecated In `videojs` 6 this will not return `Component`s that were not\n   *             registered using {@link Component.registerComponent}. Currently we\n   *             check the global `videojs` object for a `Component` name and\n   *             return that if it exists.\n   */\n  ;\n\n  Component.getComponent = function getComponent(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Component.components_ && Component.components_[name]) {\n      return Component.components_[name];\n    }\n  };\n\n  return Component;\n}();\n/**\n * Whether or not this component supports `requestAnimationFrame`.\n *\n * This is exposed primarily for testing purposes.\n *\n * @private\n * @type {Boolean}\n */\n\n\nComponent.prototype.supportsRaf_ = typeof window$1.requestAnimationFrame === 'function' && typeof window$1.cancelAnimationFrame === 'function';\nComponent.registerComponent('Component', Component);\n\n/**\n * @file browser.js\n * @module browser\n */\nvar USER_AGENT = window$1.navigator && window$1.navigator.userAgent || '';\nvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\nvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n/**\n * Whether or not this device is an iPad.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IPAD = /iPad/i.test(USER_AGENT);\n/**\n * Whether or not this device is an iPhone.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\n\nvar IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n/**\n * Whether or not this device is an iPod.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IPOD = /iPod/i.test(USER_AGENT);\n/**\n * Whether or not this is an iOS device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n/**\n * The detected iOS version - or `null`.\n *\n * @static\n * @const\n * @type {string|null}\n */\n\nvar IOS_VERSION = function () {\n  var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n  if (match && match[1]) {\n    return match[1];\n  }\n\n  return null;\n}();\n/**\n * Whether or not this is an Android device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_ANDROID = /Android/i.test(USER_AGENT);\n/**\n * The detected Android version - or `null`.\n *\n * @static\n * @const\n * @type {number|string|null}\n */\n\nvar ANDROID_VERSION = function () {\n  // This matches Android Major.Minor.Patch versions\n  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n  if (!match) {\n    return null;\n  }\n\n  var major = match[1] && parseFloat(match[1]);\n  var minor = match[2] && parseFloat(match[2]);\n\n  if (major && minor) {\n    return parseFloat(match[1] + '.' + match[2]);\n  } else if (major) {\n    return major;\n  }\n\n  return null;\n}();\n/**\n * Whether or not this is a native Android browser.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n/**\n * Whether or not this is Mozilla Firefox.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n/**\n * Whether or not this is Microsoft Edge.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_EDGE = /Edge/i.test(USER_AGENT);\n/**\n * Whether or not this is Google Chrome.\n *\n * This will also be `true` for Chrome on iOS, which will have different support\n * as it is actually Safari under the hood.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\n/**\n * The detected Google Chrome version - or `null`.\n *\n * @static\n * @const\n * @type {number|null}\n */\n\nvar CHROME_VERSION = function () {\n  var match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n\n  if (match && match[2]) {\n    return parseFloat(match[2]);\n  }\n\n  return null;\n}();\n/**\n * The detected Internet Explorer version - or `null`.\n *\n * @static\n * @const\n * @type {number|null}\n */\n\nvar IE_VERSION = function () {\n  var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n  var version = result && parseFloat(result[1]);\n\n  if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n    // IE 11 has a different user agent string than other IE versions\n    version = 11.0;\n  }\n\n  return version;\n}();\n/**\n * Whether or not this is desktop Safari.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\n/**\n * Whether or not this is any flavor of Safari - including iOS.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n/**\n * Whether or not this is a Windows machine.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_WINDOWS = /Windows/i.test(USER_AGENT);\n/**\n * Whether or not this device is touch-enabled.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar TOUCH_ENABLED = isReal() && ('ontouchstart' in window$1 || window$1.navigator.maxTouchPoints || window$1.DocumentTouch && window$1.document instanceof window$1.DocumentTouch);\n\nvar browser = /*#__PURE__*/Object.freeze({\n  IS_IPAD: IS_IPAD,\n  IS_IPHONE: IS_IPHONE,\n  IS_IPOD: IS_IPOD,\n  IS_IOS: IS_IOS,\n  IOS_VERSION: IOS_VERSION,\n  IS_ANDROID: IS_ANDROID,\n  ANDROID_VERSION: ANDROID_VERSION,\n  IS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n  IS_FIREFOX: IS_FIREFOX,\n  IS_EDGE: IS_EDGE,\n  IS_CHROME: IS_CHROME,\n  CHROME_VERSION: CHROME_VERSION,\n  IE_VERSION: IE_VERSION,\n  IS_SAFARI: IS_SAFARI,\n  IS_ANY_SAFARI: IS_ANY_SAFARI,\n  IS_WINDOWS: IS_WINDOWS,\n  TOUCH_ENABLED: TOUCH_ENABLED\n});\n\n/**\n * @file time-ranges.js\n * @module time-ranges\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @typedef    {Function} TimeRangeIndex\n *\n * @param      {number} [index=0]\n *             The range number to return the time for.\n *\n * @return     {number}\n *             The time offset at the specified index.\n *\n * @deprecated The index argument must be provided.\n *             In the future, leaving it out will throw an error.\n */\n\n/**\n * An object that contains ranges of time.\n *\n * @typedef  {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this object.\n *\n * @property {module:time-ranges~TimeRangeIndex} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {module:time-ranges~TimeRangeIndex} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @private\n * @param   {string} fnName\n *          The function name to use for logging\n *\n * @param   {number} index\n *          The index to check\n *\n * @param   {number} maxIndex\n *          The maximum possible index\n *\n * @throws  {Error} if the timeRanges provided are over the maxIndex\n */\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error(\"Failed to execute '\" + fnName + \"' on 'TimeRanges': The index provided (\" + index + \") is non-numeric or out of bounds (0-\" + maxIndex + \").\");\n  }\n}\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @private\n * @param      {string} fnName\n *             The function name to use for logging\n *\n * @param      {string} valueIndex\n *             The property that should be used to get the time. should be\n *             'start' or 'end'\n *\n * @param      {Array} ranges\n *             An array of time ranges\n *\n * @param      {Array} [rangeIndex=0]\n *             The index to start the search at\n *\n * @return     {number}\n *             The time that offset at the specified index.\n *\n * @deprecated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws     {Error} if rangeIndex is more than the length of ranges\n */\n\n\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n/**\n * Create a time range object given ranges of time.\n *\n * @private\n * @param   {Array} [ranges]\n *          An array of time ranges.\n */\n\n\nfunction createTimeRangesObj(ranges) {\n  if (ranges === undefined || ranges.length === 0) {\n    return {\n      length: 0,\n      start: function start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end: function end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  }\n\n  return {\n    length: ranges.length,\n    start: getRange.bind(null, 'start', 0, ranges),\n    end: getRange.bind(null, 'end', 1, ranges)\n  };\n}\n/**\n * Create a `TimeRange` object which mimics an\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges|HTML5 TimeRanges instance}.\n *\n * @param {number|Array[]} start\n *        The start of a single range (a number) or an array of ranges (an\n *        array of arrays of two numbers each).\n *\n * @param {number} end\n *        The end of a single range. Cannot be used with the array form of\n *        the `start` argument.\n */\n\n\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n\n  return createTimeRangesObj([[start, end]]);\n}\n\n/**\n * @file buffer.js\n * @module buffer\n */\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\n\nfunction bufferedPercent(buffered, duration) {\n  var bufferedDuration = 0;\n  var start;\n  var end;\n\n  if (!duration) {\n    return 0;\n  }\n\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges(0, 0);\n  }\n\n  for (var i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i); // buffered end can be bigger than duration by a very small fraction\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    bufferedDuration += end - start;\n  }\n\n  return bufferedDuration / duration;\n}\n\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n * @private\n */\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\n\nvar FullscreenApi = {\n  prefixed: true\n}; // browser API methods\n\nvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror', 'fullscreen'], // WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror', '-webkit-full-screen'], // Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror', '-moz-full-screen'], // Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError', '-ms-fullscreen']];\nvar specApi = apiMap[0];\nvar browserApi; // determine the supported set of functions\n\nfor (var i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n} // map the browser API names to the spec API names\n\n\nif (browserApi) {\n  for (var _i = 0; _i < browserApi.length; _i++) {\n    FullscreenApi[specApi[_i]] = browserApi[_i];\n  }\n\n  FullscreenApi.prefixed = browserApi[0] !== specApi[0];\n}\n\n/**\n * @file media-error.js\n */\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\n\nfunction MediaError(value) {\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n\n    assign(this, value);\n  }\n\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\n\n\nMediaError.prototype.code = 0;\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\n\nMediaError.prototype.message = '';\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\n\nMediaError.prototype.status = null;\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_ABORTED\n * @property {string} 2 - MEDIA_ERR_NETWORK\n * @property {string} 3 - MEDIA_ERR_DECODE\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\n\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\n\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n}; // Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\n\nfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum; // values should be accessible on both the class and instance\n\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n} // jsdocs for instance/static members added above\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {boolean}\n *         Whether or not the object is `Promise`-like.\n */\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\n\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, function (e) {});\n  }\n}\n\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\nvar trackToJson_ = function trackToJson_(track) {\n  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n  return ret;\n};\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\n\n\nvar textTracksToJson = function textTracksToJson(tech) {\n  var trackEls = tech.$$('track');\n  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n    return t.track;\n  });\n  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    var json = trackToJson_(trackEl.track);\n\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n\n    return json;\n  });\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\n\n\nvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\n  json.forEach(function (track) {\n    var addedTrack = tech.addRemoteTextTrack(track).track;\n\n    if (!track.src && track.cues) {\n      track.cues.forEach(function (cue) {\n        return addedTrack.addCue(cue);\n      });\n    }\n  });\n  return tech.textTracks();\n};\n\nvar textTrackConverter = {\n  textTracksToJson: textTracksToJson,\n  jsonToTextTracks: jsonToTextTracks,\n  trackToJson_: trackToJson_\n};\n\nvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\n\nvar ModalDialog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ModalDialog, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.pauseOnOpen=true]\n   *        If `true`, playback will will be paused if playing when\n   *        the modal opens, and resumed when it closes.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n  function ModalDialog(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n    _this.closeable(!_this.options_.uncloseable);\n\n    _this.content(_this.options_.content); // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n\n\n    _this.contentEl_ = createEl('div', {\n      className: MODAL_CLASS_NAME + \"-content\"\n    }, {\n      role: 'document'\n    });\n    _this.descEl_ = createEl('p', {\n      className: MODAL_CLASS_NAME + \"-description vjs-control-text\",\n      id: _this.el().getAttribute('aria-describedby')\n    });\n    textContent(_this.descEl_, _this.description());\n\n    _this.el_.appendChild(_this.descEl_);\n\n    _this.el_.appendChild(_this.contentEl_);\n\n    return _this;\n  }\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  var _proto = ModalDialog.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': this.id() + \"_description\",\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return MODAL_CLASS_NAME + \" vjs-hidden \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n  ;\n\n  _proto.label = function label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  }\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n  ;\n\n  _proto.description = function description() {\n    var desc = this.options_.description || this.localize('This is a modal window.'); // Append a universal closeability message if the modal is closeable.\n\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n\n    return desc;\n  }\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n  ;\n\n  _proto.open = function open() {\n    if (!this.opened_) {\n      var player = this.player();\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('beforemodalopen');\n      this.opened_ = true; // Fill content if the modal has never opened before and\n      // never been filled.\n\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      } // If the player was playing, pause it and take note of its previously\n      // playing state.\n\n\n      this.wasPlaying_ = !player.paused();\n\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n\n      this.on('keydown', this.handleKeyDown); // Hide controls and note if they were enabled.\n\n      this.hadControls_ = player.controls();\n      player.controls(false);\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  }\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n  ;\n\n  _proto.opened = function opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n\n    return this.opened_;\n  }\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n  ;\n\n  _proto.close = function close() {\n    if (!this.opened_) {\n      return;\n    }\n\n    var player = this.player();\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n\n    this.off('keydown', this.handleKeyDown);\n\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  }\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n  ;\n\n  _proto.closeable = function closeable(value) {\n    if (typeof value === 'boolean') {\n      var closeable = this.closeable_ = !!value;\n      var close = this.getChild('closeButton'); // If this is being made closeable and has no close button, add one.\n\n      if (closeable && !close) {\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        var temp = this.contentEl_;\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', {\n          controlText: 'Close Modal Dialog'\n        });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close);\n      } // If this is being made uncloseable and has a close button, remove it.\n\n\n      if (!closeable && close) {\n        this.off(close, 'close', this.close);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n\n    return this.closeable_;\n  }\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n  ;\n\n  _proto.fill = function fill() {\n    this.fillWith(this.content());\n  }\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {Mixed} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n  ;\n\n  _proto.fillWith = function fillWith(content) {\n    var contentEl = this.contentEl();\n    var parentEl = contentEl.parentNode;\n    var nextSiblingEl = contentEl.nextSibling;\n    /**\n      * Fired just before a `ModalDialog` is filled with content.\n      *\n      * @event ModalDialog#beforemodalfill\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true; // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('modalfill'); // Re-inject the re-filled content element.\n\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    } // make sure that the close button is last in the dialog DOM\n\n\n    var closeButton = this.getChild('closeButton');\n\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  }\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n  ;\n\n  _proto.empty = function empty() {\n    /**\n    * Fired just before a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#beforemodalempty\n    * @type {EventTarget~Event}\n    */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n    /**\n    * Fired just after a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#modalempty\n    * @type {EventTarget~Event}\n    */\n\n    this.trigger('modalempty');\n  }\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */\n  ;\n\n  _proto.content = function content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n\n    return this.content_;\n  }\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalFocus_ = function conditionalFocus_() {\n    var activeEl = document.activeElement;\n    var playerEl = this.player_.el_;\n    this.previouslyActiveEl_ = null;\n\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n      this.focus();\n    }\n  }\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalBlur_ = function conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n  }\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Do not allow keydowns to reach out of the modal dialog.\n    event.stopPropagation();\n\n    if (keycode.isEventKey(event, 'Escape') && this.closeable()) {\n      event.preventDefault();\n      this.close();\n      return;\n    } // exit early if it isn't a tab key\n\n\n    if (!keycode.isEventKey(event, 'Tab')) {\n      return;\n    }\n\n    var focusableEls = this.focusableEls_();\n    var activeEl = this.el_.querySelector(':focus');\n    var focusIndex;\n\n    for (var i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  }\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n  ;\n\n  _proto.focusableEls_ = function focusableEls_() {\n    var allChildren = this.el_.querySelectorAll('*');\n    return Array.prototype.filter.call(allChildren, function (child) {\n      return (child instanceof window$1.HTMLAnchorElement || child instanceof window$1.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window$1.HTMLInputElement || child instanceof window$1.HTMLSelectElement || child instanceof window$1.HTMLTextAreaElement || child instanceof window$1.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window$1.HTMLIFrameElement || child instanceof window$1.HTMLObjectElement || child instanceof window$1.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  };\n\n  return ModalDialog;\n}(Component);\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\n\n\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\nComponent.registerComponent('ModalDialog', ModalDialog);\n\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\n\nvar TrackList =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(TrackList, _EventTarget);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @abstract\n   */\n  function TrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    _this = _EventTarget.call(this) || this;\n    _this.tracks_ = [];\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'length', {\n      get: function get() {\n        return this.tracks_.length;\n      }\n    });\n\n    for (var i = 0; i < tracks.length; i++) {\n      _this.addTrack(tracks[i]);\n    }\n\n    return _this;\n  }\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = TrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var index = this.tracks_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.tracks_[index];\n        }\n      });\n    } // Do not add duplicate tracks\n\n\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n\n      this.trigger({\n        track: track,\n        type: 'addtrack',\n        target: this\n      });\n    }\n  }\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n  ;\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    var track;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n\n        if (track.off) {\n          track.off();\n        }\n\n        this.tracks_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!track) {\n      return;\n    }\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n\n\n    this.trigger({\n      track: track,\n      type: 'removetrack',\n      target: this\n    });\n  }\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {string} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n  ;\n\n  _proto.getTrackById = function getTrackById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var track = this[i];\n\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TrackList;\n}(EventTarget);\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\n\n\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack'\n}; // emulate attribute EventHandler support to allow for feature detection\n\nfor (var event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\n\nvar disableOthers = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another audio track is enabled, disable it\n\n\n    list[i].enabled = false;\n  }\n};\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\n\n\nvar AudioTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(AudioTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n  function AudioTrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    _this = _TrackList.call(this, tracks) || this;\n    _this.changing_ = false;\n    return _this;\n  }\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = AudioTrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.enabled) {\n      disableOthers(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n\n    track.enabledChange_ = function () {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    };\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('enabledchange', track.enabledChange_);\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack);\n\n    if (rtrack.removeEventListener && rtrack.enabledChange_) {\n      rtrack.removeEventListener('enabledchange', rtrack.enabledChange_);\n      rtrack.enabledChange_ = null;\n    }\n  };\n\n  return AudioTrackList;\n}(TrackList);\n\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\n\nvar disableOthers$1 = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another video track is enabled, disable it\n\n\n    list[i].selected = false;\n  }\n};\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\n\n\nvar VideoTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(VideoTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n  function VideoTrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    _this = _TrackList.call(this, tracks) || this;\n    _this.changing_ = false;\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'selectedIndex', {\n      get: function get() {\n        for (var _i = 0; _i < this.length; _i++) {\n          if (this[_i].selected) {\n            return _i;\n          }\n        }\n\n        return -1;\n      },\n      set: function set() {}\n    });\n    return _this;\n  }\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = VideoTrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.selected) {\n      disableOthers$1(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n\n    track.selectedChange_ = function () {\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers$1(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    };\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('selectedchange', track.selectedChange_);\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack);\n\n    if (rtrack.removeEventListener && rtrack.selectedChange_) {\n      rtrack.removeEventListener('selectedchange', rtrack.selectedChange_);\n      rtrack.selectedChange_ = null;\n    }\n  };\n\n  return VideoTrackList;\n}(TrackList);\n\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\n\nvar TextTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(TextTrackList, _TrackList);\n\n  function TextTrackList() {\n    return _TrackList.apply(this, arguments) || this;\n  }\n\n  var _proto = TextTrackList.prototype;\n\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  _proto.addTrack = function addTrack(track) {\n    var _this = this;\n\n    _TrackList.prototype.addTrack.call(this, track);\n\n    if (!this.queueChange_) {\n      this.queueChange_ = function () {\n        return _this.queueTrigger('change');\n      };\n    }\n\n    if (!this.triggerSelectedlanguagechange) {\n      this.triggerSelectedlanguagechange_ = function () {\n        return _this.trigger('selectedlanguagechange');\n      };\n    }\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('modechange', this.queueChange_);\n    var nonLanguageTextTrackKind = ['metadata', 'chapters'];\n\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', this.triggerSelectedlanguagechange_);\n    }\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack); // manually remove the event handlers we added\n\n\n    if (rtrack.removeEventListener) {\n      if (this.queueChange_) {\n        rtrack.removeEventListener('modechange', this.queueChange_);\n      }\n\n      if (this.selectedlanguagechange_) {\n        rtrack.removeEventListener('modechange', this.triggerSelectedlanguagechange_);\n      }\n    }\n  };\n\n  return TextTrackList;\n}(TrackList);\n\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\nvar HtmlTrackElementList =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  function HtmlTrackElementList(trackElements) {\n    if (trackElements === void 0) {\n      trackElements = [];\n    }\n\n    this.trackElements_ = [];\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.trackElements_.length;\n      }\n    });\n\n    for (var i = 0, length = trackElements.length; i < length; i++) {\n      this.addTrackElement_(trackElements[i]);\n    }\n  }\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n\n\n  var _proto = HtmlTrackElementList.prototype;\n\n  _proto.addTrackElement_ = function addTrackElement_(trackElement) {\n    var index = this.trackElements_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.trackElements_[index];\n        }\n      });\n    } // Do not add duplicate elements\n\n\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  }\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n  ;\n\n  _proto.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n    var trackElement_;\n\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n        break;\n      }\n    }\n\n    return trackElement_;\n  }\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeTrackElement_ = function removeTrackElement_(trackElement) {\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        if (this.trackElements_[i].track && typeof this.trackElements_[i].track.off === 'function') {\n          this.trackElements_[i].track.off();\n        }\n\n        if (typeof this.trackElements_[i].off === 'function') {\n          this.trackElements_[i].off();\n        }\n\n        this.trackElements_.splice(i, 1);\n        break;\n      }\n    }\n  };\n\n  return HtmlTrackElementList;\n}();\n\n/**\n * @file text-track-cue-list.js\n */\n\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\nvar TextTrackCueList =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  function TextTrackCueList(cues) {\n    TextTrackCueList.prototype.setCues_.call(this, cues);\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.length_;\n      }\n    });\n  }\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n\n\n  var _proto = TextTrackCueList.prototype;\n\n  _proto.setCues_ = function setCues_(cues) {\n    var oldLength = this.length || 0;\n    var i = 0;\n    var l = cues.length;\n    this.cues_ = cues;\n    this.length_ = cues.length;\n\n    var defineProp = function defineProp(index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get: function get() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n\n    if (oldLength < l) {\n      i = oldLength;\n\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  }\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n  ;\n\n  _proto.getCueById = function getCueById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var cue = this[i];\n\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TextTrackCueList;\n}();\n\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\nvar VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\n\nvar AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\n\nvar TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\n\nvar TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\n\nvar Track =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(Track, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n  function Track(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    var trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      label: options.label || '',\n      language: options.language || ''\n    };\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    var _loop = function _loop(key) {\n      Object.defineProperty(_assertThisInitialized(_this), key, {\n        get: function get() {\n          return trackProps[key];\n        },\n        set: function set() {}\n      });\n    };\n\n    for (var key in trackProps) {\n      _loop(key);\n    }\n\n    return _this;\n  }\n\n  return Track;\n}(EventTarget);\n\n/**\n * @file url.js\n * @module url\n */\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @function\n * @param    {String} url\n *           The url to parse\n *\n * @return   {url:URLObject}\n *           An object of url details\n */\n\nvar parseUrl = function parseUrl(url) {\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host']; // add the url to an anchor and let the browser parse the URL\n\n  var a = document.createElement('a');\n  a.href = url; // IE8 (and 9?) Fix\n  // ie8 doesn't parse the URL correctly until the anchor is actually\n  // added to the body, and an innerHTML is needed to trigger the parsing\n\n  var addToBody = a.host === '' && a.protocol !== 'file:';\n  var div;\n\n  if (addToBody) {\n    div = document.createElement('div');\n    div.innerHTML = \"<a href=\\\"\" + url + \"\\\"></a>\";\n    a = div.firstChild; // prevent the div from affecting layout\n\n    div.setAttribute('style', 'display:none; position:absolute;');\n    document.body.appendChild(div);\n  } // Copy the specific URL properties to a new object\n  // This is also needed for IE8 because the anchor loses its\n  // properties when it's removed from the dom\n\n\n  var details = {};\n\n  for (var i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  } // IE9 adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n\n\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n\n  if (!details.protocol) {\n    details.protocol = window$1.location.protocol;\n  }\n\n  if (addToBody) {\n    document.body.removeChild(div);\n  }\n\n  return details;\n};\n/**\n * Get absolute version of relative URL. Used to tell Flash the correct URL.\n *\n * @function\n * @param    {string} url\n *           URL to make absolute\n *\n * @return   {string}\n *           Absolute URL\n *\n * @see      http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\n\nvar getAbsoluteURL = function getAbsoluteURL(url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n    var div = document.createElement('div');\n    div.innerHTML = \"<a href=\\\"\" + url + \"\\\">x</a>\";\n    url = div.firstChild.href;\n  }\n\n  return url;\n};\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @function\n * @param    {string} path\n *           The fileName path like '/path/to/file.mp4'\n *\n * @return  {string}\n *           The extension in lower case or an empty string if no\n *           extension could be found.\n */\n\nvar getFileExtension = function getFileExtension(path) {\n  if (typeof path === 'string') {\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/i;\n    var pathParts = splitPathRe.exec(path);\n\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n\n  return '';\n};\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @function\n * @param    {string} url\n *           The url to check.\n *\n * @return   {boolean}\n *           Whether it is a cross domain request or not.\n */\n\nvar isCrossOrigin = function isCrossOrigin(url) {\n  var winLoc = window$1.location;\n  var urlInfo = parseUrl(url); // IE8 protocol relative urls will return ':' for protocol\n\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol; // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n  return crossOrigin;\n};\n\nvar Url = /*#__PURE__*/Object.freeze({\n  parseUrl: parseUrl,\n  getAbsoluteURL: getAbsoluteURL,\n  getFileExtension: getFileExtension,\n  isCrossOrigin: isCrossOrigin\n});\n\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\n\nvar parseCues = function parseCues(srcContent, track) {\n  var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, window$1.WebVTT.StringDecoder());\n  var errors = [];\n\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n\n  parser.parse(srcContent);\n\n  if (errors.length > 0) {\n    if (window$1.console && window$1.console.groupCollapsed) {\n      window$1.console.groupCollapsed(\"Text Track parsing errors for \" + track.src);\n    }\n\n    errors.forEach(function (error) {\n      return log.error(error);\n    });\n\n    if (window$1.console && window$1.console.groupEnd) {\n      window$1.console.groupEnd();\n    }\n  }\n\n  parser.flush();\n};\n/**\n * Load a `TextTrack` from a specified url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\n\n\nvar loadTrack = function loadTrack(src, track) {\n  var opts = {\n    uri: src\n  };\n  var crossOrigin = isCrossOrigin(src);\n\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n\n  XHR(opts, bind(this, function (err, response, responseBody) {\n    if (err) {\n      return log.error(err, response);\n    }\n\n    track.loaded_ = true; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n\n    if (typeof window$1.WebVTT !== 'function') {\n      if (track.tech_) {\n        // to prevent use before define eslint error, we define loadHandler\n        // as a let here\n        var loadHandler;\n\n        var errorHandler = function errorHandler() {\n          log.error(\"vttjs failed to load, stopping trying to process \" + track.src);\n          track.tech_.off('vttjsloaded', loadHandler);\n        };\n\n        loadHandler = function loadHandler() {\n          track.tech_.off('vttjserror', errorHandler);\n          return parseCues(responseBody, track);\n        };\n\n        track.tech_.one('vttjsloaded', loadHandler);\n        track.tech_.one('vttjserror', errorHandler);\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\n\n\nvar TextTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(TextTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function TextTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n\n    var settings = mergeOptions(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    var mode = TextTrackMode[settings.mode] || 'disabled';\n    var default_ = settings[\"default\"];\n\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n\n    _this = _Track.call(this, settings) || this;\n    _this.tech_ = settings.tech;\n    _this.cues_ = [];\n    _this.activeCues_ = [];\n    var cues = new TextTrackCueList(_this.cues_);\n    var activeCues = new TextTrackCueList(_this.activeCues_);\n    var changed = false;\n    var timeupdateHandler = bind(_assertThisInitialized(_this), function () {\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to its nature as a getter function. Do not remove or cues will\n      // stop updating!\n      // Use the setter to prevent deletion from uglify (pure_getters rule)\n      this.activeCues = this.activeCues;\n\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n    });\n\n    if (mode !== 'disabled') {\n      _this.tech_.ready(function () {\n        _this.tech_.on('timeupdate', timeupdateHandler);\n      }, true);\n    }\n\n    Object.defineProperties(_assertThisInitialized(_this), {\n      /**\n       * @memberof TextTrack\n       * @member {boolean} default\n       *         If this track was set to be on or off by default. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n      \"default\": {\n        get: function get() {\n          return default_;\n        },\n        set: function set() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {string} mode\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n       *         not be set if setting to an invalid mode.\n       * @instance\n       *\n       * @fires TextTrack#modechange\n       */\n      mode: {\n        get: function get() {\n          return mode;\n        },\n        set: function set(newMode) {\n          var _this2 = this;\n\n          if (!TextTrackMode[newMode]) {\n            return;\n          }\n\n          mode = newMode;\n\n          if (mode !== 'disabled') {\n            this.tech_.ready(function () {\n              _this2.tech_.on('timeupdate', timeupdateHandler);\n            }, true);\n          } else {\n            this.tech_.off('timeupdate', timeupdateHandler);\n          }\n          /**\n           * An event that fires when mode changes on this track. This allows\n           * the TextTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event TextTrack#modechange\n           * @type {EventTarget~Event}\n           */\n\n\n          this.trigger('modechange');\n        }\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} cues\n       *         The text track cue list for this TextTrack.\n       * @instance\n       */\n      cues: {\n        get: function get() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          return cues;\n        },\n        set: function set() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} activeCues\n       *         The list text track cues that are currently active for this TextTrack.\n       * @instance\n       */\n      activeCues: {\n        get: function get() {\n          if (!this.loaded_) {\n            return null;\n          } // nothing to do\n\n\n          if (this.cues.length === 0) {\n            return activeCues;\n          }\n\n          var ct = this.tech_.currentTime();\n          var active = [];\n\n          for (var i = 0, l = this.cues.length; i < l; i++) {\n            var cue = this.cues[i];\n\n            if (cue.startTime <= ct && cue.endTime >= ct) {\n              active.push(cue);\n            } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n              active.push(cue);\n            }\n          }\n\n          changed = false;\n\n          if (active.length !== this.activeCues_.length) {\n            changed = true;\n          } else {\n            for (var _i = 0; _i < active.length; _i++) {\n              if (this.activeCues_.indexOf(active[_i]) === -1) {\n                changed = true;\n              }\n            }\n          }\n\n          this.activeCues_ = active;\n          activeCues.setCues_(this.activeCues_);\n          return activeCues;\n        },\n        // /!\\ Keep this setter empty (see the timeupdate handler above)\n        set: function set() {}\n      }\n    });\n\n    if (settings.src) {\n      _this.src = settings.src;\n      loadTrack(settings.src, _assertThisInitialized(_this));\n    } else {\n      _this.loaded_ = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n\n\n  var _proto = TextTrack.prototype;\n\n  _proto.addCue = function addCue(originalCue) {\n    var cue = originalCue;\n\n    if (window$1.vttjs && !(originalCue instanceof window$1.vttjs.VTTCue)) {\n      cue = new window$1.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n\n      for (var prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      } // make sure that `id` is copied over\n\n\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n\n    var tracks = this.tech_.textTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  }\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n  ;\n\n  _proto.removeCue = function removeCue(_removeCue) {\n    var i = this.cues_.length;\n\n    while (i--) {\n      var cue = this.cues_[i];\n\n      if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  };\n\n  return TextTrack;\n}(Track);\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\n\n\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\n\nvar AudioTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(AudioTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n  function AudioTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var settings = mergeOptions(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n    _this = _Track.call(this, settings) || this;\n    var enabled = false;\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'enabled', {\n      get: function get() {\n        return enabled;\n      },\n      set: function set(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n\n        enabled = newEnabled;\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('enabledchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.enabled) {\n      _this.enabled = settings.enabled;\n    }\n\n    _this.loaded_ = true;\n    return _this;\n  }\n\n  return AudioTrack;\n}(Track);\n\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\n\nvar VideoTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(VideoTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n  function VideoTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var settings = mergeOptions(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n    _this = _Track.call(this, settings) || this;\n    var selected = false;\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'selected', {\n      get: function get() {\n        return selected;\n      },\n      set: function set(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n\n        selected = newSelected;\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('selectedchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.selected) {\n      _this.selected = settings.selected;\n    }\n\n    return _this;\n  }\n\n  return VideoTrack;\n}(Track);\n\n/**\n * @memberof HTMLTrackElement\n * @typedef {HTMLTrackElement~ReadyState}\n * @enum {number}\n */\n\nvar NONE = 0;\nvar LOADING = 1;\nvar LOADED = 2;\nvar ERROR = 3;\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\n\nvar HTMLTrackElement =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(HTMLTrackElement, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function HTMLTrackElement(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    var readyState;\n    var track = new TextTrack(options);\n    _this.kind = track.kind;\n    _this.src = track.src;\n    _this.srclang = track.language;\n    _this.label = track.label;\n    _this[\"default\"] = track[\"default\"];\n    Object.defineProperties(_assertThisInitialized(_this), {\n      /**\n       * @memberof HTMLTrackElement\n       * @member {HTMLTrackElement~ReadyState} readyState\n       *         The current ready state of the track element.\n       * @instance\n       */\n      readyState: {\n        get: function get() {\n          return readyState;\n        }\n      },\n\n      /**\n       * @memberof HTMLTrackElement\n       * @member {TextTrack} track\n       *         The underlying TextTrack object.\n       * @instance\n       *\n       */\n      track: {\n        get: function get() {\n          return track;\n        }\n      }\n    });\n    readyState = NONE;\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n\n    track.addEventListener('loadeddata', function () {\n      readyState = LOADED;\n\n      _this.trigger({\n        type: 'load',\n        target: _assertThisInitialized(_this)\n      });\n    });\n    return _this;\n  }\n\n  return HTMLTrackElement;\n}(EventTarget);\n\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\nHTMLTrackElement.NONE = NONE;\nHTMLTrackElement.LOADING = LOADING;\nHTMLTrackElement.LOADED = LOADED;\nHTMLTrackElement.ERROR = ERROR;\n\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nvar NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = type + \"Tracks\";\n  NORMAL[type].privateName = type + \"Tracks_\";\n});\nvar REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\nvar ALL = mergeOptions(NORMAL, REMOTE);\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\n\nfunction createTrackHelper(self, kind, label, language, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var tracks = self.textTracks();\n  options.kind = kind;\n\n  if (label) {\n    options.label = label;\n  }\n\n  if (language) {\n    options.language = language;\n  }\n\n  options.tech = self;\n  var track = new ALL.text.TrackClass(options);\n  tracks.addTrack(track);\n  return track;\n}\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link Flash} and {@link HTML5}\n *\n * @extends Component\n */\n\n\nvar Tech =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Tech, _Component);\n\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} ready\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  function Tech(options, ready) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (ready === void 0) {\n      ready = function ready() {};\n    }\n\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n    _this = _Component.call(this, null, options, ready) || this; // keep track of whether the current source has played at all to\n    // implement a very limited played()\n\n    _this.hasStarted_ = false;\n\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      if (options && options[props.getterName]) {\n        _this[props.privateName] = options[props.getterName];\n      }\n    }); // Manually track progress in cases where the browser/flash player doesn't report it.\n\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    } // Manually track timeupdates in cases where the browser/flash player doesn't report it.\n\n\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options[\"native\" + track + \"Tracks\"] === false) {\n        _this[\"featuresNative\" + track + \"Tracks\"] = false;\n      }\n    });\n\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      _this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      _this.featuresNativeTextTracks = true;\n    }\n\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n\n    _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n\n    _this.initTrackListeners(); // Turn on component tap events only if not using native controls\n\n\n    if (!options.nativeControlsForTouch) {\n      _this.emitTapEvents();\n    }\n\n    if (_this.constructor) {\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\n    }\n\n    return _this;\n  }\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n\n\n  var _proto = Tech.prototype;\n\n  _proto.triggerSourceset = function triggerSourceset(src) {\n    var _this2 = this;\n\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', function () {\n        return _this2.setTimeout(function () {\n          return _this2.triggerSourceset(src);\n        }, 1);\n      });\n    }\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger({\n      src: src,\n      type: 'sourceset'\n    });\n  }\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n  ;\n\n  _proto.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange);\n    this.manualProgress = true; // Trigger progress watching when a source begins loading\n\n    this.one('ready', this.trackProgress);\n  }\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n  ;\n\n  _proto.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n    this.off('durationchange', this.onDurationChange);\n  }\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n  ;\n\n  _proto.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n      var numBufferedPercent = this.bufferedPercent();\n\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n\n      this.bufferedPercent_ = numBufferedPercent;\n\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  }\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n  ;\n\n  _proto.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  }\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n  ;\n\n  _proto.buffered = function buffered() {\n    return createTimeRanges(0, 0);\n  }\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n  ;\n\n  _proto.bufferedPercent = function bufferedPercent$1() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  }\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n  ;\n\n  _proto.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  }\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n  ;\n\n  _proto.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n    this.on('play', this.trackCurrentTime);\n    this.on('pause', this.stopTrackingCurrentTime);\n  }\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n  ;\n\n  _proto.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime);\n    this.off('pause', this.stopTrackingCurrentTime);\n  }\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n  ;\n\n  _proto.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      }); // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  }\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n  ;\n\n  _proto.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval); // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n\n    this.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n  }\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names); // Turn off any manual progress or timeupdate tracking\n\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n  ;\n\n  _proto.clearTracks = function clearTracks(types) {\n    var _this3 = this;\n\n    types = [].concat(types); // clear out all tracks because we can't reuse them between techs\n\n    types.forEach(function (type) {\n      var list = _this3[type + \"Tracks\"]() || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n\n        if (type === 'text') {\n          _this3.removeRemoteTextTrack(track);\n        }\n\n        list.removeTrack(track);\n      }\n    });\n  }\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n  ;\n\n  _proto.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n\n    while (i--) {\n      var track = list[i];\n      this.removeRemoteTextTrack(track);\n    }\n  }\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.reset = function reset() {}\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n  ;\n\n  _proto.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n\n    return this.error_;\n  }\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks whether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n  ;\n\n  _proto.played = function played() {\n    if (this.hasStarted_) {\n      return createTimeRanges(0, 0);\n    }\n\n    return createTimeRanges();\n  }\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n    }\n  }\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n  ;\n\n  _proto.initTrackListeners = function initTrackListeners() {\n    var _this4 = this;\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n      *\n      * @event Tech#audiotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n      *\n      * @event Tech#videotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n      *\n      * @event Tech#texttrackchange\n      * @type {EventTarget~Event}\n      */\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n\n      var trackListChanges = function trackListChanges() {\n        _this4.trigger(name + \"trackchange\");\n      };\n\n      var tracks = _this4[props.getterName]();\n\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n\n      _this4.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  }\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n  ;\n\n  _proto.addWebVttScript_ = function addWebVttScript_() {\n    var _this5 = this;\n\n    if (window$1.WebVTT) {\n      return;\n    } // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n\n\n    if (document.body.contains(this.el())) {\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      } // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n\n\n      var script = document.createElement('script');\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n\n      script.onload = function () {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjsloaded');\n      };\n\n      script.onerror = function () {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjserror');\n      };\n\n      this.on('dispose', function () {\n        script.onload = null;\n        script.onerror = null;\n      }); // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n\n      window$1.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  }\n  /**\n   * Emulate texttracks\n   *\n   */\n  ;\n\n  _proto.emulateTextTracks = function emulateTextTracks() {\n    var _this6 = this;\n\n    var tracks = this.textTracks();\n    var remoteTracks = this.remoteTextTracks();\n\n    var handleAddTrack = function handleAddTrack(e) {\n      return tracks.addTrack(e.track);\n    };\n\n    var handleRemoveTrack = function handleRemoveTrack(e) {\n      return tracks.removeTrack(e.track);\n    };\n\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n    this.addWebVttScript_();\n\n    var updateDisplay = function updateDisplay() {\n      return _this6.trigger('texttrackchange');\n    };\n\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  }\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n\n    return createTrackHelper(this, kind, label, language);\n  }\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  ;\n\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = mergeOptions(options, {\n      tech: this\n    });\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  }\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var _this7 = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      log.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n      manualCleanup = true;\n    } // store HTMLTrackElement and TextTrack to remote list\n\n\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(function () {\n        return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\n      });\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track); // remove HTMLTrackElement and TextTrack from remote list\n\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return {};\n  }\n  /**\n   * Attempt to create a floating video window always on top of other windows\n   * so that users may continue consuming media while they interact with other\n   * content sites, or applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise|undefined}\n   *         A promise with a Picture-in-Picture window if the browser supports\n   *         Promises (or one was passed in as an option). It returns undefined\n   *         otherwise.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      return PromiseClass.reject();\n    }\n  }\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.setPoster = function setPoster() {}\n  /**\n   * A method to check for the presence of the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.playsinline = function playsinline() {}\n  /**\n   * A method to set or unset the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.setPlaysinline = function setPlaysinline() {}\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks() {}\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks() {}\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.canPlayType = function canPlayType() {\n    return '';\n  }\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n  ;\n\n  Tech.canPlayType = function canPlayType() {\n    return '';\n  }\n  /**\n   * Check if the tech can support the given source\n   *\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n  ;\n\n  Tech.canPlaySource = function canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  }\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n  ;\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  }\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n  ;\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n\n    if (!Tech.isTech(tech)) {\n      throw new Error(\"Tech \" + name + \" must be a Tech\");\n    }\n\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n\n    name = toTitleCase(name);\n    Tech.techs_[name] = tech;\n\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n\n    return tech;\n  }\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requested.\n   */\n  ;\n\n  Tech.getTech = function getTech(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n\n    if (window$1 && window$1.videojs && window$1.videojs[name]) {\n      log.warn(\"The \" + name + \" tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)\");\n      return window$1.videojs[name];\n    }\n  };\n\n  return Tech;\n}(Component);\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresVolumeControl = true;\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default\n */\n\nTech.prototype.featuresMuteControl = true;\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresFullscreenResize = false;\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresPlaybackRate = false;\n/**\n * Boolean indicating whether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresProgressEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresSourceset = false;\n/**\n * Boolean indicating whether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresTimeupdateEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresNativeTextTracks = false;\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\n\nTech.withSourceHandlers = function (_Tech) {\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n\n    handlers.splice(index, 0, handler);\n  };\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n\n      if (can) {\n        return can;\n      }\n    }\n\n    return '';\n  };\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n\n\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n\n      if (can) {\n        return handlers[i];\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n\n    return '';\n  };\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n\n\n  var deferrable = ['seekable', 'seeking', 'duration'];\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log.error('No source handler found for the current source.');\n      }\n    } // Dispose any existing source handler\n\n\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler);\n\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.one('dispose', this.disposeSourceHandler);\n  };\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n\n\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    } // always clean up auto-text tracks\n\n\n    this.cleanupAutoTextTracks();\n\n    if (this.sourceHandler_) {\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n\n      this.sourceHandler_ = null;\n    }\n  };\n}; // The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\n\n\nComponent.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\n\nTech.defaultTechOrder_ = [];\n\n/**\n * @file middleware.js\n * @module middleware\n */\nvar middlewares = {};\nvar middlewareInstances = {};\nvar TERMINATOR = {};\n/**\n * A middleware object is a plain JavaScript object that has methods that\n * match the {@link Tech} methods found in the lists of allowed\n * {@link module:middleware.allowedGetters|getters},\n * {@link module:middleware.allowedSetters|setters}, and\n * {@link module:middleware.allowedMediators|mediators}.\n *\n * @typedef {Object} MiddlewareObject\n */\n\n/**\n * A middleware factory function that should return a\n * {@link module:middleware~MiddlewareObject|MiddlewareObject}.\n *\n * This factory will be called for each player when needed, with the player\n * passed in as an argument.\n *\n * @callback MiddlewareFactory\n * @param {Player} player\n *        A Video.js player.\n */\n\n/**\n * Define a middleware that the player should use by way of a factory function\n * that returns a middleware object.\n *\n * @param  {string} type\n *         The MIME type to match or `\"*\"` for all MIME types.\n *\n * @param  {MiddlewareFactory} middleware\n *         A middleware factory function that will be executed for\n *         matching types.\n */\n\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n/**\n * Asynchronously sets a source using middleware by recursing through any\n * matching middlewares and calling `setSource` on each, passing along the\n * previous returned value each time.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n *\n * @param  {Tech~SourceObject} src\n *         A source object.\n *\n * @param  {Function}\n *         The next middleware to run.\n */\n\nfunction setSource(player, src, next) {\n  player.setTimeout(function () {\n    return setSourceHelper(src, middlewares[src.type], next, player);\n  }, 1);\n}\n/**\n * When the tech is set, passes the tech to each middleware's `setTech` method.\n *\n * @param {Object[]} middleware\n *        An array of middleware instances.\n *\n * @param {Tech} tech\n *        A Video.js tech.\n */\n\nfunction setTech(middleware, tech) {\n  middleware.forEach(function (mw) {\n    return mw.setTech && mw.setTech(tech);\n  });\n}\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @return {Mixed}\n *         The final value from the tech after middleware has intercepted it.\n */\n\nfunction get(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middleware from left to right to the tech.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`.\n */\n\nfunction set(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n/**\n * Takes the argument given to the player and calls the `call` version of the\n * method on each middleware from left to right.\n *\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`, regardless of the\n *         return values of middlewares.\n */\n\nfunction mediate(middleware, tech, method, arg) {\n  if (arg === void 0) {\n    arg = null;\n  }\n\n  var callMethod = 'call' + toTitleCase(method);\n  var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  var terminated = middlewareValue === TERMINATOR; // deprecated. The `null` return value should instead return TERMINATOR to\n  // prevent confusion if a techs method actually returns null.\n\n  var returnValue = terminated ? null : tech[method](middlewareValue);\n  executeRight(middleware, method, returnValue, terminated);\n  return returnValue;\n}\n/**\n * Enumeration of allowed getters where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  seekable: 1,\n  played: 1,\n  paused: 1,\n  volume: 1\n};\n/**\n * Enumeration of allowed setters where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedSetters = {\n  setCurrentTime: 1,\n  setVolume: 1\n};\n/**\n * Enumeration of allowed mediators where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedMediators = {\n  play: 1,\n  pause: 1\n};\n\nfunction middlewareIterator(method) {\n  return function (value, mw) {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n\n    if (mw[method]) {\n      return mw[method](value);\n    }\n\n    return value;\n  };\n}\n\nfunction executeRight(mws, method, value, terminated) {\n  for (var i = mws.length - 1; i >= 0; i--) {\n    var mw = mws[i];\n\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n/**\n * Clear the middleware cache for a player.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n */\n\n\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n *\n * @private\n */\n\nfunction getOrCreateFactory(player, mwFactory) {\n  var mws = middlewareInstances[player.id()];\n  var mw = null;\n\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n\n  for (var i = 0; i < mws.length; i++) {\n    var _mws$i = mws[i],\n        mwf = _mws$i[0],\n        mwi = _mws$i[1];\n\n    if (mwf !== mwFactory) {\n      continue;\n    }\n\n    mw = mwi;\n  }\n\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n\n  return mw;\n}\n\nfunction setSourceHelper(src, middleware, next, player, acc, lastRun) {\n  if (src === void 0) {\n    src = {};\n  }\n\n  if (middleware === void 0) {\n    middleware = [];\n  }\n\n  if (acc === void 0) {\n    acc = [];\n  }\n\n  if (lastRun === void 0) {\n    lastRun = false;\n  }\n\n  var _middleware = middleware,\n      mwFactory = _middleware[0],\n      mwrest = _middleware.slice(1); // if mwFactory is a string, then we're at a fork in the road\n\n\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun); // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    var mw = getOrCreateFactory(player, mwFactory); // if setSource isn't present, implicitly select this middleware\n\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n\n    mw.setSource(assign({}, src), function (err, _src) {\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      } // we've succeeded, now we need to go deeper\n\n\n      acc.push(mw); // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n\n/**\n * Mimetypes\n *\n * @see http://hul.harvard.edu/ois/////systems/wax/wax-public-help/mimetypes.htm\n * @typedef Mimetypes~Kind\n * @enum\n */\n\nvar MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  m4a: 'audio/mp4',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  oga: 'audio/ogg',\n  m3u8: 'application/x-mpegURL',\n  jpg: 'image/jpeg',\n  jpeg: 'image/jpeg',\n  gif: 'image/gif',\n  png: 'image/png',\n  svg: 'image/svg+xml',\n  webp: 'image/webp'\n};\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\n\nvar getMimetype = function getMimetype(src) {\n  if (src === void 0) {\n    src = '';\n  }\n\n  var ext = getFileExtension(src);\n  var mimetype = MimetypesKind[ext.toLowerCase()];\n  return mimetype || '';\n};\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\n\nvar findMimetype = function findMimetype(player, src) {\n  if (!src) {\n    return '';\n  } // 1. check for the type in the `source` cache\n\n\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  } // 2. see if we have this source in our `currentSources` cache\n\n\n  var matchingSources = player.cache_.sources.filter(function (s) {\n    return s.src === src;\n  });\n\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  } // 3. look for the src url in source elements and use the type there\n\n\n  var sources = player.$$('source');\n\n  for (var i = 0; i < sources.length; i++) {\n    var s = sources[i];\n\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  } // 4. finally fallback to our list of mime types based on src url extension\n\n\n  return getMimetype(src);\n};\n\n/**\n * @module filter-source\n */\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\n\nvar filterSource = function filterSource(src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    var newsrc = [];\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({\n      src: src\n    })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n\n  return src;\n};\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\n\n\nfunction fixSource(src) {\n  var mimetype = getMimetype(src.src);\n\n  if (!src.type && mimetype) {\n    src.type = mimetype;\n  }\n\n  return src;\n}\n\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\n\nvar MediaLoader =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MediaLoader, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */\n  function MediaLoader(player, options, ready) {\n    var _this;\n\n    // MediaLoader has no element\n    var options_ = mergeOptions({\n      createEl: false\n    }, options);\n    _this = _Component.call(this, player, options_, ready) || this; // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        var techName = toTitleCase(j[i]);\n        var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n\n        if (!techName) {\n          tech = Component.getComponent(techName);\n        } // Check if the browser supports this technology\n\n\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (HTML5, Flash) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n\n    return _this;\n  }\n\n  return MediaLoader;\n}(Component);\n\nComponent.registerComponent('MediaLoader', MediaLoader);\n\n/**\n * Component which is clickable or keyboard actionable, but is not a\n * native HTML button.\n *\n * @extends Component\n */\n\nvar ClickableComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ClickableComponent, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ClickableComponent(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.emitTapEvents();\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `ClickableComponent`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  var _proto = ClickableComponent.prototype;\n\n  _proto.createEl = function createEl(tag, props, attributes) {\n    if (tag === void 0) {\n      tag = 'div';\n    }\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n\n    if (tag === 'button') {\n      log.error(\"Creating a ClickableComponent with an HTML element of \" + tag + \" is not supported; use a Button instead.\");\n    } // Add ARIA attributes for clickable element which is not a native HTML button\n\n\n    attributes = assign({\n      role: 'button'\n    }, attributes);\n    this.tabIndex_ = props.tabIndex;\n\n    var el = _Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    // remove controlTextEl_ on dispose\n    this.controlTextEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Create a control text element on this `ClickableComponent`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n  ;\n\n  _proto.createControlTextEl = function createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n\n    this.controlText(this.controlText_, el);\n    return this.controlTextEl_;\n  }\n  /**\n   * Get or set the localize text to use for the controls on the `ClickableComponent`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  ;\n\n  _proto.controlText = function controlText(text, el) {\n    if (el === void 0) {\n      el = this.el();\n    }\n\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n\n    var localizedText = this.localize(text);\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n\n    if (!this.nonIconControl) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-control vjs-button \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Enable this `ClickableComponent`\n   */\n  ;\n\n  _proto.enable = function enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n\n      this.on(['tap', 'click'], this.handleClick);\n      this.on('keydown', this.handleKeyDown);\n    }\n  }\n  /**\n   * Disable this `ClickableComponent`\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n\n    this.off(['tap', 'click'], this.handleClick);\n    this.off('keydown', this.handleKeyDown);\n  }\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `click` or `tap` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `tap` or `click` event that caused this function to be called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {}\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Space or Enter, it will trigger a `click` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Support Space or Enter key operation to fire a click event. Also,\n    // prevent the event from propagating through the DOM and triggering\n    // Player hotkeys.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      _Component.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  return ClickableComponent;\n}(Component);\n\nComponent.registerComponent('ClickableComponent', ClickableComponent);\n\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\n\nvar PosterImage =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(PosterImage, _ClickableComponent);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PosterImage(player, options) {\n    var _this;\n\n    _this = _ClickableComponent.call(this, player, options) || this;\n\n    _this.update();\n\n    player.on('posterchange', bind(_assertThisInitialized(_this), _this.update));\n    return _this;\n  }\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n\n\n  var _proto = PosterImage.prototype;\n\n  _proto.dispose = function dispose() {\n    this.player().off('posterchange', this.update);\n\n    _ClickableComponent.prototype.dispose.call(this);\n  }\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var el = createEl('div', {\n      className: 'vjs-poster',\n      // Don't want poster to be tabbable.\n      tabIndex: -1\n    });\n    return el;\n  }\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var url = this.player().poster();\n    this.setSrc(url); // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n  /**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {string} url\n   *        The URL to the source for the `PosterImage`.\n   */\n  ;\n\n  _proto.setSrc = function setSrc(url) {\n    var backgroundImage = ''; // Any falsy value should stay as an empty string, otherwise\n    // this will throw an extra error\n\n    if (url) {\n      backgroundImage = \"url(\\\"\" + url + \"\\\")\";\n    }\n\n    this.el_.style.backgroundImage = backgroundImage;\n  }\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n\n    if (this.player_.tech(true)) {\n      this.player_.tech(true).focus();\n    }\n\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  return PosterImage;\n}(ClickableComponent);\n\nComponent.registerComponent('PosterImage', PosterImage);\n\nvar darkGray = '#222';\nvar lightGray = '#ccc';\nvar fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\n\nfunction constructColor(color, opacity) {\n  var hex;\n\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\n\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n    // Satisfies linter.\n    return;\n  }\n}\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\n\n\nvar TextTrackDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TextTrackDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n  function TextTrackDisplay(player, options, ready) {\n    var _this;\n\n    _this = _Component.call(this, player, options, ready) || this;\n    var updateDisplayHandler = bind(_assertThisInitialized(_this), _this.updateDisplay);\n    player.on('loadstart', bind(_assertThisInitialized(_this), _this.toggleDisplay));\n    player.on('texttrackchange', updateDisplayHandler);\n    player.on('loadedmetadata', bind(_assertThisInitialized(_this), _this.preselectTrack)); // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n\n    player.ready(bind(_assertThisInitialized(_this), function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n\n      player.on('fullscreenchange', updateDisplayHandler);\n      player.on('playerresize', updateDisplayHandler);\n      window$1.addEventListener('orientationchange', updateDisplayHandler);\n      player.on('dispose', function () {\n        return window$1.removeEventListener('orientationchange', updateDisplayHandler);\n      });\n      var tracks = this.options_.playerOptions.tracks || [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n\n      this.preselectTrack();\n    }));\n    return _this;\n  }\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n\n\n  var _proto = TextTrackDisplay.prototype;\n\n  _proto.preselectTrack = function preselectTrack() {\n    var modes = {\n      captions: 1,\n      subtitles: 1\n    };\n    var trackList = this.player_.textTracks();\n    var userPref = this.player_.cache_.selectedLanguage;\n    var firstDesc;\n    var firstCaptions;\n    var preferredTrack;\n\n    for (var i = 0; i < trackList.length; i++) {\n      var track = trackList[i];\n\n      if (userPref && userPref.enabled && userPref.language && userPref.language === track.language && track.kind in modes) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track; // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        } // clear everything if offTextTrackMenuItem was clicked\n\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track[\"default\"]) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    } // The preferredTrack matches the user preference and takes\n    // precedence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n\n\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  }\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n  ;\n\n  _proto.toggleDisplay = function toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  }\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n  ;\n\n  _proto.clearDisplay = function clearDisplay() {\n    if (typeof window$1.WebVTT === 'function') {\n      window$1.WebVTT.processCues(window$1, [], this.el_);\n    }\n  }\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n  ;\n\n  _proto.updateDisplay = function updateDisplay() {\n    var tracks = this.player_.textTracks();\n    var allowMultipleShowingTracks = this.options_.allowMultipleShowingTracks;\n    this.clearDisplay();\n\n    if (allowMultipleShowingTracks) {\n      var showingTracks = [];\n\n      for (var _i = 0; _i < tracks.length; ++_i) {\n        var track = tracks[_i];\n\n        if (track.mode !== 'showing') {\n          continue;\n        }\n\n        showingTracks.push(track);\n      }\n\n      this.updateForTrack(showingTracks);\n      return;\n    } //  Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n\n    var descriptionsTrack = null;\n    var captionsSubtitlesTrack = null;\n    var i = tracks.length;\n\n    while (i--) {\n      var _track = tracks[i];\n\n      if (_track.mode === 'showing') {\n        if (_track.kind === 'descriptions') {\n          descriptionsTrack = _track;\n        } else {\n          captionsSubtitlesTrack = _track;\n        }\n      }\n    }\n\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n\n      this.updateForTrack(descriptionsTrack);\n    }\n  }\n  /**\n   * Style {@Link TextTrack} activeCues according to {@Link TextTrackSettings}.\n   *\n   * @param {TextTrack} track\n   *        Text track object containing active cues to style.\n   */\n  ;\n\n  _proto.updateDisplayState = function updateDisplayState(track) {\n    var overrides = this.player_.textTrackSettings.getValues();\n    var cues = track.activeCues;\n    var i = cues.length;\n\n    while (i--) {\n      var cue = cues[i];\n\n      if (!cue) {\n        continue;\n      }\n\n      var cueDiv = cue.displayState;\n\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = \"2px 2px 3px \" + darkGray + \", 2px 2px 4px \" + darkGray + \", 2px 2px 5px \" + darkGray;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + darkGray + \", 2px 2px \" + darkGray + \", 3px 3px \" + darkGray;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + lightGray + \", 0 1px \" + lightGray + \", -1px -1px \" + darkGray + \", 0 -1px \" + darkGray;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = \"0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray;\n        }\n      }\n\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        var fontSize = window$1.parseFloat(cueDiv.style.fontSize);\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n        cueDiv.style.bottom = '2px';\n      }\n\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  }\n  /**\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack|TextTrack[]} tracks\n   *        Text track object or text track array to be added to the list.\n   */\n  ;\n\n  _proto.updateForTrack = function updateForTrack(tracks) {\n    if (!Array.isArray(tracks)) {\n      tracks = [tracks];\n    }\n\n    if (typeof window$1.WebVTT !== 'function' || tracks.every(function (track) {\n      return !track.activeCues;\n    })) {\n      return;\n    }\n\n    var cues = []; // push all active track cues\n\n    for (var i = 0; i < tracks.length; ++i) {\n      var track = tracks[i];\n\n      for (var j = 0; j < track.activeCues.length; ++j) {\n        cues.push(track.activeCues[j]);\n      }\n    } // removes all cues before it processes new ones\n\n\n    window$1.WebVTT.processCues(window$1, cues, this.el_); // add unique class to each language text track & add settings styling if necessary\n\n    for (var _i2 = 0; _i2 < tracks.length; ++_i2) {\n      var _track2 = tracks[_i2];\n\n      for (var _j = 0; _j < _track2.activeCues.length; ++_j) {\n        var cueEl = _track2.activeCues[_j].displayState;\n        addClass(cueEl, 'vjs-text-track-cue');\n        addClass(cueEl, 'vjs-text-track-cue-' + (_track2.language ? _track2.language : _i2));\n      }\n\n      if (this.player_.textTrackSettings) {\n        this.updateDisplayState(_track2);\n      }\n    }\n  };\n\n  return TextTrackDisplay;\n}(Component);\n\nComponent.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\n\nvar LoadingSpinner =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LoadingSpinner, _Component);\n\n  function LoadingSpinner() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = LoadingSpinner.prototype;\n\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n  _proto.createEl = function createEl$1() {\n    var isAudio = this.player_.isAudio();\n    var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    var controlText = createEl('span', {\n      className: 'vjs-control-text',\n      innerHTML: this.localize('{1} is loading.', [playerType])\n    });\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n\n    el.appendChild(controlText);\n    return el;\n  };\n\n  return LoadingSpinner;\n}(Component);\n\nComponent.registerComponent('LoadingSpinner', LoadingSpinner);\n\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\n\nvar Button =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(Button, _ClickableComponent);\n\n  function Button() {\n    return _ClickableComponent.apply(this, arguments) || this;\n  }\n\n  var _proto = Button.prototype;\n\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  _proto.createEl = function createEl(tag, props, attributes) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    tag = 'button';\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass()\n    }, props); // Add attributes for button element\n\n    attributes = assign({\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n    var el = Component.prototype.createEl.call(this, tag, props, attributes);\n    this.createControlTextEl(el);\n    return el;\n  }\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n  ;\n\n  _proto.addChild = function addChild(child, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var className = this.constructor.name;\n    log.warn(\"Adding an actionable (user controllable) child to a Button (\" + className + \") is not supported; use a ClickableComponent instead.\"); // Avoid the error message generated by ClickableComponent's addChild method\n\n    return Component.prototype.addChild.call(this, child, options);\n  }\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n  ;\n\n  _proto.enable = function enable() {\n    _ClickableComponent.prototype.enable.call(this);\n\n    this.el_.removeAttribute('disabled');\n  }\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n  ;\n\n  _proto.disable = function disable() {\n    _ClickableComponent.prototype.disable.call(this);\n\n    this.el_.setAttribute('disabled', 'disabled');\n  }\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Ignore Space or Enter key operation, which is handled by the browser for\n    // a button - though not for its super class, ClickableComponent. Also,\n    // prevent the event from propagating through the DOM and triggering Player\n    // hotkeys. We do not preventDefault here because we _want_ the browser to\n    // handle it.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.stopPropagation();\n      return;\n    } // Pass keypress handling up for unsupported keys\n\n\n    _ClickableComponent.prototype.handleKeyDown.call(this, event);\n  };\n\n  return Button;\n}(ClickableComponent);\n\nComponent.registerComponent('Button', Button);\n\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\n\nvar BigPlayButton =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(BigPlayButton, _Button);\n\n  function BigPlayButton(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n    _this.mouseused_ = false;\n\n    _this.on('mousedown', _this.handleMouseDown);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n\n\n  var _proto = BigPlayButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-big-play-button';\n  }\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var playPromise = this.player_.play(); // exit early if clicked via the mouse\n\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      silencePromise(playPromise);\n\n      if (this.player_.tech(true)) {\n        this.player_.tech(true).focus();\n      }\n\n      return;\n    }\n\n    var cb = this.player_.getChild('controlBar');\n    var playToggle = cb && cb.getChild('playToggle');\n\n    if (!playToggle) {\n      this.player_.tech(true).focus();\n      return;\n    }\n\n    var playFocus = function playFocus() {\n      return playToggle.focus();\n    };\n\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, function () {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  };\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    this.mouseused_ = false;\n\n    _Button.prototype.handleKeyDown.call(this, event);\n  };\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    this.mouseused_ = true;\n  };\n\n  return BigPlayButton;\n}(Button);\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nBigPlayButton.prototype.controlText_ = 'Play Video';\nComponent.registerComponent('BigPlayButton', BigPlayButton);\n\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\n\nvar CloseButton =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(CloseButton, _Button);\n\n  /**\n  * Creates an instance of the this class.\n  *\n  * @param  {Player} player\n  *         The `Player` that this class should be attached to.\n  *\n  * @param  {Object} [options]\n  *         The key/value store of player options.\n  */\n  function CloseButton(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.controlText(options && options.controlText || _this.localize('Close'));\n\n    return _this;\n  }\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n\n\n  var _proto = CloseButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-close-button \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when\n   * this will be triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({\n      type: 'close',\n      bubbles: false\n    });\n  }\n  /**\n   * Event handler that is called when a `CloseButton` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Esc, it will trigger a `click` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Esc button will trigger `click` event\n    if (keycode.isEventKey(event, 'Esc')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      _Button.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  return CloseButton;\n}(Button);\n\nComponent.registerComponent('CloseButton', CloseButton);\n\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\n\nvar PlayToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(PlayToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function PlayToggle(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Button.call(this, player, options) || this; // show or hide replay icon\n\n    options.replay = options.replay === undefined || options.replay;\n\n    _this.on(player, 'play', _this.handlePlay);\n\n    _this.on(player, 'pause', _this.handlePause);\n\n    if (options.replay) {\n      _this.on(player, 'ended', _this.handleEnded);\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = PlayToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-play-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n\n    event.stopPropagation();\n  }\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n  ;\n\n  _proto.handleSeeked = function handleSeeked(event) {\n    this.removeClass('vjs-ended');\n\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  }\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n  ;\n\n  _proto.handlePlay = function handlePlay(event) {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // change the button text to \"Pause\"\n\n    this.controlText('Pause');\n  }\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n  ;\n\n  _proto.handlePause = function handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused'); // change the button text to \"Play\"\n\n    this.controlText('Play');\n  }\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended'); // change the button text to \"Replay\"\n\n    this.controlText('Replay'); // on the next seek remove the replay button\n\n    this.one(this.player_, 'seeked', this.handleSeeked);\n  };\n\n  return PlayToggle;\n}(Button);\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlayToggle.prototype.controlText_ = 'Play';\nComponent.registerComponent('PlayToggle', PlayToggle);\n\n/**\n * @file format-time.js\n * @module format-time\n */\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in\n * seconds) will force a number of leading zeros to cover the length of the\n * guide.\n *\n * @private\n * @param  {number} seconds\n *         Number of seconds to be turned into a string\n *\n * @param  {number} guide\n *         Number (in seconds) to model the string after\n *\n * @return {string}\n *         Time formatted as H:MM:SS or M:SS\n */\nvar defaultImplementation = function defaultImplementation(seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600); // handle invalid times\n\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  } // Check if we need to show hours\n\n\n  h = h > 0 || gh > 0 ? h + ':' : ''; // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':'; // Check if leading zero is need for seconds\n\n  s = s < 10 ? '0' + s : s;\n  return h + m + s;\n}; // Internal pointer to the current implementation.\n\n\nvar implementation = defaultImplementation;\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime\n *        implementation. Will receive the current time in seconds and the\n *        guide (in seconds) as arguments.\n */\n\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n/**\n * Resets formatTime to the default implementation.\n */\n\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n/**\n * Delegates to either the default time formatting function or a custom\n * function supplied via `setFormatTime`.\n *\n * Formats seconds as a time string (H:MM:SS or M:SS). Supplying a\n * guide (in seconds) will force a number of leading zeros to cover the\n * length of the guide.\n *\n * @static\n * @example  formatTime(125, 600) === \"02:05\"\n * @param    {number} seconds\n *           Number of seconds to be turned into a string\n *\n * @param    {number} guide\n *           Number (in seconds) to model the string after\n *\n * @return   {string}\n *           Time formatted as H:MM:SS or M:SS\n */\n\nfunction formatTime(seconds, guide) {\n  if (guide === void 0) {\n    guide = seconds;\n  }\n\n  return implementation(seconds, guide);\n}\n\n/**\n * Displays time information about the video\n *\n * @extends Component\n */\n\nvar TimeDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TimeDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.throttledUpdateContent = throttle(bind(_assertThisInitialized(_this), _this.updateContent), 25);\n\n    _this.on(player, 'timeupdate', _this.throttledUpdateContent);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = TimeDisplay.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var className = this.buildCSSClass();\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: className + \" vjs-time-control vjs-control\",\n      innerHTML: \"<span class=\\\"vjs-control-text\\\" role=\\\"presentation\\\">\" + this.localize(this.labelText_) + \"\\xA0</span>\"\n    });\n\n    this.contentEl_ = createEl('span', {\n      className: className + \"-display\"\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off',\n      // span elements have no implicit role, but some screen readers (notably VoiceOver)\n      // treat them as a break between items in the DOM when using arrow keys\n      // (or left-to-right swipes on iOS) to read contents of a page. Using\n      // role='presentation' causes VoiceOver to NOT treat this span as a break.\n      'role': 'presentation'\n    });\n    this.updateTextNode_();\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Updates the \"remaining time\" text node with new content using the\n   * contents of the `formattedTime_` property.\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateTextNode_ = function updateTextNode_() {\n    if (!this.contentEl_) {\n      return;\n    }\n\n    while (this.contentEl_.firstChild) {\n      this.contentEl_.removeChild(this.contentEl_.firstChild);\n    }\n\n    this.textNode_ = document.createTextNode(this.formattedTime_ || this.formatTime_(0));\n    this.contentEl_.appendChild(this.textNode_);\n  }\n  /**\n   * Generates a formatted time for this component to use in display.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n  ;\n\n  _proto.formatTime_ = function formatTime_(time) {\n    return formatTime(time);\n  }\n  /**\n   * Updates the time display text node if it has what was passed in changed\n   * the formatted time.\n   *\n   * @param {number} time\n   *        The time to update to\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateFormattedTime_ = function updateFormattedTime_(time) {\n    var formattedTime = this.formatTime_(time);\n\n    if (formattedTime === this.formattedTime_) {\n      return;\n    }\n\n    this.formattedTime_ = formattedTime;\n    this.requestAnimationFrame(this.updateTextNode_);\n  }\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {};\n\n  return TimeDisplay;\n}(Component);\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nTimeDisplay.prototype.labelText_ = 'Time';\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nTimeDisplay.prototype.controlText_ = 'Time';\nComponent.registerComponent('TimeDisplay', TimeDisplay);\n\n/**\n * Displays the current time\n *\n * @extends Component\n */\n\nvar CurrentTimeDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(CurrentTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CurrentTimeDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this;\n\n    _this.on(player, 'ended', _this.handleEnded);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = CurrentTimeDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-current-time';\n  }\n  /**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    this.updateFormattedTime_(time);\n  }\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    this.updateFormattedTime_(this.player_.duration());\n  };\n\n  return CurrentTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\nComponent.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n/**\n * Displays the duration\n *\n * @extends Component\n */\n\nvar DurationDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(DurationDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function DurationDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this; // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n\n    _this.on(player, 'durationchange', _this.updateContent); // Listen to loadstart because the player duration is reset when a new media element is loaded,\n    // but the durationchange on the user agent will not fire.\n    // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n\n    _this.on(player, 'loadstart', _this.updateContent); // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n\n\n    _this.on(player, 'loadedmetadata', _this.throttledUpdateContent);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = DurationDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-duration';\n  }\n  /**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    var duration = this.player_.duration();\n\n    if (this.duration_ !== duration) {\n      this.duration_ = duration;\n      this.updateFormattedTime_(duration);\n    }\n  };\n\n  return DurationDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nDurationDisplay.prototype.labelText_ = 'Duration';\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nDurationDisplay.prototype.controlText_ = 'Duration';\nComponent.registerComponent('DurationDisplay', DurationDisplay);\n\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\n\nvar TimeDivider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeDivider, _Component);\n\n  function TimeDivider() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = TimeDivider.prototype;\n\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-control vjs-time-divider',\n      innerHTML: '<div><span>/</span></div>'\n    }, {\n      // this element and its contents can be hidden from assistive techs since\n      // it is made extraneous by the announcement of the control text\n      // for the current time and duration displays\n      'aria-hidden': true\n    });\n  };\n\n  return TimeDivider;\n}(Component);\n\nComponent.registerComponent('TimeDivider', TimeDivider);\n\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar RemainingTimeDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(RemainingTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function RemainingTimeDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this;\n\n    _this.on(player, 'durationchange', _this.throttledUpdateContent);\n\n    _this.on(player, 'ended', _this.handleEnded);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = RemainingTimeDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-remaining-time';\n  }\n  /**\n   * Create the `Component`'s DOM element with the \"minus\" characted prepend to the time\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var el = _TimeDisplay.prototype.createEl.call(this);\n\n    el.insertBefore(createEl('span', {}, {\n      'aria-hidden': true\n    }, '-'), this.contentEl_);\n    return el;\n  }\n  /**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    if (typeof this.player_.duration() !== 'number') {\n      return;\n    } // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n\n\n    if (this.player_.remainingTimeDisplay) {\n      this.updateFormattedTime_(this.player_.remainingTimeDisplay());\n    } else {\n      this.updateFormattedTime_(this.player_.remainingTime());\n    }\n  }\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    this.updateFormattedTime_(0);\n  };\n\n  return RemainingTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\nComponent.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar LiveDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LiveDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LiveDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.updateShowing();\n\n    _this.on(_this.player(), 'durationchange', _this.updateShowing);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = LiveDisplay.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-live-control vjs-control'\n    });\n\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display',\n      innerHTML: \"<span class=\\\"vjs-control-text\\\">\" + this.localize('Stream Type') + \"\\xA0</span>\" + this.localize('LIVE')\n    }, {\n      'aria-live': 'off'\n    });\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n  ;\n\n  _proto.updateShowing = function updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  return LiveDisplay;\n}(Component);\n\nComponent.registerComponent('LiveDisplay', LiveDisplay);\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar SeekToLive =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(SeekToLive, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekToLive(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.updateLiveEdgeStatus();\n\n    if (_this.player_.liveTracker) {\n      _this.on(_this.player_.liveTracker, 'liveedgechange', _this.updateLiveEdgeStatus);\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = SeekToLive.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _Button.prototype.createEl.call(this, 'button', {\n      className: 'vjs-seek-to-live-control vjs-control'\n    });\n\n    this.textEl_ = createEl('span', {\n      className: 'vjs-seek-to-live-text',\n      innerHTML: this.localize('LIVE')\n    }, {\n      'aria-hidden': 'true'\n    });\n    el.appendChild(this.textEl_);\n    return el;\n  }\n  /**\n   * Update the state of this button if we are at the live edge\n   * or not\n   */\n  ;\n\n  _proto.updateLiveEdgeStatus = function updateLiveEdgeStatus(e) {\n    // default to live edge\n    if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {\n      this.setAttribute('aria-disabled', true);\n      this.addClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently playing live');\n    } else {\n      this.setAttribute('aria-disabled', false);\n      this.removeClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently behind live');\n    }\n  }\n  /**\n   * On click bring us as near to the live point as possible.\n   * This requires that we wait for the next `live-seekable-change`\n   * event which will happen every segment length seconds.\n   */\n  ;\n\n  _proto.handleClick = function handleClick() {\n    this.player_.liveTracker.seekToLiveEdge();\n  }\n  /**\n   * Dispose of the element and stop tracking\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatus);\n    }\n\n    this.textEl_ = null;\n\n    _Button.prototype.dispose.call(this);\n  };\n\n  return SeekToLive;\n}(Button);\n\nSeekToLive.prototype.controlText_ = 'Seek to live, currently playing live';\nComponent.registerComponent('SeekToLive', SeekToLive);\n\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\n\nvar Slider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Slider, _Component);\n\n  /**\n  * Create an instance of this class\n  *\n  * @param {Player} player\n  *        The `Player` that this class should be attached to.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  */\n  function Slider(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this; // Set property names to bar to match with the child Slider class is looking for\n\n    _this.bar = _this.getChild(_this.options_.barName); // Set a horizontal or vertical class on the slider depending on the slider type\n\n    _this.vertical(!!_this.options_.vertical);\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  var _proto = Slider.prototype;\n\n  _proto.enabled = function enabled() {\n    return this.enabled_;\n  }\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n  ;\n\n  _proto.enable = function enable() {\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on('mousedown', this.handleMouseDown);\n    this.on('touchstart', this.handleMouseDown);\n    this.on('keydown', this.handleKeyDown);\n    this.on('click', this.handleClick);\n    this.on(this.player_, 'controlsvisible', this.update);\n\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n    this.enabled_ = true;\n  }\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n  ;\n\n  _proto.disable = function disable() {\n    if (!this.enabled()) {\n      return;\n    }\n\n    var doc = this.bar.el_.ownerDocument;\n    this.off('mousedown', this.handleMouseDown);\n    this.off('touchstart', this.handleMouseDown);\n    this.off('keydown', this.handleKeyDown);\n    this.off('click', this.handleClick);\n    this.off(this.player_, 'controlsvisible', this.update);\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.removeAttribute('tabindex');\n    this.addClass('disabled');\n\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n\n    this.enabled_ = false;\n  }\n  /**\n   * Create the `Slider`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl(type, props, attributes) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    // Add the slider element class to all sub classes\n    props.className = props.className + ' vjs-slider';\n    props = assign({\n      tabIndex: 0\n    }, props);\n    attributes = assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n      'tabIndex': 0\n    }, attributes);\n    return _Component.prototype.createEl.call(this, type, props, attributes);\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.bar.el_.ownerDocument;\n\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    } // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintented scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n\n\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n\n    blockTextSelection();\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('slideractive');\n    this.on(doc, 'mousemove', this.handleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchmove', this.handleMouseMove);\n    this.on(doc, 'touchend', this.handleMouseUp);\n    this.handleMouseMove(event);\n  }\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {}\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp() {\n    var doc = this.bar.el_.ownerDocument;\n    unblockTextSelection();\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('sliderinactive');\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.update();\n  }\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @return {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n  ;\n\n  _proto.update = function update() {\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    if (!this.el_) {\n      return;\n    } // If scrubbing, we could use a cached value to make the handle keep up\n    // with the user's mouse. On HTML5 browsers scrubbing is really smooth, but\n    // some flash players are slow, so we might want to utilize this later.\n    // var progress =  (this.player_.scrubbing()) ? this.player_.getCache().currentTime / this.player_.duration() : this.player_.currentTime() / this.player_.duration();\n\n\n    var progress = this.getPercent();\n    var bar = this.bar; // If there's no bar...\n\n    if (!bar) {\n      return;\n    } // Protect against no duration and other division issues\n\n\n    if (typeof progress !== 'number' || progress !== progress || progress < 0 || progress === Infinity) {\n      progress = 0;\n    } // Convert to a percentage for setting\n\n\n    var percentage = (progress * 100).toFixed(2) + '%';\n    var style = bar.el().style; // Set the new bar width or height\n\n    if (this.vertical()) {\n      style.height = percentage;\n    } else {\n      style.width = percentage;\n    }\n\n    return progress;\n  }\n  /**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - position.x for vertical `Slider`s\n   *         - position.y for horizontal `Slider`s\n   */\n  ;\n\n  _proto.calculateDistance = function calculateDistance(event) {\n    var position = getPointerPosition(this.el_, event);\n\n    if (this.vertical()) {\n      return position.y;\n    }\n\n    return position.x;\n  }\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack(); // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward();\n    } else {\n      // Pass keydown handling up for unsupported keys\n      _Component.prototype.handleKeyDown.call(this, event);\n    }\n  }\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n  ;\n\n  _proto.vertical = function vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n\n    this.vertical_ = !!bool;\n\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  };\n\n  return Slider;\n}(Component);\n\nComponent.registerComponent('Slider', Slider);\n\n/**\n * Shows loading progress\n *\n * @extends Component\n */\n\nvar LoadProgressBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LoadProgressBar, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LoadProgressBar(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.partEls_ = [];\n\n    _this.on(player, 'progress', _this.update);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = LoadProgressBar.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-load-progress',\n      innerHTML: \"<span class=\\\"vjs-control-text\\\"><span>\" + this.localize('Loaded') + \"</span>: <span class=\\\"vjs-control-text-loaded-percentage\\\">0%</span></span>\"\n    });\n  };\n\n  _proto.dispose = function dispose() {\n    this.partEls_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var liveTracker = this.player_.liveTracker;\n    var buffered = this.player_.buffered();\n    var duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : this.player_.duration();\n    var bufferedEnd = this.player_.bufferedEnd();\n    var children = this.partEls_;\n    var controlTextPercentage = this.$('.vjs-control-text-loaded-percentage'); // get the percent width of a time compared to the total end\n\n    var percentify = function percentify(time, end, rounded) {\n      // no NaN\n      var percent = time / end || 0;\n      percent = (percent >= 1 ? 1 : percent) * 100;\n\n      if (rounded) {\n        percent = percent.toFixed(2);\n      }\n\n      return percent + '%';\n    }; // update the width of the progress bar\n\n\n    this.el_.style.width = percentify(bufferedEnd, duration); // update the control-text\n\n    textContent(controlTextPercentage, percentify(bufferedEnd, duration, true)); // add child elements to represent the individual buffered time ranges\n\n    for (var i = 0; i < buffered.length; i++) {\n      var start = buffered.start(i);\n      var end = buffered.end(i);\n      var part = children[i];\n\n      if (!part) {\n        part = this.el_.appendChild(createEl());\n        children[i] = part;\n      } // set the percent based on the width of the progress bar (bufferedEnd)\n\n\n      part.style.left = percentify(start, bufferedEnd);\n      part.style.width = percentify(end - start, bufferedEnd);\n    } // remove unused buffered range elements\n\n\n    for (var _i = children.length; _i > buffered.length; _i--) {\n      this.el_.removeChild(children[_i - 1]);\n    }\n\n    children.length = buffered.length;\n  };\n\n  return LoadProgressBar;\n}(Component);\n\nComponent.registerComponent('LoadProgressBar', LoadProgressBar);\n\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\n\nvar TimeTooltip =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeTooltip, _Component);\n\n  function TimeTooltip() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = TimeTooltip.prototype;\n\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint, content) {\n    var tooltipRect = getBoundingClientRect(this.el_);\n    var playerRect = getBoundingClientRect(this.player_.el());\n    var seekBarPointPx = seekBarRect.width * seekBarPoint; // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n\n    if (!playerRect || !tooltipRect) {\n      return;\n    } // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n\n\n    var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx; // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n\n    var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right); // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n\n    var pullTooltipBy = tooltipRect.width / 2; // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    } // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n\n\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    this.el_.style.right = \"-\" + pullTooltipBy + \"px\";\n    this.write(content);\n  }\n  /**\n   * Write the time to the tooltip DOM element.\n   *\n   * @param {String} content\n   *        The formatted time for the tooltip.\n   */\n  ;\n\n  _proto.write = function write(content) {\n    textContent(this.el_, content);\n  }\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   *\n   * @param {number} time\n   *        The time to update the tooltip to, not used during live playback\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n  ;\n\n  _proto.updateTime = function updateTime(seekBarRect, seekBarPoint, time, cb) {\n    var _this = this;\n\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var content;\n\n      var duration = _this.player_.duration();\n\n      if (_this.player_.liveTracker && _this.player_.liveTracker.isLive()) {\n        var liveWindow = _this.player_.liveTracker.liveWindow();\n\n        var secondsBehind = liveWindow - seekBarPoint * liveWindow;\n        content = (secondsBehind < 1 ? '' : '-') + formatTime(secondsBehind, liveWindow);\n      } else {\n        content = formatTime(time, duration);\n      }\n\n      _this.update(seekBarRect, seekBarPoint, content);\n\n      if (cb) {\n        cb();\n      }\n    });\n  };\n\n  return TimeTooltip;\n}(Component);\n\nComponent.registerComponent('TimeTooltip', TimeTooltip);\n\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar PlayProgressBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(PlayProgressBar, _Component);\n\n  function PlayProgressBar() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = PlayProgressBar.prototype;\n\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-play-progress vjs-slider-bar'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint) {\n    var timeTooltip = this.getChild('timeTooltip');\n\n    if (!timeTooltip) {\n      return;\n    }\n\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    timeTooltip.updateTime(seekBarRect, seekBarPoint, time);\n  };\n\n  return PlayProgressBar;\n}(Component);\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\n\n\nPlayProgressBar.prototype.options_ = {\n  children: []\n}; // Time tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\n\nComponent.registerComponent('PlayProgressBar', PlayProgressBar);\n\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar MouseTimeDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MouseTimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MouseTimeDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), 25);\n    return _this;\n  }\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = MouseTimeDisplay.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  }\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    var time = seekBarPoint * this.player_.duration();\n    this.getChild('timeTooltip').updateTime(seekBarRect, seekBarPoint, time, function () {\n      _this2.el_.style.left = seekBarRect.width * seekBarPoint + \"px\";\n    });\n  };\n\n  return MouseTimeDisplay;\n}(Component);\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\n\n\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\nComponent.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\nvar STEP_SECONDS = 5; // The multiplier of STEP_SECONDS that PgUp/PgDown move the timeline.\n\nvar PAGE_KEY_MULTIPLIER = 12; // The interval at which the bar should update as it progresses.\n\nvar UPDATE_REFRESH_INTERVAL = 30;\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\n\nvar SeekBar =\n/*#__PURE__*/\nfunction (_Slider) {\n  _inheritsLoose(SeekBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekBar(player, options) {\n    var _this;\n\n    _this = _Slider.call(this, player, options) || this;\n\n    _this.setEventHandlers_();\n\n    return _this;\n  }\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n\n\n  var _proto = SeekBar.prototype;\n\n  _proto.setEventHandlers_ = function setEventHandlers_() {\n    this.update = throttle(bind(this, this.update), UPDATE_REFRESH_INTERVAL);\n    this.on(this.player_, 'timeupdate', this.update);\n    this.on(this.player_, 'ended', this.handleEnded);\n    this.on(this.player_, 'durationchange', this.update);\n\n    if (this.player_.liveTracker) {\n      this.on(this.player_.liveTracker, 'liveedgechange', this.update);\n    } // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n\n\n    this.updateInterval = null;\n    this.on(this.player_, ['playing'], this.enableInterval_);\n    this.on(this.player_, ['ended', 'pause', 'waiting'], this.disableInterval_); // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n\n    if ('hidden' in document && 'visibilityState' in document) {\n      this.on(document, 'visibilitychange', this.toggleVisibility_);\n    }\n  };\n\n  _proto.toggleVisibility_ = function toggleVisibility_(e) {\n    if (document.hidden) {\n      this.disableInterval_(e);\n    } else {\n      this.enableInterval_(); // we just switched back to the page and someone may be looking, so, update ASAP\n\n      this.requestAnimationFrame(this.update);\n    }\n  };\n\n  _proto.enableInterval_ = function enableInterval_() {\n    var _this2 = this;\n\n    this.clearInterval(this.updateInterval);\n    this.updateInterval = this.setInterval(function () {\n      _this2.requestAnimationFrame(_this2.update);\n    }, UPDATE_REFRESH_INTERVAL);\n  };\n\n  _proto.disableInterval_ = function disableInterval_(e) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive() && e.type !== 'ended') {\n      return;\n    }\n\n    this.clearInterval(this.updateInterval);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  }\n  /**\n   * This function updates the play progress bar and accessibility\n   * attributes to whatever is passed in.\n   *\n   * @param {number} currentTime\n   *        The currentTime value that should be used for accessibility\n   *\n   * @param {number} percent\n   *        The percentage as a decimal that the bar should be filled from 0-1.\n   *\n   * @private\n   */\n  ;\n\n  _proto.update_ = function update_(currentTime, percent) {\n    var liveTracker = this.player_.liveTracker;\n    var duration = this.player_.duration();\n\n    if (liveTracker && liveTracker.isLive()) {\n      duration = this.player_.liveTracker.liveCurrentTime();\n    } // machine readable value of progress bar (percentage complete)\n\n\n    this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2)); // human readable value of progress bar (time complete)\n\n    this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}')); // Update the `PlayProgressBar`.\n\n    if (this.bar) {\n      this.bar.update(getBoundingClientRect(this.el_), percent);\n    }\n  }\n  /**\n   * Update the seek bar's UI.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @return {number}\n   *          The current percent at a number from 0-1\n   */\n  ;\n\n  _proto.update = function update(event) {\n    // if the offsetParent is null, then this element is hidden, in which case\n    // we don't need to update it.\n    if (this.el().offsetParent === null) {\n      return;\n    }\n\n    var percent = _Slider.prototype.update.call(this);\n\n    this.update_(this.getCurrentTime_(), percent);\n    return percent;\n  }\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n  ;\n\n  _proto.getCurrentTime_ = function getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  }\n  /**\n   * We want the seek bar to be full on ended\n   * no matter what the actual internal values are. so we force it.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    this.update_(this.player_.duration(), 1);\n  }\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n  ;\n\n  _proto.getPercent = function getPercent() {\n    var currentTime = this.getCurrentTime_();\n    var percent;\n    var liveTracker = this.player_.liveTracker;\n\n    if (liveTracker && liveTracker.isLive()) {\n      percent = (currentTime - liveTracker.seekableStart()) / liveTracker.liveWindow(); // prevent the percent from changing at the live edge\n\n      if (liveTracker.atLiveEdge()) {\n        percent = 1;\n      }\n    } else {\n      percent = currentTime / this.player_.duration();\n    }\n\n    return percent >= 1 ? 1 : percent || 0;\n  }\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    } // Stop event propagation to prevent double fire in progress-control.js\n\n\n    event.stopPropagation();\n    this.player_.scrubbing(true);\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  }\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   *\n   * @listens mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    var newTime;\n    var distance = this.calculateDistance(event);\n    var liveTracker = this.player_.liveTracker;\n\n    if (!liveTracker || !liveTracker.isLive()) {\n      newTime = distance * this.player_.duration(); // Don't let video end while scrubbing.\n\n      if (newTime === this.player_.duration()) {\n        newTime = newTime - 0.1;\n      }\n    } else {\n      var seekableStart = liveTracker.seekableStart();\n      var seekableEnd = liveTracker.liveCurrentTime();\n      newTime = seekableStart + distance * liveTracker.liveWindow(); // Don't let video end while scrubbing.\n\n      if (newTime >= seekableEnd) {\n        newTime = seekableEnd;\n      } // Compensate for precision differences so that currentTime is not less\n      // than seekable start\n\n\n      if (newTime <= seekableStart) {\n        newTime = seekableStart + 0.1;\n      } // On android seekableEnd can be Infinity sometimes,\n      // this will cause newTime to be Infinity, which is\n      // not a valid currentTime.\n\n\n      if (newTime === Infinity) {\n        return;\n      }\n    } // Set new time (tell player to seek to new time)\n\n\n    this.player_.currentTime(newTime);\n  };\n\n  _proto.enable = function enable() {\n    _Slider.prototype.enable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.show();\n  };\n\n  _proto.disable = function disable() {\n    _Slider.prototype.disable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.hide();\n  }\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    _Slider.prototype.handleMouseUp.call(this, event); // Stop event propagation to prevent double fire in progress-control.js\n\n\n    if (event) {\n      event.stopPropagation();\n    }\n\n    this.player_.scrubbing(false);\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {EventTarget~Event}\n     */\n\n    this.player_.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    }\n  }\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS);\n  }\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS);\n  }\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n  ;\n\n  _proto.handleAction = function handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  }\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down.\n   * Supports the following keys:\n   *\n   *   Space or Enter key fire a click event\n   *   Home key moves to start of the timeline\n   *   End key moves to end of the timeline\n   *   Digit \"0\" through \"9\" keys move to 0%, 10% ... 80%, 90% of the timeline\n   *   PageDown key moves back a larger step than ArrowDown\n   *   PageUp key moves forward a large step\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.handleAction(event);\n    } else if (keycode.isEventKey(event, 'Home')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(0);\n    } else if (keycode.isEventKey(event, 'End')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(this.player_.duration());\n    } else if (/^[0-9]$/.test(keycode(event))) {\n      event.preventDefault();\n      event.stopPropagation();\n      var gotoFraction = (keycode.codes[keycode(event)] - keycode.codes['0']) * 10.0 / 100.0;\n      this.player_.currentTime(this.player_.duration() * gotoFraction);\n    } else if (keycode.isEventKey(event, 'PgDn')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else if (keycode.isEventKey(event, 'PgUp')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else {\n      // Pass keydown handling up for unsupported keys\n      _Slider.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  return SeekBar;\n}(Slider);\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\n\n\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n}; // MouseTimeDisplay tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\n\nComponent.registerComponent('SeekBar', SeekBar);\n\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\n\nvar ProgressControl =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ProgressControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ProgressControl(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.handleMouseMove = throttle(bind(_assertThisInitialized(_this), _this.handleMouseMove), 25);\n    _this.throttledHandleMouseSeek = throttle(bind(_assertThisInitialized(_this), _this.handleMouseSeek), 25);\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = ProgressControl.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  }\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n      var seekBarEl = seekBar.el();\n      var seekBarRect = getBoundingClientRect(seekBarEl);\n      var seekBarPoint = getPointerPosition(seekBarEl, event).x; // The default skin has a gap on either side of the `SeekBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `SeekBar`. This ensures we stay within it at all times.\n\n      if (seekBarPoint > 1) {\n        seekBarPoint = 1;\n      } else if (seekBarPoint < 0) {\n        seekBarPoint = 0;\n      }\n\n      if (mouseTimeDisplay) {\n        mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n      }\n    }\n  }\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  ;\n\n  _proto.handleMouseSeek = function handleMouseSeek(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  }\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n  ;\n\n  _proto.enabled = function enabled() {\n    return this.enabled_;\n  }\n  /**\n   * Disable all controls on the progress control and its children\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.children().forEach(function (child) {\n      return child.disable && child.disable();\n    });\n\n    if (!this.enabled()) {\n      return;\n    }\n\n    this.off(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.handleMouseUp();\n    this.addClass('disabled');\n    this.enabled_ = false;\n  }\n  /**\n   * Enable all controls on the progress control and its children\n   */\n  ;\n\n  _proto.enable = function enable() {\n    this.children().forEach(function (child) {\n      return child.enable && child.enable();\n    });\n\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n    this.enabled_ = true;\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  return ProgressControl;\n}(Component);\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\n\n\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\nComponent.registerComponent('ProgressControl', ProgressControl);\n\n/**\n * Toggle Picture-in-Picture mode\n *\n * @extends Button\n */\n\nvar PictureInPictureToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(PictureInPictureToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  function PictureInPictureToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.on(player, ['enterpictureinpicture', 'leavepictureinpicture'], _this.handlePictureInPictureChange); // TODO: Activate button on player loadedmetadata event.\n    // TODO: Deactivate button on player emptied event.\n    // TODO: Deactivate button if disablepictureinpicture attribute is present.\n\n\n    if (!document.pictureInPictureEnabled) {\n      _this.disable();\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = PictureInPictureToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-picture-in-picture-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Handles enterpictureinpicture and leavepictureinpicture on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#enterpictureinpicture} or {@link Player#leavepictureinpicture} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  ;\n\n  _proto.handlePictureInPictureChange = function handlePictureInPictureChange(event) {\n    if (this.player_.isInPictureInPicture()) {\n      this.controlText('Exit Picture-in-Picture');\n    } else {\n      this.controlText('Picture-in-Picture');\n    }\n  }\n  /**\n   * This gets called when an `PictureInPictureToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (!this.player_.isInPictureInPicture()) {\n      this.player_.requestPictureInPicture();\n    } else {\n      this.player_.exitPictureInPicture();\n    }\n  };\n\n  return PictureInPictureToggle;\n}(Button);\n/**\n * The text that should display over the `PictureInPictureToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPictureInPictureToggle.prototype.controlText_ = 'Picture-in-Picture';\nComponent.registerComponent('PictureInPictureToggle', PictureInPictureToggle);\n\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\n\nvar FullscreenToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(FullscreenToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function FullscreenToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.on(player, 'fullscreenchange', _this.handleFullscreenChange);\n\n    if (document[player.fsApi_.fullscreenEnabled] === false) {\n      _this.disable();\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = FullscreenToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-fullscreen-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n  ;\n\n  _proto.handleFullscreenChange = function handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Non-Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  }\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  };\n\n  return FullscreenToggle;\n}(Button);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\nComponent.registerComponent('FullscreenToggle', FullscreenToggle);\n\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkVolumeSupport = function checkVolumeSupport(self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * Shows volume level\n *\n * @extends Component\n */\n\nvar VolumeLevel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumeLevel, _Component);\n\n  function VolumeLevel() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = VolumeLevel.prototype;\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-level',\n      innerHTML: '<span class=\"vjs-control-text\"></span>'\n    });\n  };\n\n  return VolumeLevel;\n}(Component);\n\nComponent.registerComponent('VolumeLevel', VolumeLevel);\n\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\n\nvar VolumeBar =\n/*#__PURE__*/\nfunction (_Slider) {\n  _inheritsLoose(VolumeBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function VolumeBar(player, options) {\n    var _this;\n\n    _this = _Slider.call(this, player, options) || this;\n\n    _this.on('slideractive', _this.updateLastVolume_);\n\n    _this.on(player, 'volumechange', _this.updateARIAAttributes);\n\n    player.ready(function () {\n      return _this.updateARIAAttributes();\n    });\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeBar.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  }\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  }\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  }\n  /**\n   * If the player is muted unmute it.\n   */\n  ;\n\n  _proto.checkMuted = function checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  }\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n  ;\n\n  _proto.getPercent = function getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n\n    return this.player_.volume();\n  }\n  /**\n   * Increase volume level for keyboard users\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  }\n  /**\n   * Decrease volume level for keyboard users\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  }\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n  ;\n\n  _proto.updateARIAAttributes = function updateARIAAttributes(event) {\n    var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  }\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n  ;\n\n  _proto.volumeAsPercentage_ = function volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  }\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n  ;\n\n  _proto.updateLastVolume_ = function updateLastVolume_() {\n    var _this2 = this;\n\n    var volumeBeforeDrag = this.player_.volume();\n    this.one('sliderinactive', function () {\n      if (_this2.player_.volume() === 0) {\n        _this2.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  };\n\n  return VolumeBar;\n}(Slider);\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\n\nVolumeBar.prototype.playerEvent = 'volumechange';\nComponent.registerComponent('VolumeBar', VolumeBar);\n\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\n\nvar VolumeControl =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumeControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumeControl(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.vertical = options.vertical || false; // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n\n    _this = _Component.call(this, player, options) || this; // hide this control if volume support is missing\n\n    checkVolumeSupport(_assertThisInitialized(_this), player);\n    _this.throttledHandleMouseMove = throttle(bind(_assertThisInitialized(_this), _this.handleMouseMove), 25);\n\n    _this.on('mousedown', _this.handleMouseDown);\n\n    _this.on('touchstart', _this.handleMouseDown); // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\n      _this.volumeBar.addClass('vjs-slider-active');\n\n      _this.addClass('vjs-slider-active');\n\n      _this.trigger('slideractive');\n    });\n\n    _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\n      _this.volumeBar.removeClass('vjs-slider-active');\n\n      _this.removeClass('vjs-slider-active');\n\n      _this.trigger('sliderinactive');\n    });\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeControl.prototype;\n\n  _proto.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-horizontal';\n\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: \"vjs-volume-control vjs-control \" + orientationClass\n    });\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  };\n\n  return VolumeControl;\n}(Component);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\nComponent.registerComponent('VolumeControl', VolumeControl);\n\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param {Component} self\n *        A reference to the mute toggle button\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkMuteSupport = function checkMuteSupport(self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\n\nvar MuteToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(MuteToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MuteToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this; // hide this control if volume support is missing\n\n    checkMuteSupport(_assertThisInitialized(_this), player);\n\n    _this.on(player, ['loadstart', 'volumechange'], _this.update);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = MuteToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-mute-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var vol = this.player_.volume();\n    var lastVolume = this.player_.lastVolume_();\n\n    if (vol === 0) {\n      var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  }\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  }\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateIcon_ = function updateIcon_() {\n    var vol = this.player_.volume();\n    var level = 3; // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n\n    if (IS_IOS && this.player_.tech_ && this.player_.tech_.el_) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    } // TODO improve muted icon classes\n\n\n    for (var i = 0; i < 4; i++) {\n      removeClass(this.el_, \"vjs-vol-\" + i);\n    }\n\n    addClass(this.el_, \"vjs-vol-\" + level);\n  }\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateControlText_ = function updateControlText_() {\n    var soundOff = this.player_.muted() || this.player_.volume() === 0;\n    var text = soundOff ? 'Unmute' : 'Mute';\n\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  };\n\n  return MuteToggle;\n}(Button);\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nMuteToggle.prototype.controlText_ = 'Mute';\nComponent.registerComponent('MuteToggle', MuteToggle);\n\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\n\nvar VolumePanel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumePanel, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumePanel(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    } // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n\n\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.on(player, ['loadstart'], _this.volumePanelState_); // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\n\n    _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\n\n    return _this;\n  }\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n\n\n  var _proto = VolumePanel.prototype;\n\n  _proto.sliderActive_ = function sliderActive_() {\n    this.addClass('vjs-slider-active');\n  }\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n  ;\n\n  _proto.sliderInactive_ = function sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  }\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n  ;\n\n  _proto.volumePanelState_ = function volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    } // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n\n\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-panel-horizontal';\n\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: \"vjs-volume-panel vjs-control \" + orientationClass\n    });\n  };\n\n  return VolumePanel;\n}(Component);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\nComponent.registerComponent('VolumePanel', VolumePanel);\n\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\n\nvar Menu =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Menu, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n  function Menu(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    if (options) {\n      _this.menuButton_ = options.menuButton;\n    }\n\n    _this.focusedChild_ = -1;\n\n    _this.on('keydown', _this.handleKeyDown); // All the menu item instances share the same blur handler provided by the menu container.\n\n\n    _this.boundHandleBlur_ = bind(_assertThisInitialized(_this), _this.handleBlur);\n    _this.boundHandleTapClick_ = bind(_assertThisInitialized(_this), _this.handleTapClick);\n    return _this;\n  }\n  /**\n   * Add event listeners to the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to add listeners to.\n   *\n   */\n\n\n  var _proto = Menu.prototype;\n\n  _proto.addEventListenerForItem = function addEventListenerForItem(component) {\n    if (!(component instanceof Component)) {\n      return;\n    }\n\n    this.on(component, 'blur', this.boundHandleBlur_);\n    this.on(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n  /**\n   * Remove event listeners from the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to remove listeners.\n   *\n   */\n  ;\n\n  _proto.removeEventListenerForItem = function removeEventListenerForItem(component) {\n    if (!(component instanceof Component)) {\n      return;\n    }\n\n    this.off(component, 'blur', this.boundHandleBlur_);\n    this.off(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n  /**\n   * This method will be called indirectly when the component has been added\n   * before the component adds to the new menu instance by `addItem`.\n   * In this case, the original menu instance will remove the component\n   * by calling `removeChild`.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem`\n   */\n  ;\n\n  _proto.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    this.removeEventListenerForItem(component);\n\n    _Component.prototype.removeChild.call(this, component);\n  }\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n  ;\n\n  _proto.addItem = function addItem(component) {\n    var childComponent = this.addChild(component);\n\n    if (childComponent) {\n      this.addEventListenerForItem(childComponent);\n    }\n  }\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var contentElType = this.options_.contentElType || 'ul';\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n    this.contentEl_.setAttribute('role', 'menu');\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n\n    el.appendChild(this.contentEl_); // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.boundHandleBlur_ = null;\n    this.boundHandleTapClick_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Called when a `MenuItem` loses focus.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n  ;\n\n  _proto.handleBlur = function handleBlur(event) {\n    var relatedTarget = event.relatedTarget || document.activeElement; // Close menu popup when a user clicks outside the menu\n\n    if (!this.children().some(function (element) {\n      return element.el() === relatedTarget;\n    })) {\n      var btn = this.menuButton_;\n\n      if (btn && btn.buttonPressed_ && relatedTarget !== btn.el().firstChild) {\n        btn.unpressButton();\n      }\n    }\n  }\n  /**\n   * Called when a `MenuItem` gets clicked or tapped.\n   *\n   * @param {EventTarget~Event} event\n   *        The `click` or `tap` event that caused this function to be called.\n   *\n   * @listens click,tap\n   */\n  ;\n\n  _proto.handleTapClick = function handleTapClick(event) {\n    // Unpress the associated MenuButton, and move focus back to it\n    if (this.menuButton_) {\n      this.menuButton_.unpressButton();\n      var childComponents = this.children();\n\n      if (!Array.isArray(childComponents)) {\n        return;\n      }\n\n      var foundComponent = childComponents.filter(function (component) {\n        return component.el() === event.target;\n      })[0];\n\n      if (!foundComponent) {\n        return;\n      } // don't focus menu button if item is a caption settings item\n      // because focus will move elsewhere\n\n\n      if (foundComponent.name() !== 'CaptionSettingsMenuItem') {\n        this.menuButton_.focus();\n      }\n    }\n  }\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward(); // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack();\n    }\n  }\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n\n    this.focus(stepChild);\n  }\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n\n    this.focus(stepChild);\n  }\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n  ;\n\n  _proto.focus = function focus(item) {\n    if (item === void 0) {\n      item = 0;\n    }\n\n    var children = this.children().slice();\n    var haveTitle = children.length && children[0].className && /vjs-menu-title/.test(children[0].className);\n\n    if (haveTitle) {\n      children.shift();\n    }\n\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n\n      this.focusedChild_ = item;\n      children[item].el_.focus();\n    }\n  };\n\n  return Menu;\n}(Component);\n\nComponent.registerComponent('Menu', Menu);\n\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\n\nvar MenuButton =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MenuButton, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function MenuButton(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Component.call(this, player, options) || this;\n    _this.menuButton_ = new Button(player, options);\n\n    _this.menuButton_.controlText(_this.controlText_);\n\n    _this.menuButton_.el_.setAttribute('aria-haspopup', 'true'); // Add buildCSSClass values to the button, not the wrapper\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\n\n    _this.menuButton_.removeClass('vjs-control');\n\n    _this.addChild(_this.menuButton_);\n\n    _this.update();\n\n    _this.enabled_ = true;\n\n    _this.on(_this.menuButton_, 'tap', _this.handleClick);\n\n    _this.on(_this.menuButton_, 'click', _this.handleClick);\n\n    _this.on(_this.menuButton_, 'keydown', _this.handleKeyDown);\n\n    _this.on(_this.menuButton_, 'mouseenter', function () {\n      _this.menu.show();\n    });\n\n    _this.on('keydown', _this.handleSubmenuKeyDown);\n\n    return _this;\n  }\n  /**\n   * Update the menu based on the current state of its items.\n   */\n\n\n  var _proto = MenuButton.prototype;\n\n  _proto.update = function update() {\n    var menu = this.createMenu();\n\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n\n    this.menu = menu;\n    this.addChild(menu);\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    var menu = new Menu(this.player_, {\n      menuButton: this\n    });\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n\n    this.hideThreshold_ = 0; // Add a title list item to the top\n\n    if (this.options_.title) {\n      var titleEl = createEl('li', {\n        className: 'vjs-menu-title',\n        innerHTML: toTitleCase(this.options_.title),\n        tabIndex: -1\n      });\n      this.hideThreshold_ += 1;\n      var titleComponent = new Component(this.player_, {\n        el: titleEl\n      });\n      menu.addItem(titleComponent);\n    }\n\n    this.items = this.createItems();\n\n    if (this.items) {\n      // Add menu items to the menu\n      for (var i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n\n    return menu;\n  }\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.createItems = function createItems() {}\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  }\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n  ;\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    } // TODO: Fix the CSS so that this isn't necessary\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + buttonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  ;\n\n  _proto.controlText = function controlText(text, el) {\n    if (el === void 0) {\n      el = this.menuButton_.el();\n    }\n\n    return this.menuButton_.controlText(text, el);\n  }\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  }\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n  ;\n\n  _proto.focus = function focus() {\n    this.menuButton_.focus();\n  }\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n  ;\n\n  _proto.blur = function blur() {\n    this.menuButton_.blur();\n  }\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.focus();\n      } // Up Arrow or Down Arrow also 'press' the button to open the menu\n\n    } else if (keycode.isEventKey(event, 'Up') || keycode.isEventKey(event, 'Down')) {\n      if (!this.buttonPressed_) {\n        event.preventDefault();\n        this.pressButton();\n      }\n    }\n  }\n  /**\n   * This method name now delegates to `handleSubmenuKeyDown`. This means\n   * anyone calling `handleSubmenuKeyPress` will not see their method calls\n   * stop working.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n    this.handleSubmenuKeyDown(event);\n  }\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleSubmenuKeyDown = function handleSubmenuKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.focus();\n      }\n    }\n  }\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n  ;\n\n  _proto.pressButton = function pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.show();\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true'); // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n\n      this.menu.focus();\n    }\n  }\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n  ;\n\n  _proto.unpressButton = function unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menu.hide();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  }\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.unpressButton();\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.menuButton_.disable();\n  }\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n  ;\n\n  _proto.enable = function enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n    this.menuButton_.enable();\n  };\n\n  return MenuButton;\n}(Component);\n\nComponent.registerComponent('MenuButton', MenuButton);\n\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\n\nvar TrackButton =\n/*#__PURE__*/\nfunction (_MenuButton) {\n  _inheritsLoose(TrackButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TrackButton(player, options) {\n    var _this;\n\n    var tracks = options.tracks;\n    _this = _MenuButton.call(this, player, options) || this;\n\n    if (_this.items.length <= 1) {\n      _this.hide();\n    }\n\n    if (!tracks) {\n      return _assertThisInitialized(_this);\n    }\n\n    var updateHandler = bind(_assertThisInitialized(_this), _this.update);\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n\n    _this.player_.on('ready', updateHandler);\n\n    _this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n    });\n\n    return _this;\n  }\n\n  return TrackButton;\n}(MenuButton);\n\nComponent.registerComponent('TrackButton', TrackButton);\n\n/**\n * @file menu-keys.js\n */\n\n/**\n  * All keys used for operation of a menu (`MenuButton`, `Menu`, and `MenuItem`)\n  * Note that 'Enter' and 'Space' are not included here (otherwise they would\n  * prevent the `MenuButton` and `MenuItem` from being keyboard-clickable)\n  * @typedef MenuKeys\n  * @array\n  */\nvar MenuKeys = ['Tab', 'Esc', 'Up', 'Down', 'Right', 'Left'];\n\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\n\nvar MenuItem =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(MenuItem, _ClickableComponent);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n  function MenuItem(player, options) {\n    var _this;\n\n    _this = _ClickableComponent.call(this, player, options) || this;\n    _this.selectable = options.selectable;\n    _this.isSelected_ = options.selected || false;\n    _this.multiSelectable = options.multiSelectable;\n\n    _this.selected(_this.isSelected_);\n\n    if (_this.selectable) {\n      if (_this.multiSelectable) {\n        _this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        _this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      _this.el_.setAttribute('role', 'menuitem');\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  var _proto = MenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n    return _ClickableComponent.prototype.createEl.call(this, 'li', assign({\n      className: 'vjs-menu-item',\n      innerHTML: \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label) + \"</span>\",\n      tabIndex: -1\n    }, props), attrs);\n  }\n  /**\n   * Ignore keys which are used by the menu, but pass any other ones up. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (!MenuKeys.some(function (key) {\n      return keycode.isEventKey(event, key);\n    })) {\n      // Pass keydown handling up for unused keys\n      _ClickableComponent.prototype.handleKeyDown.call(this, event);\n    }\n  }\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    this.selected(true);\n  }\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n  ;\n\n  _proto.selected = function selected(_selected) {\n    if (this.selectable) {\n      if (_selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true'); // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false'); // Indicate un-selected state to screen reader\n\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  };\n\n  return MenuItem;\n}(ClickableComponent);\n\nComponent.registerComponent('MenuItem', MenuItem);\n\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\n\nvar TextTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(TextTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TextTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var tracks = player.textTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track; // Determine the relevant kind(s) of tracks for this component and filter\n    // out empty kinds.\n\n    _this.kinds = (options.kinds || [options.kind || _this.track.kind]).filter(Boolean);\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this.handleSelectedLanguageChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n\n    _this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    }); // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n\n\n    if (tracks.onchange === undefined) {\n      var event;\n\n      _this.on(['tap', 'click'], function () {\n        if (typeof window$1.Event !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window$1.Event('change');\n          } catch (err) {// continue regardless of error\n          }\n        }\n\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n\n        tracks.dispatchEvent(event);\n      });\n    } // set the default state based on current tracks\n\n\n    _this.handleTracksChange();\n\n    return _this;\n  }\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = TextTrackMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    var referenceTrack = this.track;\n    var tracks = this.player_.textTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    if (!tracks) {\n      return;\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // If the track from the text tracks list is not of the right kind,\n      // skip it. We do not want to affect tracks of incompatible kind(s).\n\n      if (this.kinds.indexOf(track.kind) === -1) {\n        continue;\n      } // If this text track is the component's track and it is not showing,\n      // set it to showing.\n\n\n      if (track === referenceTrack) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        } // If this text track is not the component's track and it is not\n        // disabled, set it to disabled.\n\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  }\n  /**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n  ;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var shouldBeSelected = this.track.mode === 'showing'; // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      var selectedLanguage = this.player_.cache_.selectedLanguage; // Don't replace the kind of track across the same language\n\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n\n    _MenuItem.prototype.dispose.call(this);\n  };\n\n  return TextTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\n\nvar OffTextTrackMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(OffTextTrackMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function OffTextTrackMenuItem(player, options) {\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player: player,\n      // it is no longer necessary to store `kind` or `kinds` on the track itself\n      // since they are now stored in the `kinds` property of all instances of\n      // TextTrackMenuItem, but this will remain for backwards compatibility\n      kind: options.kind,\n      kinds: options.kinds,\n      \"default\": false,\n      mode: 'disabled'\n    };\n\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    } // MenuItem is selectable\n\n\n    options.selectable = true; // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n\n    options.multiSelectable = false;\n    return _TextTrackMenuItem.call(this, player, options) || this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */\n\n\n  var _proto = OffTextTrackMenuItem.prototype;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var shouldBeSelected = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    } // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    var tracks = this.player().textTracks();\n    var allHidden = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  };\n\n  return OffTextTrackMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\n\nvar TextTrackButton =\n/*#__PURE__*/\nfunction (_TrackButton) {\n  _inheritsLoose(TextTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function TextTrackButton(player, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.tracks = player.textTracks();\n    return _TrackButton.call(this, player, options) || this;\n  }\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n\n\n  var _proto = TextTrackButton.prototype;\n\n  _proto.createItems = function createItems(items, TrackMenuItem) {\n    if (items === void 0) {\n      items = [];\n    }\n\n    if (TrackMenuItem === void 0) {\n      TrackMenuItem = TextTrackMenuItem;\n    }\n\n    // Label is an override for the [track] off label\n    // USed to localise captions/subtitles\n    var label;\n\n    if (this.label_) {\n      label = this.label_ + \" off\";\n    } // Add an OFF menu item to turn all tracks off\n\n\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label: label\n    }));\n    this.hideThreshold_ += 1;\n    var tracks = this.player_.textTracks();\n\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // only add tracks that are of an appropriate kind and have a label\n\n      if (this.kinds_.indexOf(track.kind) > -1) {\n        var item = new TrackMenuItem(this.player_, {\n          track: track,\n          kinds: this.kinds_,\n          kind: this.kind_,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n        item.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n        items.push(item);\n      }\n    }\n\n    return items;\n  };\n\n  return TextTrackButton;\n}(TrackButton);\n\nComponent.registerComponent('TextTrackButton', TextTrackButton);\n\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\n\nvar ChaptersTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(ChaptersTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ChaptersTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var cue = options.cue;\n    var currentTime = player.currentTime(); // Modify options for parent MenuItem class's init.\n\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n    _this.cue = cue;\n    track.addEventListener('cuechange', bind(_assertThisInitialized(_this), _this.update));\n    return _this;\n  }\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = ChaptersTrackMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player_.currentTime(this.cue.startTime);\n    this.update(this.cue.startTime);\n  }\n  /**\n   * Update chapter menu item\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `cuechange` event that caused this function to run.\n   *\n   * @listens TextTrack#cuechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var cue = this.cue;\n    var currentTime = this.player_.currentTime(); // vjs.log(currentTime, cue.startTime);\n\n    this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n  };\n\n  return ChaptersTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\n\nvar ChaptersButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(ChaptersButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n  function ChaptersButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = ChaptersButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n  ;\n\n  _proto.update = function update(event) {\n    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n      this.setTrack(this.findChaptersTrack());\n    }\n\n    _TextTrackButton.prototype.update.call(this);\n  }\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n  ;\n\n  _proto.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    } // here this.track_ refers to the old track instance\n\n\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n\n      this.track_ = null;\n    }\n\n    this.track_ = track; // here this.track_ refers to the new track instance\n\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n    }\n  }\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n  ;\n\n  _proto.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  }\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n  ;\n\n  _proto.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n\n    return this.localize(toTitleCase(this.kind_));\n  }\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  }\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!this.track_) {\n      return items;\n    }\n\n    var cues = this.track_.cues;\n\n    if (!cues) {\n      return items;\n    }\n\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new ChaptersTrackMenuItem(this.player_, {\n        track: this.track_,\n        cue: cue\n      });\n      items.push(mi);\n    }\n\n    return items;\n  };\n\n  return ChaptersButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nChaptersButton.prototype.kind_ = 'chapters';\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nChaptersButton.prototype.controlText_ = 'Chapters';\nComponent.registerComponent('ChaptersButton', ChaptersButton);\n\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\n\nvar DescriptionsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(DescriptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function DescriptionsButton(player, options, ready) {\n    var _this;\n\n    _this = _TextTrackButton.call(this, player, options, ready) || this;\n    var tracks = player.textTracks();\n    var changeHandler = bind(_assertThisInitialized(_this), _this.handleTracksChange);\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  var _proto = DescriptionsButton.prototype;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var disabled = false; // Check whether a track of a different kind is showing\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    } // If another track is showing, disable this menu button\n\n\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return DescriptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nDescriptionsButton.prototype.kind_ = 'descriptions';\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\nComponent.registerComponent('DescriptionsButton', DescriptionsButton);\n\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubtitlesButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(SubtitlesButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function SubtitlesButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = SubtitlesButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return SubtitlesButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nSubtitlesButton.prototype.kind_ = 'subtitles';\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\nComponent.registerComponent('SubtitlesButton', SubtitlesButton);\n\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\n\nvar CaptionSettingsMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(CaptionSettingsMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CaptionSettingsMenuItem(player, options) {\n    var _this;\n\n    options.track = {\n      player: player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      \"default\": false,\n      mode: 'disabled'\n    }; // CaptionSettingsMenuItem has no concept of 'selected'\n\n    options.selectable = false;\n    options.name = 'CaptionSettingsMenuItem';\n    _this = _TextTrackMenuItem.call(this, player, options) || this;\n\n    _this.addClass('vjs-texttrack-settings');\n\n    _this.controlText(', opens ' + options.kind + ' settings dialog');\n\n    return _this;\n  }\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = CaptionSettingsMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  };\n\n  return CaptionSettingsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\n\nvar CaptionsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(CaptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function CaptionsButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = CaptionsButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.kind_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    return _TextTrackButton.prototype.createItems.call(this, items);\n  };\n\n  return CaptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nCaptionsButton.prototype.kind_ = 'captions';\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nCaptionsButton.prototype.controlText_ = 'Captions';\nComponent.registerComponent('CaptionsButton', CaptionsButton);\n\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\n\nvar SubsCapsMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(SubsCapsMenuItem, _TextTrackMenuItem);\n\n  function SubsCapsMenuItem() {\n    return _TextTrackMenuItem.apply(this, arguments) || this;\n  }\n\n  var _proto = SubsCapsMenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    var innerHTML = \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'captions') {\n      innerHTML += \"\\n        <span aria-hidden=\\\"true\\\" class=\\\"vjs-icon-placeholder\\\"></span>\\n        <span class=\\\"vjs-control-text\\\"> \" + this.localize('Captions') + \"</span>\\n      \";\n    }\n\n    innerHTML += '</span>';\n\n    var el = _TextTrackMenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  return SubsCapsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubsCapsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(SubsCapsButton, _TextTrackButton);\n\n  function SubsCapsButton(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _TextTrackButton.call(this, player, options) || this; // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n\n    _this.label_ = 'subtitles';\n\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\n      _this.label_ = 'captions';\n    }\n\n    _this.menuButton_.controlText(toTitleCase(_this.label_));\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = SubsCapsButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.label_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\n    return items;\n  };\n\n  return SubsCapsButton;\n}(TextTrackButton);\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\n\n\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @private\n */\n\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\nComponent.registerComponent('SubsCapsButton', SubsCapsButton);\n\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\n\nvar AudioTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(AudioTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function AudioTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var tracks = player.audioTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n\n    _this.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n\n  var _proto = AudioTrackMenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    var innerHTML = \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'main-desc') {\n      innerHTML += \"\\n        <span aria-hidden=\\\"true\\\" class=\\\"vjs-icon-placeholder\\\"></span>\\n        <span class=\\\"vjs-control-text\\\"> \" + this.localize('Descriptions') + \"</span>\\n      \";\n    }\n\n    innerHTML += '</span>';\n\n    var el = _MenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  }\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var tracks = this.player_.audioTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n      track.enabled = track === this.track;\n    }\n  }\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n  ;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  };\n\n  return AudioTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\n\nvar AudioTrackButton =\n/*#__PURE__*/\nfunction (_TrackButton) {\n  _inheritsLoose(AudioTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function AudioTrackButton(player, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.tracks = player.audioTracks();\n    return _TrackButton.call(this, player, options) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = AudioTrackButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n  ;\n\n  _proto.createItems = function createItems(items) {\n    if (items === void 0) {\n      items = [];\n    }\n\n    // if there's only one audio track, there no point in showing it\n    this.hideThreshold_ = 1;\n    var tracks = this.player_.audioTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track: track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n\n    return items;\n  };\n\n  return AudioTrackButton;\n}(TrackButton);\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent.registerComponent('AudioTrackButton', AudioTrackButton);\n\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\n\nvar PlaybackRateMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(PlaybackRateMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuItem(player, options) {\n    var _this;\n\n    var label = options.rate;\n    var rate = parseFloat(label, 10); // Modify options for parent MenuItem class's init.\n\n    options.label = label;\n    options.selected = rate === 1;\n    options.selectable = true;\n    options.multiSelectable = false;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.label = label;\n    _this.rate = rate;\n\n    _this.on(player, 'ratechange', _this.update);\n\n    return _this;\n  }\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = PlaybackRateMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player().playbackRate(this.rate);\n  }\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  };\n\n  return PlaybackRateMenuItem;\n}(MenuItem);\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuItem.prototype.contentElType = 'button';\nComponent.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\n\nvar PlaybackRateMenuButton =\n/*#__PURE__*/\nfunction (_MenuButton) {\n  _inheritsLoose(PlaybackRateMenuButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuButton(player, options) {\n    var _this;\n\n    _this = _MenuButton.call(this, player, options) || this;\n\n    _this.updateVisibility();\n\n    _this.updateLabel();\n\n    _this.on(player, 'loadstart', _this.updateVisibility);\n\n    _this.on(player, 'ratechange', _this.updateLabel);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = PlaybackRateMenuButton.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _MenuButton.prototype.createEl.call(this);\n\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      innerHTML: '1x'\n    });\n    el.appendChild(this.labelEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.labelEl_ = null;\n\n    _MenuButton.prototype.dispose.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create the playback rate menu\n   *\n   * @return {Menu}\n   *         Menu object populated with {@link PlaybackRateMenuItem}s\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    var menu = new Menu(this.player());\n    var rates = this.playbackRates();\n\n    if (rates) {\n      for (var i = rates.length - 1; i >= 0; i--) {\n        menu.addChild(new PlaybackRateMenuItem(this.player(), {\n          rate: rates[i] + 'x'\n        }));\n      }\n    }\n\n    return menu;\n  }\n  /**\n   * Updates ARIA accessibility attributes\n   */\n  ;\n\n  _proto.updateARIAAttributes = function updateARIAAttributes() {\n    // Current playback rate\n    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n  }\n  /**\n   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    // select next rate option\n    var currentRate = this.player().playbackRate();\n    var rates = this.playbackRates(); // this will select first one if the last one currently selected\n\n    var newRate = rates[0];\n\n    for (var i = 0; i < rates.length; i++) {\n      if (rates[i] > currentRate) {\n        newRate = rates[i];\n        break;\n      }\n    }\n\n    this.player().playbackRate(newRate);\n  }\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n  ;\n\n  _proto.playbackRates = function playbackRates() {\n    return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\n  }\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n  ;\n\n  _proto.playbackRateSupported = function playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  }\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n  ;\n\n  _proto.updateVisibility = function updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  }\n  /**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  ;\n\n  _proto.updateLabel = function updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n    }\n  };\n\n  return PlaybackRateMenuButton;\n}(MenuButton);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\nComponent.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\n\nvar Spacer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Spacer, _Component);\n\n  function Spacer() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Spacer.prototype;\n\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-spacer \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass()\n    });\n  };\n\n  return Spacer;\n}(Component);\n\nComponent.registerComponent('Spacer', Spacer);\n\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\n\nvar CustomControlSpacer =\n/*#__PURE__*/\nfunction (_Spacer) {\n  _inheritsLoose(CustomControlSpacer, _Spacer);\n\n  function CustomControlSpacer() {\n    return _Spacer.apply(this, arguments) || this;\n  }\n\n  var _proto = CustomControlSpacer.prototype;\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-custom-control-spacer \" + _Spacer.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var el = _Spacer.prototype.createEl.call(this, {\n      className: this.buildCSSClass()\n    }); // No-flex/table-cell mode requires there be some content\n    // in the cell to fill the remaining space of the table.\n\n\n    el.innerHTML = \"\\xA0\";\n    return el;\n  };\n\n  return CustomControlSpacer;\n}(Spacer);\n\nComponent.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n/**\n * Container of main controls.\n *\n * @extends Component\n */\n\nvar ControlBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ControlBar, _Component);\n\n  function ControlBar() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ControlBar.prototype;\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  };\n\n  return ControlBar;\n}(Component);\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\n\n\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'seekToLive', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'pictureInPictureToggle', 'fullscreenToggle']\n};\nComponent.registerComponent('ControlBar', ControlBar);\n\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\n\nvar ErrorDisplay =\n/*#__PURE__*/\nfunction (_ModalDialog) {\n  _inheritsLoose(ErrorDisplay, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ErrorDisplay(player, options) {\n    var _this;\n\n    _this = _ModalDialog.call(this, player, options) || this;\n\n    _this.on(player, 'error', _this.open);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  var _proto = ErrorDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-error-display \" + _ModalDialog.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n  ;\n\n  _proto.content = function content() {\n    var error = this.player().error();\n    return error ? this.localize(error.message) : '';\n  };\n\n  return ErrorDisplay;\n}(ModalDialog);\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\n\n\nErrorDisplay.prototype.options_ = mergeOptions(ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\nComponent.registerComponent('ErrorDisplay', ErrorDisplay);\n\nvar LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\nvar COLOR_BLACK = ['#000', 'Black'];\nvar COLOR_BLUE = ['#00F', 'Blue'];\nvar COLOR_CYAN = ['#0FF', 'Cyan'];\nvar COLOR_GREEN = ['#0F0', 'Green'];\nvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\nvar COLOR_RED = ['#F00', 'Red'];\nvar COLOR_WHITE = ['#FFF', 'White'];\nvar COLOR_YELLOW = ['#FF0', 'Yellow'];\nvar OPACITY_OPAQUE = ['1', 'Opaque'];\nvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nvar OPACITY_TRANS = ['0', 'Transparent']; // Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\n\nvar selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n  color: {\n    selector: '.vjs-fg-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    \"default\": 2,\n    parser: function parser(v) {\n      return v === '1.00' ? null : Number(v);\n    }\n  },\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\n\nfunction getSelectedOptionValue(el, parser) {\n  var value = el.options[el.options.selectedIndex].value;\n  return parseOptionValue(value, parser);\n}\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\n\n\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n\n  for (var i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\n\n\nvar TextTrackSettings =\n/*#__PURE__*/\nfunction (_ModalDialog) {\n  _inheritsLoose(TextTrackSettings, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n  function TextTrackSettings(player, options) {\n    var _this;\n\n    options.temporary = false;\n    _this = _ModalDialog.call(this, player, options) || this;\n    _this.updateDisplay = bind(_assertThisInitialized(_this), _this.updateDisplay); // fill the modal and pretend we have opened it\n\n    _this.fill();\n\n    _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\n    _this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: _this.localize('End of dialog window.')\n    });\n\n    _this.el().appendChild(_this.endDialog);\n\n    _this.setDefaults(); // Grab `persistTextTrackSettings` from the player options if not passed in child options\n\n\n    if (options.persistTextTrackSettings === undefined) {\n      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n    }\n\n    _this.on(_this.$('.vjs-done-button'), 'click', function () {\n      _this.saveSettings();\n\n      _this.close();\n    });\n\n    _this.on(_this.$('.vjs-default-button'), 'click', function () {\n      _this.setDefaults();\n\n      _this.updateDisplay();\n    });\n\n    each(selectConfigs, function (config) {\n      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n    });\n\n    if (_this.options_.persistTextTrackSettings) {\n      _this.restoreSettings();\n    }\n\n    return _this;\n  }\n\n  var _proto = TextTrackSettings.prototype;\n\n  _proto.dispose = function dispose() {\n    this.endDialog = null;\n\n    _ModalDialog.prototype.dispose.call(this);\n  }\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElSelect_ = function createElSelect_(key, legendId, type) {\n    var _this2 = this;\n\n    if (legendId === void 0) {\n      legendId = '';\n    }\n\n    if (type === void 0) {\n      type = 'label';\n    }\n\n    var config = selectConfigs[key];\n    var id = config.id.replace('%s', this.id_);\n    var selectLabelledbyIds = [legendId, id].join(' ').trim();\n    return [\"<\" + type + \" id=\\\"\" + id + \"\\\" class=\\\"\" + (type === 'label' ? 'vjs-label' : '') + \"\\\">\", this.localize(config.label), \"</\" + type + \">\", \"<select aria-labelledby=\\\"\" + selectLabelledbyIds + \"\\\">\"].concat(config.options.map(function (o) {\n      var optionId = id + '-' + o[1].replace(/\\W+/g, '');\n      return [\"<option id=\\\"\" + optionId + \"\\\" value=\\\"\" + o[0] + \"\\\" \", \"aria-labelledby=\\\"\" + selectLabelledbyIds + \" \" + optionId + \"\\\">\", _this2.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  }\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElFgColor_ = function createElFgColor_() {\n    var legendId = \"captions-text-legend-\" + this.id_;\n    return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElBgColor_ = function createElBgColor_() {\n    var legendId = \"captions-background-\" + this.id_;\n    return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElWinColor_ = function createElWinColor_() {\n    var legendId = \"captions-window-\" + this.id_;\n    return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElColors_ = function createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  }\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElFont_ = function createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  }\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElControls_ = function createElControls_() {\n    var defaultsDescription = this.localize('restore all settings to the default values');\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: [\"<button type=\\\"button\\\" class=\\\"vjs-default-button\\\" title=\\\"\" + defaultsDescription + \"\\\">\", this.localize('Reset'), \"<span class=\\\"vjs-control-text\\\"> \" + defaultsDescription + \"</span>\", '</button>', \"<button type=\\\"button\\\" class=\\\"vjs-done-button\\\">\" + this.localize('Done') + \"</button>\"].join('')\n    });\n  };\n\n  _proto.content = function content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  };\n\n  _proto.label = function label() {\n    return this.localize('Caption Settings Dialog');\n  };\n\n  _proto.description = function description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  };\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\n  }\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n  ;\n\n  _proto.getValues = function getValues() {\n    var _this3 = this;\n\n    return reduce(selectConfigs, function (accum, config, key) {\n      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n\n      return accum;\n    }, {});\n  }\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n  ;\n\n  _proto.setValues = function setValues(values) {\n    var _this4 = this;\n\n    each(selectConfigs, function (config, key) {\n      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n    });\n  }\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n  ;\n\n  _proto.setDefaults = function setDefaults() {\n    var _this5 = this;\n\n    each(selectConfigs, function (config) {\n      var index = config.hasOwnProperty('default') ? config[\"default\"] : 0;\n      _this5.$(config.selector).selectedIndex = index;\n    });\n  }\n  /**\n   * Restore texttrack settings from localStorage\n   */\n  ;\n\n  _proto.restoreSettings = function restoreSettings() {\n    var values;\n\n    try {\n      values = JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY));\n    } catch (err) {\n      log.warn(err);\n    }\n\n    if (values) {\n      this.setValues(values);\n    }\n  }\n  /**\n   * Save text track settings to localStorage\n   */\n  ;\n\n  _proto.saveSettings = function saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n\n    var values = this.getValues();\n\n    try {\n      if (Object.keys(values).length) {\n        window$1.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n      } else {\n        window$1.localStorage.removeItem(LOCAL_STORAGE_KEY);\n      }\n    } catch (err) {\n      log.warn(err);\n    }\n  }\n  /**\n   * Update display of text track settings\n   */\n  ;\n\n  _proto.updateDisplay = function updateDisplay() {\n    var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  }\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalBlur_ = function conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    var cb = this.player_.controlBar;\n    var subsCapsBtn = cb && cb.subsCapsButton;\n    var ccBtn = cb && cb.captionsButton;\n\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  };\n\n  return TextTrackSettings;\n}(ModalDialog);\n\nComponent.registerComponent('TextTrackSettings', TextTrackSettings);\n\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\n\nvar ResizeManager =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ResizeManager, _Component);\n\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n  function ResizeManager(player, options) {\n    var _this;\n\n    var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window$1.ResizeObserver; // if `null` was passed, we want to disable the ResizeObserver\n\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    } // Only create an element when ResizeObserver isn't available\n\n\n    var options_ = mergeOptions({\n      createEl: !RESIZE_OBSERVER_AVAILABLE,\n      reportTouchActivity: false\n    }, options);\n    _this = _Component.call(this, player, options_) || this;\n    _this.ResizeObserver = options.ResizeObserver || window$1.ResizeObserver;\n    _this.loadListener_ = null;\n    _this.resizeObserver_ = null;\n    _this.debouncedHandler_ = debounce(function () {\n      _this.resizeHandler();\n    }, 100, false, _assertThisInitialized(_this));\n\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\n\n      _this.resizeObserver_.observe(player.el());\n    } else {\n      _this.loadListener_ = function () {\n        if (!_this.el_ || !_this.el_.contentWindow) {\n          return;\n        }\n\n        var debouncedHandler_ = _this.debouncedHandler_;\n\n        var unloadListener_ = _this.unloadListener_ = function () {\n          off(this, 'resize', debouncedHandler_);\n          off(this, 'unload', unloadListener_);\n          unloadListener_ = null;\n        }; // safari and edge can unload the iframe before resizemanager dispose\n        // we have to dispose of event handlers correctly before that happens\n\n\n        on(_this.el_.contentWindow, 'unload', unloadListener_);\n        on(_this.el_.contentWindow, 'resize', debouncedHandler_);\n      };\n\n      _this.one('load', _this.loadListener_);\n    }\n\n    return _this;\n  }\n\n  var _proto = ResizeManager.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'iframe', {\n      className: 'vjs-resize-manager',\n      tabIndex: -1\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n  ;\n\n  _proto.resizeHandler = function resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {EventTarget~Event}\n     */\n    // make sure player is still around to trigger\n    // prevents this from causing an error after dispose\n    if (!this.player_ || !this.player_.trigger) {\n      return;\n    }\n\n    this.player_.trigger('playerresize');\n  };\n\n  _proto.dispose = function dispose() {\n    if (this.debouncedHandler_) {\n      this.debouncedHandler_.cancel();\n    }\n\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n\n      this.resizeObserver_.disconnect();\n    }\n\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n\n    if (this.el_ && this.el_.contentWindow && this.unloadListener_) {\n      this.unloadListener_.call(this.el_.contentWindow);\n    }\n\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  return ResizeManager;\n}(Component);\n\nComponent.registerComponent('ResizeManager', ResizeManager);\n\n/* track when we are at the live edge, and other helpers for live playback */\n\nvar LiveTracker =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LiveTracker, _Component);\n\n  function LiveTracker(player, options) {\n    var _this;\n\n    // LiveTracker does not need an element\n    var options_ = mergeOptions({\n      createEl: false\n    }, options);\n    _this = _Component.call(this, player, options_) || this;\n\n    _this.reset_();\n\n    _this.on(_this.player_, 'durationchange', _this.handleDurationchange); // we don't need to track live playback if the document is hidden,\n    // also, tracking when the document is hidden can\n    // cause the CPU to spike and eventually crash the page on IE11.\n\n\n    if (IE_VERSION && 'hidden' in document && 'visibilityState' in document) {\n      _this.on(document, 'visibilitychange', _this.handleVisibilityChange);\n    }\n\n    return _this;\n  }\n\n  var _proto = LiveTracker.prototype;\n\n  _proto.handleVisibilityChange = function handleVisibilityChange() {\n    if (this.player_.duration() !== Infinity) {\n      return;\n    }\n\n    if (document.hidden) {\n      this.stopTracking();\n    } else {\n      this.startTracking();\n    }\n  };\n\n  _proto.isBehind_ = function isBehind_() {\n    // don't report that we are behind until a timeupdate has been seen\n    if (!this.timeupdateSeen_) {\n      return false;\n    }\n\n    var liveCurrentTime = this.liveCurrentTime();\n    var currentTime = this.player_.currentTime();\n    var seekableIncrement = this.seekableIncrement_; // the live edge window is the amount of seconds away from live\n    // that a player can be, but still be considered live.\n    // we add 0.07 because the live tracking happens every 30ms\n    // and we want some wiggle room for short segment live playback\n\n    var liveEdgeWindow = seekableIncrement * 2 + 0.07; // on Android liveCurrentTime can bee Infinity, because seekableEnd\n    // can be Infinity, so we handle that case.\n\n    return liveCurrentTime !== Infinity && liveCurrentTime - liveEdgeWindow >= currentTime;\n  } // all the functionality for tracking when seek end changes\n  // and for tracking how far past seek end we should be\n  ;\n\n  _proto.trackLive_ = function trackLive_() {\n    this.pastSeekEnd_ = this.pastSeekEnd_;\n    var seekable = this.player_.seekable(); // skip undefined seekable\n\n    if (!seekable || !seekable.length) {\n      return;\n    }\n\n    var newSeekEnd = this.seekableEnd(); // we can only tell if we are behind live, when seekable changes\n    // once we detect that seekable has changed we check the new seek\n    // end against current time, with a fudge value of half a second.\n\n    if (newSeekEnd !== this.lastSeekEnd_) {\n      if (this.lastSeekEnd_) {\n        this.seekableIncrement_ = Math.abs(newSeekEnd - this.lastSeekEnd_);\n      }\n\n      this.pastSeekEnd_ = 0;\n      this.lastSeekEnd_ = newSeekEnd;\n      this.trigger('seekableendchange');\n    }\n\n    this.pastSeekEnd_ = this.pastSeekEnd() + 0.03;\n\n    if (this.isBehind_() !== this.behindLiveEdge()) {\n      this.behindLiveEdge_ = this.isBehind_();\n      this.trigger('liveedgechange');\n    }\n  }\n  /**\n   * handle a durationchange event on the player\n   * and start/stop tracking accordingly.\n   */\n  ;\n\n  _proto.handleDurationchange = function handleDurationchange() {\n    if (this.player_.duration() === Infinity) {\n      this.startTracking();\n    } else {\n      this.stopTracking();\n    }\n  }\n  /**\n   * start tracking live playback\n   */\n  ;\n\n  _proto.startTracking = function startTracking() {\n    var _this2 = this;\n\n    if (this.isTracking()) {\n      return;\n    } // If we haven't seen a timeupdate, we need to check whether playback\n    // began before this component started tracking. This can happen commonly\n    // when using autoplay.\n\n\n    if (!this.timeupdateSeen_) {\n      this.timeupdateSeen_ = this.player_.hasStarted();\n    }\n\n    this.trackingInterval_ = this.setInterval(this.trackLive_, 30);\n    this.trackLive_();\n    this.on(this.player_, 'play', this.trackLive_);\n    this.on(this.player_, 'pause', this.trackLive_); // this is to prevent showing that we are not live\n    // before a video starts to play\n\n    if (!this.timeupdateSeen_) {\n      this.one(this.player_, 'play', this.handlePlay);\n\n      this.handleTimeupdate = function () {\n        _this2.timeupdateSeen_ = true;\n        _this2.handleTimeupdate = null;\n      };\n\n      this.one(this.player_, 'timeupdate', this.handleTimeupdate);\n    }\n  };\n\n  _proto.handlePlay = function handlePlay() {\n    this.one(this.player_, 'timeupdate', this.seekToLiveEdge);\n  }\n  /**\n   * Stop tracking, and set all internal variables to\n   * their initial value.\n   */\n  ;\n\n  _proto.reset_ = function reset_() {\n    this.pastSeekEnd_ = 0;\n    this.lastSeekEnd_ = null;\n    this.behindLiveEdge_ = null;\n    this.timeupdateSeen_ = false;\n    this.clearInterval(this.trackingInterval_);\n    this.trackingInterval_ = null;\n    this.seekableIncrement_ = 12;\n    this.off(this.player_, 'play', this.trackLive_);\n    this.off(this.player_, 'pause', this.trackLive_);\n    this.off(this.player_, 'play', this.handlePlay);\n    this.off(this.player_, 'timeupdate', this.seekToLiveEdge);\n\n    if (this.handleTimeupdate) {\n      this.off(this.player_, 'timeupdate', this.handleTimeupdate);\n      this.handleTimeupdate = null;\n    }\n  }\n  /**\n   * stop tracking live playback\n   */\n  ;\n\n  _proto.stopTracking = function stopTracking() {\n    if (!this.isTracking()) {\n      return;\n    }\n\n    this.reset_();\n  }\n  /**\n   * A helper to get the player seekable end\n   * so that we don't have to null check everywhere\n   */\n  ;\n\n  _proto.seekableEnd = function seekableEnd() {\n    var seekable = this.player_.seekable();\n    var seekableEnds = [];\n    var i = seekable ? seekable.length : 0;\n\n    while (i--) {\n      seekableEnds.push(seekable.end(i));\n    } // grab the furthest seekable end after sorting, or if there are none\n    // default to Infinity\n\n\n    return seekableEnds.length ? seekableEnds.sort()[seekableEnds.length - 1] : Infinity;\n  }\n  /**\n   * A helper to get the player seekable start\n   * so that we don't have to null check everywhere\n   */\n  ;\n\n  _proto.seekableStart = function seekableStart() {\n    var seekable = this.player_.seekable();\n    var seekableStarts = [];\n    var i = seekable ? seekable.length : 0;\n\n    while (i--) {\n      seekableStarts.push(seekable.start(i));\n    } // grab the first seekable start after sorting, or if there are none\n    // default to 0\n\n\n    return seekableStarts.length ? seekableStarts.sort()[0] : 0;\n  }\n  /**\n   * Get the live time window\n   */\n  ;\n\n  _proto.liveWindow = function liveWindow() {\n    var liveCurrentTime = this.liveCurrentTime();\n\n    if (liveCurrentTime === Infinity) {\n      return Infinity;\n    }\n\n    return liveCurrentTime - this.seekableStart();\n  }\n  /**\n   * Determines if the player is live, only checks if this component\n   * is tracking live playback or not\n   */\n  ;\n\n  _proto.isLive = function isLive() {\n    return this.isTracking();\n  }\n  /**\n   * Determines if currentTime is at the live edge and won't fall behind\n   * on each seekableendchange\n   */\n  ;\n\n  _proto.atLiveEdge = function atLiveEdge() {\n    return !this.behindLiveEdge();\n  }\n  /**\n   * get what we expect the live current time to be\n   */\n  ;\n\n  _proto.liveCurrentTime = function liveCurrentTime() {\n    return this.pastSeekEnd() + this.seekableEnd();\n  }\n  /**\n   * Returns how far past seek end we expect current time to be\n   */\n  ;\n\n  _proto.pastSeekEnd = function pastSeekEnd() {\n    return this.pastSeekEnd_;\n  }\n  /**\n   * If we are currently behind the live edge, aka currentTime will be\n   * behind on a seekableendchange\n   */\n  ;\n\n  _proto.behindLiveEdge = function behindLiveEdge() {\n    return this.behindLiveEdge_;\n  };\n\n  _proto.isTracking = function isTracking() {\n    return typeof this.trackingInterval_ === 'number';\n  }\n  /**\n   * Seek to the live edge if we are behind the live edge\n   */\n  ;\n\n  _proto.seekToLiveEdge = function seekToLiveEdge() {\n    if (this.atLiveEdge()) {\n      return;\n    }\n\n    this.player_.currentTime(this.liveCurrentTime());\n\n    if (this.player_.paused()) {\n      this.player_.play();\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    this.stopTracking();\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  return LiveTracker;\n}(Component);\n\nComponent.registerComponent('LiveTracker', LiveTracker);\n\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\n\nvar sourcesetLoad = function sourcesetLoad(tech) {\n  var el = tech.el(); // if `el.src` is set, that source will be loaded.\n\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n\n\n  var sources = tech.$$('source');\n  var srcUrls = [];\n  var src = ''; // if there are no sources, do not fire sourceset\n\n  if (!sources.length) {\n    return false;\n  } // only count valid/non-duplicate source elements\n\n\n  for (var i = 0; i < sources.length; i++) {\n    var url = sources[i].src;\n\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  } // there were no valid sources\n\n\n  if (!srcUrls.length) {\n    return false;\n  } // there is only one valid source element url\n  // use that\n\n\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n\n  tech.triggerSourceset(src);\n  return true;\n};\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\n\n\nvar innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n  get: function get() {\n    return this.cloneNode(true).innerHTML;\n  },\n  set: function set(v) {\n    // make a dummy node to use innerHTML on\n    var dummy = document.createElement(this.nodeName.toLowerCase()); // set innerHTML to the value provided\n\n    dummy.innerHTML = v; // make a document fragment to hold the nodes from dummy\n\n    var docFrag = document.createDocumentFragment(); // copy all of the nodes created by the innerHTML on dummy\n    // to the document fragment\n\n    while (dummy.childNodes.length) {\n      docFrag.appendChild(dummy.childNodes[0]);\n    } // remove content\n\n\n    this.innerText = ''; // now we add all of that html in one by appending the\n    // document fragment. This is how innerHTML does it.\n\n    window$1.Element.prototype.appendChild.call(this, docFrag); // then return the result that innerHTML's setter would\n\n    return this.innerHTML;\n  }\n});\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\n\nvar getDescriptor = function getDescriptor(priority, prop) {\n  var descriptor = {};\n\n  for (var i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n  return descriptor;\n};\n\nvar getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, window$1.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n};\n/**\n * Patches browser internal functions so that we can tell synchronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\n\n\nvar firstSourceWatch = function firstSourceWatch(tech) {\n  var el = tech.el(); // make sure firstSourceWatch isn't setup twice.\n\n  if (el.resetSourceWatch_) {\n    return;\n  }\n\n  var old = {};\n  var innerDescriptor = getInnerHTMLDescriptor(tech);\n\n  var appendWrapper = function appendWrapper(appendFn) {\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var retval = appendFn.apply(el, args);\n      sourcesetLoad(tech);\n      return retval;\n    };\n  };\n\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\n    if (!el[k]) {\n      return;\n    } // store the old function\n\n\n    old[k] = el[k]; // call the old function with a sourceset if a source\n    // was loaded\n\n    el[k] = appendWrapper(old[k]);\n  });\n  Object.defineProperty(el, 'innerHTML', mergeOptions(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n\n  el.resetSourceWatch_ = function () {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(function (k) {\n      el[k] = old[k];\n    });\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  }; // on the first sourceset, we need to revert our changes\n\n\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one.\n */\n\n\nvar srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n  get: function get() {\n    if (this.hasAttribute('src')) {\n      return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this, 'src'));\n    }\n\n    return '';\n  },\n  set: function set(v) {\n    window$1.Element.prototype.setAttribute.call(this, 'src', v);\n    return v;\n  }\n});\n\nvar getSrcDescriptor = function getSrcDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n};\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\n\n\nvar setupSourceset = function setupSourceset(tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n\n  var el = tech.el(); // make sure sourceset isn't setup twice.\n\n  if (el.resetSourceset_) {\n    return;\n  }\n\n  var srcDescriptor = getSrcDescriptor(tech);\n  var oldSetAttribute = el.setAttribute;\n  var oldLoad = el.load;\n  Object.defineProperty(el, 'src', mergeOptions(srcDescriptor, {\n    set: function set(v) {\n      var retval = srcDescriptor.set.call(el, v); // we use the getter here to get the actual value set on src\n\n      tech.triggerSourceset(el.src);\n      return retval;\n    }\n  }));\n\n  el.setAttribute = function (n, v) {\n    var retval = oldSetAttribute.call(el, n, v);\n\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n\n    return retval;\n  };\n\n  el.load = function () {\n    var retval = oldLoad.call(el); // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n\n    return retval;\n  };\n\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n\n  el.resetSourceset_ = function () {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\nfunction _templateObject$1() {\n  var data = _taggedTemplateLiteralLoose([\"Text Tracks are being loaded from another origin but the crossorigin attribute isn't used.\\n            This may prevent text tracks from loading.\"]);\n\n  _templateObject$1 = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SourceHandlerAdditions\n * @extends Tech\n */\n\nvar Html5 =\n/*#__PURE__*/\nfunction (_Tech) {\n  _inheritsLoose(Html5, _Tech);\n\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} ready\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  function Html5(options, ready) {\n    var _this;\n\n    _this = _Tech.call(this, options, ready) || this;\n    var source = options.source;\n    var crossoriginTracks = false; // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n\n    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      _this.setSource(source);\n    } else {\n      _this.handleLateInit_(_this.el_);\n    } // setup sourceset after late sourceset/init\n\n\n    if (options.enableSourceset) {\n      _this.setupSourcesetHandling_();\n    }\n\n    if (_this.el_.hasChildNodes()) {\n      var nodes = _this.el_.childNodes;\n      var nodesLength = nodes.length;\n      var removeNodes = [];\n\n      while (nodesLength--) {\n        var node = nodes[nodesLength];\n        var nodeName = node.nodeName.toLowerCase();\n\n        if (nodeName === 'track') {\n          if (!_this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            _this.remoteTextTrackEls().addTrackElement_(node);\n\n            _this.remoteTextTracks().addTrack(node.track);\n\n            _this.textTracks().addTrack(node.track);\n\n            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < removeNodes.length; i++) {\n        _this.el_.removeChild(removeNodes[i]);\n      }\n    }\n\n    _this.proxyNativeTracks_();\n\n    if (_this.featuresNativeTextTracks && crossoriginTracks) {\n      log.warn(tsml(_templateObject$1()));\n    } // prevent iOS Safari from disabling metadata text tracks during native playback\n\n\n    _this.restoreMetadataTracksInIOSNativePlayer_(); // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n\n\n    if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n      _this.setControls(true);\n    } // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n\n\n    _this.proxyWebkitFullscreen_();\n\n    _this.triggerReady();\n\n    return _this;\n  }\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n\n\n  var _proto = Html5.prototype;\n\n  _proto.dispose = function dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null; // tech will handle clearing of the emulated track list\n\n    _Tech.prototype.dispose.call(this);\n  }\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n  ;\n\n  _proto.setupSourcesetHandling_ = function setupSourcesetHandling_() {\n    setupSourceset(this);\n  }\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n  ;\n\n  _proto.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\n    var textTracks = this.textTracks();\n    var metadataTracksPreFullscreenState; // captures a snapshot of every metadata track's current state\n\n    var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\n      metadataTracksPreFullscreenState = [];\n\n      for (var i = 0; i < textTracks.length; i++) {\n        var track = textTracks[i];\n\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track: track,\n            storedMode: track.mode\n          });\n        }\n      }\n    }; // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n\n\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n    this.on('dispose', function () {\n      return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n    });\n\n    var restoreTrackMode = function restoreTrackMode() {\n      for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        var storedTrack = metadataTracksPreFullscreenState[i];\n\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      } // we only want this handler to be executed on the first 'change' event\n\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    }; // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n\n\n    this.on('webkitbeginfullscreen', function () {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot); // remove the listener before adding it just in case it wasn't previously removed\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    }); // start updating the snapshot again after leaving fullscreen\n\n    this.on('webkitendfullscreen', function () {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot); // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  }\n  /**\n   * Attempt to force override of tracks for the given type\n   *\n   * @param {string} type - Track type to override, possible values include 'Audio',\n   * 'Video', and 'Text'.\n   * @param {boolean} override - If set to true native audio/video will be overridden,\n   * otherwise native audio/video will potentially be used.\n   * @private\n   */\n  ;\n\n  _proto.overrideNative_ = function overrideNative_(type, override) {\n    var _this2 = this;\n\n    // If there is no behavioral change don't add/remove listeners\n    if (override !== this[\"featuresNative\" + type + \"Tracks\"]) {\n      return;\n    }\n\n    var lowerCaseType = type.toLowerCase();\n\n    if (this[lowerCaseType + \"TracksListeners_\"]) {\n      Object.keys(this[lowerCaseType + \"TracksListeners_\"]).forEach(function (eventName) {\n        var elTracks = _this2.el()[lowerCaseType + \"Tracks\"];\n\n        elTracks.removeEventListener(eventName, _this2[lowerCaseType + \"TracksListeners_\"][eventName]);\n      });\n    }\n\n    this[\"featuresNative\" + type + \"Tracks\"] = !override;\n    this[lowerCaseType + \"TracksListeners_\"] = null;\n    this.proxyNativeTracksForType_(lowerCaseType);\n  }\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   */\n  ;\n\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks(override) {\n    this.overrideNative_('Audio', override);\n  }\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   */\n  ;\n\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks(override) {\n    this.overrideNative_('Video', override);\n  }\n  /**\n   * Proxy native track list events for the given type to our track\n   * lists if the browser we are playing in supports that type of track list.\n   *\n   * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n   * @private\n   */\n  ;\n\n  _proto.proxyNativeTracksForType_ = function proxyNativeTracksForType_(name) {\n    var _this3 = this;\n\n    var props = NORMAL[name];\n    var elTracks = this.el()[props.getterName];\n    var techTracks = this[props.getterName]();\n\n    if (!this[\"featuresNative\" + props.capitalName + \"Tracks\"] || !elTracks || !elTracks.addEventListener) {\n      return;\n    }\n\n    var listeners = {\n      change: function change(e) {\n        techTracks.trigger({\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        });\n      },\n      addtrack: function addtrack(e) {\n        techTracks.addTrack(e.track);\n      },\n      removetrack: function removetrack(e) {\n        techTracks.removeTrack(e.track);\n      }\n    };\n\n    var removeOldTracks = function removeOldTracks() {\n      var removeTracks = [];\n\n      for (var i = 0; i < techTracks.length; i++) {\n        var found = false;\n\n        for (var j = 0; j < elTracks.length; j++) {\n          if (elTracks[j] === techTracks[i]) {\n            found = true;\n            break;\n          }\n        }\n\n        if (!found) {\n          removeTracks.push(techTracks[i]);\n        }\n      }\n\n      while (removeTracks.length) {\n        techTracks.removeTrack(removeTracks.shift());\n      }\n    };\n\n    this[props.getterName + 'Listeners_'] = listeners;\n    Object.keys(listeners).forEach(function (eventName) {\n      var listener = listeners[eventName];\n      elTracks.addEventListener(eventName, listener);\n\n      _this3.on('dispose', function (e) {\n        return elTracks.removeEventListener(eventName, listener);\n      });\n    }); // Remove (native) tracks that are not used anymore\n\n    this.on('loadstart', removeOldTracks);\n    this.on('dispose', function (e) {\n      return _this3.off('loadstart', removeOldTracks);\n    });\n  }\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n  ;\n\n  _proto.proxyNativeTracks_ = function proxyNativeTracks_() {\n    var _this4 = this;\n\n    NORMAL.names.forEach(function (name) {\n      _this4.proxyNativeTracksForType_(name);\n    });\n  }\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var el = this.options_.tag; // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        var clone = el.cloneNode(true);\n\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video'); // determine if native controls should be used\n\n        var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        var attributes = mergeOptions({}, tagAttributes);\n\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n\n        setAttributes(el, assign(attributes, {\n          id: this.options_.techId,\n          \"class\": 'vjs-tech'\n        }));\n      }\n\n      el.playerId = this.options_.playerId;\n    }\n\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    } // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n\n\n    var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n\n    for (var i = 0; i < settingsAttrs.length; i++) {\n      var attr = settingsAttrs[i];\n      var value = this.options_[attr];\n\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n\n        el[attr] = value;\n      }\n    }\n\n    return el;\n  }\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n  ;\n\n  _proto.handleLateInit_ = function handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      var loadstartFired = false;\n\n      var setLoadstartFired = function setLoadstartFired() {\n        loadstartFired = true;\n      };\n\n      this.on('loadstart', setLoadstartFired);\n\n      var triggerLoadstart = function triggerLoadstart() {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n\n      this.on('loadedmetadata', triggerLoadstart);\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n      return;\n    } // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n\n\n    var eventsToTrigger = ['loadstart']; // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n\n    eventsToTrigger.push('loadedmetadata'); // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    } // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n\n\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    } // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n\n\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    } // We still need to give the player time to add event listeners\n\n\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  }\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime(seconds) {\n    try {\n      this.el_.currentTime = seconds;\n    } catch (e) {\n      log(e, 'Video is not ready. (Video.js)'); // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  }\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n  ;\n\n  _proto.duration = function duration() {\n    var _this5 = this;\n\n    // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      var checkProgress = function checkProgress() {\n        if (_this5.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (_this5.el_.duration === Infinity) {\n            _this5.trigger('durationchange');\n          }\n\n          _this5.off('timeupdate', checkProgress);\n        }\n      };\n\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n\n    return this.el_.duration || NaN;\n  }\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n  ;\n\n  _proto.width = function width() {\n    return this.el_.offsetWidth;\n  }\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The height of the HTML5 media element.\n   */\n  ;\n\n  _proto.height = function height() {\n    return this.el_.offsetHeight;\n  }\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n  ;\n\n  _proto.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n    var _this6 = this;\n\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n\n    var endFn = function endFn() {\n      this.trigger('fullscreenchange', {\n        isFullscreen: false\n      });\n    };\n\n    var beginFn = function beginFn() {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n        this.trigger('fullscreenchange', {\n          isFullscreen: true\n        });\n      }\n    };\n\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', function () {\n      _this6.off('webkitbeginfullscreen', beginFn);\n\n      _this6.off('webkitendfullscreen', endFn);\n    });\n  }\n  /**\n   * Check if fullscreen is supported on the current playback device.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n  ;\n\n  _proto.supportsFullScreen = function supportsFullScreen() {\n    if (typeof this.el_.webkitEnterFullScreen === 'function') {\n      var userAgent = window$1.navigator && window$1.navigator.userAgent || ''; // Seems to be broken in Chromium/Chrome && Safari in Leopard\n\n      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n  ;\n\n  _proto.enterFullScreen = function enterFullScreen() {\n    var video = this.el_;\n\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      this.el_.play(); // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n\n      this.setTimeout(function () {\n        video.pause();\n        video.webkitEnterFullScreen();\n      }, 0);\n    } else {\n      video.webkitEnterFullScreen();\n    }\n  }\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n  ;\n\n  _proto.exitFullScreen = function exitFullScreen() {\n    this.el_.webkitExitFullScreen();\n  }\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    return this.el_.requestPictureInPicture();\n  }\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n  ;\n\n  _proto.src = function src(_src) {\n    if (_src === undefined) {\n      return this.el_.src;\n    } // Setting src through `src` instead of `setSrc` will be deprecated\n\n\n    this.setSrc(_src);\n  }\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    Html5.resetMediaElement(this.el_);\n  }\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n  ;\n\n  _proto.currentSrc = function currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n\n    return this.el_.currentSrc;\n  }\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n  ;\n\n  _proto.setControls = function setControls(val) {\n    this.el_.controls = !!val;\n  }\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n    }\n\n    return this.el_.addTextTrack(kind, label, language);\n  }\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label]\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  ;\n\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.createRemoteTextTrack.call(this, options);\n    }\n\n    var htmlTrackElement = document.createElement('track');\n\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n\n    if (options[\"default\"]) {\n      htmlTrackElement[\"default\"] = options[\"default\"];\n    }\n\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   * automatically removed from the video element whenever the source changes\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   * to \"false\" in upcoming versions of Video.js\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n    if (this.featuresNativeTextTracks) {\n      var tracks = this.$$('track');\n      var i = tracks.length;\n\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n\n    var videoPlaybackQuality = {};\n\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n\n    if (window$1.performance && typeof window$1.performance.now === 'function') {\n      videoPlaybackQuality.creationTime = window$1.performance.now();\n    } else if (window$1.performance && window$1.performance.timing && typeof window$1.performance.timing.navigationStart === 'number') {\n      videoPlaybackQuality.creationTime = window$1.Date.now() - window$1.performance.timing.navigationStart;\n    }\n\n    return videoPlaybackQuality;\n  };\n\n  return Html5;\n}(Tech);\n/* HTML5 Support Testing ---------------------------------------------------- */\n\n\nif (isReal()) {\n  /**\n   * Element for testing browser HTML5 media capabilities\n   *\n   * @type {Element}\n   * @constant\n   * @private\n   */\n  Html5.TEST_VID = document.createElement('video');\n  var track = document.createElement('track');\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  Html5.TEST_VID.appendChild(track);\n}\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\n\n\nHtml5.isSupported = function () {\n  // IE with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n/**\n * Check if the tech can support the given source\n *\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var volume = Html5.TEST_VID.volume;\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    return volume !== Html5.TEST_VID.volume;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {bolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\n\n\nHtml5.canMuteVolume = function () {\n  try {\n    var muted = Html5.TEST_VID.muted; // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n\n    Html5.TEST_VID.muted = !muted;\n\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  } // IE will error if Windows Media Player not installed #3315\n\n\n  try {\n    var playbackRate = Html5.TEST_VID.playbackRate;\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overridden\n *         - False otherwise\n */\n\n\nHtml5.canOverrideAttributes = function () {\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    var noop = function noop() {};\n\n    Object.defineProperty(document.createElement('video'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\n\n\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\n\n\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\n\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default {@link Html5.canMuteVolume}\n */\n\nHtml5.prototype.featuresMuteControl = Html5.canMuteVolume();\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\n\nHtml5.prototype.featuresPlaybackRate = Html5.canControlPlaybackRate();\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresSourceset = Html5.canOverrideAttributes();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS; // TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresFullscreenResize = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggered instead.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresProgressEvents = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggered instead.\n *\n * @default\n */\n\nHtml5.prototype.featuresTimeupdateEvents = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\n\nHtml5.prototype.featuresNativeTextTracks = Html5.supportsNativeTextTracks();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\n\nHtml5.prototype.featuresNativeVideoTracks = Html5.supportsNativeVideoTracks();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\n\nHtml5.prototype.featuresNativeAudioTracks = Html5.supportsNativeAudioTracks(); // HTML5 Feature detection and Device Fixes --------------------------------- //\n\nvar canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\nvar mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\n\nHtml5.patchCanPlayType = function () {\n  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n  // Firefox and Chrome report correctly\n  if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      if (type && mpegurlRE.test(type)) {\n        return 'maybe';\n      }\n\n      return canPlayType.call(this, type);\n    };\n  }\n};\n\nHtml5.unpatchCanPlayType = function () {\n  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n  Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n  return r;\n}; // by default, patch the media element\n\n\nHtml5.patchCanPlayType();\n\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  } // remove any child track or source nodes to prevent their loading\n\n\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  } // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n\n\n  el.removeAttribute('src'); // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// not supported\n      }\n    })();\n  }\n};\n\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  var sources = el.querySelectorAll('source');\n  var i = sources.length;\n\n  while (i--) {\n    el.removeChild(sources[i]);\n  } // remove any src reference.\n  // not setting `src=''` because that throws an error\n\n\n  el.removeAttribute('src');\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// satisfy linter\n      }\n    })();\n  }\n};\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n\n\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n}); // Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on intial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n}); // Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, played, networkState\n// readyState, videoWidth, videoHeight\n\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occurred during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - False indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NETWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n/**\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n}); // Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate\n\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n}); // wrap native functions with a function\n// The list is as follows:\n// pause, load, play\n\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\nTech.withSourceHandlers(Html5);\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @property {Tech~SourceObject} source\n *        The source object\n *\n * @property {Html5} tech\n *        The instance of the HTML5 tech.\n */\n\nHtml5.nativeSourceHandler = {};\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\n\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE without MediaPlayer throws an error (#519)\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\n\n\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type); // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    var ext = getFileExtension(source.src);\n    return Html5.nativeSourceHandler.canPlayType(\"video/\" + ext);\n  }\n\n  return '';\n};\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\n\n\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\n\n\nHtml5.nativeSourceHandler.dispose = function () {}; // Register the native source handler\n\n\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\nTech.registerTech('Html5', Html5);\n\nfunction _templateObject$2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n        Using the tech directly can be dangerous. I hope you know what you're doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      \"]);\n\n  _templateObject$2 = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n// on the player when they happen\n\nvar TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange']; // events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\n\nvar TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\nvar BREAKPOINT_ORDER = ['tiny', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'huge'];\nvar BREAKPOINT_CLASSES = {}; // grep: vjs-layout-tiny\n// grep: vjs-layout-x-small\n// grep: vjs-layout-small\n// grep: vjs-layout-medium\n// grep: vjs-layout-large\n// grep: vjs-layout-x-large\n// grep: vjs-layout-huge\n\nBREAKPOINT_ORDER.forEach(function (k) {\n  var v = k.charAt(0) === 'x' ? \"x-\" + k.substring(1) : k;\n  BREAKPOINT_CLASSES[k] = \"vjs-layout-\" + v;\n});\nvar DEFAULT_BREAKPOINTS = {\n  tiny: 210,\n  xsmall: 320,\n  small: 425,\n  medium: 768,\n  large: 1440,\n  xlarge: 2560,\n  huge: Infinity\n};\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */\n\nvar Player =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Player, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */\n  function Player(tag, options, ready) {\n    var _this;\n\n    // Make sure tag ID exists\n    tag.id = tag.id || options.id || \"vjs_video_\" + newGUID(); // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n\n    options = assign(Player.getTagSettings(tag), options); // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n\n    options.initChildren = false; // Same with creating the element\n\n    options.createEl = false; // don't auto mixin the evented mixin\n\n    options.evented = false; // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n\n    options.reportTouchActivity = false; // If language is not set, get the closest lang attribute\n\n    if (!options.language) {\n      if (typeof tag.closest === 'function') {\n        var closest = tag.closest('[lang]');\n\n        if (closest && closest.getAttribute) {\n          options.language = closest.getAttribute('lang');\n        }\n      } else {\n        var element = tag;\n\n        while (element && element.nodeType === 1) {\n          if (getAttributes(element).hasOwnProperty('lang')) {\n            options.language = element.getAttribute('lang');\n            break;\n          }\n\n          element = element.parentNode;\n        }\n      }\n    } // Run base component initializing with new options\n\n\n    _this = _Component.call(this, null, options, ready) || this; // Create bound methods for document listeners.\n\n    _this.boundDocumentFullscreenChange_ = bind(_assertThisInitialized(_this), _this.documentFullscreenChange_);\n    _this.boundFullWindowOnEscKey_ = bind(_assertThisInitialized(_this), _this.fullWindowOnEscKey); // create logger\n\n    _this.log = createLogger$1(_this.id_); // Hold our own reference to fullscreen api so it can be mocked in tests\n\n    _this.fsApi_ = FullscreenApi; // Tracks when a tech changes the poster\n\n    _this.isPosterFromTech_ = false; // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n\n    _this.queuedCallbacks_ = []; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    _this.isReady_ = false; // Init state hasStarted_\n\n    _this.hasStarted_ = false; // Init state userActive_\n\n    _this.userActive_ = false; // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n\n    if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    } // Store the original tag used to set options\n\n\n    _this.tag = tag; // Store the tag attributes used to restore html5 element\n\n    _this.tagAttributes = tag && getAttributes(tag); // Update current language\n\n    _this.language(_this.options_.language); // Update Supported Languages\n\n\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      var languagesToLower = {};\n      Object.getOwnPropertyNames(options.languages).forEach(function (name) {\n        languagesToLower[name.toLowerCase()] = options.languages[name];\n      });\n      _this.languages_ = languagesToLower;\n    } else {\n      _this.languages_ = Player.prototype.options_.languages;\n    }\n\n    _this.resetCache_(); // Set poster\n\n\n    _this.poster_ = options.poster || ''; // Set controls\n\n    _this.controls_ = !!options.controls; // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n\n    tag.controls = false;\n    tag.removeAttribute('controls');\n    _this.changingSrc_ = false;\n    _this.playCallbacks_ = [];\n    _this.playTerminatedQueue_ = []; // the attribute overrides the option\n\n    if (tag.hasAttribute('autoplay')) {\n      _this.autoplay(true);\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      _this.autoplay(_this.options_.autoplay);\n    } // check plugins\n\n\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(function (name) {\n        if (typeof _this[name] !== 'function') {\n          throw new Error(\"plugin \\\"\" + name + \"\\\" does not exist\");\n        }\n      });\n    }\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n\n\n    _this.scrubbing_ = false;\n    _this.el_ = _this.createEl(); // Make this an evented object and use `el_` as its event bus.\n\n    evented(_assertThisInitialized(_this), {\n      eventBusKey: 'el_'\n    });\n\n    if (_this.fluid_) {\n      _this.on('playerreset', _this.updateStyleEl_);\n    } // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n\n\n    var playerOptionsCopy = mergeOptions(_this.options_); // Load plugins\n\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(function (name) {\n        _this[name](options.plugins[name]);\n      });\n    }\n\n    _this.options_.playerOptions = playerOptionsCopy;\n    _this.middleware_ = [];\n\n    _this.initChildren(); // Set isAudio based on whether or not an audio tag was used\n\n\n    _this.isAudio(tag.nodeName.toLowerCase() === 'audio'); // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n\n\n    if (_this.controls()) {\n      _this.addClass('vjs-controls-enabled');\n    } else {\n      _this.addClass('vjs-controls-disabled');\n    } // Set ARIA label and region role depending on player type\n\n\n    _this.el_.setAttribute('role', 'region');\n\n    if (_this.isAudio()) {\n      _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\n    } else {\n      _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\n    }\n\n    if (_this.isAudio()) {\n      _this.addClass('vjs-audio');\n    }\n\n    if (_this.flexNotSupported_()) {\n      _this.addClass('vjs-no-flex');\n    } // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // TODO: Make this check be performed again when the window switches between monitors\n    // (See https://github.com/videojs/video.js/issues/5683)\n\n\n    if (TOUCH_ENABLED) {\n      _this.addClass('vjs-touch-enabled');\n    } // iOS Safari has broken hover handling\n\n\n    if (!IS_IOS) {\n      _this.addClass('vjs-workinghover');\n    } // Make player easily findable by ID\n\n\n    Player.players[_this.id_] = _assertThisInitialized(_this); // Add a major version class to aid css in plugins\n\n    var majorVersion = version.split('.')[0];\n\n    _this.addClass(\"vjs-v\" + majorVersion); // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n\n\n    _this.userActive(true);\n\n    _this.reportUserActivity();\n\n    _this.one('play', _this.listenForUserActivity_);\n\n    _this.on('stageclick', _this.handleStageClick_);\n\n    _this.on('keydown', _this.handleKeyDown);\n\n    _this.breakpoints(_this.options_.breakpoints);\n\n    _this.responsive(_this.options_.responsive);\n\n    return _this;\n  }\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n\n\n  var _proto = Player.prototype;\n\n  _proto.dispose = function dispose() {\n    var _this2 = this;\n\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */\n    this.trigger('dispose'); // prevent dispose from being called twice\n\n    this.off('dispose'); // Make sure all player-specific document listeners are unbound. This is\n\n    off(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    off(document, 'keydown', this.boundFullWindowOnEscKey_);\n\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    } // Kill reference to this player\n\n\n    Player.players[this.id_] = null;\n\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n\n    if (this.tag) {\n      this.tag = null;\n    }\n\n    clearCacheForPlayer(this); // remove all event handlers for track lists\n    // all tracks and track listeners are removed on\n    // tech dispose\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      var list = _this2[props.getterName](); // if it is not a native list\n      // we have to manually remove event listeners\n\n\n      if (list && list.off) {\n        list.off();\n      }\n    }); // the actual .el_ is removed here\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var tag = this.tag;\n    var el;\n    var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n    } // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n\n\n    var attrs = getAttributes(tag);\n\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n\n      el.appendChild(tag);\n      playerElIngest = this.playerElIngest_ = el; // move properties over from our custom `video-js` element\n      // to our new `video` element. This will move things like\n      // `src` or `controls` that were set via js before the player\n      // was initialized.\n\n      Object.keys(el).forEach(function (k) {\n        tag[k] = el[k];\n      });\n    } // set tabindex to -1 to remove the video element from the focus order\n\n\n    tag.setAttribute('tabindex', '-1');\n    attrs.tabindex = '-1'; // Workaround for #4583 (JAWS+IE doesn't announce BPB or play button), and\n    // for the same issue with Chrome (on Windows) with JAWS.\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    //  doesn't change behavior of IE11 or Chrome if JAWS is not being used\n\n    if (IE_VERSION || IS_CHROME && IS_WINDOWS) {\n      tag.setAttribute('role', 'application');\n      attrs.role = 'application';\n    } // Remove width/height attrs from tag so CSS can make it 100% width/height\n\n\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n\n    if ('width' in attrs) {\n      delete attrs.width;\n    }\n\n    if ('height' in attrs) {\n      delete attrs.height;\n    }\n\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // don't copy over the class attribute to the player element when we're in a div embed\n      // the class is already set up properly in the divEmbed case\n      // and we want to make sure that the `video-js` class doesn't get lost\n      if (!(divEmbed && attr === 'class')) {\n        el.setAttribute(attr, attrs[attr]);\n      }\n\n      if (divEmbed) {\n        tag.setAttribute(attr, attrs[attr]);\n      }\n    }); // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech'; // Make player findable on elements\n\n    tag.player = el.player = this; // Default state of video is paused\n\n    this.addClass('vjs-paused'); // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overrideable by CSS, just like the\n    // video element\n\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      var defaultsStyleEl = $('.vjs-styles-defaults');\n      var head = $('head');\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n\n    this.fill_ = false;\n    this.fluid_ = false; // Pass in the width/height/aspectRatio options which will update the style el\n\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fill(this.options_.fill);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio); // Hide any links within the video/audio tag,\n    // because IE doesn't hide them completely from screen readers.\n\n    var links = tag.getElementsByTagName('a');\n\n    for (var i = 0; i < links.length; i++) {\n      var linkEl = links.item(i);\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    } // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n\n\n    tag.initNetworkState_ = tag.networkState; // Wrap video tag in div (el/box) container\n\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    } // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n\n\n    prependTo(tag, el);\n    this.children_.unshift(tag); // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n\n    this.el_.setAttribute('lang', this.language_);\n    this.el_ = el;\n    return el;\n  }\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n  ;\n\n  _proto.width = function width(value) {\n    return this.dimension('width', value);\n  }\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s heigth to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n  ;\n\n  _proto.height = function height(value) {\n    return this.dimension('height', value);\n  }\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n  ;\n\n  _proto.dimension = function dimension(_dimension, value) {\n    var privDimension = _dimension + '_';\n\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n\n    if (value === '') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n\n    var parsedVal = parseFloat(value);\n\n    if (isNaN(parsedVal)) {\n      log.error(\"Improper value \\\"\" + value + \"\\\" supplied for for \" + _dimension);\n      return;\n    }\n\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  }\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * Turning this on will turn off fill mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  ;\n\n  _proto.fluid = function fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n\n    this.fluid_ = !!bool;\n\n    if (isEvented(this)) {\n      this.off('playerreset', this.updateStyleEl_);\n    }\n\n    if (bool) {\n      this.addClass('vjs-fluid');\n      this.fill(false);\n      addEventedCallback(function () {\n        this.on('playerreset', this.updateStyleEl_);\n      });\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n\n    this.updateStyleEl_();\n  }\n  /**\n   * A getter/setter/toggler for the vjs-fill `className` on the `Player`.\n   *\n   * Turning this on will turn off fluid mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  ;\n\n  _proto.fill = function fill(bool) {\n    if (bool === undefined) {\n      return !!this.fill_;\n    }\n\n    this.fill_ = !!bool;\n\n    if (bool) {\n      this.addClass('vjs-fill');\n      this.fluid(false);\n    } else {\n      this.removeClass('vjs-fill');\n    }\n  }\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player's aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n  ;\n\n  _proto.aspectRatio = function aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    } // Check for width:height format\n\n\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n\n    this.aspectRatio_ = ratio; // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n\n    this.fluid(true);\n    this.updateStyleEl_();\n  }\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n  ;\n\n  _proto.updateStyleEl_ = function updateStyleEl_() {\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n\n      var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n\n      var techEl = this.tech_ && this.tech_.el();\n\n      if (techEl) {\n        if (_width >= 0) {\n          techEl.width = _width;\n        }\n\n        if (_height >= 0) {\n          techEl.height = _height;\n        }\n      }\n\n      return;\n    }\n\n    var width;\n    var height;\n    var aspectRatio;\n    var idClass; // The aspect ratio is either used directly or to calculate width and height.\n\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    } // Get the ratio as a decimal we can use to calculate dimensions\n\n\n    var ratioParts = aspectRatio.split(':');\n    var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calulate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    } // Ensure the CSS class is valid by starting with an alpha character\n\n\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    } // Ensure the right class is still on the player for the style element\n\n\n    this.addClass(idClass);\n    setTextContent(this.styleEl_, \"\\n      .\" + idClass + \" {\\n        width: \" + width + \"px;\\n        height: \" + height + \"px;\\n      }\\n\\n      .\" + idClass + \".vjs-fluid {\\n        padding-top: \" + ratioMultiplier * 100 + \"%;\\n      }\\n    \");\n  }\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n  ;\n\n  _proto.loadTech_ = function loadTech_(techName, source) {\n    var _this3 = this;\n\n    // Pause and remove current playback technology\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n\n    var titleTechName = toTitleCase(techName);\n    var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1); // get rid of the HTML5 video tag as soon as we are using another tech\n\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n\n    this.techName_ = titleTechName; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    this.isReady_ = false; // if autoplay is a string we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n\n    var autoplay = typeof this.autoplay() === 'string' ? false : this.autoplay(); // Grab tech-specific options from player options and add source and parent element to use.\n\n    var techOptions = {\n      source: source,\n      autoplay: autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': this.id() + \"_\" + camelTechName + \"_api\",\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset,\n      'Promise': this.options_.Promise\n    };\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n      techOptions[props.getterName] = _this3[props.privateName];\n    });\n    assign(techOptions, this.options_[titleTechName]);\n    assign(techOptions, this.options_[camelTechName]);\n    assign(techOptions, this.options_[techName.toLowerCase()]);\n\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    } // Initialize tech instance\n\n\n    var TechClass = Tech.getTech(techName);\n\n    if (!TechClass) {\n      throw new Error(\"No Tech named '\" + titleTechName + \"' exists! '\" + titleTechName + \"' should be registered using videojs.registerTech()'\");\n    }\n\n    this.tech_ = new TechClass(techOptions); // player.triggerReady is always async, so don't need this to be async\n\n    this.tech_.ready(bind(this, this.handleTechReady_), true);\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_); // Listen to all HTML5-defined events and trigger them on the player\n\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n      _this3.on(_this3.tech_, event, _this3[\"handleTech\" + toTitleCase(event) + \"_\"]);\n    });\n    Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\n      _this3.on(_this3.tech_, event, function (eventObj) {\n        if (_this3.tech_.playbackRate() === 0 && _this3.tech_.seeking()) {\n          _this3.queuedCallbacks_.push({\n            callback: _this3[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"].bind(_this3),\n            event: eventObj\n          });\n\n          return;\n        }\n\n        _this3[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"](eventObj);\n      });\n    });\n    this.on(this.tech_, 'loadstart', this.handleTechLoadStart_);\n    this.on(this.tech_, 'sourceset', this.handleTechSourceset_);\n    this.on(this.tech_, 'waiting', this.handleTechWaiting_);\n    this.on(this.tech_, 'ended', this.handleTechEnded_);\n    this.on(this.tech_, 'seeking', this.handleTechSeeking_);\n    this.on(this.tech_, 'play', this.handleTechPlay_);\n    this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n    this.on(this.tech_, 'pause', this.handleTechPause_);\n    this.on(this.tech_, 'durationchange', this.handleTechDurationChange_);\n    this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n    this.on(this.tech_, 'enterpictureinpicture', this.handleTechEnterPictureInPicture_);\n    this.on(this.tech_, 'leavepictureinpicture', this.handleTechLeavePictureInPicture_);\n    this.on(this.tech_, 'error', this.handleTechError_);\n    this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n    this.on(this.tech_, 'posterchange', this.handleTechPosterChange_);\n    this.on(this.tech_, 'textdata', this.handleTechTextData_);\n    this.on(this.tech_, 'ratechange', this.handleTechRateChange_);\n    this.usingNativeControls(this.techGet_('controls'));\n\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    } // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n\n\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    } // Get rid of the original video tag reference after the first tech is loaded\n\n\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  }\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n  ;\n\n  _proto.unloadTech_ = function unloadTech_() {\n    var _this4 = this;\n\n    // Save the current text tracks so that we can reuse the same text tracks with the next tech\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n      _this4[props.privateName] = _this4[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n    this.isReady_ = false;\n    this.tech_.dispose();\n    this.tech_ = false;\n\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n\n    this.isPosterFromTech_ = false;\n  }\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n  ;\n\n  _proto.tech = function tech(safety) {\n    if (safety === undefined) {\n      log.warn(tsml(_templateObject$2()));\n    }\n\n    return this.tech_;\n  }\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n  ;\n\n  _proto.addTechControlsListeners_ = function addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_(); // Some browsers (Chrome & IE) don't trigger a click on a flash swf, but do\n    // trigger mousedown/up.\n    // http://stackoverflow.com/questions/1444562/javascript-onclick-event-over-flash-object\n    // Any touch events are set to block the mousedown event from happening\n\n    this.on(this.tech_, 'mouseup', this.handleTechClick_);\n    this.on(this.tech_, 'dblclick', this.handleTechDoubleClick_); // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n\n    this.on(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.handleTechTouchEnd_); // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n\n    this.on(this.tech_, 'tap', this.handleTechTap_);\n  }\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.handleTechTap_);\n    this.off(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.handleTechTouchEnd_);\n    this.off(this.tech_, 'mouseup', this.handleTechClick_);\n    this.off(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n  }\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n  ;\n\n  _proto.handleTechReady_ = function handleTechReady_() {\n    this.triggerReady(); // Keep the same volume as before\n\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    } // Look if the tech found a higher resolution poster while loading\n\n\n    this.handleTechPosterChange_(); // Update the duration if available\n\n    this.handleTechDurationChange_();\n  }\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n   * function will also trigger {@link Player#firstplay} if it is the first loadstart\n   * for a video.\n   *\n   * @fires Player#loadstart\n   * @fires Player#firstplay\n   * @listens Tech#loadstart\n   * @private\n   */\n  ;\n\n  _proto.handleTechLoadStart_ = function handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-seeking'); // reset the error state\n\n    this.error(null); // Update the duration\n\n    this.handleTechDurationChange_(); // If it's already playing we want to trigger a firstplay event now.\n    // The firstplay event relies on both the play and loadstart events\n    // which can happen in any order for a new source\n\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */\n      this.trigger('loadstart');\n      this.trigger('firstplay');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    } // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n\n\n    this.manualAutoplay_(this.autoplay());\n  }\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n  ;\n\n  _proto.manualAutoplay_ = function manualAutoplay_(type) {\n    var _this5 = this;\n\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    }\n\n    var muted = function muted() {\n      var previouslyMuted = _this5.muted();\n\n      _this5.muted(true);\n\n      var restoreMuted = function restoreMuted() {\n        _this5.muted(previouslyMuted);\n      }; // restore muted on play terminatation\n\n\n      _this5.playTerminatedQueue_.push(restoreMuted);\n\n      var mutedPromise = _this5.play();\n\n      if (!isPromise(mutedPromise)) {\n        return;\n      }\n\n      return mutedPromise[\"catch\"](restoreMuted);\n    };\n\n    var promise; // if muted defaults to true\n    // the only thing we can do is call play\n\n    if (type === 'any' && this.muted() !== true) {\n      promise = this.play();\n\n      if (isPromise(promise)) {\n        promise = promise[\"catch\"](muted);\n      }\n    } else if (type === 'muted' && this.muted() !== true) {\n      promise = muted();\n    } else {\n      promise = this.play();\n    }\n\n    if (!isPromise(promise)) {\n      return;\n    }\n\n    return promise.then(function () {\n      _this5.trigger({\n        type: 'autoplay-success',\n        autoplay: type\n      });\n    })[\"catch\"](function (e) {\n      _this5.trigger({\n        type: 'autoplay-failure',\n        autoplay: type\n      });\n    });\n  }\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n  ;\n\n  _proto.updateSourceCaches_ = function updateSourceCaches_(srcObj) {\n    if (srcObj === void 0) {\n      srcObj = '';\n    }\n\n    var src = srcObj;\n    var type = '';\n\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    } // make sure all the caches are set to default values\n    // to prevent null checking\n\n\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || []; // try to get the type of the src that was passed in\n\n    if (src && !type) {\n      type = findMimetype(this, src);\n    } // update `currentSource` cache always\n\n\n    this.cache_.source = mergeOptions({}, srcObj, {\n      src: src,\n      type: type\n    });\n    var matchingSources = this.cache_.sources.filter(function (s) {\n      return s.src && s.src === src;\n    });\n    var sourceElSources = [];\n    var sourceEls = this.$$('source');\n    var matchingSourceEls = [];\n\n    for (var i = 0; i < sourceEls.length; i++) {\n      var sourceObj = getAttributes(sourceEls[i]);\n      sourceElSources.push(sourceObj);\n\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    } // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n\n\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources; // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    } // update the tech `src` cache\n\n\n    this.cache_.src = src;\n  }\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {EventTarget~Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n  ;\n\n  _proto.handleTechSourceset_ = function handleTechSourceset_(event) {\n    var _this6 = this;\n\n    // only update the source cache when the source\n    // was not updated using the player api\n    if (!this.changingSrc_) {\n      var updateSourceCaches = function updateSourceCaches(src) {\n        return _this6.updateSourceCaches_(src);\n      };\n\n      var playerSrc = this.currentSource().src;\n      var eventSrc = event.src; // if we have a playerSrc that is not a blob, and a tech src that is a blob\n\n      if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n        // if both the tech source and the player source were updated we assume\n        // something like @videojs/http-streaming did the sourceset and skip updating the source cache.\n        if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n          updateSourceCaches = function updateSourceCaches() {};\n        }\n      } // update the source to the intial source right away\n      // in some cases this will be empty string\n\n\n      updateSourceCaches(eventSrc); // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n      // as this function will be called again.\n\n      if (!event.src) {\n        var updateCache = function updateCache(e) {\n          if (e.type !== 'sourceset') {\n            var techSrc = _this6.techGet('currentSrc');\n\n            _this6.lastSource_.tech = techSrc;\n\n            _this6.updateSourceCaches_(techSrc);\n          }\n\n          _this6.tech_.off(['sourceset', 'loadstart'], updateCache);\n        };\n\n        this.tech_.one(['sourceset', 'loadstart'], updateCache);\n      }\n    }\n\n    this.lastSource_ = {\n      player: this.currentSource().src,\n      tech: event.src\n    };\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  }\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   * @fires Player#firstplay\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n  ;\n\n  _proto.hasStarted = function hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n\n    if (request === this.hasStarted_) {\n      return;\n    }\n\n    this.hasStarted_ = request;\n\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n      this.trigger('firstplay');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  }\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n  ;\n\n  _proto.handleTechPlay_ = function handleTechPlay_() {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // hide the poster when the user hits play\n\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('play');\n  }\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n  ;\n\n  _proto.handleTechRateChange_ = function handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(function (queued) {\n        return queued.callback(queued.event);\n      });\n      this.queuedCallbacks_ = [];\n    }\n\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n\n    this.trigger('ratechange');\n  }\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n  ;\n\n  _proto.handleTechWaiting_ = function handleTechWaiting_() {\n    var _this7 = this;\n\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('waiting'); // Browsers may emit a timeupdate event after a waiting event. In order to prevent\n    // premature removal of the waiting class, wait for the time to change.\n\n    var timeWhenWaiting = this.currentTime();\n\n    var timeUpdateListener = function timeUpdateListener() {\n      if (timeWhenWaiting !== _this7.currentTime()) {\n        _this7.removeClass('vjs-waiting');\n\n        _this7.off('timeupdate', timeUpdateListener);\n      }\n    };\n\n    this.on('timeupdate', timeUpdateListener);\n  }\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n  ;\n\n  _proto.handleTechCanPlay_ = function handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplay');\n  }\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n  ;\n\n  _proto.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplaythrough');\n  }\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n  ;\n\n  _proto.handleTechPlaying_ = function handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('playing');\n  }\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n  ;\n\n  _proto.handleTechSeeking_ = function handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeking');\n  }\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n  ;\n\n  _proto.handleTechSeeked_ = function handleTechSeeked_() {\n    this.removeClass('vjs-seeking');\n    this.removeClass('vjs-ended');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeked');\n  }\n  /**\n   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#firstplay\n   * @listens Tech#firstplay\n   * @deprecated As of 6.0 firstplay event is deprecated.\n   *             As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\n   * @private\n   */\n  ;\n\n  _proto.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n    // If the first starttime attribute is specified\n    // then we will start at the given offset in seconds\n    if (this.options_.starttime) {\n      log.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n      this.currentTime(this.options_.starttime);\n    }\n\n    this.addClass('vjs-has-started');\n    /**\n     * Fired the first time a video is played. Not part of the HLS spec, and this is\n     * probably not the best implementation yet, so use sparingly. If you don't have a\n     * reason to prevent playback, use `myPlayer.one('play');` instead.\n     *\n     * @event Player#firstplay\n     * @deprecated As of 6.0 firstplay event is deprecated.\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('firstplay');\n  }\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n  ;\n\n  _proto.handleTechPause_ = function handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('pause');\n  }\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n  ;\n\n  _proto.handleTechEnded_ = function handleTechEnded_() {\n    this.addClass('vjs-ended');\n\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('ended');\n  }\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n  ;\n\n  _proto.handleTechDurationChange_ = function handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  }\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#mouseup\n   * @private\n   */\n  ;\n\n  _proto.handleTechClick_ = function handleTechClick_(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    } // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n\n\n    if (!this.controls_) {\n      return;\n    }\n\n    if (this.paused()) {\n      silencePromise(this.play());\n    } else {\n      this.pause();\n    }\n  }\n  /**\n   * Handle a double-click on the media element to enter/exit fullscreen\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#dblclick\n   * @private\n   */\n  ;\n\n  _proto.handleTechDoubleClick_ = function handleTechDoubleClick_(event) {\n    if (!this.controls_) {\n      return;\n    } // we do not want to toggle fullscreen state\n    // when double-clicking inside a control bar or a modal\n\n\n    var inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), function (el) {\n      return el.contains(event.target);\n    });\n\n    if (!inAllowedEls) {\n      /*\n       * options.userActions.doubleClick\n       *\n       * If `undefined` or `true`, double-click toggles fullscreen if controls are present\n       * Set to `false` to disable double-click handling\n       * Set to a function to substitute an external double-click handler\n       */\n      if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {\n        if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === 'function') {\n          this.options_.userActions.doubleClick.call(this, event);\n        } else if (this.isFullscreen()) {\n          this.exitFullscreen();\n        } else {\n          this.requestFullscreen();\n        }\n      }\n    }\n  }\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n  ;\n\n  _proto.handleTechTap_ = function handleTechTap_() {\n    this.userActive(!this.userActive());\n  }\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchStart_ = function handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  }\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchMove_ = function handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  }\n  /**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    event.preventDefault();\n  }\n  /**\n   * native click events on the SWF aren't triggered on IE11, Win8.1RT\n   * use stageclick events triggered from inside the SWF instead\n   *\n   * @private\n   * @listens stageclick\n   */\n  ;\n\n  _proto.handleStageClick_ = function handleStageClick_() {\n    this.reportUserActivity();\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.toggleFullscreenClass_ = function toggleFullscreenClass_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  }\n  /**\n   * when the document fschange event triggers it calls this\n   */\n  ;\n\n  _proto.documentFullscreenChange_ = function documentFullscreenChange_(e) {\n    var el = this.el();\n    var isFs = document[this.fsApi_.fullscreenElement] === el;\n\n    if (!isFs && el.matches) {\n      isFs = el.matches(':' + this.fsApi_.fullscreen);\n    } else if (!isFs && el.msMatchesSelector) {\n      isFs = el.msMatchesSelector(':' + this.fsApi_.fullscreen);\n    }\n\n    this.isFullscreen(isFs); // If cancelling fullscreen, remove event listener.\n\n    if (this.isFullscreen() === false) {\n      off(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    }\n\n    if (this.fsApi_.prefixed) {\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  }\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n    if (data) {\n      this.isFullscreen(data.isFullscreen);\n    }\n    /**\n     * Fired when going in and out of fullscreen.\n     *\n     * @event Player#fullscreenchange\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('fullscreenchange');\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.togglePictureInPictureClass_ = function togglePictureInPictureClass_() {\n    if (this.isInPictureInPicture()) {\n      this.addClass('vjs-picture-in-picture');\n    } else {\n      this.removeClass('vjs-picture-in-picture');\n    }\n  }\n  /**\n   * Handle Tech Enter Picture-in-Picture.\n   *\n   * @param {EventTarget~Event} event\n   *        the enterpictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#enterpictureinpicture\n   */\n  ;\n\n  _proto.handleTechEnterPictureInPicture_ = function handleTechEnterPictureInPicture_(event) {\n    this.isInPictureInPicture(true);\n  }\n  /**\n   * Handle Tech Leave Picture-in-Picture.\n   *\n   * @param {EventTarget~Event} event\n   *        the leavepictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#leavepictureinpicture\n   */\n  ;\n\n  _proto.handleTechLeavePictureInPicture_ = function handleTechLeavePictureInPicture_(event) {\n    this.isInPictureInPicture(false);\n  }\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n  ;\n\n  _proto.handleTechError_ = function handleTechError_() {\n    var error = this.tech_.error();\n    this.error(error);\n  }\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n  ;\n\n  _proto.handleTechTextData_ = function handleTechTextData_() {\n    var data = null;\n\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('textdata', data);\n  }\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n  ;\n\n  _proto.getCache = function getCache() {\n    return this.cache_;\n  }\n  /**\n   * Resets the internal cache object.\n   *\n   * Using this function outside the player constructor or reset method may\n   * have unintended side-effects.\n   *\n   * @private\n   */\n  ;\n\n  _proto.resetCache_ = function resetCache_() {\n    this.cache_ = {\n      // Right now, the currentTime is not _really_ cached because it is always\n      // retrieved from the tech (see: currentTime). However, for completeness,\n      // we set it to zero here to ensure that if we do start actually caching\n      // it, we reset it along with everything else.\n      currentTime: 0,\n      inactivityTimeout: this.options_.inactivityTimeout,\n      duration: NaN,\n      lastVolume: 1,\n      lastPlaybackRate: this.defaultPlaybackRate(),\n      media: null,\n      src: '',\n      source: {},\n      sources: [],\n      volume: 1\n    };\n  }\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n  ;\n\n  _proto.techCall_ = function techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log(e);\n        throw e;\n      }\n    }, true);\n  }\n  /**\n   * Get calls can't wait for the tech, and sometimes don't need to.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {Function|undefined}\n   *         the method or undefined\n   *\n   * @private\n   */\n  ;\n\n  _proto.techGet_ = function techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n\n    if (method in allowedGetters) {\n      return get(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    } // Flash likes to die and reload when you hide or reposition it.\n    // In these cases the object methods go away and we get errors.\n    // When that happens we'll catch the errors and inform tech that it's not ready any more.\n\n\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log(\"Video.js: \" + method + \" method not defined for \" + this.techName_ + \" playback technology.\", e);\n        throw e;\n      } // When a method isn't available on the object it throws a TypeError\n\n\n      if (e.name === 'TypeError') {\n        log(\"Video.js: \" + method + \" unavailable on \" + this.techName_ + \" playback technology element.\", e);\n        this.tech_.isReady_ = false;\n        throw e;\n      } // If error unknown, just log and throw\n\n\n      log(e);\n      throw e;\n    }\n  }\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a promise if the browser supports Promises (or one\n   *         was passed in as an option). This promise will be resolved on\n   *         the return value of play. If this is undefined it will fulfill the\n   *         promise chain otherwise the promise chain will be fulfilled when\n   *         the promise from play is fulfilled.\n   */\n  ;\n\n  _proto.play = function play() {\n    var _this8 = this;\n\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      return new PromiseClass(function (resolve) {\n        _this8.play_(resolve);\n      });\n    }\n\n    return this.play_();\n  }\n  /**\n   * The actual logic for play, takes a callback that will be resolved on the\n   * return value of play. This allows us to resolve to the play promise if there\n   * is one on modern browsers.\n   *\n   * @private\n   * @param {Function} [callback]\n   *        The callback that should be called when the techs play is actually called\n   */\n  ;\n\n  _proto.play_ = function play_(callback) {\n    var _this9 = this;\n\n    if (callback === void 0) {\n      callback = silencePromise;\n    }\n\n    this.playCallbacks_.push(callback);\n    var isSrcReady = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc())); // treat calls to play_ somewhat like the `one` event function\n\n    if (this.waitToPlay_) {\n      this.off(['ready', 'loadstart'], this.waitToPlay_);\n      this.waitToPlay_ = null;\n    } // if the player/tech is not ready or the src itself is not ready\n    // queue up a call to play on `ready` or `loadstart`\n\n\n    if (!this.isReady_ || !isSrcReady) {\n      this.waitToPlay_ = function (e) {\n        _this9.play_();\n      };\n\n      this.one(['ready', 'loadstart'], this.waitToPlay_); // if we are in Safari, there is a high chance that loadstart will trigger after the gesture timeperiod\n      // in that case, we need to prime the video element by calling load so it'll be ready in time\n\n      if (!isSrcReady && (IS_ANY_SAFARI || IS_IOS)) {\n        this.load();\n      }\n\n      return;\n    } // If the player/tech is ready and we have a source, we can attempt playback.\n\n\n    var val = this.techGet_('play'); // play was terminated if the returned value is null\n\n    if (val === null) {\n      this.runPlayTerminatedQueue_();\n    } else {\n      this.runPlayCallbacks_(val);\n    }\n  }\n  /**\n   * These functions will be run when if play is terminated. If play\n   * runPlayCallbacks_ is run these function will not be run. This allows us\n   * to differenciate between a terminated play and an actual call to play.\n   */\n  ;\n\n  _proto.runPlayTerminatedQueue_ = function runPlayTerminatedQueue_() {\n    var queue = this.playTerminatedQueue_.slice(0);\n    this.playTerminatedQueue_ = [];\n    queue.forEach(function (q) {\n      q();\n    });\n  }\n  /**\n   * When a callback to play is delayed we have to run these\n   * callbacks when play is actually called on the tech. This function\n   * runs the callbacks that were delayed and accepts the return value\n   * from the tech.\n   *\n   * @param {undefined|Promise} val\n   *        The return value from the tech.\n   */\n  ;\n\n  _proto.runPlayCallbacks_ = function runPlayCallbacks_(val) {\n    var callbacks = this.playCallbacks_.slice(0);\n    this.playCallbacks_ = []; // clear play terminatedQueue since we finished a real play\n\n    this.playTerminatedQueue_ = [];\n    callbacks.forEach(function (cb) {\n      cb(val);\n    });\n  }\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n  ;\n\n  _proto.pause = function pause() {\n    this.techCall_('pause');\n  }\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n  ;\n\n  _proto.paused = function paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  }\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n  ;\n\n  _proto.played = function played() {\n    return this.techGet_('played') || createTimeRanges(0, 0);\n  }\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        whether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n  ;\n\n  _proto.scrubbing = function scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n\n    this.scrubbing_ = !!isScrubbing;\n\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  }\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n  ;\n\n  _proto.currentTime = function currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n\n      this.techCall_('setCurrentTime', seconds);\n      return;\n    } // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n\n\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  }\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and in the case of Flash, may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n  ;\n\n  _proto.duration = function duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n\n    seconds = parseFloat(seconds); // Standardize on Infinity for signaling video is live\n\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing (esp. Flash)\n      this.cache_.duration = seconds;\n\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n\n        if (this.options_.liveui && this.player_.liveTracker) {\n          this.addClass('vjs-liveui');\n        }\n      } else {\n        this.removeClass('vjs-live');\n        this.removeClass('vjs-liveui');\n      }\n\n      if (!isNaN(seconds)) {\n        // Do not fire durationchange unless the duration value is known.\n        // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n        /**\n         * @event Player#durationchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('durationchange');\n      }\n    }\n  }\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n  ;\n\n  _proto.remainingTime = function remainingTime() {\n    return this.duration() - this.currentTime();\n  }\n  /**\n   * A remaining time function that is intented to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n  ;\n\n  _proto.remainingTimeDisplay = function remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  } //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */\n  ;\n\n  _proto.buffered = function buffered() {\n    var buffered = this.techGet_('buffered');\n\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges(0, 0);\n    }\n\n    return buffered;\n  }\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is buffered 0 being 0% and 1 being 100%\n   */\n  ;\n\n  _proto.bufferedPercent = function bufferedPercent$1() {\n    return bufferedPercent(this.buffered(), this.duration());\n  }\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n  ;\n\n  _proto.bufferedEnd = function bufferedEnd() {\n    var buffered = this.buffered();\n    var duration = this.duration();\n    var end = buffered.end(buffered.length - 1);\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    return end;\n  }\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n  ;\n\n  _proto.volume = function volume(percentAsDecimal) {\n    var vol;\n\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n\n      return;\n    } // Default to 1 when returning current volume.\n\n\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  }\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n  ;\n\n  _proto.muted = function muted(_muted) {\n    if (_muted !== undefined) {\n      this.techCall_('setMuted', _muted);\n      return;\n    }\n\n    return this.techGet_('muted') || false;\n  }\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on initial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n  ;\n\n  _proto.defaultMuted = function defaultMuted(_defaultMuted) {\n    if (_defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', _defaultMuted);\n    }\n\n    return this.techGet_('defaultMuted') || false;\n  }\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n  ;\n\n  _proto.lastVolume_ = function lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n\n    return this.cache_.lastVolume;\n  }\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS, so not our flash swf)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n  ;\n\n  _proto.supportsFullScreen = function supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  }\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n  ;\n\n  _proto.isFullscreen = function isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      this.isFullscreen_ = !!isFS;\n      this.toggleFullscreenClass_();\n      return;\n    }\n\n    return !!this.isFullscreen_;\n  }\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @param  {Object} [fullscreenOptions]\n   *         Override the player fullscreen options\n   *\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.requestFullscreen = function requestFullscreen(fullscreenOptions) {\n    var fsOptions;\n    this.isFullscreen(true);\n\n    if (this.fsApi_.requestFullscreen) {\n      // the browser supports going fullscreen at the element level so we can\n      // take the controls fullscreen as well as the video\n      // Trigger fullscreenchange event after change\n      // We have to specifically add this each time, and remove\n      // when canceling fullscreen. Otherwise if there's multiple\n      // players on a page, they would all be reacting to the same fullscreen\n      // events\n      on(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_); // only pass FullscreenOptions to requestFullscreen if it isn't prefixed\n\n      if (!this.fsApi_.prefixed) {\n        fsOptions = this.options_.fullscreen && this.options_.fullscreen.options || {};\n\n        if (fullscreenOptions !== undefined) {\n          fsOptions = fullscreenOptions;\n        }\n      }\n\n      silencePromise(this.el_[this.fsApi_.requestFullscreen](fsOptions));\n    } else if (this.tech_.supportsFullScreen()) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('fullscreenchange');\n    }\n  }\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.exitFullscreen = function exitFullscreen() {\n    this.isFullscreen(false); // Check for browser element fullscreen support\n\n    if (this.fsApi_.requestFullscreen) {\n      silencePromise(document[this.fsApi_.exitFullscreen]());\n    } else if (this.tech_.supportsFullScreen()) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('fullscreenchange');\n    }\n  }\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n  ;\n\n  _proto.enterFullWindow = function enterFullWindow() {\n    this.isFullWindow = true; // Storing original doc overflow value to return to when fullscreen is off\n\n    this.docOrigOverflow = document.documentElement.style.overflow; // Add listener for esc key to exit fullscreen\n\n    on(document, 'keydown', this.boundFullWindowOnEscKey_); // Hide any scroll bars\n\n    document.documentElement.style.overflow = 'hidden'; // Apply fullscreen styles\n\n    addClass(document.body, 'vjs-full-window');\n    /**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('enterFullWindow');\n  }\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n  ;\n\n  _proto.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      if (this.isFullscreen() === true) {\n        this.exitFullscreen();\n      } else {\n        this.exitFullWindow();\n      }\n    }\n  }\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n  ;\n\n  _proto.exitFullWindow = function exitFullWindow() {\n    this.isFullWindow = false;\n    off(document, 'keydown', this.boundFullWindowOnEscKey_); // Unhide scroll bars.\n\n    document.documentElement.style.overflow = this.docOrigOverflow; // Remove fullscreen styles\n\n    removeClass(document.body, 'vjs-full-window'); // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n\n    /**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('exitFullWindow');\n  }\n  /**\n   * Check if the player is in Picture-in-Picture mode or tell the player that it\n   * is or is not in Picture-in-Picture mode.\n   *\n   * @param  {boolean} [isPiP]\n   *         Set the players current Picture-in-Picture state\n   *\n   * @return {boolean}\n   *         - true if Picture-in-Picture is on and getting\n   *         - false if Picture-in-Picture is off and getting\n   */\n  ;\n\n  _proto.isInPictureInPicture = function isInPictureInPicture(isPiP) {\n    if (isPiP !== undefined) {\n      this.isInPictureInPicture_ = !!isPiP;\n      this.togglePictureInPictureClass_();\n      return;\n    }\n\n    return !!this.isInPictureInPicture_;\n  }\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#enterpictureinpicture\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    if ('pictureInPictureEnabled' in document) {\n      /**\n       * This event fires when the player enters picture in picture mode\n       *\n       * @event Player#enterpictureinpicture\n       * @type {EventTarget~Event}\n       */\n      return this.techGet_('requestPictureInPicture');\n    }\n  }\n  /**\n   * Exit Picture-in-Picture mode.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#leavepictureinpicture\n   *\n   * @return {Promise}\n   *         A promise.\n   */\n  ;\n\n  _proto.exitPictureInPicture = function exitPictureInPicture() {\n    if ('pictureInPictureEnabled' in document) {\n      /**\n       * This event fires when the player leaves picture in picture mode\n       *\n       * @event Player#leavepictureinpicture\n       * @type {EventTarget~Event}\n       */\n      return document.exitPictureInPicture();\n    }\n  }\n  /**\n   * Called when this Player has focus and a key gets pressed down, or when\n   * any Component of this player receives a key press that it doesn't handle.\n   * This allows player-wide hotkeys (either as defined below, or optionally\n   * by an external function).\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    var userActions = this.options_.userActions; // Bail out if hotkeys are not configured.\n\n    if (!userActions || !userActions.hotkeys) {\n      return;\n    } // Function that determines whether or not to exclude an element from\n    // hotkeys handling.\n\n\n    var excludeElement = function excludeElement(el) {\n      var tagName = el.tagName.toLowerCase(); // These tags will be excluded entirely.\n\n      var excludedTags = ['textarea']; // Inputs matching these types will still trigger hotkey handling as\n      // they are not text inputs.\n\n      var allowedInputTypes = ['button', 'checkbox', 'hidden', 'radio', 'reset', 'submit'];\n\n      if (tagName === 'input') {\n        return allowedInputTypes.indexOf(el.type) === -1;\n      }\n\n      return excludedTags.indexOf(tagName) !== -1;\n    }; // Bail out if the user is focused on an interactive form element.\n\n\n    if (excludeElement(this.el_.ownerDocument.activeElement)) {\n      return;\n    }\n\n    if (typeof userActions.hotkeys === 'function') {\n      userActions.hotkeys.call(this, event);\n    } else {\n      this.handleHotkeys(event);\n    }\n  }\n  /**\n   * Called when this Player receives a hotkey keydown event.\n   * Supported player-wide hotkeys are:\n   *\n   *   f          - toggle fullscreen\n   *   m          - toggle mute\n   *   k or Space - toggle play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleHotkeys = function handleHotkeys(event) {\n    var hotkeys = this.options_.userActions ? this.options_.userActions.hotkeys : {}; // set fullscreenKey, muteKey, playPauseKey from `hotkeys`, use defaults if not set\n\n    var _hotkeys$fullscreenKe = hotkeys.fullscreenKey,\n        fullscreenKey = _hotkeys$fullscreenKe === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'f');\n    } : _hotkeys$fullscreenKe,\n        _hotkeys$muteKey = hotkeys.muteKey,\n        muteKey = _hotkeys$muteKey === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'm');\n    } : _hotkeys$muteKey,\n        _hotkeys$playPauseKey = hotkeys.playPauseKey,\n        playPauseKey = _hotkeys$playPauseKey === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'k') || keycode.isEventKey(keydownEvent, 'Space');\n    } : _hotkeys$playPauseKey;\n\n    if (fullscreenKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var FSToggle = Component.getComponent('FullscreenToggle');\n\n      if (document[this.fsApi_.fullscreenEnabled] !== false) {\n        FSToggle.prototype.handleClick.call(this, event);\n      }\n    } else if (muteKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var MuteToggle = Component.getComponent('MuteToggle');\n      MuteToggle.prototype.handleClick.call(this, event);\n    } else if (playPauseKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var PlayToggle = Component.getComponent('PlayToggle');\n      PlayToggle.prototype.handleClick.call(this, event);\n    }\n  }\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  ;\n\n  _proto.canPlayType = function canPlayType(type) {\n    var can; // Loop through each playback technology in the options order\n\n    for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      var techName = j[i];\n      var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n\n      if (!tech) {\n        tech = Component.getComponent(techName);\n      } // Check if the current tech is defined before continuing\n\n\n      if (!tech) {\n        log.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n        continue;\n      } // Check if the browser supports this technology\n\n\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n    }\n\n    return '';\n  }\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n  ;\n\n  _proto.selectSource = function selectSource(sources) {\n    var _this10 = this;\n\n    // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n    var techs = this.options_.techOrder.map(function (techName) {\n      return [techName, Tech.getTech(techName)];\n    }).filter(function (_ref) {\n      var techName = _ref[0],\n          tech = _ref[1];\n\n      // Check if the current tech is defined before continuing\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n\n      log.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n      return false;\n    }); // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n\n    var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n      var found;\n      outerArray.some(function (outerChoice) {\n        return innerArray.some(function (innerChoice) {\n          found = tester(outerChoice, innerChoice);\n\n          if (found) {\n            return true;\n          }\n        });\n      });\n      return found;\n    };\n\n    var foundSourceAndTech;\n\n    var flip = function flip(fn) {\n      return function (a, b) {\n        return fn(b, a);\n      };\n    };\n\n    var finder = function finder(_ref2, source) {\n      var techName = _ref2[0],\n          tech = _ref2[1];\n\n      if (tech.canPlaySource(source, _this10.options_[techName.toLowerCase()])) {\n        return {\n          source: source,\n          tech: techName\n        };\n      }\n    }; // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n\n\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n\n    return foundSourceAndTech || false;\n  }\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n  ;\n\n  _proto.src = function src(source) {\n    var _this11 = this;\n\n    // getter usage\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    } // filter out invalid sources and turn our source into\n    // an array of source objects\n\n\n    var sources = filterSource(source); // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({\n          code: 4,\n          message: this.localize(this.options_.notSupportedMessage)\n        });\n      }, 0);\n      return;\n    } // intial sources\n\n\n    this.changingSrc_ = true;\n    this.cache_.sources = sources;\n    this.updateSourceCaches_(sources[0]); // middlewareSource is the source after it has been changed by middleware\n\n    setSource(this, sources[0], function (middlewareSource, mws) {\n      _this11.middleware_ = mws; // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n\n      _this11.cache_.sources = sources;\n\n      _this11.updateSourceCaches_(middlewareSource);\n\n      var err = _this11.src_(middlewareSource);\n\n      if (err) {\n        if (sources.length > 1) {\n          return _this11.src(sources.slice(1));\n        }\n\n        _this11.changingSrc_ = false; // We need to wrap this in a timeout to give folks a chance to add error event handlers\n\n        _this11.setTimeout(function () {\n          this.error({\n            code: 4,\n            message: this.localize(this.options_.notSupportedMessage)\n          });\n        }, 0); // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n\n\n        _this11.triggerReady();\n\n        return;\n      }\n\n      setTech(mws, _this11.tech_);\n    });\n  }\n  /**\n   * Set the source object on the tech, returns a boolean that indicates whether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n  ;\n\n  _proto.src_ = function src_(source) {\n    var _this12 = this;\n\n    var sourceTech = this.selectSource([source]);\n\n    if (!sourceTech) {\n      return true;\n    }\n\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true; // load this technology with the chosen source\n\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(function () {\n        _this12.changingSrc_ = false;\n      });\n      return false;\n    } // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n\n\n    this.ready(function () {\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n\n      this.changingSrc_ = false;\n    }, true);\n    return false;\n  }\n  /**\n   * Begin loading the src data.\n   */\n  ;\n\n  _proto.load = function load() {\n    this.techCall_('load');\n  }\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * removes all the text tracks in the existing `tech`,\n   * and calls `reset` on the `tech`.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    var _this13 = this;\n\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (this.paused() || !PromiseClass) {\n      this.doReset_();\n    } else {\n      var playPromise = this.play();\n      silencePromise(playPromise.then(function () {\n        return _this13.doReset_();\n      }));\n    }\n  };\n\n  _proto.doReset_ = function doReset_() {\n    if (this.tech_) {\n      this.tech_.clearTracks('text');\n    }\n\n    this.resetCache_();\n    this.poster('');\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n    this.resetControlBarUI_();\n\n    if (isEvented(this)) {\n      this.trigger('playerreset');\n    }\n  }\n  /**\n   * Reset Control Bar's UI by calling sub-methods that reset\n   * all of Control Bar's components\n   */\n  ;\n\n  _proto.resetControlBarUI_ = function resetControlBarUI_() {\n    this.resetProgressBar_();\n    this.resetPlaybackRate_();\n    this.resetVolumeBar_();\n  }\n  /**\n   * Reset tech's progress so progress bar is reset in the UI\n   */\n  ;\n\n  _proto.resetProgressBar_ = function resetProgressBar_() {\n    this.currentTime(0);\n    var _this$controlBar = this.controlBar,\n        durationDisplay = _this$controlBar.durationDisplay,\n        remainingTimeDisplay = _this$controlBar.remainingTimeDisplay;\n\n    if (durationDisplay) {\n      durationDisplay.updateContent();\n    }\n\n    if (remainingTimeDisplay) {\n      remainingTimeDisplay.updateContent();\n    }\n  }\n  /**\n   * Reset Playback ratio\n   */\n  ;\n\n  _proto.resetPlaybackRate_ = function resetPlaybackRate_() {\n    this.playbackRate(this.defaultPlaybackRate());\n    this.handleTechRateChange_();\n  }\n  /**\n   * Reset Volume bar\n   */\n  ;\n\n  _proto.resetVolumeBar_ = function resetVolumeBar_() {\n    this.volume(1.0);\n    this.trigger('volumechange');\n  }\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n  ;\n\n  _proto.currentSources = function currentSources() {\n    var source = this.currentSource();\n    var sources = []; // assume `{}` or `{ src }`\n\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n\n    return this.cache_.sources || sources;\n  }\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n  ;\n\n  _proto.currentSource = function currentSource() {\n    return this.cache_.source || {};\n  }\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n  ;\n\n  _proto.currentSrc = function currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  }\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n  ;\n\n  _proto.currentType = function currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  }\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false means that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n  ;\n\n  _proto.preload = function preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n\n    return this.techGet_('preload');\n  }\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|string} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string}\n   *         The current value of autoplay when getting\n   */\n  ;\n\n  _proto.autoplay = function autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n\n    var techAutoplay; // if the value is a valid string set it to that\n\n    if (typeof value === 'string' && /(any|play|muted)/.test(value)) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(value);\n      techAutoplay = false; // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false; // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n\n    techAutoplay = typeof techAutoplay === 'undefined' ? this.options_.autoplay : techAutoplay; // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  }\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n  ;\n\n  _proto.playsinline = function playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n\n    return this.techGet_('playsinline');\n  }\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {boolean}\n   *         The current value of loop when getting\n   */\n  ;\n\n  _proto.loop = function loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n\n    return this.techGet_('loop');\n  }\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n  ;\n\n  _proto.poster = function poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    } // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n\n\n    if (!src) {\n      src = '';\n    }\n\n    if (src === this.poster_) {\n      return;\n    } // update the internal poster variable\n\n\n    this.poster_ = src; // update the tech's poster\n\n    this.techCall_('setPoster', src);\n    this.isPosterFromTech_ = false; // alert components that the poster has been set\n\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('posterchange');\n  }\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n  ;\n\n  _proto.handleTechPosterChange_ = function handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      var newPoster = this.tech_.poster() || '';\n\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true; // Let components know the poster has changed\n\n        this.trigger('posterchange');\n      }\n    }\n  }\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n  ;\n\n  _proto.controls = function controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.controls_ === bool) {\n      return;\n    }\n\n    this.controls_ = bool;\n\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsenabled');\n\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsdisabled');\n\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  }\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls), Flash, or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n  ;\n\n  _proto.usingNativeControls = function usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n\n    this.usingNativeControls_ = bool;\n\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingcustomcontrols');\n    }\n  }\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n  ;\n\n  _proto.error = function error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    } // Suppress the first error message for no compatible source until\n    // user interaction\n\n\n    if (this.options_.suppressNotSupportedError && err && err.message && err.message === this.localize(this.options_.notSupportedMessage)) {\n      var triggerSuppressedError = function triggerSuppressedError() {\n        this.error(err);\n      };\n\n      this.options_.suppressNotSupportedError = false;\n      this.any(['click', 'touchstart'], triggerSuppressedError);\n      this.one('loadstart', function () {\n        this.off(['click', 'touchstart'], triggerSuppressedError);\n      });\n      return;\n    } // restoring to default\n\n\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n\n      return;\n    }\n\n    this.error_ = new MediaError(err); // add the vjs-error classname to the player\n\n    this.addClass('vjs-error'); // log the name of the error type and any message\n    // IE11 logs \"[object object]\" and required you to expand message to see error object\n\n    log.error(\"(CODE:\" + this.error_.code + \" \" + MediaError.errorTypes[this.error_.code] + \")\", this.error_.message, this.error_);\n    /**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('error');\n    return;\n  }\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n  ;\n\n  _proto.reportUserActivity = function reportUserActivity(event) {\n    this.userActivity_ = true;\n  }\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n  ;\n\n  _proto.userActive = function userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n\n    bool = !!bool;\n\n    if (bool === this.userActive_) {\n      return;\n    }\n\n    this.userActive_ = bool;\n\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('useractive');\n      return;\n    } // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n\n\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('userinactive');\n  }\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n  ;\n\n  _proto.listenForUserActivity_ = function listenForUserActivity_() {\n    var mouseInProgress;\n    var lastMoveX;\n    var lastMoveY;\n    var handleActivity = bind(this, this.reportUserActivity);\n\n    var handleMouseMove = function handleMouseMove(e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n\n    var handleMouseDown = function handleMouseDown() {\n      handleActivity(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(mouseInProgress); // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n\n    var handleMouseUp = function handleMouseUp(event) {\n      handleActivity(); // Stop the interval that maintains activity if the mouse/touch is down\n\n      this.clearInterval(mouseInProgress);\n    }; // Any mouse movement will be considered user activity\n\n\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUp);\n    var controlBar = this.getChild('controlBar'); // Fixes bug on Android & iOS where when tapping progressBar (when control bar is displayed)\n    // controlBar would no longer be hidden by default timeout.\n\n    if (controlBar && !IS_IOS && !IS_ANDROID) {\n      controlBar.on('mouseenter', function (event) {\n        this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout;\n        this.player().options_.inactivityTimeout = 0;\n      });\n      controlBar.on('mouseleave', function (event) {\n        this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout;\n      });\n    } // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n\n\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity); // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n\n    var inactivityTimeout;\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      } // Reset the activity tracker\n\n\n      this.userActivity_ = false; // If the user state was inactive, set the state to active\n\n      this.userActive(true); // Clear any existing inactivity timeout to start the timer over\n\n      this.clearTimeout(inactivityTimeout);\n      var timeout = this.options_.inactivityTimeout;\n\n      if (timeout <= 0) {\n        return;\n      } // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n\n\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  }\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n  ;\n\n  _proto.playbackRate = function playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n\n    return 1.0;\n  }\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n  ;\n\n  _proto.defaultPlaybackRate = function defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n\n    return 1.0;\n  }\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n  ;\n\n  _proto.isAudio = function isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n\n    return !!this.isAudio_;\n  }\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  }\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}. It will\n   * automatically removed from the video element whenever the source changes, unless\n   * manualCleanup is set to false.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   *             to \"false\" in upcoming versions of Video.js\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  }\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(obj) {\n    if (obj === void 0) {\n      obj = {};\n    }\n\n    var _obj = obj,\n        track = _obj.track;\n\n    if (!track) {\n      track = obj;\n    } // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  }\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n  ;\n\n  _proto.videoWidth = function videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  }\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n  ;\n\n  _proto.videoHeight = function videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  }\n  /**\n   * The player's language code\n   * NOTE: The language should be set in the player options if you want the\n   * the controls to be built with a specific language. Changing the language\n   * later will not update controls text.\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n  ;\n\n  _proto.language = function language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n\n    this.language_ = String(code).toLowerCase();\n  }\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n  ;\n\n  _proto.languages = function languages() {\n    return mergeOptions(Player.prototype.options_.languages, this.languages_);\n  }\n  /**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n  ;\n\n  _proto.toJSON = function toJSON() {\n    var options = mergeOptions(this.options_);\n    var tracks = options.tracks;\n    options.tracks = [];\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // deep merge tracks and null out player so no circular references\n\n      track = mergeOptions(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n\n    return options;\n  }\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n  ;\n\n  _proto.createModal = function createModal(content, options) {\n    var _this14 = this;\n\n    options = options || {};\n    options.content = content || '';\n    var modal = new ModalDialog(this, options);\n    this.addChild(modal);\n    modal.on('dispose', function () {\n      _this14.removeChild(modal);\n    });\n    modal.open();\n    return modal;\n  }\n  /**\n   * Change breakpoint classes when the player resizes.\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateCurrentBreakpoint_ = function updateCurrentBreakpoint_() {\n    if (!this.responsive()) {\n      return;\n    }\n\n    var currentBreakpoint = this.currentBreakpoint();\n    var currentWidth = this.currentWidth();\n\n    for (var i = 0; i < BREAKPOINT_ORDER.length; i++) {\n      var candidateBreakpoint = BREAKPOINT_ORDER[i];\n      var maxWidth = this.breakpoints_[candidateBreakpoint];\n\n      if (currentWidth <= maxWidth) {\n        // The current breakpoint did not change, nothing to do.\n        if (currentBreakpoint === candidateBreakpoint) {\n          return;\n        } // Only remove a class if there is a current breakpoint.\n\n\n        if (currentBreakpoint) {\n          this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n        }\n\n        this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n        this.breakpoint_ = candidateBreakpoint;\n        break;\n      }\n    }\n  }\n  /**\n   * Removes the current breakpoint.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeCurrentBreakpoint_ = function removeCurrentBreakpoint_() {\n    var className = this.currentBreakpointClass();\n    this.breakpoint_ = '';\n\n    if (className) {\n      this.removeClass(className);\n    }\n  }\n  /**\n   * Get or set breakpoints on the player.\n   *\n   * Calling this method with an object or `true` will remove any previous\n   * custom breakpoints and start from the defaults again.\n   *\n   * @param  {Object|boolean} [breakpoints]\n   *         If an object is given, it can be used to provide custom\n   *         breakpoints. If `true` is given, will set default breakpoints.\n   *         If this argument is not given, will simply return the current\n   *         breakpoints.\n   *\n   * @param  {number} [breakpoints.tiny]\n   *         The maximum width for the \"vjs-layout-tiny\" class.\n   *\n   * @param  {number} [breakpoints.xsmall]\n   *         The maximum width for the \"vjs-layout-x-small\" class.\n   *\n   * @param  {number} [breakpoints.small]\n   *         The maximum width for the \"vjs-layout-small\" class.\n   *\n   * @param  {number} [breakpoints.medium]\n   *         The maximum width for the \"vjs-layout-medium\" class.\n   *\n   * @param  {number} [breakpoints.large]\n   *         The maximum width for the \"vjs-layout-large\" class.\n   *\n   * @param  {number} [breakpoints.xlarge]\n   *         The maximum width for the \"vjs-layout-x-large\" class.\n   *\n   * @param  {number} [breakpoints.huge]\n   *         The maximum width for the \"vjs-layout-huge\" class.\n   *\n   * @return {Object}\n   *         An object mapping breakpoint names to maximum width values.\n   */\n  ;\n\n  _proto.breakpoints = function breakpoints(_breakpoints) {\n    // Used as a getter.\n    if (_breakpoints === undefined) {\n      return assign(this.breakpoints_);\n    }\n\n    this.breakpoint_ = '';\n    this.breakpoints_ = assign({}, DEFAULT_BREAKPOINTS, _breakpoints); // When breakpoint definitions change, we need to update the currently\n    // selected breakpoint.\n\n    this.updateCurrentBreakpoint_(); // Clone the breakpoints before returning.\n\n    return assign(this.breakpoints_);\n  }\n  /**\n   * Get or set a flag indicating whether or not this player should adjust\n   * its UI based on its dimensions.\n   *\n   * @param  {boolean} value\n   *         Should be `true` if the player should adjust its UI based on its\n   *         dimensions; otherwise, should be `false`.\n   *\n   * @return {boolean}\n   *         Will be `true` if this player should adjust its UI based on its\n   *         dimensions; otherwise, will be `false`.\n   */\n  ;\n\n  _proto.responsive = function responsive(value) {\n    // Used as a getter.\n    if (value === undefined) {\n      return this.responsive_;\n    }\n\n    value = Boolean(value);\n    var current = this.responsive_; // Nothing changed.\n\n    if (value === current) {\n      return;\n    } // The value actually changed, set it.\n\n\n    this.responsive_ = value; // Start listening for breakpoints and set the initial breakpoint if the\n    // player is now responsive.\n\n    if (value) {\n      this.on('playerresize', this.updateCurrentBreakpoint_);\n      this.updateCurrentBreakpoint_(); // Stop listening for breakpoints if the player is no longer responsive.\n    } else {\n      this.off('playerresize', this.updateCurrentBreakpoint_);\n      this.removeCurrentBreakpoint_();\n    }\n\n    return value;\n  }\n  /**\n   * Get current breakpoint name, if any.\n   *\n   * @return {string}\n   *         If there is currently a breakpoint set, returns a the key from the\n   *         breakpoints object matching it. Otherwise, returns an empty string.\n   */\n  ;\n\n  _proto.currentBreakpoint = function currentBreakpoint() {\n    return this.breakpoint_;\n  }\n  /**\n   * Get the current breakpoint class name.\n   *\n   * @return {string}\n   *         The matching class name (e.g. `\"vjs-layout-tiny\"` or\n   *         `\"vjs-layout-large\"`) for the current breakpoint. Empty string if\n   *         there is no current breakpoint.\n   */\n  ;\n\n  _proto.currentBreakpointClass = function currentBreakpointClass() {\n    return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n  }\n  /**\n   * An object that describes a single piece of media.\n   *\n   * Properties that are not part of this type description will be retained; so,\n   * this can be viewed as a generic metadata storage mechanism as well.\n   *\n   * @see      {@link https://wicg.github.io/mediasession/#the-mediametadata-interface}\n   * @typedef  {Object} Player~MediaObject\n   *\n   * @property {string} [album]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {string} [artist]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [artwork]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API. If not specified, will be populated via the `poster`, if\n   *           available.\n   *\n   * @property {string} [poster]\n   *           URL to an image that will display before playback.\n   *\n   * @property {Tech~SourceObject|Tech~SourceObject[]|string} [src]\n   *           A single source object, an array of source objects, or a string\n   *           referencing a URL to a media source. It is _highly recommended_\n   *           that an object or array of objects is used here, so that source\n   *           selection algorithms can take the `type` into account.\n   *\n   * @property {string} [title]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [textTracks]\n   *           An array of objects to be used to create text tracks, following\n   *           the {@link https://www.w3.org/TR/html50/embedded-content-0.html#the-track-element|native track element format}.\n   *           For ease of removal, these will be created as \"remote\" text\n   *           tracks and set to automatically clean up on source changes.\n   *\n   *           These objects may have properties like `src`, `kind`, `label`,\n   *           and `language`, see {@link Tech#createRemoteTextTrack}.\n   */\n\n  /**\n   * Populate the player using a {@link Player~MediaObject|MediaObject}.\n   *\n   * @param  {Player~MediaObject} media\n   *         A media object.\n   *\n   * @param  {Function} ready\n   *         A callback to be called when the player is ready.\n   */\n  ;\n\n  _proto.loadMedia = function loadMedia(media, ready) {\n    var _this15 = this;\n\n    if (!media || typeof media !== 'object') {\n      return;\n    }\n\n    this.reset(); // Clone the media object so it cannot be mutated from outside.\n\n    this.cache_.media = mergeOptions(media);\n    var _this$cache_$media = this.cache_.media,\n        artwork = _this$cache_$media.artwork,\n        poster = _this$cache_$media.poster,\n        src = _this$cache_$media.src,\n        textTracks = _this$cache_$media.textTracks; // If `artwork` is not given, create it using `poster`.\n\n    if (!artwork && poster) {\n      this.cache_.media.artwork = [{\n        src: poster,\n        type: getMimetype(poster)\n      }];\n    }\n\n    if (src) {\n      this.src(src);\n    }\n\n    if (poster) {\n      this.poster(poster);\n    }\n\n    if (Array.isArray(textTracks)) {\n      textTracks.forEach(function (tt) {\n        return _this15.addRemoteTextTrack(tt, false);\n      });\n    }\n\n    this.ready(ready);\n  }\n  /**\n   * Get a clone of the current {@link Player~MediaObject} for this player.\n   *\n   * If the `loadMedia` method has not been used, will attempt to return a\n   * {@link Player~MediaObject} based on the current state of the player.\n   *\n   * @return {Player~MediaObject}\n   */\n  ;\n\n  _proto.getMedia = function getMedia() {\n    if (!this.cache_.media) {\n      var poster = this.poster();\n      var src = this.currentSources();\n      var textTracks = Array.prototype.map.call(this.remoteTextTracks(), function (tt) {\n        return {\n          kind: tt.kind,\n          label: tt.label,\n          language: tt.language,\n          src: tt.src\n        };\n      });\n      var media = {\n        src: src,\n        textTracks: textTracks\n      };\n\n      if (poster) {\n        media.poster = poster;\n        media.artwork = [{\n          src: media.poster,\n          type: getMimetype(media.poster)\n        }];\n      }\n\n      return media;\n    }\n\n    return mergeOptions(this.cache_.media);\n  }\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n  ;\n\n  Player.getTagSettings = function getTagSettings(tag) {\n    var baseOptions = {\n      sources: [],\n      tracks: []\n    };\n    var tagOptions = getAttributes(tag);\n    var dataSetup = tagOptions['data-setup'];\n\n    if (hasClass(tag, 'vjs-fill')) {\n      tagOptions.fill = true;\n    }\n\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    } // Check if data-setup attr exists.\n\n\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      var _safeParseTuple = safeParseTuple(dataSetup || '{}'),\n          err = _safeParseTuple[0],\n          data = _safeParseTuple[1];\n\n      if (err) {\n        log.error(err);\n      }\n\n      assign(tagOptions, data);\n    }\n\n    assign(baseOptions, tagOptions); // Get tag children settings\n\n    if (tag.hasChildNodes()) {\n      var children = tag.childNodes;\n\n      for (var i = 0, j = children.length; i < j; i++) {\n        var child = children[i]; // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n\n        var childName = child.nodeName.toLowerCase();\n\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n\n    return baseOptions;\n  }\n  /**\n   * Determine whether or not flexbox is supported\n   *\n   * @return {boolean}\n   *         - true if flexbox is supported\n   *         - false if flexbox is not supported\n   */\n  ;\n\n  _proto.flexNotSupported_ = function flexNotSupported_() {\n    var elem = document.createElement('i'); // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n    // common flex features that we can rely on when checking for flex support.\n\n    return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style || // IE10-specific (2012 flex spec), available for completeness\n    'msFlexOrder' in elem.style);\n  };\n\n  return Player;\n}(Component);\n/**\n * Get the {@link VideoTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    } // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n\n\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * Global enumeration of players.\n *\n * The keys are the player IDs and the values are either the {@link Player}\n * instance or `null` for disposed players.\n *\n * @type {Object}\n */\n\nPlayer.players = {};\nvar navigator = window$1.navigator;\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\n\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n  html5: {},\n  flash: {},\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n  liveui: false,\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'liveTracker', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n  // locales and their language translations\n  languages: {},\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.',\n  fullscreen: {\n    options: {\n      navigationUI: 'hide'\n    }\n  },\n  breakpoints: {},\n  responsive: false\n};\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype[\"handleTech\" + toTitleCase(event) + \"_\"] = function () {\n    return this.trigger(event);\n  };\n});\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent.registerComponent('Player', Player);\n\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\n\nvar BASE_PLUGIN_NAME = 'plugin';\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\n\nvar PLUGIN_CACHE_KEY = 'activePlugins_';\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\n\nvar pluginStorage = {};\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {boolean}\n *          Whether or not the plugin has been registered.\n */\n\nvar pluginExists = function pluginExists(name) {\n  return pluginStorage.hasOwnProperty(name);\n};\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {Function|undefined}\n *          The plugin (or undefined).\n */\n\n\nvar getPlugin = function getPlugin(name) {\n  return pluginExists(name) ? pluginStorage[name] : undefined;\n};\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\n\n\nvar markPluginAsActive = function markPluginAsActive(player, name) {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\n\n\nvar triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\n  var eventName = (before ? 'before' : '') + 'pluginsetup';\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @return {Function}\n *          A wrapper function for the given plugin.\n */\n\n\nvar createBasicPlugin = function createBasicPlugin(name, plugin) {\n  var basicPluginWrapper = function basicPluginWrapper() {\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: null\n    }, true);\n    var instance = plugin.apply(this, arguments);\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: instance\n    });\n    return instance;\n  };\n\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n  return basicPluginWrapper;\n};\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @return {Function}\n */\n\n\nvar createPluginFactory = function createPluginFactory(name, PluginSubClass) {\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n  return function () {\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: PluginSubClass,\n      instance: null\n    }, true);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var instance = _construct(PluginSubClass, [this].concat(args)); // The plugin is replaced by a function that returns the current instance.\n\n\n    this[name] = function () {\n      return instance;\n    };\n\n    triggerSetupEvent(this, instance.getEventHash());\n    return instance;\n  };\n};\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\n\n\nvar Plugin =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  function Plugin(player) {\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n\n    this.player = player; // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n\n    evented(this);\n    delete this.trigger;\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name); // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n\n    this.dispose = bind(this, this.dispose); // If the player is disposed, dispose the plugin.\n\n    player.on('dispose', this.dispose);\n  }\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n\n\n  var _proto = Plugin.prototype;\n\n  _proto.version = function version() {\n    return this.constructor.VERSION;\n  }\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @return {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n  ;\n\n  _proto.getEventHash = function getEventHash(hash) {\n    if (hash === void 0) {\n      hash = {};\n    }\n\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  }\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @return {boolean}\n   *          Whether or not default was prevented.\n   */\n  ;\n\n  _proto.trigger = function trigger$1(event, hash) {\n    if (hash === void 0) {\n      hash = {};\n    }\n\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  }\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n  ;\n\n  _proto.handleStateChanged = function handleStateChanged(e) {}\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    var name = this.name,\n        player = this.player;\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {EventTarget~Event}\n     */\n\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose); // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null; // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  }\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @return {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n  ;\n\n  Plugin.isBasic = function isBasic(plugin) {\n    var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  }\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @return {Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n  ;\n\n  Plugin.registerPlugin = function registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", must be a string, was \" + typeof name + \".\");\n    }\n\n    if (pluginExists(name)) {\n      log.warn(\"A plugin named \\\"\" + name + \"\\\" already exists. You may want to avoid re-registering plugins!\");\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", cannot share a name with an existing player method!\");\n    }\n\n    if (typeof plugin !== 'function') {\n      throw new Error(\"Illegal plugin for \\\"\" + name + \"\\\", must be a function, was \" + typeof plugin + \".\");\n    }\n\n    pluginStorage[name] = plugin; // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n\n    return plugin;\n  }\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param  {string} name\n   *         The name of the plugin to be de-registered. Must be a string that\n   *         matches an existing plugin.\n   *\n   * @throws {Error}\n   *         If an attempt is made to de-register the base plugin.\n   */\n  ;\n\n  Plugin.deregisterPlugin = function deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  }\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @return {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n  ;\n\n  Plugin.getPlugins = function getPlugins(names) {\n    if (names === void 0) {\n      names = Object.keys(pluginStorage);\n    }\n\n    var result;\n    names.forEach(function (name) {\n      var plugin = getPlugin(name);\n\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n    return result;\n  }\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {string}\n   *          The plugin's version or an empty string.\n   */\n  ;\n\n  Plugin.getPluginVersion = function getPluginVersion(name) {\n    var plugin = getPlugin(name);\n    return plugin && plugin.VERSION || '';\n  };\n\n  return Plugin;\n}();\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {Function|undefined}\n *           The plugin (or `undefined`).\n */\n\n\nPlugin.getPlugin = getPlugin;\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\n\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\n\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n/**\n * Signals that a plugin is about to be set up on a player.\n *\n * @event    Player#beforepluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin is about to be set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#beforepluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player.\n *\n * @event    Player#pluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#pluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * @typedef  {Object} Plugin~PluginEventHash\n *\n * @property {string} instance\n *           For basic plugins, the return value of the plugin function. For\n *           advanced plugins, the plugin instance on which the event is fired.\n *\n * @property {string} name\n *           The name of the plugin.\n *\n * @property {string} plugin\n *           For basic plugins, the plugin function. For advanced plugins, the\n *           plugin class/constructor.\n */\n\n/**\n * @file extend.js\n * @module extend\n */\n\n/**\n * A combination of node inherits and babel's inherits (after transpile).\n * Both work the same but node adds `super_` to the subClass\n * and Bable adds the superClass as __proto__. Both seem useful.\n *\n * @param {Object} subClass\n *        The class to inherit to\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @private\n */\nvar _inherits = function _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (superClass) {\n    // node\n    subClass.super_ = superClass;\n  }\n};\n/**\n * Used to subclass an existing class by emulating ES subclassing using the\n * `extends` keyword.\n *\n * @function\n * @example\n * var MyComponent = videojs.extend(videojs.getComponent('Component'), {\n *   myCustomMethod: function() {\n *     // Do things in my method.\n *   }\n * });\n *\n * @param    {Function} superClass\n *           The class to inherit from\n *\n * @param    {Object}   [subClassMethods={}]\n *           Methods of the new class\n *\n * @return   {Function}\n *           The new class with subClassMethods that inherited superClass.\n */\n\n\nvar extend = function extend(superClass, subClassMethods) {\n  if (subClassMethods === void 0) {\n    subClassMethods = {};\n  }\n\n  var subClass = function subClass() {\n    superClass.apply(this, arguments);\n  };\n\n  var methods = {};\n\n  if (typeof subClassMethods === 'object') {\n    if (subClassMethods.constructor !== Object.prototype.constructor) {\n      subClass = subClassMethods.constructor;\n    }\n\n    methods = subClassMethods;\n  } else if (typeof subClassMethods === 'function') {\n    subClass = subClassMethods;\n  }\n\n  _inherits(subClass, superClass); // Extend subObj's prototype with functions and other properties from props\n\n\n  for (var name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      subClass.prototype[name] = methods[name];\n    }\n  }\n\n  return subClass;\n};\n\n/**\n * @file video.js\n * @module videojs\n */\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @private\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @return {string}\n *          The string, without any leading `#`.\n */\n\nvar normalizeId = function normalizeId(id) {\n  return id.indexOf('#') === 0 ? id.slice(1) : id;\n};\n/**\n * The `videojs()` function doubles as the main function for users to create a\n * {@link Player} instance as well as the main library namespace.\n *\n * It can also be used as a getter for a pre-existing {@link Player} instance.\n * However, we _strongly_ recommend using `videojs.getPlayer()` for this\n * purpose because it avoids any potential for unintended initialization.\n *\n * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n * of our JSDoc template, we cannot properly document this as both a function\n * and a namespace, so its function signature is documented here.\n *\n * #### Arguments\n * ##### id\n * string|Element, **required**\n *\n * Video element or video element ID.\n *\n * ##### options\n * Object, optional\n *\n * Options object for providing settings.\n * See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * ##### ready\n * {@link Component~ReadyCallback}, optional\n *\n * A function to be called when the {@link Player} and {@link Tech} are ready.\n *\n * #### Return Value\n *\n * The `videojs()` function returns a {@link Player} instance.\n *\n * @namespace\n *\n * @borrows AudioTrack as AudioTrack\n * @borrows Component.getComponent as getComponent\n * @borrows module:computed-style~computedStyle as computedStyle\n * @borrows module:events.on as on\n * @borrows module:events.one as one\n * @borrows module:events.off as off\n * @borrows module:events.trigger as trigger\n * @borrows EventTarget as EventTarget\n * @borrows module:extend~extend as extend\n * @borrows module:fn.bind as bind\n * @borrows module:format-time.formatTime as formatTime\n * @borrows module:format-time.resetFormatTime as resetFormatTime\n * @borrows module:format-time.setFormatTime as setFormatTime\n * @borrows module:merge-options.mergeOptions as mergeOptions\n * @borrows module:middleware.use as use\n * @borrows Player.players as players\n * @borrows Plugin.registerPlugin as registerPlugin\n * @borrows Plugin.deregisterPlugin as deregisterPlugin\n * @borrows Plugin.getPlugins as getPlugins\n * @borrows Plugin.getPlugin as getPlugin\n * @borrows Plugin.getPluginVersion as getPluginVersion\n * @borrows Tech.getTech as getTech\n * @borrows Tech.registerTech as registerTech\n * @borrows TextTrack as TextTrack\n * @borrows module:time-ranges.createTimeRanges as createTimeRange\n * @borrows module:time-ranges.createTimeRanges as createTimeRanges\n * @borrows module:url.isCrossOrigin as isCrossOrigin\n * @borrows module:url.parseUrl as parseUrl\n * @borrows VideoTrack as VideoTrack\n *\n * @param  {string|Element} id\n *         Video element or video element ID.\n *\n * @param  {Object} [options]\n *         Options object for providing settings.\n *         See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * @param  {Component~ReadyCallback} [ready]\n *         A function to be called when the {@link Player} and {@link Tech} are\n *         ready.\n *\n * @return {Player}\n *         The `videojs()` function returns a {@link Player|Player} instance.\n */\n\n\nfunction videojs$1(id, options, ready) {\n  var player = videojs$1.getPlayer(id);\n\n  if (player) {\n    if (options) {\n      log.warn(\"Player \\\"\" + id + \"\\\" is already initialised. Options will not be applied.\");\n    }\n\n    if (ready) {\n      player.ready(ready);\n    }\n\n    return player;\n  }\n\n  var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  } // document.body.contains(el) will only check if el is contained within that one document.\n  // This causes problems for elements in iframes.\n  // Instead, use the element's ownerDocument instead of the global document.\n  // This will make sure that the element is indeed in the dom of that document.\n  // Additionally, check that the document in question has a default view.\n  // If the document is no longer attached to the dom, the defaultView of the document will be null.\n\n\n  if (!el.ownerDocument.defaultView || !el.ownerDocument.body.contains(el)) {\n    log.warn('The element supplied is not included in the DOM');\n  }\n\n  options = options || {};\n  videojs$1.hooks('beforesetup').forEach(function (hookFunction) {\n    var opts = hookFunction(el, mergeOptions(options));\n\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log.error('please return an object in beforesetup hooks');\n      return;\n    }\n\n    options = mergeOptions(options, opts);\n  }); // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n\n  var PlayerComponent = Component.getComponent('Player');\n  player = new PlayerComponent(el, options, ready);\n  videojs$1.hooks('setup').forEach(function (hookFunction) {\n    return hookFunction(player);\n  });\n  return player;\n}\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n *\n * @private\n */\n\n\nvideojs$1.hooks_ = {};\n/**\n * Get a list of hooks for a specific lifecycle\n *\n * @param  {string} type\n *         the lifecyle to get hooks from\n *\n * @param  {Function|Function[]} [fn]\n *         Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\n\nvideojs$1.hooks = function (type, fn) {\n  videojs$1.hooks_[type] = videojs$1.hooks_[type] || [];\n\n  if (fn) {\n    videojs$1.hooks_[type] = videojs$1.hooks_[type].concat(fn);\n  }\n\n  return videojs$1.hooks_[type];\n};\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvideojs$1.hook = function (type, fn) {\n  videojs$1.hooks(type, fn);\n};\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvideojs$1.hookOnce = function (type, fn) {\n  videojs$1.hooks(type, [].concat(fn).map(function (original) {\n    var wrapper = function wrapper() {\n      videojs$1.removeHook(type, wrapper);\n      return original.apply(void 0, arguments);\n    };\n\n    return wrapper;\n  }));\n};\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param  {string} type\n *         the lifecycle that the function hooked to\n *\n * @param  {Function} fn\n *         The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\n\n\nvideojs$1.removeHook = function (type, fn) {\n  var index = videojs$1.hooks(type).indexOf(fn);\n\n  if (index <= -1) {\n    return false;\n  }\n\n  videojs$1.hooks_[type] = videojs$1.hooks_[type].slice();\n  videojs$1.hooks_[type].splice(index, 1);\n  return true;\n}; // Add default styles\n\n\nif (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  var style = $('.vjs-styles-defaults');\n\n  if (!style) {\n    style = createStyleElement('vjs-styles-defaults');\n    var head = $('head');\n\n    if (head) {\n      head.insertBefore(style, head.firstChild);\n    }\n\n    setTextContent(style, \"\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid {\\n        padding-top: 56.25%\\n      }\\n    \");\n  }\n} // Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\n\n\nautoSetupTimeout(1, videojs$1);\n/**\n * Current Video.js version. Follows [semantic versioning](https://semver.org/).\n *\n * @type {string}\n */\n\nvideojs$1.VERSION = version;\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\n\nvideojs$1.options = Player.prototype.options_;\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\n\nvideojs$1.getPlayers = function () {\n  return Player.players;\n};\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @return {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\n\n\nvideojs$1.getPlayer = function (id) {\n  var players = Player.players;\n  var tag;\n\n  if (typeof id === 'string') {\n    var nId = normalizeId(id);\n    var player = players[nId];\n\n    if (player) {\n      return player;\n    }\n\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n\n  if (isEl(tag)) {\n    var _tag = tag,\n        _player = _tag.player,\n        playerId = _tag.playerId; // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n\n    if (_player || players[playerId]) {\n      return _player || players[playerId];\n    }\n  }\n};\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\n\n\nvideojs$1.getAllPlayers = function () {\n  return (// Disposed players leave a key with a `null` value, so we need to make sure\n    // we filter those out.\n    Object.keys(Player.players).map(function (k) {\n      return Player.players[k];\n    }).filter(Boolean)\n  );\n};\n\nvideojs$1.players = Player.players;\nvideojs$1.getComponent = Component.getComponent;\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\n\nvideojs$1.registerComponent = function (name, comp) {\n  if (Tech.isTech(comp)) {\n    log.warn(\"The \" + name + \" tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)\");\n  }\n\n  Component.registerComponent.call(Component, name, comp);\n};\n\nvideojs$1.getTech = Tech.getTech;\nvideojs$1.registerTech = Tech.registerTech;\nvideojs$1.use = use;\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @property {object} middleware.TERMINATOR\n */\n\nObject.defineProperty(videojs$1, 'middleware', {\n  value: {},\n  writeable: false,\n  enumerable: true\n});\nObject.defineProperty(videojs$1.middleware, 'TERMINATOR', {\n  value: TERMINATOR,\n  writeable: false,\n  enumerable: true\n});\n/**\n * A reference to the {@link module:browser|browser utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:browser|browser}\n */\n\nvideojs$1.browser = browser;\n/**\n * Use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED} instead; only\n * included for backward-compatibility with 4.x.\n *\n * @deprecated Since version 5.0, use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED instead.\n * @type {boolean}\n */\n\nvideojs$1.TOUCH_ENABLED = TOUCH_ENABLED;\nvideojs$1.extend = extend;\nvideojs$1.mergeOptions = mergeOptions;\nvideojs$1.bind = bind;\nvideojs$1.registerPlugin = Plugin.registerPlugin;\nvideojs$1.deregisterPlugin = Plugin.deregisterPlugin;\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated videojs.plugin() is deprecated; use videojs.registerPlugin() instead\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\n\nvideojs$1.plugin = function (name, plugin) {\n  log.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name, plugin);\n};\n\nvideojs$1.getPlugins = Plugin.getPlugins;\nvideojs$1.getPlugin = Plugin.getPlugin;\nvideojs$1.getPluginVersion = Plugin.getPluginVersion;\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\n\nvideojs$1.addLanguage = function (code, data) {\n  var _mergeOptions;\n\n  code = ('' + code).toLowerCase();\n  videojs$1.options.languages = mergeOptions(videojs$1.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n  return videojs$1.options.languages[code];\n};\n/**\n * A reference to the {@link module:log|log utility module} as an object.\n *\n * @type {Function}\n * @see  {@link module:log|log}\n */\n\n\nvideojs$1.log = log;\nvideojs$1.createLogger = createLogger$1;\nvideojs$1.createTimeRange = videojs$1.createTimeRanges = createTimeRanges;\nvideojs$1.formatTime = formatTime;\nvideojs$1.setFormatTime = setFormatTime;\nvideojs$1.resetFormatTime = resetFormatTime;\nvideojs$1.parseUrl = parseUrl;\nvideojs$1.isCrossOrigin = isCrossOrigin;\nvideojs$1.EventTarget = EventTarget;\nvideojs$1.on = on;\nvideojs$1.one = one;\nvideojs$1.off = off;\nvideojs$1.trigger = trigger;\n/**\n * A cross-browser XMLHttpRequest wrapper.\n *\n * @function\n * @param    {Object} options\n *           Settings for the request.\n *\n * @return   {XMLHttpRequest|XDomainRequest}\n *           The request object.\n *\n * @see      https://github.com/Raynos/xhr\n */\n\nvideojs$1.xhr = XHR;\nvideojs$1.TextTrack = TextTrack;\nvideojs$1.AudioTrack = AudioTrack;\nvideojs$1.VideoTrack = VideoTrack;\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\n  videojs$1[k] = function () {\n    log.warn(\"videojs.\" + k + \"() is deprecated; use videojs.dom.\" + k + \"() instead\");\n    return Dom[k].apply(null, arguments);\n  };\n});\nvideojs$1.computedStyle = computedStyle;\n/**\n * A reference to the {@link module:dom|DOM utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:dom|dom}\n */\n\nvideojs$1.dom = Dom;\n/**\n * A reference to the {@link module:url|URL utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:url|url}\n */\n\nvideojs$1.url = Url;\n\n/**\n * @videojs/http-streaming\n * @version 1.10.3\n * @copyright 2019 Brightcove, Inc\n * @license Apache-2.0\n */\n/**\n * @file resolve-url.js - Handling how URLs are resolved and manipulated\n */\n\nvar resolveUrl = function resolveUrl(baseURL, relativeURL) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeURL)) {\n    return relativeURL;\n  } // if the base URL is relative then combine with the current location\n\n\n  if (!/\\/\\//i.test(baseURL)) {\n    baseURL = URLToolkit.buildAbsoluteURL(window$1.location.href, baseURL);\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseURL, relativeURL);\n};\n/**\n * Checks whether xhr request was redirected and returns correct url depending\n * on `handleManifestRedirects` option\n *\n * @api private\n *\n * @param  {String} url - an url being requested\n * @param  {XMLHttpRequest} req - xhr request result\n *\n * @return {String}\n */\n\n\nvar resolveManifestRedirect = function resolveManifestRedirect(handleManifestRedirect, url, req) {\n  // To understand how the responseURL below is set and generated:\n  // - https://fetch.spec.whatwg.org/#concept-response-url\n  // - https://fetch.spec.whatwg.org/#atomic-http-redirect-handling\n  if (handleManifestRedirect && req.responseURL && url !== req.responseURL) {\n    return req.responseURL;\n  }\n\n  return url;\n};\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar get$1 = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n/**\n * @file playlist-loader.js\n *\n * A state machine that manages the loading, caching, and updating of\n * M3U8 playlists.\n *\n */\n\n\nvar mergeOptions$1 = videojs$1.mergeOptions,\n    EventTarget$1 = videojs$1.EventTarget,\n    log$1 = videojs$1.log;\n/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {Function} callback\n *        Callback to call for each media group\n */\n\nvar forEachMediaGroup = function forEachMediaGroup(master, callback) {\n  ['AUDIO', 'SUBTITLES'].forEach(function (mediaType) {\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};\n/**\n  * Returns a new array of segments that is the result of merging\n  * properties from an older list of segments onto an updated\n  * list. No properties on the updated playlist will be overridden.\n  *\n  * @param {Array} original the outdated list of segments\n  * @param {Array} update the updated list of segments\n  * @param {Number=} offset the index of the first update\n  * segment in the original segment list. For non-live playlists,\n  * this should always be zero and does not need to be\n  * specified. For live playlists, it should be the difference\n  * between the media sequence numbers in the original and updated\n  * playlists.\n  * @return a list of merged segment objects\n  */\n\n\nvar updateSegments = function updateSegments(original, update, offset) {\n  var result = update.slice();\n  offset = offset || 0;\n  var length = Math.min(original.length, update.length + offset);\n\n  for (var i = offset; i < length; i++) {\n    result[i - offset] = mergeOptions$1(original[i], result[i - offset]);\n  }\n\n  return result;\n};\n\nvar resolveSegmentUris = function resolveSegmentUris(segment, baseUri) {\n  if (!segment.resolvedUri) {\n    segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n  }\n\n  if (segment.key && !segment.key.resolvedUri) {\n    segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n  }\n\n  if (segment.map && !segment.map.resolvedUri) {\n    segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n  }\n};\n/**\n  * Returns a new master playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original master playlist, null is returned.\n  *\n  * @param {Object} master a parsed master M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * master playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\n\n\nvar updateMaster = function updateMaster(master, media) {\n  var result = mergeOptions$1(master, {});\n  var playlist = result.playlists[media.uri];\n\n  if (!playlist) {\n    return null;\n  } // consider the playlist unchanged if the number of segments is equal, the media\n  // sequence number is unchanged, and this playlist hasn't become the end of the playlist\n\n\n  if (playlist.segments && media.segments && playlist.segments.length === media.segments.length && playlist.endList === media.endList && playlist.mediaSequence === media.mediaSequence) {\n    return null;\n  }\n\n  var mergedPlaylist = mergeOptions$1(playlist, media); // if the update could overlap existing segment information, merge the two segment lists\n\n  if (playlist.segments) {\n    mergedPlaylist.segments = updateSegments(playlist.segments, media.segments, media.mediaSequence - playlist.mediaSequence);\n  } // resolve any segment URIs to prevent us from having to do it later\n\n\n  mergedPlaylist.segments.forEach(function (segment) {\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n  }); // TODO Right now in the playlists array there are two references to each playlist, one\n  // that is referenced by index, and one by URI. The index reference may no longer be\n  // necessary.\n\n  for (var i = 0; i < result.playlists.length; i++) {\n    if (result.playlists[i].uri === media.uri) {\n      result.playlists[i] = mergedPlaylist;\n    }\n  }\n\n  result.playlists[media.uri] = mergedPlaylist;\n  return result;\n};\n\nvar setupMediaPlaylists = function setupMediaPlaylists(master) {\n  // setup by-URI lookups and resolve media playlist URIs\n  var i = master.playlists.length;\n\n  while (i--) {\n    var playlist = master.playlists[i];\n    master.playlists[playlist.uri] = playlist;\n    playlist.resolvedUri = resolveUrl(master.uri, playlist.uri);\n    playlist.id = i;\n\n    if (!playlist.attributes) {\n      // Although the spec states an #EXT-X-STREAM-INF tag MUST have a\n      // BANDWIDTH attribute, we can play the stream without it. This means a poorly\n      // formatted master playlist may not have an attribute list. An attributes\n      // property is added here to prevent undefined references when we encounter\n      // this scenario.\n      playlist.attributes = {};\n      log$1.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n    }\n  }\n};\n\nvar resolveMediaGroupUris = function resolveMediaGroupUris(master) {\n  forEachMediaGroup(master, function (properties) {\n    if (properties.uri) {\n      properties.resolvedUri = resolveUrl(master.uri, properties.uri);\n    }\n  });\n};\n/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {Boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {Number}\n *         The time in ms to wait before refreshing the live playlist\n */\n\n\nvar refreshDelay = function refreshDelay(media, update) {\n  var lastSegment = media.segments[media.segments.length - 1];\n  var delay = void 0;\n\n  if (update && lastSegment && lastSegment.duration) {\n    delay = lastSegment.duration * 1000;\n  } else {\n    // if the playlist is unchanged since the last reload or last segment duration\n    // cannot be determined, try again after half the target duration\n    delay = (media.targetDuration || 10) * 500;\n  }\n\n  return delay;\n};\n/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {String} srcUrl the url to start with\n * @param {Boolean} withCredentials the withCredentials xhr option\n * @constructor\n */\n\n\nvar PlaylistLoader = function (_EventTarget) {\n  inherits(PlaylistLoader, _EventTarget);\n\n  function PlaylistLoader(srcUrl, hls) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, PlaylistLoader);\n\n    var _this = possibleConstructorReturn(this, (PlaylistLoader.__proto__ || Object.getPrototypeOf(PlaylistLoader)).call(this));\n\n    var _options$withCredenti = options.withCredentials,\n        withCredentials = _options$withCredenti === undefined ? false : _options$withCredenti,\n        _options$handleManife = options.handleManifestRedirects,\n        handleManifestRedirects = _options$handleManife === undefined ? false : _options$handleManife;\n    _this.srcUrl = srcUrl;\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n    _this.handleManifestRedirects = handleManifestRedirects;\n    var hlsOptions = hls.options_;\n    _this.customTagParsers = hlsOptions && hlsOptions.customTagParsers || [];\n    _this.customTagMappers = hlsOptions && hlsOptions.customTagMappers || [];\n\n    if (!_this.srcUrl) {\n      throw new Error('A non-empty playlist URL is required');\n    } // initialize the loader state\n\n\n    _this.state = 'HAVE_NOTHING'; // live playlist staleness timeout\n\n    _this.on('mediaupdatetimeout', function () {\n      if (_this.state !== 'HAVE_METADATA') {\n        // only refresh the media playlist if no other activity is going on\n        return;\n      }\n\n      _this.state = 'HAVE_CURRENT_METADATA';\n      _this.request = _this.hls_.xhr({\n        uri: resolveUrl(_this.master.uri, _this.media().uri),\n        withCredentials: _this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this.request) {\n          return;\n        }\n\n        if (error) {\n          return _this.playlistRequestError(_this.request, _this.media().uri, 'HAVE_METADATA');\n        }\n\n        _this.haveMetadata(_this.request, _this.media().uri);\n      });\n    });\n\n    return _this;\n  }\n\n  createClass(PlaylistLoader, [{\n    key: 'playlistRequestError',\n    value: function playlistRequestError(xhr, url, startingState) {\n      // any in-flight request is now finished\n      this.request = null;\n\n      if (startingState) {\n        this.state = startingState;\n      }\n\n      this.error = {\n        playlist: this.master.playlists[url],\n        status: xhr.status,\n        message: 'HLS playlist request error at URL: ' + url + '.',\n        responseText: xhr.responseText,\n        code: xhr.status >= 500 ? 4 : 2\n      };\n      this.trigger('error');\n    } // update the playlist loader's state in response to a new or\n    // updated playlist.\n\n  }, {\n    key: 'haveMetadata',\n    value: function haveMetadata(xhr, url) {\n      var _this2 = this; // any in-flight request is now finished\n\n\n      this.request = null;\n      this.state = 'HAVE_METADATA';\n      var parser = new Parser(); // adding custom tag parsers\n\n      this.customTagParsers.forEach(function (customParser) {\n        return parser.addParser(customParser);\n      }); // adding custom tag mappers\n\n      this.customTagMappers.forEach(function (mapper) {\n        return parser.addTagMapper(mapper);\n      });\n      parser.push(xhr.responseText);\n      parser.end();\n      parser.manifest.uri = url; // m3u8-parser does not attach an attributes property to media playlists so make\n      // sure that the property is attached to avoid undefined reference errors\n\n      parser.manifest.attributes = parser.manifest.attributes || {}; // merge this playlist into the master\n\n      var update = updateMaster(this.master, parser.manifest);\n      this.targetDuration = parser.manifest.targetDuration;\n\n      if (update) {\n        this.master = update;\n        this.media_ = this.master.playlists[parser.manifest.uri];\n      } else {\n        this.trigger('playlistunchanged');\n      } // refresh live playlists after a target duration passes\n\n\n      if (!this.media().endList) {\n        window$1.clearTimeout(this.mediaUpdateTimeout);\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this2.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!update));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n    /**\n     * Abort any outstanding work and clean up.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      window$1.clearTimeout(this.finalRenditionTimeout);\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n    /**\n     * When called without any arguments, returns the currently\n     * active media playlist. When called with a single argument,\n     * triggers the playlist loader to asynchronously switch to the\n     * specified media playlist. Calling this method while the\n     * loader is in the HAVE_NOTHING causes an error to be emitted\n     * but otherwise has no effect.\n     *\n     * @param {Object=} playlist the parsed media playlist\n     * object to switch to\n     * @param {Boolean=} is this the last available playlist\n     *\n     * @return {Playlist} the current loaded media\n     */\n\n  }, {\n    key: 'media',\n    value: function media(playlist, isFinalRendition) {\n      var _this3 = this; // getter\n\n\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      } // find the playlist object if the target playlist has been\n      // specified by URI\n\n\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n\n        playlist = this.master.playlists[playlist];\n      }\n\n      window$1.clearTimeout(this.finalRenditionTimeout);\n\n      if (isFinalRendition) {\n        var delay = playlist.targetDuration / 2 * 1000 || 5 * 1000;\n        this.finalRenditionTimeout = window$1.setTimeout(this.media.bind(this, playlist, false), delay);\n        return;\n      }\n\n      var startingState = this.state;\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri; // switch to fully loaded playlists immediately\n\n      if (this.master.playlists[playlist.uri].endList) {\n        // abort outstanding playlist requests\n        if (this.request) {\n          this.request.onreadystatechange = null;\n          this.request.abort();\n          this.request = null;\n        }\n\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n\n        return;\n      } // switching to the active playlist is a no-op\n\n\n      if (!mediaChange) {\n        return;\n      }\n\n      this.state = 'SWITCHING_MEDIA'; // there is already an outstanding playlist request\n\n      if (this.request) {\n        if (playlist.resolvedUri === this.request.url) {\n          // requesting to switch to the same playlist multiple times\n          // has no effect after the first\n          return;\n        }\n\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      } // request the new playlist\n\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.request = this.hls_.xhr({\n        uri: playlist.resolvedUri,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this3.request) {\n          return;\n        }\n\n        playlist.resolvedUri = resolveManifestRedirect(_this3.handleManifestRedirects, playlist.resolvedUri, req);\n\n        if (error) {\n          return _this3.playlistRequestError(_this3.request, playlist.uri, startingState);\n        }\n\n        _this3.haveMetadata(req, playlist.uri); // fire loadedmetadata the first time a media playlist is loaded\n\n\n        if (startingState === 'HAVE_MASTER') {\n          _this3.trigger('loadedmetadata');\n        } else {\n          _this3.trigger('mediachange');\n        }\n      });\n    }\n    /**\n     * pause loading of the playlist\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      } // Need to restore state now that no activity is happening\n\n\n      if (this.state === 'SWITCHING_MEDIA') {\n        // if the loader was in the process of switching media, it should either return to\n        // HAVE_MASTER or HAVE_METADATA depending on if the loader has loaded a media\n        // playlist yet. This is determined by the existence of loader.media_\n        if (this.media_) {\n          this.state = 'HAVE_METADATA';\n        } else {\n          this.state = 'HAVE_MASTER';\n        }\n      } else if (this.state === 'HAVE_CURRENT_METADATA') {\n        this.state = 'HAVE_METADATA';\n      }\n    }\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this4 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this4.load();\n        }, delay);\n        return;\n      }\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      if (media && !media.endList) {\n        this.trigger('mediaupdatetimeout');\n      } else {\n        this.trigger('loadedplaylist');\n      }\n    }\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this5 = this;\n\n      this.started = true; // request the specified URL\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'HLS playlist request error at URL: ' + _this5.srcUrl + '.',\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n\n          return _this5.trigger('error');\n        }\n\n        var parser = new Parser(); // adding custom tag parsers\n\n        _this5.customTagParsers.forEach(function (customParser) {\n          return parser.addParser(customParser);\n        }); // adding custom tag mappers\n\n\n        _this5.customTagMappers.forEach(function (mapper) {\n          return parser.addTagMapper(mapper);\n        });\n\n        parser.push(req.responseText);\n        parser.end();\n        _this5.state = 'HAVE_MASTER';\n        _this5.srcUrl = resolveManifestRedirect(_this5.handleManifestRedirects, _this5.srcUrl, req);\n        parser.manifest.uri = _this5.srcUrl; // loaded a master playlist\n\n        if (parser.manifest.playlists) {\n          _this5.master = parser.manifest;\n          setupMediaPlaylists(_this5.master);\n          resolveMediaGroupUris(_this5.master);\n\n          _this5.trigger('loadedplaylist');\n\n          if (!_this5.request) {\n            // no media playlist was specifically selected so start\n            // from the first listed one\n            _this5.media(parser.manifest.playlists[0]);\n          }\n\n          return;\n        } // loaded a media playlist\n        // infer a master playlist if none was previously requested\n\n\n        _this5.master = {\n          mediaGroups: {\n            'AUDIO': {},\n            'VIDEO': {},\n            'CLOSED-CAPTIONS': {},\n            'SUBTITLES': {}\n          },\n          uri: window$1.location.href,\n          playlists: [{\n            uri: _this5.srcUrl,\n            id: 0,\n            resolvedUri: _this5.srcUrl,\n            // m3u8-parser does not attach an attributes property to media playlists so make\n            // sure that the property is attached to avoid undefined reference errors\n            attributes: {}\n          }]\n        };\n        _this5.master.playlists[_this5.srcUrl] = _this5.master.playlists[0];\n\n        _this5.haveMetadata(req, _this5.srcUrl);\n\n        return _this5.trigger('loadedmetadata');\n      });\n    }\n  }]);\n  return PlaylistLoader;\n}(EventTarget$1);\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n\n\nvar createTimeRange = videojs$1.createTimeRange;\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\nvar backwardDuration = function backwardDuration(playlist, endSequence) {\n  var result = 0;\n  var i = endSequence - playlist.mediaSequence; // if a start time is available for segment immediately following\n  // the interval, use it\n\n  var segment = playlist.segments[i]; // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start,\n        precise: true\n      };\n    }\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n\n  while (i--) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: result + segment.end,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: result + segment.start,\n        precise: true\n      };\n    }\n  }\n\n  return {\n    result: result,\n    precise: false\n  };\n};\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\n\nvar forwardDuration = function forwardDuration(playlist, endSequence) {\n  var result = 0;\n  var segment = void 0;\n  var i = endSequence - playlist.mediaSequence; // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  } // indicate we didn't find a useful duration estimate\n\n\n  return {\n    result: -1,\n    precise: false\n  };\n};\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {Number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {Number} the duration between the first available segment\n  * and end index.\n  */\n\n\nvar intervalDuration = function intervalDuration(playlist, endSequence, expired) {\n  var backward = void 0;\n  var forward = void 0;\n\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  } // do a backward walk to estimate the duration\n\n\n  backward = backwardDuration(playlist, endSequence);\n\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  } // walk forward to see if a precise duration estimate can be made\n  // that way\n\n\n  forward = forwardDuration(playlist, endSequence);\n\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  } // return the less-precise, playlist-based duration estimate\n\n\n  return backward.result + expired;\n};\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {Number} the duration between the start index and end\n  * index.\n  */\n\n\nvar duration = function duration(playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n\n  if (typeof expired !== 'number') {\n    expired = 0;\n  } // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n\n\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    } // duration should be Infinity for live playlists\n\n\n    if (!playlist.endList) {\n      return window$1.Infinity;\n    }\n  } // calculate the total duration based on the segment durations\n\n\n  return intervalDuration(playlist, endSequence, expired);\n};\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number} startIndex\n  * @param {Number} endIndex\n  * @return {Number} the number of seconds between startIndex and endIndex\n  */\n\n\nvar sumDurations = function sumDurations(playlist, startIndex, endIndex) {\n  var durations = 0;\n\n  if (startIndex > endIndex) {\n    var _ref = [endIndex, startIndex];\n    startIndex = _ref[0];\n    endIndex = _ref[1];\n  }\n\n  if (startIndex < 0) {\n    for (var i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += playlist.targetDuration;\n    }\n\n    startIndex = 0;\n  }\n\n  for (var _i = startIndex; _i < endIndex; _i++) {\n    durations += playlist.segments[_i].duration;\n  }\n\n  return durations;\n};\n/**\n * Determines the media index of the segment corresponding to the safe edge of the live\n * window which is the duration of the last segment plus 2 target durations from the end\n * of the playlist.\n *\n * @param {Object} playlist\n *        a media playlist object\n * @return {Number}\n *         The media index of the segment at the safe live point. 0 if there is no \"safe\"\n *         point.\n * @function safeLiveIndex\n */\n\n\nvar safeLiveIndex = function safeLiveIndex(playlist) {\n  if (!playlist.segments.length) {\n    return 0;\n  }\n\n  var i = playlist.segments.length - 1;\n  var distanceFromEnd = playlist.segments[i].duration || playlist.targetDuration;\n  var safeDistance = distanceFromEnd + playlist.targetDuration * 2;\n\n  while (i--) {\n    distanceFromEnd += playlist.segments[i].duration;\n\n    if (distanceFromEnd >= safeDistance) {\n      break;\n    }\n  }\n\n  return Math.max(0, i);\n};\n/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {Number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {Boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n * @returns {Number} the end time of playlist\n * @function playlistEnd\n */\n\n\nvar playlistEnd = function playlistEnd(playlist, expired, useSafeLiveEnd) {\n  if (!playlist || !playlist.segments) {\n    return null;\n  }\n\n  if (playlist.endList) {\n    return duration(playlist);\n  }\n\n  if (expired === null) {\n    return null;\n  }\n\n  expired = expired || 0;\n  var endSequence = useSafeLiveEnd ? safeLiveIndex(playlist) : playlist.segments.length;\n  return intervalDuration(playlist, playlist.mediaSequence + endSequence, expired);\n};\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\n\n\nvar seekable = function seekable(playlist, expired) {\n  var useSafeLiveEnd = true;\n  var seekableStart = expired || 0;\n  var seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd);\n\n  if (seekableEnd === null) {\n    return createTimeRange();\n  }\n\n  return createTimeRange(seekableStart, seekableEnd);\n};\n\nvar isWholeNumber = function isWholeNumber(num) {\n  return num - Math.floor(num) === 0;\n};\n\nvar roundSignificantDigit = function roundSignificantDigit(increment, num) {\n  // If we have a whole number, just add 1 to it\n  if (isWholeNumber(num)) {\n    return num + increment * 0.1;\n  }\n\n  var numDecimalDigits = num.toString().split('.')[1].length;\n\n  for (var i = 1; i <= numDecimalDigits; i++) {\n    var scale = Math.pow(10, i);\n    var temp = num * scale;\n\n    if (isWholeNumber(temp) || i === numDecimalDigits) {\n      return (temp + increment) / scale;\n    }\n  }\n};\n\nvar ceilLeastSignificantDigit = roundSignificantDigit.bind(null, 1);\nvar floorLeastSignificantDigit = roundSignificantDigit.bind(null, -1);\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} playlist the media playlist to query\n * @param {Number} currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {Number} startIndex\n * @param {Number} startTime\n * @return {Object}\n */\n\nvar getMediaInfoForTime = function getMediaInfoForTime(playlist, currentTime, startIndex, startTime) {\n  var i = void 0;\n  var segment = void 0;\n  var numSegments = playlist.segments.length;\n  var time = currentTime - startTime;\n\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (i = startIndex - 1; i >= 0; i--) {\n        segment = playlist.segments[i];\n        time += floorLeastSignificantDigit(segment.duration);\n\n        if (time > 0) {\n          return {\n            mediaIndex: i,\n            startTime: startTime - sumDurations(playlist, startIndex, i)\n          };\n        }\n      }\n    } // We were unable to find a good segment within the playlist\n    // so select the first segment\n\n\n    return {\n      mediaIndex: 0,\n      startTime: currentTime\n    };\n  } // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n\n\n  if (startIndex < 0) {\n    for (i = startIndex; i < 0; i++) {\n      time -= playlist.targetDuration;\n\n      if (time < 0) {\n        return {\n          mediaIndex: 0,\n          startTime: currentTime\n        };\n      }\n    }\n\n    startIndex = 0;\n  } // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n\n\n  for (i = startIndex; i < numSegments; i++) {\n    segment = playlist.segments[i];\n    time -= ceilLeastSignificantDigit(segment.duration);\n\n    if (time < 0) {\n      return {\n        mediaIndex: i,\n        startTime: startTime + sumDurations(playlist, startIndex, i)\n      };\n    }\n  } // We are out of possible candidates so load the last one...\n\n\n  return {\n    mediaIndex: numSegments - 1,\n    startTime: currentTime\n  };\n};\n/**\n * Check whether the playlist is blacklisted or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is blacklisted or not\n * @function isBlacklisted\n */\n\n\nvar isBlacklisted = function isBlacklisted(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n};\n/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been blacklisted permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */\n\n\nvar isIncompatible = function isIncompatible(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n};\n/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */\n\n\nvar isEnabled = function isEnabled(playlist) {\n  var blacklisted = isBlacklisted(playlist);\n  return !playlist.disabled && !blacklisted;\n};\n/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */\n\n\nvar isDisabled = function isDisabled(playlist) {\n  return playlist.disabled;\n};\n/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {Boolean} true if it's an AES encrypted HLS stream\n */\n\n\nvar isAes = function isAes(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].key) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Returns whether the current playlist contains fMP4\n *\n * @return {Boolean} true if the playlist contains fMP4\n */\n\n\nvar isFmp4 = function isFmp4(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].map) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {String} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {Boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */\n\n\nvar hasAttribute = function hasAttribute(attr, playlist) {\n  return playlist.attributes && playlist.attributes[attr];\n};\n/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {Number} segmentDuration\n *        Duration of requested segment\n * @param {Number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {Number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {Number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */\n\n\nvar estimateSegmentRequestTime = function estimateSegmentRequestTime(segmentDuration, bandwidth, playlist) {\n  var bytesReceived = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  if (!hasAttribute('BANDWIDTH', playlist)) {\n    return NaN;\n  }\n\n  var size = segmentDuration * playlist.attributes.BANDWIDTH;\n  return (size - bytesReceived * 8) / bandwidth;\n};\n/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */\n\n\nvar isLowestEnabledRendition = function isLowestEnabledRendition(master, media) {\n  if (master.playlists.length === 1) {\n    return true;\n  }\n\n  var currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n  return master.playlists.filter(function (playlist) {\n    if (!isEnabled(playlist)) {\n      return false;\n    }\n\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n  }).length === 0;\n}; // exports\n\n\nvar Playlist = {\n  duration: duration,\n  seekable: seekable,\n  safeLiveIndex: safeLiveIndex,\n  getMediaInfoForTime: getMediaInfoForTime,\n  isEnabled: isEnabled,\n  isDisabled: isDisabled,\n  isBlacklisted: isBlacklisted,\n  isIncompatible: isIncompatible,\n  playlistEnd: playlistEnd,\n  isAes: isAes,\n  isFmp4: isFmp4,\n  hasAttribute: hasAttribute,\n  estimateSegmentRequestTime: estimateSegmentRequestTime,\n  isLowestEnabledRendition: isLowestEnabledRendition\n};\n/**\n * @file xhr.js\n */\n\nvar videojsXHR = videojs$1.xhr,\n    mergeOptions$1$1 = videojs$1.mergeOptions;\n\nvar xhrFactory = function xhrFactory() {\n  var xhr = function XhrFunction(options, callback) {\n    // Add a default timeout for all hls requests\n    options = mergeOptions$1$1({\n      timeout: 45e3\n    }, options); // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n\n    var beforeRequest = XhrFunction.beforeRequest || videojs$1.Hls.xhr.beforeRequest;\n\n    if (beforeRequest && typeof beforeRequest === 'function') {\n      var newOptions = beforeRequest(options);\n\n      if (newOptions) {\n        options = newOptions;\n      }\n    }\n\n    var request = videojsXHR(options, function (error, response) {\n      var reqResponse = request.response;\n\n      if (!error && reqResponse) {\n        request.responseTime = Date.now();\n        request.roundTripTime = request.responseTime - request.requestTime;\n        request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n\n        if (!request.bandwidth) {\n          request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n        }\n      }\n\n      if (response.headers) {\n        request.responseHeaders = response.headers;\n      } // videojs.xhr now uses a specific code on the error\n      // object to signal that a request has timed out instead\n      // of setting a boolean on the request object\n\n\n      if (error && error.code === 'ETIMEDOUT') {\n        request.timedout = true;\n      } // videojs.xhr no longer considers status codes outside of 200 and 0\n      // (for file uris) to be errors, but the old XHR did, so emulate that\n      // behavior. Status 206 may be used in response to byterange requests.\n\n\n      if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n        error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n      }\n\n      callback(error, request);\n    });\n    var originalAbort = request.abort;\n\n    request.abort = function () {\n      request.aborted = true;\n      return originalAbort.apply(request, arguments);\n    };\n\n    request.uri = options.uri;\n    request.requestTime = Date.now();\n    return request;\n  };\n\n  return xhr;\n};\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */\n\n\nvar byterangeStr = function byterangeStr(byterange) {\n  var byterangeStart = void 0;\n  var byterangeEnd = void 0; // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n\n  byterangeEnd = byterange.offset + byterange.length - 1;\n  byterangeStart = byterange.offset;\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */\n\n\nvar segmentXhrHeaders = function segmentXhrHeaders(segment) {\n  var headers = {};\n\n  if (segment.byterange) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n\n  return headers;\n};\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {Number} i the iterator on the range to convert\n */\n\n\nvar textRange = function textRange(range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n/**\n * format a number as hex string\n *\n * @param {Number} e The number\n * @param {Number} i the iterator\n */\n\n\nvar formatHexString = function formatHexString(e, i) {\n  var value = e.toString(16);\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\n\nvar formatAsciiString = function formatAsciiString(e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n\n  return '.';\n};\n/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */\n\n\nvar createTransferableMessage = function createTransferableMessage(message) {\n  var transferable = {};\n  Object.keys(message).forEach(function (key) {\n    var value = message[key];\n\n    if (ArrayBuffer.isView(value)) {\n      transferable[key] = {\n        bytes: value.buffer,\n        byteOffset: value.byteOffset,\n        byteLength: value.byteLength\n      };\n    } else {\n      transferable[key] = value;\n    }\n  });\n  return transferable;\n};\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n */\n\n\nvar initSegmentId = function initSegmentId(initSegment) {\n  var byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n/**\n * Returns a unique string identifier for a media segment key.\n */\n\n\nvar segmentKeyId = function segmentKeyId(key) {\n  return key.resolvedUri;\n};\n/**\n * utils to help dump binary data to the console\n */\n\n\nvar hexDump = function hexDump(data) {\n  var bytes = Array.prototype.slice.call(data);\n  var step = 16;\n  var result = '';\n  var hex = void 0;\n  var ascii = void 0;\n\n  for (var j = 0; j < bytes.length / step; j++) {\n    hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n    ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n    result += hex + ' ' + ascii + '\\n';\n  }\n\n  return result;\n};\n\nvar tagDump = function tagDump(_ref) {\n  var bytes = _ref.bytes;\n  return hexDump(bytes);\n};\n\nvar textRanges = function textRanges(ranges) {\n  var result = '';\n  var i = void 0;\n\n  for (i = 0; i < ranges.length; i++) {\n    result += textRange(ranges, i) + ' ';\n  }\n\n  return result;\n};\n\nvar utils =\n/*#__PURE__*/\nObject.freeze({\n  createTransferableMessage: createTransferableMessage,\n  initSegmentId: initSegmentId,\n  segmentKeyId: segmentKeyId,\n  hexDump: hexDump,\n  tagDump: tagDump,\n  textRanges: textRanges\n}); // TODO handle fmp4 case where the timing info is accurate and doesn't involve transmux\n// Add 25% to the segment duration to account for small discrepencies in segment timing.\n// 25% was arbitrarily chosen, and may need to be refined over time.\n\nvar SEGMENT_END_FUDGE_PERCENT = 0.25;\n/**\n * Converts a player time (any time that can be gotten/set from player.currentTime(),\n * e.g., any time within player.seekable().start(0) to player.seekable().end(0)) to a\n * program time (any time referencing the real world (e.g., EXT-X-PROGRAM-DATE-TIME)).\n *\n * The containing segment is required as the EXT-X-PROGRAM-DATE-TIME serves as an \"anchor\n * point\" (a point where we have a mapping from program time to player time, with player\n * time being the post transmux start of the segment).\n *\n * For more details, see [this doc](../../docs/program-time-from-player-time.md).\n *\n * @param {Number} playerTime the player time\n * @param {Object} segment the segment which contains the player time\n * @return {Date} program time\n */\n\nvar playerTimeToProgramTime = function playerTimeToProgramTime(playerTime, segment) {\n  if (!segment.dateTimeObject) {\n    // Can't convert without an \"anchor point\" for the program time (i.e., a time that can\n    // be used to map the start of a segment with a real world time).\n    return null;\n  }\n\n  var transmuxerPrependedSeconds = segment.videoTimingInfo.transmuxerPrependedSeconds;\n  var transmuxedStart = segment.videoTimingInfo.transmuxedPresentationStart; // get the start of the content from before old content is prepended\n\n  var startOfSegment = transmuxedStart + transmuxerPrependedSeconds;\n  var offsetFromSegmentStart = playerTime - startOfSegment;\n  return new Date(segment.dateTimeObject.getTime() + offsetFromSegmentStart * 1000);\n};\n\nvar originalSegmentVideoDuration = function originalSegmentVideoDuration(videoTimingInfo) {\n  return videoTimingInfo.transmuxedPresentationEnd - videoTimingInfo.transmuxedPresentationStart - videoTimingInfo.transmuxerPrependedSeconds;\n};\n/**\n * Finds a segment that contains the time requested given as an ISO-8601 string. The\n * returned segment might be an estimate or an accurate match.\n *\n * @param {String} programTime The ISO-8601 programTime to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\n\nvar findSegmentForProgramTime = function findSegmentForProgramTime(programTime, playlist) {\n  // Assumptions:\n  //  - verifyProgramDateTimeTags has already been run\n  //  - live streams have been started\n  var dateTimeObject = void 0;\n\n  try {\n    dateTimeObject = new Date(programTime);\n  } catch (e) {\n    return null;\n  }\n\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n\n  var segment = playlist.segments[0];\n\n  if (dateTimeObject < segment.dateTimeObject) {\n    // Requested time is before stream start.\n    return null;\n  }\n\n  for (var i = 0; i < playlist.segments.length - 1; i++) {\n    segment = playlist.segments[i];\n    var nextSegmentStart = playlist.segments[i + 1].dateTimeObject;\n\n    if (dateTimeObject < nextSegmentStart) {\n      break;\n    }\n  }\n\n  var lastSegment = playlist.segments[playlist.segments.length - 1];\n  var lastSegmentStart = lastSegment.dateTimeObject;\n  var lastSegmentDuration = lastSegment.videoTimingInfo ? originalSegmentVideoDuration(lastSegment.videoTimingInfo) : lastSegment.duration + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT;\n  var lastSegmentEnd = new Date(lastSegmentStart.getTime() + lastSegmentDuration * 1000);\n\n  if (dateTimeObject > lastSegmentEnd) {\n    // Beyond the end of the stream, or our best guess of the end of the stream.\n    return null;\n  }\n\n  if (dateTimeObject > lastSegmentStart) {\n    segment = lastSegment;\n  }\n\n  return {\n    segment: segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : Playlist.duration(playlist, playlist.mediaSequence + playlist.segments.indexOf(segment)),\n    // Although, given that all segments have accurate date time objects, the segment\n    // selected should be accurate, unless the video has been transmuxed at some point\n    // (determined by the presence of the videoTimingInfo object), the segment's \"player\n    // time\" (the start time in the player) can't be considered accurate.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Finds a segment that contains the given player time(in seconds).\n *\n * @param {Number} time The player time to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\n\nvar findSegmentForPlayerTime = function findSegmentForPlayerTime(time, playlist) {\n  // Assumptions:\n  // - there will always be a segment.duration\n  // - we can start from zero\n  // - segments are in time order\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n\n  var segmentEnd = 0;\n  var segment = void 0;\n\n  for (var i = 0; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i]; // videoTimingInfo is set after the segment is downloaded and transmuxed, and\n    // should contain the most accurate values we have for the segment's player times.\n    //\n    // Use the accurate transmuxedPresentationEnd value if it is available, otherwise fall\n    // back to an estimate based on the manifest derived (inaccurate) segment.duration, to\n    // calculate an end value.\n\n    segmentEnd = segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationEnd : segmentEnd + segment.duration;\n\n    if (time <= segmentEnd) {\n      break;\n    }\n  }\n\n  var lastSegment = playlist.segments[playlist.segments.length - 1];\n\n  if (lastSegment.videoTimingInfo && lastSegment.videoTimingInfo.transmuxedPresentationEnd < time) {\n    // The time requested is beyond the stream end.\n    return null;\n  }\n\n  if (time > segmentEnd) {\n    // The time is within or beyond the last segment.\n    //\n    // Check to see if the time is beyond a reasonable guess of the end of the stream.\n    if (time > segmentEnd + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT) {\n      // Technically, because the duration value is only an estimate, the time may still\n      // exist in the last segment, however, there isn't enough information to make even\n      // a reasonable estimate.\n      return null;\n    }\n\n    segment = lastSegment;\n  }\n\n  return {\n    segment: segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : segmentEnd - segment.duration,\n    // Because videoTimingInfo is only set after transmux, it is the only way to get\n    // accurate timing values.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Gives the offset of the comparisonTimestamp from the programTime timestamp in seconds.\n * If the offset returned is positive, the programTime occurs after the\n * comparisonTimestamp.\n * If the offset is negative, the programTime occurs before the comparisonTimestamp.\n *\n * @param {String} comparisonTimeStamp An ISO-8601 timestamp to compare against\n * @param {String} programTime The programTime as an ISO-8601 string\n * @return {Number} offset\n */\n\n\nvar getOffsetFromTimestamp = function getOffsetFromTimestamp(comparisonTimeStamp, programTime) {\n  var segmentDateTime = void 0;\n  var programDateTime = void 0;\n\n  try {\n    segmentDateTime = new Date(comparisonTimeStamp);\n    programDateTime = new Date(programTime);\n  } catch (e) {// TODO handle error\n  }\n\n  var segmentTimeEpoch = segmentDateTime.getTime();\n  var programTimeEpoch = programDateTime.getTime();\n  return (programTimeEpoch - segmentTimeEpoch) / 1000;\n};\n/**\n * Checks that all segments in this playlist have programDateTime tags.\n *\n * @param {Object} playlist A playlist object\n */\n\n\nvar verifyProgramDateTimeTags = function verifyProgramDateTimeTags(playlist) {\n  if (!playlist.segments || playlist.segments.length === 0) {\n    return false;\n  }\n\n  for (var i = 0; i < playlist.segments.length; i++) {\n    var segment = playlist.segments[i];\n\n    if (!segment.dateTimeObject) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Returns the programTime of the media given a playlist and a playerTime.\n * The playlist must have programDateTime tags for a programDateTime tag to be returned.\n * If the segments containing the time requested have not been buffered yet, an estimate\n * may be returned to the callback.\n *\n * @param {Object} args\n * @param {Object} args.playlist A playlist object to search within\n * @param {Number} time A playerTime in seconds\n * @param {Function} callback(err, programTime)\n * @returns {String} err.message A detailed error message\n * @returns {Object} programTime\n * @returns {Number} programTime.mediaSeconds The streamTime in seconds\n * @returns {String} programTime.programDateTime The programTime as an ISO-8601 String\n */\n\n\nvar getProgramTime = function getProgramTime(_ref) {\n  var playlist = _ref.playlist,\n      _ref$time = _ref.time,\n      time = _ref$time === undefined ? undefined : _ref$time,\n      callback = _ref.callback;\n\n  if (!callback) {\n    throw new Error('getProgramTime: callback must be provided');\n  }\n\n  if (!playlist || time === undefined) {\n    return callback({\n      message: 'getProgramTime: playlist and time must be provided'\n    });\n  }\n\n  var matchedSegment = findSegmentForPlayerTime(time, playlist);\n\n  if (!matchedSegment) {\n    return callback({\n      message: 'valid programTime was not found'\n    });\n  }\n\n  if (matchedSegment.type === 'estimate') {\n    return callback({\n      message: 'Accurate programTime could not be determined.' + ' Please seek to e.seekTime and try again',\n      seekTime: matchedSegment.estimatedStart\n    });\n  }\n\n  var programTimeObject = {\n    mediaSeconds: time\n  };\n  var programTime = playerTimeToProgramTime(time, matchedSegment.segment);\n\n  if (programTime) {\n    programTimeObject.programDateTime = programTime.toISOString();\n  }\n\n  return callback(null, programTimeObject);\n};\n/**\n * Seeks in the player to a time that matches the given programTime ISO-8601 string.\n *\n * @param {Object} args\n * @param {String} args.programTime A programTime to seek to as an ISO-8601 String\n * @param {Object} args.playlist A playlist to look within\n * @param {Number} args.retryCount The number of times to try for an accurate seek. Default is 2.\n * @param {Function} args.seekTo A method to perform a seek\n * @param {Boolean} args.pauseAfterSeek Whether to end in a paused state after seeking. Default is true.\n * @param {Object} args.tech The tech to seek on\n * @param {Function} args.callback(err, newTime) A callback to return the new time to\n * @returns {String} err.message A detailed error message\n * @returns {Number} newTime The exact time that was seeked to in seconds\n */\n\n\nvar seekToProgramTime = function seekToProgramTime(_ref2) {\n  var programTime = _ref2.programTime,\n      playlist = _ref2.playlist,\n      _ref2$retryCount = _ref2.retryCount,\n      retryCount = _ref2$retryCount === undefined ? 2 : _ref2$retryCount,\n      seekTo = _ref2.seekTo,\n      _ref2$pauseAfterSeek = _ref2.pauseAfterSeek,\n      pauseAfterSeek = _ref2$pauseAfterSeek === undefined ? true : _ref2$pauseAfterSeek,\n      tech = _ref2.tech,\n      callback = _ref2.callback;\n\n  if (!callback) {\n    throw new Error('seekToProgramTime: callback must be provided');\n  }\n\n  if (typeof programTime === 'undefined' || !playlist || !seekTo) {\n    return callback({\n      message: 'seekToProgramTime: programTime, seekTo and playlist must be provided'\n    });\n  }\n\n  if (!playlist.endList && !tech.hasStarted_) {\n    return callback({\n      message: 'player must be playing a live stream to start buffering'\n    });\n  }\n\n  if (!verifyProgramDateTimeTags(playlist)) {\n    return callback({\n      message: 'programDateTime tags must be provided in the manifest ' + playlist.resolvedUri\n    });\n  }\n\n  var matchedSegment = findSegmentForProgramTime(programTime, playlist); // no match\n\n  if (!matchedSegment) {\n    return callback({\n      message: programTime + ' was not found in the stream'\n    });\n  }\n\n  var segment = matchedSegment.segment;\n  var mediaOffset = getOffsetFromTimestamp(segment.dateTimeObject, programTime);\n\n  if (matchedSegment.type === 'estimate') {\n    // we've run out of retries\n    if (retryCount === 0) {\n      return callback({\n        message: programTime + ' is not buffered yet. Try again'\n      });\n    }\n\n    seekTo(matchedSegment.estimatedStart + mediaOffset);\n    tech.one('seeked', function () {\n      seekToProgramTime({\n        programTime: programTime,\n        playlist: playlist,\n        retryCount: retryCount - 1,\n        seekTo: seekTo,\n        pauseAfterSeek: pauseAfterSeek,\n        tech: tech,\n        callback: callback\n      });\n    });\n    return;\n  } // Since the segment.start value is determined from the buffered end or ending time\n  // of the prior segment, the seekToTime doesn't need to account for any transmuxer\n  // modifications.\n\n\n  var seekToTime = segment.start + mediaOffset;\n\n  var seekedCallback = function seekedCallback() {\n    return callback(null, tech.currentTime());\n  }; // listen for seeked event\n\n\n  tech.one('seeked', seekedCallback); // pause before seeking as video.js will restore this state\n\n  if (pauseAfterSeek) {\n    tech.pause();\n  }\n\n  seekTo(seekToTime);\n};\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n// Fudge factor to account for TimeRanges rounding\n\n\nvar TIME_FUDGE_FACTOR = 1 / 30; // Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\n\nvar SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\n\nvar filterRanges = function filterRanges(timeRanges, predicate) {\n  var results = [];\n  var i = void 0;\n\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n\n  return videojs$1.createTimeRanges(results);\n};\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object\n */\n\n\nvar findRange = function findRange(buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - TIME_FUDGE_FACTOR <= time && end + TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns the TimeRanges that begin later than the specified time.\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object.\n */\n\n\nvar findNextRange = function findNextRange(timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns gaps within a list of TimeRanges\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\n\n\nvar findGaps = function findGaps(buffered) {\n  if (buffered.length < 2) {\n    return videojs$1.createTimeRanges();\n  }\n\n  var ranges = [];\n\n  for (var i = 1; i < buffered.length; i++) {\n    var start = buffered.end(i - 1);\n    var end = buffered.start(i);\n    ranges.push([start, end]);\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @returns {String} a human readable string\n */\n\n\nvar printableRange = function printableRange(range) {\n  var strArr = [];\n\n  if (!range || !range.length) {\n    return '';\n  }\n\n  for (var i = 0; i < range.length; i++) {\n    strArr.push(range.start(i) + ' => ' + range.end(i));\n  }\n\n  return strArr.join(', ');\n};\n/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {Number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {Number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */\n\n\nvar timeUntilRebuffer = function timeUntilRebuffer(buffered, currentTime) {\n  var playbackRate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n  return (bufferedEnd - currentTime) / playbackRate;\n};\n/**\n * Converts a TimeRanges object into an array representation\n * @param {TimeRanges} timeRanges\n * @returns {Array}\n */\n\n\nvar timeRangesToArray = function timeRangesToArray(timeRanges) {\n  var timeRangesList = [];\n\n  for (var i = 0; i < timeRanges.length; i++) {\n    timeRangesList.push({\n      start: timeRanges.start(i),\n      end: timeRanges.end(i)\n    });\n  }\n\n  return timeRangesList;\n};\n/**\n * @file create-text-tracks-if-necessary.js\n */\n\n/**\n * Create text tracks on video.js if they exist on a segment.\n *\n * @param {Object} sourceBuffer the VSB or FSB\n * @param {Object} mediaSource the HTML media source\n * @param {Object} segment the segment that may contain the text track\n * @private\n */\n\n\nvar createTextTracksIfNecessary = function createTextTracksIfNecessary(sourceBuffer, mediaSource, segment) {\n  var player = mediaSource.player_; // create an in-band caption track if one is present in the segment\n\n  if (segment.captions && segment.captions.length) {\n    if (!sourceBuffer.inbandTextTracks_) {\n      sourceBuffer.inbandTextTracks_ = {};\n    }\n\n    for (var trackId in segment.captionStreams) {\n      if (!sourceBuffer.inbandTextTracks_[trackId]) {\n        player.tech_.trigger({\n          type: 'usage',\n          name: 'hls-608'\n        });\n        var track = player.textTracks().getTrackById(trackId);\n\n        if (track) {\n          // Resuse an existing track with a CC# id because this was\n          // very likely created by videojs-contrib-hls from information\n          // in the m3u8 for us to use\n          sourceBuffer.inbandTextTracks_[trackId] = track;\n        } else {\n          // Otherwise, create a track with the default `CC#` label and\n          // without a language\n          sourceBuffer.inbandTextTracks_[trackId] = player.addRemoteTextTrack({\n            kind: 'captions',\n            id: trackId,\n            label: trackId\n          }, false).track;\n        }\n      }\n    }\n  }\n\n  if (segment.metadata && segment.metadata.length && !sourceBuffer.metadataTrack_) {\n    sourceBuffer.metadataTrack_ = player.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'Timed Metadata'\n    }, false).track;\n    sourceBuffer.metadataTrack_.inBandMetadataTrackDispatchType = segment.metadata.dispatchType;\n  }\n};\n/**\n * @file remove-cues-from-track.js\n */\n\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\n\n\nvar removeCuesFromTrack = function removeCuesFromTrack(start, end, track) {\n  var i = void 0;\n  var cue = void 0;\n\n  if (!track) {\n    return;\n  }\n\n  if (!track.cues) {\n    return;\n  }\n\n  i = track.cues.length;\n\n  while (i--) {\n    cue = track.cues[i]; // Remove any overlapping cue\n\n    if (cue.startTime <= end && cue.endTime >= start) {\n      track.removeCue(cue);\n    }\n  }\n};\n/**\n * @file add-text-track-data.js\n */\n\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\n\n\nvar deprecateOldCue = function deprecateOldCue(cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n\nvar durationOfVideo = function durationOfVideo(duration) {\n  var dur = void 0;\n\n  if (isNaN(duration) || Math.abs(duration) === Infinity) {\n    dur = Number.MAX_VALUE;\n  } else {\n    dur = duration;\n  }\n\n  return dur;\n};\n/**\n * Add text track data to a source handler given the captions and\n * metadata from the buffer.\n *\n * @param {Object} sourceHandler the virtual source buffer\n * @param {Array} captionArray an array of caption data\n * @param {Array} metadataArray an array of meta data\n * @private\n */\n\n\nvar addTextTrackData = function addTextTrackData(sourceHandler, captionArray, metadataArray) {\n  var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n\n  if (captionArray) {\n    captionArray.forEach(function (caption) {\n      var track = caption.stream;\n      this.inbandTextTracks_[track].addCue(new Cue(caption.startTime + this.timestampOffset, caption.endTime + this.timestampOffset, caption.text));\n    }, sourceHandler);\n  }\n\n  if (metadataArray) {\n    var videoDuration = durationOfVideo(sourceHandler.mediaSource_.duration);\n    metadataArray.forEach(function (metadata) {\n      var time = metadata.cueTime + this.timestampOffset; // if time isn't a finite number between 0 and Infinity, like NaN,\n      // ignore this bit of metadata.\n      // This likely occurs when you have an non-timed ID3 tag like TIT2,\n      // which is the \"Title/Songname/Content description\" frame\n\n      if (typeof time !== 'number' || window$1.isNaN(time) || time < 0 || !(time < Infinity)) {\n        return;\n      }\n\n      metadata.frames.forEach(function (frame) {\n        var cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n        cue.frame = frame;\n        cue.value = frame;\n        deprecateOldCue(cue);\n        this.metadataTrack_.addCue(cue);\n      }, this);\n    }, sourceHandler); // Updating the metadeta cues so that\n    // the endTime of each cue is the startTime of the next cue\n    // the endTime of last cue is the duration of the video\n\n    if (sourceHandler.metadataTrack_ && sourceHandler.metadataTrack_.cues && sourceHandler.metadataTrack_.cues.length) {\n      var cues = sourceHandler.metadataTrack_.cues;\n      var cuesArray = []; // Create a copy of the TextTrackCueList...\n      // ...disregarding cues with a falsey value\n\n      for (var i = 0; i < cues.length; i++) {\n        if (cues[i]) {\n          cuesArray.push(cues[i]);\n        }\n      } // Group cues by their startTime value\n\n\n      var cuesGroupedByStartTime = cuesArray.reduce(function (obj, cue) {\n        var timeSlot = obj[cue.startTime] || [];\n        timeSlot.push(cue);\n        obj[cue.startTime] = timeSlot;\n        return obj;\n      }, {}); // Sort startTimes by ascending order\n\n      var sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort(function (a, b) {\n        return Number(a) - Number(b);\n      }); // Map each cue group's endTime to the next group's startTime\n\n      sortedStartTimes.forEach(function (startTime, idx) {\n        var cueGroup = cuesGroupedByStartTime[startTime];\n        var nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration; // Map each cue's endTime the next group's startTime\n\n        cueGroup.forEach(function (cue) {\n          cue.endTime = nextTime;\n        });\n      });\n    }\n  }\n};\n\nvar win = typeof window !== 'undefined' ? window : {},\n    TARGET = typeof Symbol === 'undefined' ? '__target' : Symbol(),\n    SCRIPT_TYPE = 'application/javascript',\n    BlobBuilder = win.BlobBuilder || win.WebKitBlobBuilder || win.MozBlobBuilder || win.MSBlobBuilder,\n    URL = win.URL || win.webkitURL || URL && URL.msURL,\n    Worker = win.Worker;\n/**\n * Returns a wrapper around Web Worker code that is constructible.\n *\n * @function shimWorker\n *\n * @param { String }    filename    The name of the file\n * @param { Function }  fn          Function wrapping the code of the worker\n */\n\nfunction shimWorker(filename, fn) {\n  return function ShimWorker(forceFallback) {\n    var o = this;\n\n    if (!fn) {\n      return new Worker(filename);\n    } else if (Worker && !forceFallback) {\n      // Convert the function's inner code to a string to construct the worker\n      var source = fn.toString().replace(/^function.+?{/, '').slice(0, -1),\n          objURL = createSourceObject(source);\n      this[TARGET] = new Worker(objURL);\n      wrapTerminate(this[TARGET], objURL);\n      return this[TARGET];\n    } else {\n      var selfShim = {\n        postMessage: function postMessage(m) {\n          if (o.onmessage) {\n            setTimeout(function () {\n              o.onmessage({\n                data: m,\n                target: selfShim\n              });\n            });\n          }\n        }\n      };\n      fn.call(selfShim);\n\n      this.postMessage = function (m) {\n        setTimeout(function () {\n          selfShim.onmessage({\n            data: m,\n            target: o\n          });\n        });\n      };\n\n      this.isThisThread = true;\n    }\n  };\n} // Test Worker capabilities\n\n\nif (Worker) {\n  var testWorker,\n      objURL = createSourceObject('self.onmessage = function () {}'),\n      testArray = new Uint8Array(1);\n\n  try {\n    testWorker = new Worker(objURL); // Native browser on some Samsung devices throws for transferables, let's detect it\n\n    testWorker.postMessage(testArray, [testArray.buffer]);\n  } catch (e) {\n    Worker = null;\n  } finally {\n    URL.revokeObjectURL(objURL);\n\n    if (testWorker) {\n      testWorker.terminate();\n    }\n  }\n}\n\nfunction createSourceObject(str) {\n  try {\n    return URL.createObjectURL(new Blob([str], {\n      type: SCRIPT_TYPE\n    }));\n  } catch (e) {\n    var blob = new BlobBuilder();\n    blob.append(str);\n    return URL.createObjectURL(blob.getBlob(type));\n  }\n}\n\nfunction wrapTerminate(worker, objURL) {\n  if (!worker || !objURL) return;\n  var term = worker.terminate;\n  worker.objURL = objURL;\n\n  worker.terminate = function () {\n    if (worker.objURL) URL.revokeObjectURL(worker.objURL);\n    term.call(worker);\n  };\n}\n\nvar TransmuxWorker = new shimWorker(\"./transmuxer-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n\n  var transmuxerWorker = function () {\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Functions that generate fragmented MP4s suitable for use with Media\n     * Source Extensions.\n     */\n    var UINT32_MAX = Math.pow(2, 32) - 1;\n    var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n    (function () {\n      var i;\n      types = {\n        avc1: [],\n        // codingname\n        avcC: [],\n        btrt: [],\n        dinf: [],\n        dref: [],\n        esds: [],\n        ftyp: [],\n        hdlr: [],\n        mdat: [],\n        mdhd: [],\n        mdia: [],\n        mfhd: [],\n        minf: [],\n        moof: [],\n        moov: [],\n        mp4a: [],\n        // codingname\n        mvex: [],\n        mvhd: [],\n        sdtp: [],\n        smhd: [],\n        stbl: [],\n        stco: [],\n        stsc: [],\n        stsd: [],\n        stsz: [],\n        stts: [],\n        styp: [],\n        tfdt: [],\n        tfhd: [],\n        traf: [],\n        trak: [],\n        trun: [],\n        trex: [],\n        tkhd: [],\n        vmhd: []\n      }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n      // don't throw an error\n\n      if (typeof Uint8Array === 'undefined') {\n        return;\n      }\n\n      for (i in types) {\n        if (types.hasOwnProperty(i)) {\n          types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n        }\n      }\n\n      MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n      AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n      MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n      VIDEO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n      ]);\n      AUDIO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n      ]);\n      HDLR_TYPES = {\n        video: VIDEO_HDLR,\n        audio: AUDIO_HDLR\n      };\n      DREF = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n      ]);\n      SMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance, 0 means centered\n      0x00, 0x00 // reserved\n      ]);\n      STCO = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      STSC = STCO;\n      STSZ = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n      ]);\n      STTS = STCO;\n      VMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n      ]);\n    })();\n\n    box = function box(type) {\n      var payload = [],\n          size = 0,\n          i,\n          result,\n          view;\n\n      for (i = 1; i < arguments.length; i++) {\n        payload.push(arguments[i]);\n      }\n\n      i = payload.length; // calculate the total size we need to allocate\n\n      while (i--) {\n        size += payload[i].byteLength;\n      }\n\n      result = new Uint8Array(size + 8);\n      view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n      view.setUint32(0, result.byteLength);\n      result.set(type, 4); // copy the payload into the result\n\n      for (i = 0, size = 8; i < payload.length; i++) {\n        result.set(payload[i], size);\n        size += payload[i].byteLength;\n      }\n\n      return result;\n    };\n\n    dinf = function dinf() {\n      return box(types.dinf, box(types.dref, DREF));\n    };\n\n    esds = function esds(track) {\n      return box(types.esds, new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      // ES_Descriptor\n      0x03, // tag, ES_DescrTag\n      0x19, // length\n      0x00, 0x00, // ES_ID\n      0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n      // DecoderConfigDescriptor\n      0x04, // tag, DecoderConfigDescrTag\n      0x11, // length\n      0x40, // object type\n      0x15, // streamType\n      0x00, 0x06, 0x00, // bufferSizeDB\n      0x00, 0x00, 0xda, 0xc0, // maxBitrate\n      0x00, 0x00, 0xda, 0xc0, // avgBitrate\n      // DecoderSpecificInfo\n      0x05, // tag, DecoderSpecificInfoTag\n      0x02, // length\n      // ISO/IEC 14496-3, AudioSpecificConfig\n      // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n      track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n      ]));\n    };\n\n    ftyp = function ftyp() {\n      return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n    };\n\n    hdlr = function hdlr(type) {\n      return box(types.hdlr, HDLR_TYPES[type]);\n    };\n\n    mdat = function mdat(data) {\n      return box(types.mdat, data);\n    };\n\n    mdhd = function mdhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x02, // creation_time\n      0x00, 0x00, 0x00, 0x03, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF, // duration\n      0x55, 0xc4, // 'und' language (undetermined)\n      0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n      // defined. The sample rate can be parsed out of an ADTS header, for\n      // instance.\n\n      if (track.samplerate) {\n        result[12] = track.samplerate >>> 24 & 0xFF;\n        result[13] = track.samplerate >>> 16 & 0xFF;\n        result[14] = track.samplerate >>> 8 & 0xFF;\n        result[15] = track.samplerate & 0xFF;\n      }\n\n      return box(types.mdhd, result);\n    };\n\n    mdia = function mdia(track) {\n      return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n    };\n\n    mfhd = function mfhd(sequenceNumber) {\n      return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\n      (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n      ]));\n    };\n\n    minf = function minf(track) {\n      return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n    };\n\n    moof = function moof(sequenceNumber, tracks) {\n      var trackFragments = [],\n          i = tracks.length; // build traf boxes for each track fragment\n\n      while (i--) {\n        trackFragments[i] = traf(tracks[i]);\n      }\n\n      return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n    };\n    /**\n     * Returns a movie box.\n     * @param tracks {array} the tracks associated with this movie\n     * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n     */\n\n\n    moov = function moov(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trak(tracks[i]);\n      }\n\n      return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n    };\n\n    mvex = function mvex(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trex(tracks[i]);\n      }\n\n      return box.apply(null, [types.mvex].concat(boxes));\n    };\n\n    mvhd = function mvhd(duration) {\n      var bytes = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n      ]);\n      return box(types.mvhd, bytes);\n    };\n\n    sdtp = function sdtp(track) {\n      var samples = track.samples || [],\n          bytes = new Uint8Array(4 + samples.length),\n          flags,\n          i; // leave the full box header (4 bytes) all zero\n      // write the sample table\n\n      for (i = 0; i < samples.length; i++) {\n        flags = samples[i].flags;\n        bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n      }\n\n      return box(types.sdtp, bytes);\n    };\n\n    stbl = function stbl(track) {\n      return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n    };\n\n    (function () {\n      var videoSample, audioSample;\n\n      stsd = function stsd(track) {\n        return box(types.stsd, new Uint8Array([0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n      };\n\n      videoSample = function videoSample(track) {\n        var sps = track.sps || [],\n            pps = track.pps || [],\n            sequenceParameterSets = [],\n            pictureParameterSets = [],\n            i; // assemble the SPSs\n\n        for (i = 0; i < sps.length; i++) {\n          sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n          sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n          sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n        } // assemble the PPSs\n\n\n        for (i = 0; i < pps.length; i++) {\n          pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n          pictureParameterSets.push(pps[i].byteLength & 0xFF);\n          pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n        }\n\n        return box(types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n        (track.width & 0xff00) >> 8, track.width & 0xff, // width\n        (track.height & 0xff00) >> 8, track.height & 0xff, // height\n        0x00, 0x48, 0x00, 0x00, // horizresolution\n        0x00, 0x48, 0x00, 0x00, // vertresolution\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // frame_count\n        0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n        0x00, 0x18, // depth = 24\n        0x11, 0x11 // pre_defined = -1\n        ]), box(types.avcC, new Uint8Array([0x01, // configurationVersion\n        track.profileIdc, // AVCProfileIndication\n        track.profileCompatibility, // profile_compatibility\n        track.levelIdc, // AVCLevelIndication\n        0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n        ].concat([sps.length // numOfSequenceParameterSets\n        ]).concat(sequenceParameterSets).concat([pps.length // numOfPictureParameterSets\n        ]).concat(pictureParameterSets))), // \"PPS\"\n        box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n        0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n        0x00, 0x2d, 0xc6, 0xc0])) // avgBitrate\n        );\n      };\n\n      audioSample = function audioSample(track) {\n        return box(types.mp4a, new Uint8Array([// SampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        // AudioSampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, // reserved\n        (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff, // channelcount\n        (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff, // samplesize\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n        // MP4AudioSampleEntry, ISO/IEC 14496-14\n        ]), esds(track));\n      };\n    })();\n\n    tkhd = function tkhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x07, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF, // duration\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, // layer\n      0x00, 0x00, // alternate_group\n      0x01, 0x00, // non-audio track volume\n      0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00, // width\n      (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n      ]);\n      return box(types.tkhd, result);\n    };\n    /**\n     * Generate a track fragment (traf) box. A traf box collects metadata\n     * about tracks in a movie fragment (moof) box.\n     */\n\n\n    traf = function traf(track) {\n      var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n      trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x3a, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x00, 0x00, 0x00 // default_sample_flags\n      ]));\n      upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n      lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n      trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01, // version 1\n      0x00, 0x00, 0x00, // flags\n      // baseMediaDecodeTime\n      upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n      // the containing moof to the first payload byte of the associated\n      // mdat\n\n      dataOffset = 32 + // tfhd\n      20 + // tfdt\n      8 + // traf header\n      16 + // mfhd\n      8 + // moof header\n      8; // mdat header\n      // audio tracks require less metadata\n\n      if (track.type === 'audio') {\n        trackFragmentRun = trun(track, dataOffset);\n        return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n      } // video tracks should contain an independent and disposable samples\n      // box (sdtp)\n      // generate one and adjust offsets to match\n\n\n      sampleDependencyTable = sdtp(track);\n      trackFragmentRun = trun(track, sampleDependencyTable.length + dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n    };\n    /**\n     * Generate a track box.\n     * @param track {object} a track definition\n     * @return {Uint8Array} the track box\n     */\n\n\n    trak = function trak(track) {\n      track.duration = track.duration || 0xffffffff;\n      return box(types.trak, tkhd(track), mdia(track));\n    };\n\n    trex = function trex(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n      ]); // the last two bytes of default_sample_flags is the sample\n      // degradation priority, a hint about the importance of this sample\n      // relative to others. Lower the degradation priority for all sample\n      // types other than video.\n\n      if (track.type !== 'video') {\n        result[result.length - 1] = 0x00;\n      }\n\n      return box(types.trex, result);\n    };\n\n    (function () {\n      var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n      // duration is present for the first sample, it will be present for\n      // all subsequent samples.\n      // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n      trunHeader = function trunHeader(samples, offset) {\n        var durationPresent = 0,\n            sizePresent = 0,\n            flagsPresent = 0,\n            compositionTimeOffset = 0; // trun flag constants\n\n        if (samples.length) {\n          if (samples[0].duration !== undefined) {\n            durationPresent = 0x1;\n          }\n\n          if (samples[0].size !== undefined) {\n            sizePresent = 0x2;\n          }\n\n          if (samples[0].flags !== undefined) {\n            flagsPresent = 0x4;\n          }\n\n          if (samples[0].compositionTimeOffset !== undefined) {\n            compositionTimeOffset = 0x8;\n          }\n        }\n\n        return [0x00, // version 0\n        0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01, // flags\n        (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF, // sample_count\n        (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n        ];\n      };\n\n      videoTrun = function videoTrun(track, offset) {\n        var bytes, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 16 * samples.length;\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF, // sample_size\n          sample.flags.isLeading << 2 | sample.flags.dependsOn, sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample, sample.flags.degradationPriority & 0xF0 << 8, sample.flags.degradationPriority & 0x0F, // sample_flags\n          (sample.compositionTimeOffset & 0xFF000000) >>> 24, (sample.compositionTimeOffset & 0xFF0000) >>> 16, (sample.compositionTimeOffset & 0xFF00) >>> 8, sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n          ]);\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      audioTrun = function audioTrun(track, offset) {\n        var bytes, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 8 * samples.length;\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF]); // sample_size\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      trun = function trun(track, offset) {\n        if (track.type === 'audio') {\n          return audioTrun(track, offset);\n        }\n\n        return videoTrun(track, offset);\n      };\n    })();\n\n    var mp4Generator = {\n      ftyp: ftyp,\n      mdat: mdat,\n      moof: moof,\n      moov: moov,\n      initSegment: function initSegment(tracks) {\n        var fileType = ftyp(),\n            movie = moov(tracks),\n            result;\n        result = new Uint8Array(fileType.byteLength + movie.byteLength);\n        result.set(fileType);\n        result.set(movie, fileType.byteLength);\n        return result;\n      }\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var toUnsigned = function toUnsigned(value) {\n      return value >>> 0;\n    };\n\n    var bin = {\n      toUnsigned: toUnsigned\n    };\n    var toUnsigned$1 = bin.toUnsigned;\n\n    var _findBox, parseType, timescale, startTime, getVideoTrackIds; // Find the data for a box specified by its path\n\n\n    _findBox = function findBox(data, path) {\n      var results = [],\n          i,\n          size,\n          type,\n          end,\n          subresults;\n\n      if (!path.length) {\n        // short-circuit the search for empty paths\n        return null;\n      }\n\n      for (i = 0; i < data.byteLength;) {\n        size = toUnsigned$1(data[i] << 24 | data[i + 1] << 16 | data[i + 2] << 8 | data[i + 3]);\n        type = parseType(data.subarray(i + 4, i + 8));\n        end = size > 1 ? i + size : data.byteLength;\n\n        if (type === path[0]) {\n          if (path.length === 1) {\n            // this is the end of the path and we've found the box we were\n            // looking for\n            results.push(data.subarray(i + 8, end));\n          } else {\n            // recursively search for the next box along the path\n            subresults = _findBox(data.subarray(i + 8, end), path.slice(1));\n\n            if (subresults.length) {\n              results = results.concat(subresults);\n            }\n          }\n        }\n\n        i = end;\n      } // we've finished searching all of data\n\n\n      return results;\n    };\n    /**\n     * Returns the string representation of an ASCII encoded four byte buffer.\n     * @param buffer {Uint8Array} a four-byte buffer to translate\n     * @return {string} the corresponding string\n     */\n\n\n    parseType = function parseType(buffer) {\n      var result = '';\n      result += String.fromCharCode(buffer[0]);\n      result += String.fromCharCode(buffer[1]);\n      result += String.fromCharCode(buffer[2]);\n      result += String.fromCharCode(buffer[3]);\n      return result;\n    };\n    /**\n     * Parses an MP4 initialization segment and extracts the timescale\n     * values for any declared tracks. Timescale values indicate the\n     * number of clock ticks per second to assume for time-based values\n     * elsewhere in the MP4.\n     *\n     * To determine the start time of an MP4, you need two pieces of\n     * information: the timescale unit and the earliest base media decode\n     * time. Multiple timescales can be specified within an MP4 but the\n     * base media decode time is always expressed in the timescale from\n     * the media header box for the track:\n     * ```\n     * moov > trak > mdia > mdhd.timescale\n     * ```\n     * @param init {Uint8Array} the bytes of the init segment\n     * @return {object} a hash of track ids to timescale values or null if\n     * the init segment is malformed.\n     */\n\n\n    timescale = function timescale(init) {\n      var result = {},\n          traks = _findBox(init, ['moov', 'trak']); // mdhd timescale\n\n\n      return traks.reduce(function (result, trak) {\n        var tkhd, version, index, id, mdhd;\n        tkhd = _findBox(trak, ['tkhd'])[0];\n\n        if (!tkhd) {\n          return null;\n        }\n\n        version = tkhd[0];\n        index = version === 0 ? 12 : 20;\n        id = toUnsigned$1(tkhd[index] << 24 | tkhd[index + 1] << 16 | tkhd[index + 2] << 8 | tkhd[index + 3]);\n        mdhd = _findBox(trak, ['mdia', 'mdhd'])[0];\n\n        if (!mdhd) {\n          return null;\n        }\n\n        version = mdhd[0];\n        index = version === 0 ? 12 : 20;\n        result[id] = toUnsigned$1(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n        return result;\n      }, result);\n    };\n    /**\n     * Determine the base media decode start time, in seconds, for an MP4\n     * fragment. If multiple fragments are specified, the earliest time is\n     * returned.\n     *\n     * The base media decode time can be parsed from track fragment\n     * metadata:\n     * ```\n     * moof > traf > tfdt.baseMediaDecodeTime\n     * ```\n     * It requires the timescale value from the mdhd to interpret.\n     *\n     * @param timescale {object} a hash of track ids to timescale values.\n     * @return {number} the earliest base media decode start time for the\n     * fragment, in seconds\n     */\n\n\n    startTime = function startTime(timescale, fragment) {\n      var trafs, baseTimes, result; // we need info from two childrend of each track fragment box\n\n      trafs = _findBox(fragment, ['moof', 'traf']); // determine the start times for each track\n\n      baseTimes = [].concat.apply([], trafs.map(function (traf) {\n        return _findBox(traf, ['tfhd']).map(function (tfhd) {\n          var id, scale, baseTime; // get the track id from the tfhd\n\n          id = toUnsigned$1(tfhd[4] << 24 | tfhd[5] << 16 | tfhd[6] << 8 | tfhd[7]); // assume a 90kHz clock if no timescale was specified\n\n          scale = timescale[id] || 90e3; // get the base media decode time from the tfdt\n\n          baseTime = _findBox(traf, ['tfdt']).map(function (tfdt) {\n            var version, result;\n            version = tfdt[0];\n            result = toUnsigned$1(tfdt[4] << 24 | tfdt[5] << 16 | tfdt[6] << 8 | tfdt[7]);\n\n            if (version === 1) {\n              result *= Math.pow(2, 32);\n              result += toUnsigned$1(tfdt[8] << 24 | tfdt[9] << 16 | tfdt[10] << 8 | tfdt[11]);\n            }\n\n            return result;\n          })[0];\n          baseTime = baseTime || Infinity; // convert base time to seconds\n\n          return baseTime / scale;\n        });\n      })); // return the minimum\n\n      result = Math.min.apply(null, baseTimes);\n      return isFinite(result) ? result : 0;\n    };\n    /**\n      * Find the trackIds of the video tracks in this source.\n      * Found by parsing the Handler Reference and Track Header Boxes:\n      *   moov > trak > mdia > hdlr\n      *   moov > trak > tkhd\n      *\n      * @param {Uint8Array} init - The bytes of the init segment for this source\n      * @return {Number[]} A list of trackIds\n      *\n      * @see ISO-BMFF-12/2015, Section 8.4.3\n     **/\n\n\n    getVideoTrackIds = function getVideoTrackIds(init) {\n      var traks = _findBox(init, ['moov', 'trak']);\n\n      var videoTrackIds = [];\n      traks.forEach(function (trak) {\n        var hdlrs = _findBox(trak, ['mdia', 'hdlr']);\n\n        var tkhds = _findBox(trak, ['tkhd']);\n\n        hdlrs.forEach(function (hdlr, index) {\n          var handlerType = parseType(hdlr.subarray(8, 12));\n          var tkhd = tkhds[index];\n          var view;\n          var version;\n          var trackId;\n\n          if (handlerType === 'vide') {\n            view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n            version = view.getUint8(0);\n            trackId = version === 0 ? view.getUint32(12) : view.getUint32(20);\n            videoTrackIds.push(trackId);\n          }\n        });\n      });\n      return videoTrackIds;\n    };\n\n    var probe = {\n      findBox: _findBox,\n      parseType: parseType,\n      timescale: timescale,\n      startTime: startTime,\n      videoTrackIds: getVideoTrackIds\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * A lightweight readable stream implemention that handles event dispatching.\n     * Objects that inherit from streams should call init in their constructors.\n     */\n\n    var Stream = function Stream() {\n      this.init = function () {\n        var listeners = {};\n        /**\n         * Add a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} the callback to be invoked when an event of\n         * the specified type occurs\n         */\n\n        this.on = function (type, listener) {\n          if (!listeners[type]) {\n            listeners[type] = [];\n          }\n\n          listeners[type] = listeners[type].concat(listener);\n        };\n        /**\n         * Remove a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} a function previously registered for this\n         * type of event through `on`\n         */\n\n\n        this.off = function (type, listener) {\n          var index;\n\n          if (!listeners[type]) {\n            return false;\n          }\n\n          index = listeners[type].indexOf(listener);\n          listeners[type] = listeners[type].slice();\n          listeners[type].splice(index, 1);\n          return index > -1;\n        };\n        /**\n         * Trigger an event of the specified type on this stream. Any additional\n         * arguments to this function are passed as parameters to event listeners.\n         * @param type {string} the event name\n         */\n\n\n        this.trigger = function (type) {\n          var callbacks, i, length, args;\n          callbacks = listeners[type];\n\n          if (!callbacks) {\n            return;\n          } // Slicing the arguments on every invocation of this method\n          // can add a significant amount of overhead. Avoid the\n          // intermediate object creation for the common case of a\n          // single callback argument\n\n\n          if (arguments.length === 2) {\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].call(this, arguments[1]);\n            }\n          } else {\n            args = [];\n            i = arguments.length;\n\n            for (i = 1; i < arguments.length; ++i) {\n              args.push(arguments[i]);\n            }\n\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].apply(this, args);\n            }\n          }\n        };\n        /**\n         * Destroys the stream and cleans up.\n         */\n\n\n        this.dispose = function () {\n          listeners = {};\n        };\n      };\n    };\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     * @param destination {stream} the stream that will receive all `data` events\n     * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n     *                            when the current stream emits a 'done' event\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n\n\n    Stream.prototype.pipe = function (destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n      this.on('done', function (flushSource) {\n        destination.flush(flushSource);\n      });\n      return destination;\n    }; // Default stream functions that are expected to be overridden to perform\n    // actual work. These are provided by the prototype as a sort of no-op\n    // implementation so that we don't have to check for their existence in the\n    // `pipe` function above.\n\n\n    Stream.prototype.push = function (data) {\n      this.trigger('data', data);\n    };\n\n    Stream.prototype.flush = function (flushSource) {\n      this.trigger('done', flushSource);\n    };\n\n    var stream = Stream;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n    // Convert an array of nal units into an array of frames with each frame being\n    // composed of the nal units that make up that frame\n    // Also keep track of cummulative data about the frame from the nal units such\n    // as the frame duration, starting pts, etc.\n\n    var groupNalsIntoFrames = function groupNalsIntoFrames(nalUnits) {\n      var i,\n          currentNal,\n          currentFrame = [],\n          frames = [];\n      currentFrame.byteLength = 0;\n\n      for (i = 0; i < nalUnits.length; i++) {\n        currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n        if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n          // Since the very first nal unit is expected to be an AUD\n          // only push to the frames array when currentFrame is not empty\n          if (currentFrame.length) {\n            currentFrame.duration = currentNal.dts - currentFrame.dts;\n            frames.push(currentFrame);\n          }\n\n          currentFrame = [currentNal];\n          currentFrame.byteLength = currentNal.data.byteLength;\n          currentFrame.pts = currentNal.pts;\n          currentFrame.dts = currentNal.dts;\n        } else {\n          // Specifically flag key frames for ease of use later\n          if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n            currentFrame.keyFrame = true;\n          }\n\n          currentFrame.duration = currentNal.dts - currentFrame.dts;\n          currentFrame.byteLength += currentNal.data.byteLength;\n          currentFrame.push(currentNal);\n        }\n      } // For the last frame, use the duration of the previous frame if we\n      // have nothing better to go on\n\n\n      if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n        currentFrame.duration = frames[frames.length - 1].duration;\n      } // Push the final frame\n\n\n      frames.push(currentFrame);\n      return frames;\n    }; // Convert an array of frames into an array of Gop with each Gop being composed\n    // of the frames that make up that Gop\n    // Also keep track of cummulative data about the Gop from the frames such as the\n    // Gop duration, starting pts, etc.\n\n\n    var groupFramesIntoGops = function groupFramesIntoGops(frames) {\n      var i,\n          currentFrame,\n          currentGop = [],\n          gops = []; // We must pre-set some of the values on the Gop since we\n      // keep running totals of these values\n\n      currentGop.byteLength = 0;\n      currentGop.nalCount = 0;\n      currentGop.duration = 0;\n      currentGop.pts = frames[0].pts;\n      currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n      gops.byteLength = 0;\n      gops.nalCount = 0;\n      gops.duration = 0;\n      gops.pts = frames[0].pts;\n      gops.dts = frames[0].dts;\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n\n        if (currentFrame.keyFrame) {\n          // Since the very first frame is expected to be an keyframe\n          // only push to the gops array when currentGop is not empty\n          if (currentGop.length) {\n            gops.push(currentGop);\n            gops.byteLength += currentGop.byteLength;\n            gops.nalCount += currentGop.nalCount;\n            gops.duration += currentGop.duration;\n          }\n\n          currentGop = [currentFrame];\n          currentGop.nalCount = currentFrame.length;\n          currentGop.byteLength = currentFrame.byteLength;\n          currentGop.pts = currentFrame.pts;\n          currentGop.dts = currentFrame.dts;\n          currentGop.duration = currentFrame.duration;\n        } else {\n          currentGop.duration += currentFrame.duration;\n          currentGop.nalCount += currentFrame.length;\n          currentGop.byteLength += currentFrame.byteLength;\n          currentGop.push(currentFrame);\n        }\n      }\n\n      if (gops.length && currentGop.duration <= 0) {\n        currentGop.duration = gops[gops.length - 1].duration;\n      }\n\n      gops.byteLength += currentGop.byteLength;\n      gops.nalCount += currentGop.nalCount;\n      gops.duration += currentGop.duration; // push the final Gop\n\n      gops.push(currentGop);\n      return gops;\n    };\n    /*\n     * Search for the first keyframe in the GOPs and throw away all frames\n     * until that keyframe. Then extend the duration of the pulled keyframe\n     * and pull the PTS and DTS of the keyframe so that it covers the time\n     * range of the frames that were disposed.\n     *\n     * @param {Array} gops video GOPs\n     * @returns {Array} modified video GOPs\n     */\n\n\n    var extendFirstKeyFrame = function extendFirstKeyFrame(gops) {\n      var currentGop;\n\n      if (!gops[0][0].keyFrame && gops.length > 1) {\n        // Remove the first GOP\n        currentGop = gops.shift();\n        gops.byteLength -= currentGop.byteLength;\n        gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n        // first gop to cover the time period of the\n        // frames we just removed\n\n        gops[0][0].dts = currentGop.dts;\n        gops[0][0].pts = currentGop.pts;\n        gops[0][0].duration += currentGop.duration;\n      }\n\n      return gops;\n    };\n    /**\n     * Default sample object\n     * see ISO/IEC 14496-12:2012, section 8.6.4.3\n     */\n\n\n    var createDefaultSample = function createDefaultSample() {\n      return {\n        size: 0,\n        flags: {\n          isLeading: 0,\n          dependsOn: 1,\n          isDependedOn: 0,\n          hasRedundancy: 0,\n          degradationPriority: 0,\n          isNonSyncSample: 1\n        }\n      };\n    };\n    /*\n     * Collates information from a video frame into an object for eventual\n     * entry into an MP4 sample table.\n     *\n     * @param {Object} frame the video frame\n     * @param {Number} dataOffset the byte offset to position the sample\n     * @return {Object} object containing sample table info for a frame\n     */\n\n\n    var sampleForFrame = function sampleForFrame(frame, dataOffset) {\n      var sample = createDefaultSample();\n      sample.dataOffset = dataOffset;\n      sample.compositionTimeOffset = frame.pts - frame.dts;\n      sample.duration = frame.duration;\n      sample.size = 4 * frame.length; // Space for nal unit size\n\n      sample.size += frame.byteLength;\n\n      if (frame.keyFrame) {\n        sample.flags.dependsOn = 2;\n        sample.flags.isNonSyncSample = 0;\n      }\n\n      return sample;\n    }; // generate the track's sample table from an array of gops\n\n\n    var generateSampleTable = function generateSampleTable(gops, baseDataOffset) {\n      var h,\n          i,\n          sample,\n          currentGop,\n          currentFrame,\n          dataOffset = baseDataOffset || 0,\n          samples = [];\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h];\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i];\n          sample = sampleForFrame(currentFrame, dataOffset);\n          dataOffset += sample.size;\n          samples.push(sample);\n        }\n      }\n\n      return samples;\n    }; // generate the track's raw mdat data from an array of gops\n\n\n    var concatenateNalData = function concatenateNalData(gops) {\n      var h,\n          i,\n          j,\n          currentGop,\n          currentFrame,\n          currentNal,\n          dataOffset = 0,\n          nalsByteLength = gops.byteLength,\n          numberOfNals = gops.nalCount,\n          totalByteLength = nalsByteLength + 4 * numberOfNals,\n          data = new Uint8Array(totalByteLength),\n          view = new DataView(data.buffer); // For each Gop..\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h]; // For each Frame..\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i]; // For each NAL..\n\n          for (j = 0; j < currentFrame.length; j++) {\n            currentNal = currentFrame[j];\n            view.setUint32(dataOffset, currentNal.data.byteLength);\n            dataOffset += 4;\n            data.set(currentNal.data, dataOffset);\n            dataOffset += currentNal.data.byteLength;\n          }\n        }\n      }\n\n      return data;\n    };\n\n    var frameUtils = {\n      groupNalsIntoFrames: groupNalsIntoFrames,\n      groupFramesIntoGops: groupFramesIntoGops,\n      extendFirstKeyFrame: extendFirstKeyFrame,\n      generateSampleTable: generateSampleTable,\n      concatenateNalData: concatenateNalData\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var highPrefix = [33, 16, 5, 32, 164, 27];\n    var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n\n    var zeroFill = function zeroFill(count) {\n      var a = [];\n\n      while (count--) {\n        a.push(0);\n      }\n\n      return a;\n    };\n\n    var makeTable = function makeTable(metaTable) {\n      return Object.keys(metaTable).reduce(function (obj, key) {\n        obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n          return arr.concat(part);\n        }, []));\n        return obj;\n      }, {});\n    }; // Frames-of-silence to use for filling in missing AAC frames\n\n\n    var coneOfSilence = {\n      96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n      88200: [highPrefix, [231], zeroFill(170), [56]],\n      64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n      48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n      44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n      32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n      24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n      16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n      12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n      11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n      8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n    };\n    var silence = makeTable(coneOfSilence);\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ONE_SECOND_IN_TS = 90000,\n        // 90kHz clock\n    secondsToVideoTs,\n        secondsToAudioTs,\n        videoTsToSeconds,\n        audioTsToSeconds,\n        audioTsToVideoTs,\n        videoTsToAudioTs;\n\n    secondsToVideoTs = function secondsToVideoTs(seconds) {\n      return seconds * ONE_SECOND_IN_TS;\n    };\n\n    secondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n      return seconds * sampleRate;\n    };\n\n    videoTsToSeconds = function videoTsToSeconds(timestamp) {\n      return timestamp / ONE_SECOND_IN_TS;\n    };\n\n    audioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n      return timestamp / sampleRate;\n    };\n\n    audioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n      return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n    };\n\n    videoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n      return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n    };\n\n    var clock = {\n      secondsToVideoTs: secondsToVideoTs,\n      secondsToAudioTs: secondsToAudioTs,\n      videoTsToSeconds: videoTsToSeconds,\n      audioTsToSeconds: audioTsToSeconds,\n      audioTsToVideoTs: audioTsToVideoTs,\n      videoTsToAudioTs: videoTsToAudioTs\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ONE_SECOND_IN_TS$1 = 90000; // 90kHz clock\n\n    /**\n     * Sum the `byteLength` properties of the data in each AAC frame\n     */\n\n    var sumFrameByteLengths = function sumFrameByteLengths(array) {\n      var i,\n          currentObj,\n          sum = 0; // sum the byteLength's all each nal unit in the frame\n\n      for (i = 0; i < array.length; i++) {\n        currentObj = array[i];\n        sum += currentObj.data.byteLength;\n      }\n\n      return sum;\n    }; // Possibly pad (prefix) the audio track with silence if appending this track\n    // would lead to the introduction of a gap in the audio buffer\n\n\n    var prefixWithSilence = function prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\n      var baseMediaDecodeTimeTs,\n          frameDuration = 0,\n          audioGapDuration = 0,\n          audioFillFrameCount = 0,\n          audioFillDuration = 0,\n          silentFrame,\n          i;\n\n      if (!frames.length) {\n        return;\n      }\n\n      baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n      frameDuration = Math.ceil(ONE_SECOND_IN_TS$1 / (track.samplerate / 1024));\n\n      if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n        // insert the shortest possible amount (audio gap or audio to video gap)\n        audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n        audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n        audioFillDuration = audioFillFrameCount * frameDuration;\n      } // don't attempt to fill gaps smaller than a single frame or larger\n      // than a half second\n\n\n      if (audioFillFrameCount < 1 || audioFillDuration > ONE_SECOND_IN_TS$1 / 2) {\n        return;\n      }\n\n      silentFrame = silence[track.samplerate];\n\n      if (!silentFrame) {\n        // we don't have a silent frame pregenerated for the sample rate, so use a frame\n        // from the content instead\n        silentFrame = frames[0].data;\n      }\n\n      for (i = 0; i < audioFillFrameCount; i++) {\n        frames.splice(i, 0, {\n          data: silentFrame\n        });\n      }\n\n      track.baseMediaDecodeTime -= Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n    }; // If the audio segment extends before the earliest allowed dts\n    // value, remove AAC frames until starts at or after the earliest\n    // allowed DTS so that we don't end up with a negative baseMedia-\n    // DecodeTime for the audio track\n\n\n    var trimAdtsFramesByEarliestDts = function trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts) {\n      if (track.minSegmentDts >= earliestAllowedDts) {\n        return adtsFrames;\n      } // We will need to recalculate the earliest segment Dts\n\n\n      track.minSegmentDts = Infinity;\n      return adtsFrames.filter(function (currentFrame) {\n        // If this is an allowed frame, keep it and record it's Dts\n        if (currentFrame.dts >= earliestAllowedDts) {\n          track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n          track.minSegmentPts = track.minSegmentDts;\n          return true;\n        } // Otherwise, discard it\n\n\n        return false;\n      });\n    }; // generate the track's raw mdat data from an array of frames\n\n\n    var generateSampleTable$1 = function generateSampleTable(frames) {\n      var i,\n          currentFrame,\n          samples = [];\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        samples.push({\n          size: currentFrame.data.byteLength,\n          duration: 1024 // For AAC audio, all samples contain 1024 samples\n\n        });\n      }\n\n      return samples;\n    }; // generate the track's sample table from an array of frames\n\n\n    var concatenateFrameData = function concatenateFrameData(frames) {\n      var i,\n          currentFrame,\n          dataOffset = 0,\n          data = new Uint8Array(sumFrameByteLengths(frames));\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        data.set(currentFrame.data, dataOffset);\n        dataOffset += currentFrame.data.byteLength;\n      }\n\n      return data;\n    };\n\n    var audioFrameUtils = {\n      prefixWithSilence: prefixWithSilence,\n      trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n      generateSampleTable: generateSampleTable$1,\n      concatenateFrameData: concatenateFrameData\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ONE_SECOND_IN_TS$2 = 90000; // 90kHz clock\n\n    /**\n     * Store information about the start and end of the track and the\n     * duration for each frame/sample we process in order to calculate\n     * the baseMediaDecodeTime\n     */\n\n    var collectDtsInfo = function collectDtsInfo(track, data) {\n      if (typeof data.pts === 'number') {\n        if (track.timelineStartInfo.pts === undefined) {\n          track.timelineStartInfo.pts = data.pts;\n        }\n\n        if (track.minSegmentPts === undefined) {\n          track.minSegmentPts = data.pts;\n        } else {\n          track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n        }\n\n        if (track.maxSegmentPts === undefined) {\n          track.maxSegmentPts = data.pts;\n        } else {\n          track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n        }\n      }\n\n      if (typeof data.dts === 'number') {\n        if (track.timelineStartInfo.dts === undefined) {\n          track.timelineStartInfo.dts = data.dts;\n        }\n\n        if (track.minSegmentDts === undefined) {\n          track.minSegmentDts = data.dts;\n        } else {\n          track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n        }\n\n        if (track.maxSegmentDts === undefined) {\n          track.maxSegmentDts = data.dts;\n        } else {\n          track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n        }\n      }\n    };\n    /**\n     * Clear values used to calculate the baseMediaDecodeTime between\n     * tracks\n     */\n\n\n    var clearDtsInfo = function clearDtsInfo(track) {\n      delete track.minSegmentDts;\n      delete track.maxSegmentDts;\n      delete track.minSegmentPts;\n      delete track.maxSegmentPts;\n    };\n    /**\n     * Calculate the track's baseMediaDecodeTime based on the earliest\n     * DTS the transmuxer has ever seen and the minimum DTS for the\n     * current track\n     * @param track {object} track metadata configuration\n     * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    var calculateTrackBaseMediaDecodeTime = function calculateTrackBaseMediaDecodeTime(track, keepOriginalTimestamps) {\n      var baseMediaDecodeTime,\n          scale,\n          minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n      if (!keepOriginalTimestamps) {\n        minSegmentDts -= track.timelineStartInfo.dts;\n      } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n      // we want the start of the first segment to be placed\n\n\n      baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n      baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n      baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n      if (track.type === 'audio') {\n        // Audio has a different clock equal to the sampling_rate so we need to\n        // scale the PTS values into the clock rate of the track\n        scale = track.samplerate / ONE_SECOND_IN_TS$2;\n        baseMediaDecodeTime *= scale;\n        baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n      }\n\n      return baseMediaDecodeTime;\n    };\n\n    var trackDecodeInfo = {\n      clearDtsInfo: clearDtsInfo,\n      calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n      collectDtsInfo: collectDtsInfo\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Reads in-band caption information from a video elementary\n     * stream. Captions must follow the CEA-708 standard for injection\n     * into an MPEG-2 transport streams.\n     * @see https://en.wikipedia.org/wiki/CEA-708\n     * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n     */\n    // Supplemental enhancement information (SEI) NAL units have a\n    // payload type field to indicate how they are to be\n    // interpreted. CEAS-708 caption content is always transmitted with\n    // payload type 0x04.\n\n    var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n        RBSP_TRAILING_BITS = 128;\n    /**\n      * Parse a supplemental enhancement information (SEI) NAL unit.\n      * Stops parsing once a message of type ITU T T35 has been found.\n      *\n      * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n      * @return {object} the parsed SEI payload\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n      */\n\n    var parseSei = function parseSei(bytes) {\n      var i = 0,\n          result = {\n        payloadType: -1,\n        payloadSize: 0\n      },\n          payloadType = 0,\n          payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n      while (i < bytes.byteLength) {\n        // stop once we have hit the end of the sei_rbsp\n        if (bytes[i] === RBSP_TRAILING_BITS) {\n          break;\n        } // Parse payload type\n\n\n        while (bytes[i] === 0xFF) {\n          payloadType += 255;\n          i++;\n        }\n\n        payloadType += bytes[i++]; // Parse payload size\n\n        while (bytes[i] === 0xFF) {\n          payloadSize += 255;\n          i++;\n        }\n\n        payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n        // there can only ever be one caption message in a frame's sei\n\n        if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n          result.payloadType = payloadType;\n          result.payloadSize = payloadSize;\n          result.payload = bytes.subarray(i, i + payloadSize);\n          break;\n        } // skip the payload and parse the next message\n\n\n        i += payloadSize;\n        payloadType = 0;\n        payloadSize = 0;\n      }\n\n      return result;\n    }; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n\n    var parseUserData = function parseUserData(sei) {\n      // itu_t_t35_contry_code must be 181 (United States) for\n      // captions\n      if (sei.payload[0] !== 181) {\n        return null;\n      } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n\n      if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n        return null;\n      } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n\n      if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n        return null;\n      } // finally, user_data_type_code should be 0x03 for caption data\n\n\n      if (sei.payload[7] !== 0x03) {\n        return null;\n      } // return the user_data_type_structure and strip the trailing\n      // marker bits\n\n\n      return sei.payload.subarray(8, sei.payload.length - 1);\n    }; // see CEA-708-D, section 4.4\n\n\n    var parseCaptionPackets = function parseCaptionPackets(pts, userData) {\n      var results = [],\n          i,\n          count,\n          offset,\n          data; // if this is just filler, return immediately\n\n      if (!(userData[0] & 0x40)) {\n        return results;\n      } // parse out the cc_data_1 and cc_data_2 fields\n\n\n      count = userData[0] & 0x1f;\n\n      for (i = 0; i < count; i++) {\n        offset = i * 3;\n        data = {\n          type: userData[offset + 2] & 0x03,\n          pts: pts\n        }; // capture cc data when cc_valid is 1\n\n        if (userData[offset + 2] & 0x04) {\n          data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n          results.push(data);\n        }\n      }\n\n      return results;\n    };\n\n    var discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n      var length = data.byteLength,\n          emulationPreventionBytesPositions = [],\n          i = 1,\n          newLength,\n          newData; // Find all `Emulation Prevention Bytes`\n\n      while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n          emulationPreventionBytesPositions.push(i + 2);\n          i += 2;\n        } else {\n          i++;\n        }\n      } // If no Emulation Prevention Bytes were found just return the original\n      // array\n\n\n      if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n      } // Create a new array to hold the NAL unit data\n\n\n      newLength = length - emulationPreventionBytesPositions.length;\n      newData = new Uint8Array(newLength);\n      var sourceIndex = 0;\n\n      for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n          // Skip this byte\n          sourceIndex++; // Remove this position index\n\n          emulationPreventionBytesPositions.shift();\n        }\n\n        newData[i] = data[sourceIndex];\n      }\n\n      return newData;\n    }; // exports\n\n\n    var captionPacketParser = {\n      parseSei: parseSei,\n      parseUserData: parseUserData,\n      parseCaptionPackets: parseCaptionPackets,\n      discardEmulationPreventionBytes: discardEmulationPreventionBytes,\n      USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n    }; // -----------------\n    // Link To Transport\n    // -----------------\n\n    var CaptionStream = function CaptionStream() {\n      CaptionStream.prototype.init.call(this);\n      this.captionPackets_ = [];\n      this.ccStreams_ = [new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n      ];\n      this.reset(); // forward data and done events from CCs to this CaptionStream\n\n      this.ccStreams_.forEach(function (cc) {\n        cc.on('data', this.trigger.bind(this, 'data'));\n        cc.on('done', this.trigger.bind(this, 'done'));\n      }, this);\n    };\n\n    CaptionStream.prototype = new stream();\n\n    CaptionStream.prototype.push = function (event) {\n      var sei, userData, newCaptionPackets; // only examine SEI NALs\n\n      if (event.nalUnitType !== 'sei_rbsp') {\n        return;\n      } // parse the sei\n\n\n      sei = captionPacketParser.parseSei(event.escapedRBSP); // ignore everything but user_data_registered_itu_t_t35\n\n      if (sei.payloadType !== captionPacketParser.USER_DATA_REGISTERED_ITU_T_T35) {\n        return;\n      } // parse out the user data payload\n\n\n      userData = captionPacketParser.parseUserData(sei); // ignore unrecognized userData\n\n      if (!userData) {\n        return;\n      } // Sometimes, the same segment # will be downloaded twice. To stop the\n      // caption data from being processed twice, we track the latest dts we've\n      // received and ignore everything with a dts before that. However, since\n      // data for a specific dts can be split across packets on either side of\n      // a segment boundary, we need to make sure we *don't* ignore the packets\n      // from the *next* segment that have dts === this.latestDts_. By constantly\n      // tracking the number of packets received with dts === this.latestDts_, we\n      // know how many should be ignored once we start receiving duplicates.\n\n\n      if (event.dts < this.latestDts_) {\n        // We've started getting older data, so set the flag.\n        this.ignoreNextEqualDts_ = true;\n        return;\n      } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n        this.numSameDts_--;\n\n        if (!this.numSameDts_) {\n          // We've received the last duplicate packet, time to start processing again\n          this.ignoreNextEqualDts_ = false;\n        }\n\n        return;\n      } // parse out CC data packets and save them for later\n\n\n      newCaptionPackets = captionPacketParser.parseCaptionPackets(event.pts, userData);\n      this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n\n      if (this.latestDts_ !== event.dts) {\n        this.numSameDts_ = 0;\n      }\n\n      this.numSameDts_++;\n      this.latestDts_ = event.dts;\n    };\n\n    CaptionStream.prototype.flush = function () {\n      // make sure we actually parsed captions before proceeding\n      if (!this.captionPackets_.length) {\n        this.ccStreams_.forEach(function (cc) {\n          cc.flush();\n        }, this);\n        return;\n      } // In Chrome, the Array#sort function is not stable so add a\n      // presortIndex that we can use to ensure we get a stable-sort\n\n\n      this.captionPackets_.forEach(function (elem, idx) {\n        elem.presortIndex = idx;\n      }); // sort caption byte-pairs based on their PTS values\n\n      this.captionPackets_.sort(function (a, b) {\n        if (a.pts === b.pts) {\n          return a.presortIndex - b.presortIndex;\n        }\n\n        return a.pts - b.pts;\n      });\n      this.captionPackets_.forEach(function (packet) {\n        if (packet.type < 2) {\n          // Dispatch packet to the right Cea608Stream\n          this.dispatchCea608Packet(packet);\n        } // this is where an 'else' would go for a dispatching packets\n        // to a theoretical Cea708Stream that handles SERVICEn data\n\n      }, this);\n      this.captionPackets_.length = 0;\n      this.ccStreams_.forEach(function (cc) {\n        cc.flush();\n      }, this);\n      return;\n    };\n\n    CaptionStream.prototype.reset = function () {\n      this.latestDts_ = null;\n      this.ignoreNextEqualDts_ = false;\n      this.numSameDts_ = 0;\n      this.activeCea608Channel_ = [null, null];\n      this.ccStreams_.forEach(function (ccStream) {\n        ccStream.reset();\n      });\n    }; // From the CEA-608 spec:\n\n    /*\n     * When XDS sub-packets are interleaved with other services, the end of each sub-packet shall be followed\n     * by a control pair to change to a different service. When any of the control codes from 0x10 to 0x1F is\n     * used to begin a control code pair, it indicates the return to captioning or Text data. The control code pair\n     * and subsequent data should then be processed according to the FCC rules. It may be necessary for the\n     * line 21 data encoder to automatically insert a control code pair (i.e. RCL, RU2, RU3, RU4, RDC, or RTD)\n     * to switch to captioning or Text.\n    */\n    // With that in mind, we ignore any data between an XDS control code and a\n    // subsequent closed-captioning control code.\n\n\n    CaptionStream.prototype.dispatchCea608Packet = function (packet) {\n      // NOTE: packet.type is the CEA608 field\n      if (this.setsTextOrXDSActive(packet)) {\n        this.activeCea608Channel_[packet.type] = null;\n      } else if (this.setsChannel1Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 0;\n      } else if (this.setsChannel2Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 1;\n      }\n\n      if (this.activeCea608Channel_[packet.type] === null) {\n        // If we haven't received anything to set the active channel, or the\n        // packets are Text/XDS data, discard the data; we don't want jumbled\n        // captions\n        return;\n      }\n\n      this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n    };\n\n    CaptionStream.prototype.setsChannel1Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1000;\n    };\n\n    CaptionStream.prototype.setsChannel2Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1800;\n    };\n\n    CaptionStream.prototype.setsTextOrXDSActive = function (packet) {\n      return (packet.ccData & 0x7100) === 0x0100 || (packet.ccData & 0x78fe) === 0x102a || (packet.ccData & 0x78fe) === 0x182a;\n    }; // ----------------------\n    // Session to Application\n    // ----------------------\n    // This hash maps non-ASCII, special, and extended character codes to their\n    // proper Unicode equivalent. The first keys that are only a single byte\n    // are the non-standard ASCII characters, which simply map the CEA608 byte\n    // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n    // character codes, but have their MSB bitmasked with 0x03 so that a lookup\n    // can be performed regardless of the field and data channel on which the\n    // character code was received.\n\n\n    var CHARACTER_TRANSLATION = {\n      0x2a: 0xe1,\n      // á\n      0x5c: 0xe9,\n      // é\n      0x5e: 0xed,\n      // í\n      0x5f: 0xf3,\n      // ó\n      0x60: 0xfa,\n      // ú\n      0x7b: 0xe7,\n      // ç\n      0x7c: 0xf7,\n      // ÷\n      0x7d: 0xd1,\n      // Ñ\n      0x7e: 0xf1,\n      // ñ\n      0x7f: 0x2588,\n      // █\n      0x0130: 0xae,\n      // ®\n      0x0131: 0xb0,\n      // °\n      0x0132: 0xbd,\n      // ½\n      0x0133: 0xbf,\n      // ¿\n      0x0134: 0x2122,\n      // ™\n      0x0135: 0xa2,\n      // ¢\n      0x0136: 0xa3,\n      // £\n      0x0137: 0x266a,\n      // ♪\n      0x0138: 0xe0,\n      // à\n      0x0139: 0xa0,\n      //\n      0x013a: 0xe8,\n      // è\n      0x013b: 0xe2,\n      // â\n      0x013c: 0xea,\n      // ê\n      0x013d: 0xee,\n      // î\n      0x013e: 0xf4,\n      // ô\n      0x013f: 0xfb,\n      // û\n      0x0220: 0xc1,\n      // Á\n      0x0221: 0xc9,\n      // É\n      0x0222: 0xd3,\n      // Ó\n      0x0223: 0xda,\n      // Ú\n      0x0224: 0xdc,\n      // Ü\n      0x0225: 0xfc,\n      // ü\n      0x0226: 0x2018,\n      // ‘\n      0x0227: 0xa1,\n      // ¡\n      0x0228: 0x2a,\n      // *\n      0x0229: 0x27,\n      // '\n      0x022a: 0x2014,\n      // —\n      0x022b: 0xa9,\n      // ©\n      0x022c: 0x2120,\n      // ℠\n      0x022d: 0x2022,\n      // •\n      0x022e: 0x201c,\n      // “\n      0x022f: 0x201d,\n      // ”\n      0x0230: 0xc0,\n      // À\n      0x0231: 0xc2,\n      // Â\n      0x0232: 0xc7,\n      // Ç\n      0x0233: 0xc8,\n      // È\n      0x0234: 0xca,\n      // Ê\n      0x0235: 0xcb,\n      // Ë\n      0x0236: 0xeb,\n      // ë\n      0x0237: 0xce,\n      // Î\n      0x0238: 0xcf,\n      // Ï\n      0x0239: 0xef,\n      // ï\n      0x023a: 0xd4,\n      // Ô\n      0x023b: 0xd9,\n      // Ù\n      0x023c: 0xf9,\n      // ù\n      0x023d: 0xdb,\n      // Û\n      0x023e: 0xab,\n      // «\n      0x023f: 0xbb,\n      // »\n      0x0320: 0xc3,\n      // Ã\n      0x0321: 0xe3,\n      // ã\n      0x0322: 0xcd,\n      // Í\n      0x0323: 0xcc,\n      // Ì\n      0x0324: 0xec,\n      // ì\n      0x0325: 0xd2,\n      // Ò\n      0x0326: 0xf2,\n      // ò\n      0x0327: 0xd5,\n      // Õ\n      0x0328: 0xf5,\n      // õ\n      0x0329: 0x7b,\n      // {\n      0x032a: 0x7d,\n      // }\n      0x032b: 0x5c,\n      // \\\n      0x032c: 0x5e,\n      // ^\n      0x032d: 0x5f,\n      // _\n      0x032e: 0x7c,\n      // |\n      0x032f: 0x7e,\n      // ~\n      0x0330: 0xc4,\n      // Ä\n      0x0331: 0xe4,\n      // ä\n      0x0332: 0xd6,\n      // Ö\n      0x0333: 0xf6,\n      // ö\n      0x0334: 0xdf,\n      // ß\n      0x0335: 0xa5,\n      // ¥\n      0x0336: 0xa4,\n      // ¤\n      0x0337: 0x2502,\n      // │\n      0x0338: 0xc5,\n      // Å\n      0x0339: 0xe5,\n      // å\n      0x033a: 0xd8,\n      // Ø\n      0x033b: 0xf8,\n      // ø\n      0x033c: 0x250c,\n      // ┌\n      0x033d: 0x2510,\n      // ┐\n      0x033e: 0x2514,\n      // └\n      0x033f: 0x2518 // ┘\n\n    };\n\n    var getCharFromCode = function getCharFromCode(code) {\n      if (code === null) {\n        return '';\n      }\n\n      code = CHARACTER_TRANSLATION[code] || code;\n      return String.fromCharCode(code);\n    }; // the index of the last row in a CEA-608 display buffer\n\n\n    var BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n    // getting it through bit logic.\n\n    var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n    // cells. The \"bottom\" row is the last element in the outer array.\n\n    var createDisplayBuffer = function createDisplayBuffer() {\n      var result = [],\n          i = BOTTOM_ROW + 1;\n\n      while (i--) {\n        result.push('');\n      }\n\n      return result;\n    };\n\n    var Cea608Stream = function Cea608Stream(field, dataChannel) {\n      Cea608Stream.prototype.init.call(this);\n      this.field_ = field || 0;\n      this.dataChannel_ = dataChannel || 0;\n      this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n      this.setConstants();\n      this.reset();\n\n      this.push = function (packet) {\n        var data, swap, char0, char1, text; // remove the parity bits\n\n        data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n        if (data === this.lastControlCode_) {\n          this.lastControlCode_ = null;\n          return;\n        } // Store control codes\n\n\n        if ((data & 0xf000) === 0x1000) {\n          this.lastControlCode_ = data;\n        } else if (data !== this.PADDING_) {\n          this.lastControlCode_ = null;\n        }\n\n        char0 = data >>> 8;\n        char1 = data & 0xff;\n\n        if (data === this.PADDING_) {\n          return;\n        } else if (data === this.RESUME_CAPTION_LOADING_) {\n          this.mode_ = 'popOn';\n        } else if (data === this.END_OF_CAPTION_) {\n          // If an EOC is received while in paint-on mode, the displayed caption\n          // text should be swapped to non-displayed memory as if it was a pop-on\n          // caption. Because of that, we should explicitly switch back to pop-on\n          // mode\n          this.mode_ = 'popOn';\n          this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n          this.flushDisplayed(packet.pts); // flip memory\n\n          swap = this.displayed_;\n          this.displayed_ = this.nonDisplayed_;\n          this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n          this.startPts_ = packet.pts;\n        } else if (data === this.ROLL_UP_2_ROWS_) {\n          this.rollUpRows_ = 2;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_3_ROWS_) {\n          this.rollUpRows_ = 3;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_4_ROWS_) {\n          this.rollUpRows_ = 4;\n          this.setRollUp(packet.pts);\n        } else if (data === this.CARRIAGE_RETURN_) {\n          this.clearFormatting(packet.pts);\n          this.flushDisplayed(packet.pts);\n          this.shiftRowsUp_();\n          this.startPts_ = packet.pts;\n        } else if (data === this.BACKSPACE_) {\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          }\n        } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n          this.nonDisplayed_ = createDisplayBuffer();\n        } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n          if (this.mode_ !== 'paintOn') {\n            // NOTE: This should be removed when proper caption positioning is\n            // implemented\n            this.flushDisplayed(packet.pts);\n            this.displayed_ = createDisplayBuffer();\n          }\n\n          this.mode_ = 'paintOn';\n          this.startPts_ = packet.pts; // Append special characters to caption text\n        } else if (this.isSpecialCharacter(char0, char1)) {\n          // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Append extended characters to caption text\n        } else if (this.isExtCharacter(char0, char1)) {\n          // Extended characters always follow their \"non-extended\" equivalents.\n          // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n          // decoders are supposed to drop the \"è\", while compliant decoders\n          // backspace the \"e\" and insert \"è\".\n          // Delete the previous character\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          } // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n\n\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Process mid-row codes\n        } else if (this.isMidRowCode(char0, char1)) {\n          // Attributes are not additive, so clear all formatting\n          this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n          // should be replaced with spaces, so add one now\n\n          this[this.mode_](packet.pts, ' ');\n          this.column_++;\n\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n\n          if ((char1 & 0x1) === 0x1) {\n            this.addFormatting(packet.pts, ['u']);\n          } // Detect offset control codes and adjust cursor\n\n        } else if (this.isOffsetControlCode(char0, char1)) {\n          // Cursor position is set by indent PAC (see below) in 4-column\n          // increments, with an additional offset code of 1-3 to reach any\n          // of the 32 columns specified by CEA-608. So all we need to do\n          // here is increment the column cursor by the given offset.\n          this.column_ += char1 & 0x03; // Detect PACs (Preamble Address Codes)\n        } else if (this.isPAC(char0, char1)) {\n          // There's no logic for PAC -> row mapping, so we have to just\n          // find the row code in an array and use its index :(\n          var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\n\n          if (this.mode_ === 'rollUp') {\n            // This implies that the base row is incorrectly set.\n            // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n            // of roll-up rows set.\n            if (row - this.rollUpRows_ + 1 < 0) {\n              row = this.rollUpRows_ - 1;\n            }\n\n            this.setRollUp(packet.pts, row);\n          }\n\n          if (row !== this.row_) {\n            // formatting is only persistent for current row\n            this.clearFormatting(packet.pts);\n            this.row_ = row;\n          } // All PACs can apply underline, so detect and apply\n          // (All odd-numbered second bytes set underline)\n\n\n          if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n            this.addFormatting(packet.pts, ['u']);\n          }\n\n          if ((data & 0x10) === 0x10) {\n            // We've got an indent level code. Each successive even number\n            // increments the column cursor by 4, so we can get the desired\n            // column position by bit-shifting to the right (to get n/2)\n            // and multiplying by 4.\n            this.column_ = ((data & 0xe) >> 1) * 4;\n          }\n\n          if (this.isColorPAC(char1)) {\n            // it's a color code, though we only support white, which\n            // can be either normal or italicized. white italics can be\n            // either 0x4e or 0x6e depending on the row, so we just\n            // bitwise-and with 0xe to see if italics should be turned on\n            if ((char1 & 0xe) === 0xe) {\n              this.addFormatting(packet.pts, ['i']);\n            }\n          } // We have a normal character in char0, and possibly one in char1\n\n        } else if (this.isNormalChar(char0)) {\n          if (char1 === 0x00) {\n            char1 = null;\n          }\n\n          text = getCharFromCode(char0);\n          text += getCharFromCode(char1);\n          this[this.mode_](packet.pts, text);\n          this.column_ += text.length;\n        } // finish data processing\n\n      };\n    };\n\n    Cea608Stream.prototype = new stream(); // Trigger a cue point that captures the current state of the\n    // display buffer\n\n    Cea608Stream.prototype.flushDisplayed = function (pts) {\n      var content = this.displayed_ // remove spaces from the start and end of the string\n      .map(function (row) {\n        try {\n          return row.trim();\n        } catch (e) {\n          // Ordinarily, this shouldn't happen. However, caption\n          // parsing errors should not throw exceptions and\n          // break playback.\n          // eslint-disable-next-line no-console\n          console.error('Skipping malformed caption.');\n          return '';\n        }\n      }) // combine all text rows to display in one cue\n      .join('\\n') // and remove blank rows from the start and end, but not the middle\n      .replace(/^\\n+|\\n+$/g, '');\n\n      if (content.length) {\n        this.trigger('data', {\n          startPts: this.startPts_,\n          endPts: pts,\n          text: content,\n          stream: this.name_\n        });\n      }\n    };\n    /**\n     * Zero out the data, used for startup and on seek\n     */\n\n\n    Cea608Stream.prototype.reset = function () {\n      this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n      // actually display captions. If a caption is shifted to a row\n      // with a lower index than this, it is cleared from the display\n      // buffer\n\n      this.topRow_ = 0;\n      this.startPts_ = 0;\n      this.displayed_ = createDisplayBuffer();\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n      this.column_ = 0;\n      this.row_ = BOTTOM_ROW;\n      this.rollUpRows_ = 2; // This variable holds currently-applied formatting\n\n      this.formatting_ = [];\n    };\n    /**\n     * Sets up control code and related constants for this instance\n     */\n\n\n    Cea608Stream.prototype.setConstants = function () {\n      // The following attributes have these uses:\n      // ext_ :    char0 for mid-row codes, and the base for extended\n      //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n      //           extended codes)\n      // control_: char0 for control codes, except byte-shifted to the\n      //           left so that we can do this.control_ | CONTROL_CODE\n      // offset_:  char0 for tab offset codes\n      //\n      // It's also worth noting that control codes, and _only_ control codes,\n      // differ between field 1 and field2. Field 2 control codes are always\n      // their field 1 value plus 1. That's why there's the \"| field\" on the\n      // control value.\n      if (this.dataChannel_ === 0) {\n        this.BASE_ = 0x10;\n        this.EXT_ = 0x11;\n        this.CONTROL_ = (0x14 | this.field_) << 8;\n        this.OFFSET_ = 0x17;\n      } else if (this.dataChannel_ === 1) {\n        this.BASE_ = 0x18;\n        this.EXT_ = 0x19;\n        this.CONTROL_ = (0x1c | this.field_) << 8;\n        this.OFFSET_ = 0x1f;\n      } // Constants for the LSByte command codes recognized by Cea608Stream. This\n      // list is not exhaustive. For a more comprehensive listing and semantics see\n      // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n      // Padding\n\n\n      this.PADDING_ = 0x0000; // Pop-on Mode\n\n      this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n      this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n      this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n      this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n      this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n      this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\n\n      this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n      this.BACKSPACE_ = this.CONTROL_ | 0x21;\n      this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n      this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n    };\n    /**\n     * Detects if the 2-byte packet data is a special character\n     *\n     * Special characters have a second byte in the range 0x30 to 0x3f,\n     * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an special character\n     */\n\n\n    Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet data is an extended character\n     *\n     * Extended characters have a second byte in the range 0x20 to 0x3f,\n     * with the first byte being 0x12 or 0x13 (for data channel 1) or\n     * 0x1a or 0x1b (for data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an extended character\n     */\n\n\n    Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n      return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet is a mid-row code\n     *\n     * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n     * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n     * channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a mid-row code\n     */\n\n\n    Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n    };\n    /**\n     * Detects if the 2-byte packet is an offset control code\n     *\n     * Offset control codes have a second byte in the range 0x21 to 0x23,\n     * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an offset control code\n     */\n\n\n    Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n      return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n    };\n    /**\n     * Detects if the 2-byte packet is a Preamble Address Code\n     *\n     * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n     * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n     * range 0x40 to 0x7f.\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a PAC\n     */\n\n\n    Cea608Stream.prototype.isPAC = function (char0, char1) {\n      return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a packet's second byte is in the range of a PAC color code\n     *\n     * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n     * 0x60 to 0x6f.\n     *\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the byte is a color PAC\n     */\n\n\n    Cea608Stream.prototype.isColorPAC = function (char1) {\n      return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a single byte is in the range of a normal character\n     *\n     * Normal text bytes are in the range 0x20 to 0x7f.\n     *\n     * @param  {Integer} char  The byte\n     * @return {Boolean}       Whether the byte is a normal character\n     */\n\n\n    Cea608Stream.prototype.isNormalChar = function (_char) {\n      return _char >= 0x20 && _char <= 0x7f;\n    };\n    /**\n     * Configures roll-up\n     *\n     * @param  {Integer} pts         Current PTS\n     * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n     *                               a new position\n     */\n\n\n    Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n      // Reset the base row to the bottom row when switching modes\n      if (this.mode_ !== 'rollUp') {\n        this.row_ = BOTTOM_ROW;\n        this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\n\n        this.flushDisplayed(pts);\n        this.nonDisplayed_ = createDisplayBuffer();\n        this.displayed_ = createDisplayBuffer();\n      }\n\n      if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n        // move currently displayed captions (up or down) to the new base row\n        for (var i = 0; i < this.rollUpRows_; i++) {\n          this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n          this.displayed_[this.row_ - i] = '';\n        }\n      }\n\n      if (newBaseRow === undefined) {\n        newBaseRow = this.row_;\n      }\n\n      this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n    }; // Adds the opening HTML tag for the passed character to the caption text,\n    // and keeps track of it for later closing\n\n\n    Cea608Stream.prototype.addFormatting = function (pts, format) {\n      this.formatting_ = this.formatting_.concat(format);\n      var text = format.reduce(function (text, format) {\n        return text + '<' + format + '>';\n      }, '');\n      this[this.mode_](pts, text);\n    }; // Adds HTML closing tags for current formatting to caption text and\n    // clears remembered formatting\n\n\n    Cea608Stream.prototype.clearFormatting = function (pts) {\n      if (!this.formatting_.length) {\n        return;\n      }\n\n      var text = this.formatting_.reverse().reduce(function (text, format) {\n        return text + '</' + format + '>';\n      }, '');\n      this.formatting_ = [];\n      this[this.mode_](pts, text);\n    }; // Mode Implementations\n\n\n    Cea608Stream.prototype.popOn = function (pts, text) {\n      var baseRow = this.nonDisplayed_[this.row_]; // buffer characters\n\n      baseRow += text;\n      this.nonDisplayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.rollUp = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.shiftRowsUp_ = function () {\n      var i; // clear out inactive rows\n\n      for (i = 0; i < this.topRow_; i++) {\n        this.displayed_[i] = '';\n      }\n\n      for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n        this.displayed_[i] = '';\n      } // shift displayed rows up\n\n\n      for (i = this.topRow_; i < this.row_; i++) {\n        this.displayed_[i] = this.displayed_[i + 1];\n      } // clear out the bottom row\n\n\n      this.displayed_[this.row_] = '';\n    };\n\n    Cea608Stream.prototype.paintOn = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    }; // exports\n\n\n    var captionStream = {\n      CaptionStream: CaptionStream,\n      Cea608Stream: Cea608Stream\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var streamTypes = {\n      H264_STREAM_TYPE: 0x1B,\n      ADTS_STREAM_TYPE: 0x0F,\n      METADATA_STREAM_TYPE: 0x15\n    };\n    var MAX_TS = 8589934592;\n    var RO_THRESH = 4294967296;\n\n    var handleRollover = function handleRollover(value, reference) {\n      var direction = 1;\n\n      if (value > reference) {\n        // If the current timestamp value is greater than our reference timestamp and we detect a\n        // timestamp rollover, this means the roll over is happening in the opposite direction.\n        // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n        // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n        // rollover point. In loading this segment, the timestamp values will be very large,\n        // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n        // the time stamp to be `value - 2^33`.\n        direction = -1;\n      } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n      // cause an incorrect adjustment.\n\n\n      while (Math.abs(reference - value) > RO_THRESH) {\n        value += direction * MAX_TS;\n      }\n\n      return value;\n    };\n\n    var TimestampRolloverStream = function TimestampRolloverStream(type) {\n      var lastDTS, referenceDTS;\n      TimestampRolloverStream.prototype.init.call(this);\n      this.type_ = type;\n\n      this.push = function (data) {\n        if (data.type !== this.type_) {\n          return;\n        }\n\n        if (referenceDTS === undefined) {\n          referenceDTS = data.dts;\n        }\n\n        data.dts = handleRollover(data.dts, referenceDTS);\n        data.pts = handleRollover(data.pts, referenceDTS);\n        lastDTS = data.dts;\n        this.trigger('data', data);\n      };\n\n      this.flush = function () {\n        referenceDTS = lastDTS;\n        this.trigger('done');\n      };\n\n      this.discontinuity = function () {\n        referenceDTS = void 0;\n        lastDTS = void 0;\n      };\n    };\n\n    TimestampRolloverStream.prototype = new stream();\n    var timestampRolloverStream = {\n      TimestampRolloverStream: TimestampRolloverStream,\n      handleRollover: handleRollover\n    };\n\n    var percentEncode = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as UTf-8.\n    parseUtf8 = function parseUtf8(bytes, start, end) {\n      return decodeURIComponent(percentEncode(bytes, start, end));\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n    parseIso88591 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n    },\n        parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    },\n        tagParsers = {\n      TXXX: function TXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the text fields\n            tag.description = parseUtf8(tag.data, 1, i); // do not include the null terminator in the tag value\n\n            tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n            break;\n          }\n        }\n\n        tag.data = tag.value;\n      },\n      WXXX: function WXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.description = parseUtf8(tag.data, 1, i);\n            tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n            break;\n          }\n        }\n      },\n      PRIV: function PRIV(tag) {\n        var i;\n\n        for (i = 0; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.owner = parseIso88591(tag.data, 0, i);\n            break;\n          }\n        }\n\n        tag.privateData = tag.data.subarray(i + 1);\n        tag.data = tag.privateData;\n      }\n    },\n        _MetadataStream;\n\n    _MetadataStream = function MetadataStream(options) {\n      var settings = {\n        debug: !!(options && options.debug),\n        // the bytes of the program-level descriptor field in MP2T\n        // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n        // program element descriptors\"\n        descriptor: options && options.descriptor\n      },\n          // the total size in bytes of the ID3 tag being parsed\n      tagSize = 0,\n          // tag data that is not complete enough to be parsed\n      buffer = [],\n          // the total number of bytes currently in the buffer\n      bufferSize = 0,\n          i;\n\n      _MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n      // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n\n      this.dispatchType = streamTypes.METADATA_STREAM_TYPE.toString(16);\n\n      if (settings.descriptor) {\n        for (i = 0; i < settings.descriptor.length; i++) {\n          this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n        }\n      }\n\n      this.push = function (chunk) {\n        var tag, frameStart, frameSize, frame, i, frameHeader;\n\n        if (chunk.type !== 'timed-metadata') {\n          return;\n        } // if data_alignment_indicator is set in the PES header,\n        // we must have the start of a new ID3 tag. Assume anything\n        // remaining in the buffer was malformed and throw it out\n\n\n        if (chunk.dataAlignmentIndicator) {\n          bufferSize = 0;\n          buffer.length = 0;\n        } // ignore events that don't look like ID3 data\n\n\n        if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n          if (settings.debug) {\n            // eslint-disable-next-line no-console\n            console.log('Skipping unrecognized metadata packet');\n          }\n\n          return;\n        } // add this chunk to the data we've collected so far\n\n\n        buffer.push(chunk);\n        bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n        if (buffer.length === 1) {\n          // the frame size is transmitted as a 28-bit integer in the\n          // last four bytes of the ID3 header.\n          // The most significant bit of each byte is dropped and the\n          // results concatenated to recover the actual value.\n          tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n          // convenient for our comparisons to include it\n\n          tagSize += 10;\n        } // if the entire frame has not arrived, wait for more data\n\n\n        if (bufferSize < tagSize) {\n          return;\n        } // collect the entire frame so it can be parsed\n\n\n        tag = {\n          data: new Uint8Array(tagSize),\n          frames: [],\n          pts: buffer[0].pts,\n          dts: buffer[0].dts\n        };\n\n        for (i = 0; i < tagSize;) {\n          tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n          i += buffer[0].data.byteLength;\n          bufferSize -= buffer[0].data.byteLength;\n          buffer.shift();\n        } // find the start of the first frame and the end of the tag\n\n\n        frameStart = 10;\n\n        if (tag.data[5] & 0x40) {\n          // advance the frame start past the extended header\n          frameStart += 4; // header size field\n\n          frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14)); // clip any padding off the end\n\n          tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n        } // parse one or more ID3 frames\n        // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n        do {\n          // determine the number of bytes in this frame\n          frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n\n          if (frameSize < 1) {\n            // eslint-disable-next-line no-console\n            return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n          }\n\n          frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n          frame = {\n            id: frameHeader,\n            data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n          };\n          frame.key = frame.id;\n\n          if (tagParsers[frame.id]) {\n            tagParsers[frame.id](frame); // handle the special PRIV frame used to indicate the start\n            // time for raw AAC data\n\n            if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.data,\n                  size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n              size *= 4;\n              size += d[7] & 0x03;\n              frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n              // on the value of this frame\n              // we couldn't have known the appropriate pts and dts before\n              // parsing this ID3 tag so set those values now\n\n              if (tag.pts === undefined && tag.dts === undefined) {\n                tag.pts = frame.timeStamp;\n                tag.dts = frame.timeStamp;\n              }\n\n              this.trigger('timestamp', frame);\n            }\n          }\n\n          tag.frames.push(frame);\n          frameStart += 10; // advance past the frame header\n\n          frameStart += frameSize; // advance past the frame body\n        } while (frameStart < tagSize);\n\n        this.trigger('data', tag);\n      };\n    };\n\n    _MetadataStream.prototype = new stream();\n    var metadataStream = _MetadataStream;\n    var TimestampRolloverStream$1 = timestampRolloverStream.TimestampRolloverStream; // object types\n\n    var _TransportPacketStream, _TransportParseStream, _ElementaryStream; // constants\n\n\n    var MP2T_PACKET_LENGTH = 188,\n        // bytes\n    SYNC_BYTE = 0x47;\n    /**\n     * Splits an incoming stream of binary data into MPEG-2 Transport\n     * Stream packets.\n     */\n\n    _TransportPacketStream = function TransportPacketStream() {\n      var buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n          bytesInBuffer = 0;\n\n      _TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n      /**\n       * Split a stream of data into M2TS packets\n      **/\n\n\n      this.push = function (bytes) {\n        var startIndex = 0,\n            endIndex = MP2T_PACKET_LENGTH,\n            everything; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (bytesInBuffer) {\n          everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n          everything.set(buffer.subarray(0, bytesInBuffer));\n          everything.set(bytes, bytesInBuffer);\n          bytesInBuffer = 0;\n        } else {\n          everything = bytes;\n        } // While we have enough data for a packet\n\n\n        while (endIndex < everything.byteLength) {\n          // Look for a pair of start and end sync bytes in the data..\n          if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n            // We found a packet so emit it and jump one whole packet forward in\n            // the stream\n            this.trigger('data', everything.subarray(startIndex, endIndex));\n            startIndex += MP2T_PACKET_LENGTH;\n            endIndex += MP2T_PACKET_LENGTH;\n            continue;\n          } // If we get here, we have somehow become de-synchronized and we need to step\n          // forward one byte at a time until we find a pair of sync bytes that denote\n          // a packet\n\n\n          startIndex++;\n          endIndex++;\n        } // If there was some data left over at the end of the segment that couldn't\n        // possibly be a whole packet, keep it because it might be the start of a packet\n        // that continues in the next segment\n\n\n        if (startIndex < everything.byteLength) {\n          buffer.set(everything.subarray(startIndex), 0);\n          bytesInBuffer = everything.byteLength - startIndex;\n        }\n      };\n      /**\n       * Passes identified M2TS packets to the TransportParseStream to be parsed\n      **/\n\n\n      this.flush = function () {\n        // If the buffer contains a whole packet when we are being flushed, emit it\n        // and empty the buffer. Otherwise hold onto the data because it may be\n        // important for decoding the next segment\n        if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n          this.trigger('data', buffer);\n          bytesInBuffer = 0;\n        }\n\n        this.trigger('done');\n      };\n    };\n\n    _TransportPacketStream.prototype = new stream();\n    /**\n     * Accepts an MP2T TransportPacketStream and emits data events with parsed\n     * forms of the individual transport stream packets.\n     */\n\n    _TransportParseStream = function TransportParseStream() {\n      var parsePsi, parsePat, parsePmt, self;\n\n      _TransportParseStream.prototype.init.call(this);\n\n      self = this;\n      this.packetsWaitingForPmt = [];\n      this.programMapTable = undefined;\n\n      parsePsi = function parsePsi(payload, psi) {\n        var offset = 0; // PSI packets may be split into multiple sections and those\n        // sections may be split into multiple packets. If a PSI\n        // section starts in this packet, the payload_unit_start_indicator\n        // will be true and the first byte of the payload will indicate\n        // the offset from the current position to the start of the\n        // section.\n\n        if (psi.payloadUnitStartIndicator) {\n          offset += payload[offset] + 1;\n        }\n\n        if (psi.type === 'pat') {\n          parsePat(payload.subarray(offset), psi);\n        } else {\n          parsePmt(payload.subarray(offset), psi);\n        }\n      };\n\n      parsePat = function parsePat(payload, pat) {\n        pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n        pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n        // skip the PSI header and parse the first PMT entry\n\n        self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n        pat.pmtPid = self.pmtPid;\n      };\n      /**\n       * Parse out the relevant fields of a Program Map Table (PMT).\n       * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n       * packet. The first byte in this array should be the table_id\n       * field.\n       * @param pmt {object} the object that should be decorated with\n       * fields parsed from the PMT.\n       */\n\n\n      parsePmt = function parsePmt(payload, pmt) {\n        var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n        // take effect. We don't believe this should ever be the case\n        // for HLS but we'll ignore \"forward\" PMT declarations if we see\n        // them. Future PMT declarations have the current_next_indicator\n        // set to zero.\n\n        if (!(payload[5] & 0x01)) {\n          return;\n        } // overwrite any existing program map table\n\n\n        self.programMapTable = {\n          video: null,\n          audio: null,\n          'timed-metadata': {}\n        }; // the mapping table ends at the end of the current section\n\n        sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n        tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n        // long the program info descriptors are\n\n        programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n        offset = 12 + programInfoLength;\n\n        while (offset < tableEnd) {\n          var streamType = payload[offset];\n          var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n          // TODO: should this be done for metadata too? for now maintain behavior of\n          //       multiple metadata streams\n\n          if (streamType === streamTypes.H264_STREAM_TYPE && self.programMapTable.video === null) {\n            self.programMapTable.video = pid;\n          } else if (streamType === streamTypes.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n            self.programMapTable.audio = pid;\n          } else if (streamType === streamTypes.METADATA_STREAM_TYPE) {\n            // map pid to stream type for metadata streams\n            self.programMapTable['timed-metadata'][pid] = streamType;\n          } // move to the next table entry\n          // skip past the elementary stream descriptors, if present\n\n\n          offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n        } // record the map on the packet as well\n\n\n        pmt.programMapTable = self.programMapTable;\n      };\n      /**\n       * Deliver a new MP2T packet to the next stream in the pipeline.\n       */\n\n\n      this.push = function (packet) {\n        var result = {},\n            offset = 4;\n        result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n        result.pid = packet[1] & 0x1f;\n        result.pid <<= 8;\n        result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n        // fifth byte of the TS packet header. The adaptation field is\n        // used to add stuffing to PES packets that don't fill a complete\n        // TS packet, and to specify some forms of timing and control data\n        // that we do not currently use.\n\n        if ((packet[3] & 0x30) >>> 4 > 0x01) {\n          offset += packet[offset] + 1;\n        } // parse the rest of the packet based on the type\n\n\n        if (result.pid === 0) {\n          result.type = 'pat';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result);\n        } else if (result.pid === this.pmtPid) {\n          result.type = 'pmt';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n          while (this.packetsWaitingForPmt.length) {\n            this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n          }\n        } else if (this.programMapTable === undefined) {\n          // When we have not seen a PMT yet, defer further processing of\n          // PES packets until one has been parsed\n          this.packetsWaitingForPmt.push([packet, offset, result]);\n        } else {\n          this.processPes_(packet, offset, result);\n        }\n      };\n\n      this.processPes_ = function (packet, offset, result) {\n        // set the appropriate stream type\n        if (result.pid === this.programMapTable.video) {\n          result.streamType = streamTypes.H264_STREAM_TYPE;\n        } else if (result.pid === this.programMapTable.audio) {\n          result.streamType = streamTypes.ADTS_STREAM_TYPE;\n        } else {\n          // if not video or audio, it is timed-metadata or unknown\n          // if unknown, streamType will be undefined\n          result.streamType = this.programMapTable['timed-metadata'][result.pid];\n        }\n\n        result.type = 'pes';\n        result.data = packet.subarray(offset);\n        this.trigger('data', result);\n      };\n    };\n\n    _TransportParseStream.prototype = new stream();\n    _TransportParseStream.STREAM_TYPES = {\n      h264: 0x1b,\n      adts: 0x0f\n    };\n    /**\n     * Reconsistutes program elementary stream (PES) packets from parsed\n     * transport stream packets. That is, if you pipe an\n     * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n     * events will be events which capture the bytes for individual PES\n     * packets plus relevant metadata that has been extracted from the\n     * container.\n     */\n\n    _ElementaryStream = function ElementaryStream() {\n      var self = this,\n          // PES packet fragments\n      video = {\n        data: [],\n        size: 0\n      },\n          audio = {\n        data: [],\n        size: 0\n      },\n          timedMetadata = {\n        data: [],\n        size: 0\n      },\n          parsePes = function parsePes(payload, pes) {\n        var ptsDtsFlags; // get the packet length, this will be 0 for video\n\n        pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n        pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n        // and a DTS value. Determine what combination of values is\n        // available to work with.\n\n        ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n        // performs all bitwise operations on 32-bit integers but javascript\n        // supports a much greater range (52-bits) of integer using standard\n        // mathematical operations.\n        // We construct a 31-bit value using bitwise operators over the 31\n        // most significant bits and then multiply by 4 (equal to a left-shift\n        // of 2) before we add the final 2 least significant bits of the\n        // timestamp (equal to an OR.)\n\n        if (ptsDtsFlags & 0xC0) {\n          // the PTS and DTS are not written out directly. For information\n          // on how they are encoded, see\n          // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n          pes.pts *= 4; // Left shift by 2\n\n          pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n          pes.dts = pes.pts;\n\n          if (ptsDtsFlags & 0x40) {\n            pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n            pes.dts *= 4; // Left shift by 2\n\n            pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n          }\n        } // the data section starts immediately after the PES header.\n        // pes_header_data_length specifies the number of header bytes\n        // that follow the last byte of the field.\n\n\n        pes.data = payload.subarray(9 + payload[8]);\n      },\n\n      /**\n        * Pass completely parsed PES packets to the next stream in the pipeline\n       **/\n      flushStream = function flushStream(stream$$1, type, forceFlush) {\n        var packetData = new Uint8Array(stream$$1.size),\n            event = {\n          type: type\n        },\n            i = 0,\n            offset = 0,\n            packetFlushable = false,\n            fragment; // do nothing if there is not enough buffered data for a complete\n        // PES header\n\n        if (!stream$$1.data.length || stream$$1.size < 9) {\n          return;\n        }\n\n        event.trackId = stream$$1.data[0].pid; // reassemble the packet\n\n        for (i = 0; i < stream$$1.data.length; i++) {\n          fragment = stream$$1.data[i];\n          packetData.set(fragment.data, offset);\n          offset += fragment.data.byteLength;\n        } // parse assembled packet's PES header\n\n\n        parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n        // check that there is enough stream data to fill the packet\n\n        packetFlushable = type === 'video' || event.packetLength <= stream$$1.size; // flush pending packets if the conditions are right\n\n        if (forceFlush || packetFlushable) {\n          stream$$1.size = 0;\n          stream$$1.data.length = 0;\n        } // only emit packets that are complete. this is to avoid assembling\n        // incomplete PES packets due to poor segmentation\n\n\n        if (packetFlushable) {\n          self.trigger('data', event);\n        }\n      };\n\n      _ElementaryStream.prototype.init.call(this);\n      /**\n       * Identifies M2TS packet types and parses PES packets using metadata\n       * parsed from the PMT\n       **/\n\n\n      this.push = function (data) {\n        ({\n          pat: function pat() {// we have to wait for the PMT to arrive as well before we\n            // have any meaningful metadata\n          },\n          pes: function pes() {\n            var stream$$1, streamType;\n\n            switch (data.streamType) {\n              case streamTypes.H264_STREAM_TYPE:\n              case streamTypes.H264_STREAM_TYPE:\n                stream$$1 = video;\n                streamType = 'video';\n                break;\n\n              case streamTypes.ADTS_STREAM_TYPE:\n                stream$$1 = audio;\n                streamType = 'audio';\n                break;\n\n              case streamTypes.METADATA_STREAM_TYPE:\n                stream$$1 = timedMetadata;\n                streamType = 'timed-metadata';\n                break;\n\n              default:\n                // ignore unknown stream types\n                return;\n            } // if a new packet is starting, we can flush the completed\n            // packet\n\n\n            if (data.payloadUnitStartIndicator) {\n              flushStream(stream$$1, streamType, true);\n            } // buffer this fragment until we are sure we've received the\n            // complete payload\n\n\n            stream$$1.data.push(data);\n            stream$$1.size += data.data.byteLength;\n          },\n          pmt: function pmt() {\n            var event = {\n              type: 'metadata',\n              tracks: []\n            },\n                programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n            if (programMapTable.video !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.video,\n                codec: 'avc',\n                type: 'video'\n              });\n            }\n\n            if (programMapTable.audio !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.audio,\n                codec: 'adts',\n                type: 'audio'\n              });\n            }\n\n            self.trigger('data', event);\n          }\n        })[data.type]();\n      };\n      /**\n       * Flush any remaining input. Video PES packets may be of variable\n       * length. Normally, the start of a new video packet can trigger the\n       * finalization of the previous packet. That is not possible if no\n       * more video is forthcoming, however. In that case, some other\n       * mechanism (like the end of the file) has to be employed. When it is\n       * clear that no additional data is forthcoming, calling this method\n       * will flush the buffered packets.\n       */\n\n\n      this.flush = function () {\n        // !!THIS ORDER IS IMPORTANT!!\n        // video first then audio\n        flushStream(video, 'video');\n        flushStream(audio, 'audio');\n        flushStream(timedMetadata, 'timed-metadata');\n        this.trigger('done');\n      };\n    };\n\n    _ElementaryStream.prototype = new stream();\n    var m2ts = {\n      PAT_PID: 0x0000,\n      MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n      TransportPacketStream: _TransportPacketStream,\n      TransportParseStream: _TransportParseStream,\n      ElementaryStream: _ElementaryStream,\n      TimestampRolloverStream: TimestampRolloverStream$1,\n      CaptionStream: captionStream.CaptionStream,\n      Cea608Stream: captionStream.Cea608Stream,\n      MetadataStream: metadataStream\n    };\n\n    for (var type in streamTypes) {\n      if (streamTypes.hasOwnProperty(type)) {\n        m2ts[type] = streamTypes[type];\n      }\n    }\n\n    var m2ts_1 = m2ts;\n\n    var _AdtsStream;\n\n    var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n    /*\n     * Accepts a ElementaryStream and emits data events with parsed\n     * AAC Audio Frames of the individual packets. Input audio in ADTS\n     * format is unpacked and re-emitted as AAC frames.\n     *\n     * @see http://wiki.multimedia.cx/index.php?title=ADTS\n     * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n     */\n\n    _AdtsStream = function AdtsStream() {\n      var buffer;\n\n      _AdtsStream.prototype.init.call(this);\n\n      this.push = function (packet) {\n        var i = 0,\n            frameNum = 0,\n            frameLength,\n            protectionSkipBytes,\n            frameEnd,\n            oldBuffer,\n            sampleCount,\n            adtsFrameDuration;\n\n        if (packet.type !== 'audio') {\n          // ignore non-audio data\n          return;\n        } // Prepend any data in the buffer to the input data so that we can parse\n        // aac frames the cross a PES packet boundary\n\n\n        if (buffer) {\n          oldBuffer = buffer;\n          buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n          buffer.set(oldBuffer);\n          buffer.set(packet.data, oldBuffer.byteLength);\n        } else {\n          buffer = packet.data;\n        } // unpack any ADTS frames which have been fully received\n        // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n\n        while (i + 5 < buffer.length) {\n          // Loook for the start of an ADTS header..\n          if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n            // If a valid header was not found,  jump one forward and attempt to\n            // find a valid ADTS header starting at the next byte\n            i++;\n            continue;\n          } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n          // end of the ADTS header\n\n\n          protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n          // end of the sync sequence\n\n          frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n          sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n          adtsFrameDuration = sampleCount * 90000 / ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n          frameEnd = i + frameLength; // If we don't have enough data to actually finish this ADTS frame, return\n          // and wait for more data\n\n          if (buffer.byteLength < frameEnd) {\n            return;\n          } // Otherwise, deliver the complete AAC frame\n\n\n          this.trigger('data', {\n            pts: packet.pts + frameNum * adtsFrameDuration,\n            dts: packet.dts + frameNum * adtsFrameDuration,\n            sampleCount: sampleCount,\n            audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n            channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n            samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n            samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n            // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n            samplesize: 16,\n            data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n          }); // If the buffer is empty, clear it and return\n\n          if (buffer.byteLength === frameEnd) {\n            buffer = undefined;\n            return;\n          }\n\n          frameNum++; // Remove the finished frame from the buffer and start the process again\n\n          buffer = buffer.subarray(frameEnd);\n        }\n      };\n\n      this.flush = function () {\n        this.trigger('done');\n      };\n    };\n\n    _AdtsStream.prototype = new stream();\n    var adts = _AdtsStream;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ExpGolomb;\n    /**\n     * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n     * scheme used by h264.\n     */\n\n    ExpGolomb = function ExpGolomb(workingData) {\n      var // the number of bytes left to examine in workingData\n      workingBytesAvailable = workingData.byteLength,\n          // the current word being examined\n      workingWord = 0,\n          // :uint\n      // the number of bits left to examine in the current word\n      workingBitsAvailable = 0; // :uint;\n      // ():uint\n\n      this.length = function () {\n        return 8 * workingBytesAvailable;\n      }; // ():uint\n\n\n      this.bitsAvailable = function () {\n        return 8 * workingBytesAvailable + workingBitsAvailable;\n      }; // ():void\n\n\n      this.loadWord = function () {\n        var position = workingData.byteLength - workingBytesAvailable,\n            workingBytes = new Uint8Array(4),\n            availableBytes = Math.min(4, workingBytesAvailable);\n\n        if (availableBytes === 0) {\n          throw new Error('no bytes available');\n        }\n\n        workingBytes.set(workingData.subarray(position, position + availableBytes));\n        workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n        workingBitsAvailable = availableBytes * 8;\n        workingBytesAvailable -= availableBytes;\n      }; // (count:int):void\n\n\n      this.skipBits = function (count) {\n        var skipBytes; // :int\n\n        if (workingBitsAvailable > count) {\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        } else {\n          count -= workingBitsAvailable;\n          skipBytes = Math.floor(count / 8);\n          count -= skipBytes * 8;\n          workingBytesAvailable -= skipBytes;\n          this.loadWord();\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        }\n      }; // (size:int):uint\n\n\n      this.readBits = function (size) {\n        var bits = Math.min(workingBitsAvailable, size),\n            // :uint\n        valu = workingWord >>> 32 - bits; // :uint\n        // if size > 31, handle error\n\n        workingBitsAvailable -= bits;\n\n        if (workingBitsAvailable > 0) {\n          workingWord <<= bits;\n        } else if (workingBytesAvailable > 0) {\n          this.loadWord();\n        }\n\n        bits = size - bits;\n\n        if (bits > 0) {\n          return valu << bits | this.readBits(bits);\n        }\n\n        return valu;\n      }; // ():uint\n\n\n      this.skipLeadingZeros = function () {\n        var leadingZeroCount; // :uint\n\n        for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n          if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n            // the first bit of working word is 1\n            workingWord <<= leadingZeroCount;\n            workingBitsAvailable -= leadingZeroCount;\n            return leadingZeroCount;\n          }\n        } // we exhausted workingWord and still have not found a 1\n\n\n        this.loadWord();\n        return leadingZeroCount + this.skipLeadingZeros();\n      }; // ():void\n\n\n      this.skipUnsignedExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():void\n\n\n      this.skipExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():uint\n\n\n      this.readUnsignedExpGolomb = function () {\n        var clz = this.skipLeadingZeros(); // :uint\n\n        return this.readBits(clz + 1) - 1;\n      }; // ():int\n\n\n      this.readExpGolomb = function () {\n        var valu = this.readUnsignedExpGolomb(); // :int\n\n        if (0x01 & valu) {\n          // the number is odd if the low order bit is set\n          return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n        }\n\n        return -1 * (valu >>> 1); // divide by two then make it negative\n      }; // Some convenience functions\n      // :Boolean\n\n\n      this.readBoolean = function () {\n        return this.readBits(1) === 1;\n      }; // ():int\n\n\n      this.readUnsignedByte = function () {\n        return this.readBits(8);\n      };\n\n      this.loadWord();\n    };\n\n    var expGolomb = ExpGolomb;\n\n    var _H264Stream, _NalByteStream;\n\n    var PROFILES_WITH_OPTIONAL_SPS_DATA;\n    /**\n     * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n     */\n\n    _NalByteStream = function NalByteStream() {\n      var syncPoint = 0,\n          i,\n          buffer;\n\n      _NalByteStream.prototype.init.call(this);\n      /*\n       * Scans a byte stream and triggers a data event with the NAL units found.\n       * @param {Object} data Event received from H264Stream\n       * @param {Uint8Array} data.data The h264 byte stream to be scanned\n       *\n       * @see H264Stream.push\n       */\n\n\n      this.push = function (data) {\n        var swapBuffer;\n\n        if (!buffer) {\n          buffer = data.data;\n        } else {\n          swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n          swapBuffer.set(buffer);\n          swapBuffer.set(data.data, buffer.byteLength);\n          buffer = swapBuffer;\n        } // Rec. ITU-T H.264, Annex B\n        // scan for NAL unit boundaries\n        // a match looks like this:\n        // 0 0 1 .. NAL .. 0 0 1\n        // ^ sync point        ^ i\n        // or this:\n        // 0 0 1 .. NAL .. 0 0 0\n        // ^ sync point        ^ i\n        // advance the sync point to a NAL start, if necessary\n\n\n        for (; syncPoint < buffer.byteLength - 3; syncPoint++) {\n          if (buffer[syncPoint + 2] === 1) {\n            // the sync point is properly aligned\n            i = syncPoint + 5;\n            break;\n          }\n        }\n\n        while (i < buffer.byteLength) {\n          // look at the current byte to determine if we've hit the end of\n          // a NAL unit boundary\n          switch (buffer[i]) {\n            case 0:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0) {\n                i += 2;\n                break;\n              } else if (buffer[i - 2] !== 0) {\n                i++;\n                break;\n              } // deliver the NAL unit if it isn't empty\n\n\n              if (syncPoint + 3 !== i - 2) {\n                this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              } // drop trailing zeroes\n\n\n              do {\n                i++;\n              } while (buffer[i] !== 1 && i < buffer.length);\n\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            case 1:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n                i += 3;\n                break;\n              } // deliver the NAL unit\n\n\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            default:\n              // the current byte isn't a one or zero, so it cannot be part\n              // of a sync sequence\n              i += 3;\n              break;\n          }\n        } // filter out the NAL units that were delivered\n\n\n        buffer = buffer.subarray(syncPoint);\n        i -= syncPoint;\n        syncPoint = 0;\n      };\n\n      this.flush = function () {\n        // deliver the last buffered NAL unit\n        if (buffer && buffer.byteLength > 3) {\n          this.trigger('data', buffer.subarray(syncPoint + 3));\n        } // reset the stream state\n\n\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('done');\n      };\n    };\n\n    _NalByteStream.prototype = new stream(); // values of profile_idc that indicate additional fields are included in the SPS\n    // see Recommendation ITU-T H.264 (4/2013),\n    // 7.3.2.1.1 Sequence parameter set data syntax\n\n    PROFILES_WITH_OPTIONAL_SPS_DATA = {\n      100: true,\n      110: true,\n      122: true,\n      244: true,\n      44: true,\n      83: true,\n      86: true,\n      118: true,\n      128: true,\n      138: true,\n      139: true,\n      134: true\n    };\n    /**\n     * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n     * events.\n     */\n\n    _H264Stream = function H264Stream() {\n      var nalByteStream = new _NalByteStream(),\n          self,\n          trackId,\n          currentPts,\n          currentDts,\n          discardEmulationPreventionBytes,\n          readSequenceParameterSet,\n          skipScalingList;\n\n      _H264Stream.prototype.init.call(this);\n\n      self = this;\n      /*\n       * Pushes a packet from a stream onto the NalByteStream\n       *\n       * @param {Object} packet - A packet received from a stream\n       * @param {Uint8Array} packet.data - The raw bytes of the packet\n       * @param {Number} packet.dts - Decode timestamp of the packet\n       * @param {Number} packet.pts - Presentation timestamp of the packet\n       * @param {Number} packet.trackId - The id of the h264 track this packet came from\n       * @param {('video'|'audio')} packet.type - The type of packet\n       *\n       */\n\n      this.push = function (packet) {\n        if (packet.type !== 'video') {\n          return;\n        }\n\n        trackId = packet.trackId;\n        currentPts = packet.pts;\n        currentDts = packet.dts;\n        nalByteStream.push(packet);\n      };\n      /*\n       * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n       * for the NALUs to the next stream component.\n       * Also, preprocess caption and sequence parameter NALUs.\n       *\n       * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n       * @see NalByteStream.push\n       */\n\n\n      nalByteStream.on('data', function (data) {\n        var event = {\n          trackId: trackId,\n          pts: currentPts,\n          dts: currentDts,\n          data: data\n        };\n\n        switch (data[0] & 0x1f) {\n          case 0x05:\n            event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n            break;\n\n          case 0x06:\n            event.nalUnitType = 'sei_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            break;\n\n          case 0x07:\n            event.nalUnitType = 'seq_parameter_set_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            event.config = readSequenceParameterSet(event.escapedRBSP);\n            break;\n\n          case 0x08:\n            event.nalUnitType = 'pic_parameter_set_rbsp';\n            break;\n\n          case 0x09:\n            event.nalUnitType = 'access_unit_delimiter_rbsp';\n            break;\n\n          default:\n            break;\n        } // This triggers data on the H264Stream\n\n\n        self.trigger('data', event);\n      });\n      nalByteStream.on('done', function () {\n        self.trigger('done');\n      });\n\n      this.flush = function () {\n        nalByteStream.flush();\n      };\n      /**\n       * Advance the ExpGolomb decoder past a scaling list. The scaling\n       * list is optionally transmitted as part of a sequence parameter\n       * set and is not relevant to transmuxing.\n       * @param count {number} the number of entries in this scaling list\n       * @param expGolombDecoder {object} an ExpGolomb pointed to the\n       * start of a scaling list\n       * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n       */\n\n\n      skipScalingList = function skipScalingList(count, expGolombDecoder) {\n        var lastScale = 8,\n            nextScale = 8,\n            j,\n            deltaScale;\n\n        for (j = 0; j < count; j++) {\n          if (nextScale !== 0) {\n            deltaScale = expGolombDecoder.readExpGolomb();\n            nextScale = (lastScale + deltaScale + 256) % 256;\n          }\n\n          lastScale = nextScale === 0 ? lastScale : nextScale;\n        }\n      };\n      /**\n       * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n       * Sequence Payload\"\n       * @param data {Uint8Array} the bytes of a RBSP from a NAL\n       * unit\n       * @return {Uint8Array} the RBSP without any Emulation\n       * Prevention Bytes\n       */\n\n\n      discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n        var length = data.byteLength,\n            emulationPreventionBytesPositions = [],\n            i = 1,\n            newLength,\n            newData; // Find all `Emulation Prevention Bytes`\n\n        while (i < length - 2) {\n          if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n            emulationPreventionBytesPositions.push(i + 2);\n            i += 2;\n          } else {\n            i++;\n          }\n        } // If no Emulation Prevention Bytes were found just return the original\n        // array\n\n\n        if (emulationPreventionBytesPositions.length === 0) {\n          return data;\n        } // Create a new array to hold the NAL unit data\n\n\n        newLength = length - emulationPreventionBytesPositions.length;\n        newData = new Uint8Array(newLength);\n        var sourceIndex = 0;\n\n        for (i = 0; i < newLength; sourceIndex++, i++) {\n          if (sourceIndex === emulationPreventionBytesPositions[0]) {\n            // Skip this byte\n            sourceIndex++; // Remove this position index\n\n            emulationPreventionBytesPositions.shift();\n          }\n\n          newData[i] = data[sourceIndex];\n        }\n\n        return newData;\n      };\n      /**\n       * Read a sequence parameter set and return some interesting video\n       * properties. A sequence parameter set is the H264 metadata that\n       * describes the properties of upcoming video frames.\n       * @param data {Uint8Array} the bytes of a sequence parameter set\n       * @return {object} an object with configuration parsed from the\n       * sequence parameter set, including the dimensions of the\n       * associated video frames.\n       */\n\n\n      readSequenceParameterSet = function readSequenceParameterSet(data) {\n        var frameCropLeftOffset = 0,\n            frameCropRightOffset = 0,\n            frameCropTopOffset = 0,\n            frameCropBottomOffset = 0,\n            sarScale = 1,\n            expGolombDecoder,\n            profileIdc,\n            levelIdc,\n            profileCompatibility,\n            chromaFormatIdc,\n            picOrderCntType,\n            numRefFramesInPicOrderCntCycle,\n            picWidthInMbsMinus1,\n            picHeightInMapUnitsMinus1,\n            frameMbsOnlyFlag,\n            scalingListCount,\n            sarRatio,\n            aspectRatioIdc,\n            i;\n        expGolombDecoder = new expGolomb(data);\n        profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n        profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n        levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n        // some profiles have more optional data we don't need\n\n        if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n          chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n\n          if (chromaFormatIdc === 3) {\n            expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n          }\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n          expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n          if (expGolombDecoder.readBoolean()) {\n            // seq_scaling_matrix_present_flag\n            scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n\n            for (i = 0; i < scalingListCount; i++) {\n              if (expGolombDecoder.readBoolean()) {\n                // seq_scaling_list_present_flag[ i ]\n                if (i < 6) {\n                  skipScalingList(16, expGolombDecoder);\n                } else {\n                  skipScalingList(64, expGolombDecoder);\n                }\n              }\n            }\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n        picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n        if (picOrderCntType === 0) {\n          expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n        } else if (picOrderCntType === 1) {\n          expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n          numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n\n          for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n            expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n        expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n        picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n\n        if (frameMbsOnlyFlag === 0) {\n          expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n        }\n\n        expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n        if (expGolombDecoder.readBoolean()) {\n          // frame_cropping_flag\n          frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n        }\n\n        if (expGolombDecoder.readBoolean()) {\n          // vui_parameters_present_flag\n          if (expGolombDecoder.readBoolean()) {\n            // aspect_ratio_info_present_flag\n            aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n\n            switch (aspectRatioIdc) {\n              case 1:\n                sarRatio = [1, 1];\n                break;\n\n              case 2:\n                sarRatio = [12, 11];\n                break;\n\n              case 3:\n                sarRatio = [10, 11];\n                break;\n\n              case 4:\n                sarRatio = [16, 11];\n                break;\n\n              case 5:\n                sarRatio = [40, 33];\n                break;\n\n              case 6:\n                sarRatio = [24, 11];\n                break;\n\n              case 7:\n                sarRatio = [20, 11];\n                break;\n\n              case 8:\n                sarRatio = [32, 11];\n                break;\n\n              case 9:\n                sarRatio = [80, 33];\n                break;\n\n              case 10:\n                sarRatio = [18, 11];\n                break;\n\n              case 11:\n                sarRatio = [15, 11];\n                break;\n\n              case 12:\n                sarRatio = [64, 33];\n                break;\n\n              case 13:\n                sarRatio = [160, 99];\n                break;\n\n              case 14:\n                sarRatio = [4, 3];\n                break;\n\n              case 15:\n                sarRatio = [3, 2];\n                break;\n\n              case 16:\n                sarRatio = [2, 1];\n                break;\n\n              case 255:\n                {\n                  sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                  break;\n                }\n            }\n\n            if (sarRatio) {\n              sarScale = sarRatio[0] / sarRatio[1];\n            }\n          }\n        }\n\n        return {\n          profileIdc: profileIdc,\n          levelIdc: levelIdc,\n          profileCompatibility: profileCompatibility,\n          width: Math.ceil(((picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n          height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2\n        };\n      };\n    };\n\n    _H264Stream.prototype = new stream();\n    var h264 = {\n      H264Stream: _H264Stream,\n      NalByteStream: _NalByteStream\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Utilities to detect basic properties and metadata about Aac data.\n     */\n\n    var ADTS_SAMPLING_FREQUENCIES$1 = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\n    var isLikelyAacData = function isLikelyAacData(data) {\n      if (data[0] === 'I'.charCodeAt(0) && data[1] === 'D'.charCodeAt(0) && data[2] === '3'.charCodeAt(0)) {\n        return true;\n      }\n\n      return false;\n    };\n\n    var parseSyncSafeInteger$1 = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    }; // return a percent-encoded representation of the specified byte range\n    // @see http://en.wikipedia.org/wiki/Percent-encoding\n\n\n    var percentEncode$1 = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    }; // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n\n\n    var parseIso88591$1 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode$1(bytes, start, end)); // jshint ignore:line\n    };\n\n    var parseId3TagSize = function parseId3TagSize(header, byteIndex) {\n      var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n          flags = header[byteIndex + 5],\n          footerPresent = (flags & 16) >> 4;\n\n      if (footerPresent) {\n        return returnSize + 20;\n      }\n\n      return returnSize + 10;\n    };\n\n    var parseAdtsSize = function parseAdtsSize(header, byteIndex) {\n      var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n          middle = header[byteIndex + 4] << 3,\n          highTwo = header[byteIndex + 3] & 0x3 << 11;\n      return highTwo | middle | lowThree;\n    };\n\n    var parseType$1 = function parseType(header, byteIndex) {\n      if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n        return 'timed-metadata';\n      } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n        return 'audio';\n      }\n\n      return null;\n    };\n\n    var parseSampleRate = function parseSampleRate(packet) {\n      var i = 0;\n\n      while (i + 5 < packet.length) {\n        if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n          // If a valid header was not found,  jump one forward and attempt to\n          // find a valid ADTS header starting at the next byte\n          i++;\n          continue;\n        }\n\n        return ADTS_SAMPLING_FREQUENCIES$1[(packet[i + 2] & 0x3c) >>> 2];\n      }\n\n      return null;\n    };\n\n    var parseAacTimestamp = function parseAacTimestamp(packet) {\n      var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n      frameStart = 10;\n\n      if (packet[5] & 0x40) {\n        // advance the frame start past the extended header\n        frameStart += 4; // header size field\n\n        frameStart += parseSyncSafeInteger$1(packet.subarray(10, 14));\n      } // parse one or more ID3 frames\n      // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n      do {\n        // determine the number of bytes in this frame\n        frameSize = parseSyncSafeInteger$1(packet.subarray(frameStart + 4, frameStart + 8));\n\n        if (frameSize < 1) {\n          return null;\n        }\n\n        frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n\n        if (frameHeader === 'PRIV') {\n          frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n          for (var i = 0; i < frame.byteLength; i++) {\n            if (frame[i] === 0) {\n              var owner = parseIso88591$1(frame, 0, i);\n\n              if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n                var d = frame.subarray(i + 1);\n                var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n                size *= 4;\n                size += d[7] & 0x03;\n                return size;\n              }\n\n              break;\n            }\n          }\n        }\n\n        frameStart += 10; // advance past the frame header\n\n        frameStart += frameSize; // advance past the frame body\n      } while (frameStart < packet.byteLength);\n\n      return null;\n    };\n\n    var utils = {\n      isLikelyAacData: isLikelyAacData,\n      parseId3TagSize: parseId3TagSize,\n      parseAdtsSize: parseAdtsSize,\n      parseType: parseType$1,\n      parseSampleRate: parseSampleRate,\n      parseAacTimestamp: parseAacTimestamp\n    }; // Constants\n\n    var _AacStream;\n    /**\n     * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n     */\n\n\n    _AacStream = function AacStream() {\n      var everything = new Uint8Array(),\n          timeStamp = 0;\n\n      _AacStream.prototype.init.call(this);\n\n      this.setTimestamp = function (timestamp) {\n        timeStamp = timestamp;\n      };\n\n      this.push = function (bytes) {\n        var frameSize = 0,\n            byteIndex = 0,\n            bytesLeft,\n            chunk,\n            packet,\n            tempLength; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (everything.length) {\n          tempLength = everything.length;\n          everything = new Uint8Array(bytes.byteLength + tempLength);\n          everything.set(everything.subarray(0, tempLength));\n          everything.set(bytes, tempLength);\n        } else {\n          everything = bytes;\n        }\n\n        while (everything.length - byteIndex >= 3) {\n          if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n            // Exit early because we don't have enough to parse\n            // the ID3 tag header\n            if (everything.length - byteIndex < 10) {\n              break;\n            } // check framesize\n\n\n            frameSize = utils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n            // Add to byteIndex to support multiple ID3 tags in sequence\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n\n            chunk = {\n              type: 'timed-metadata',\n              data: everything.subarray(byteIndex, byteIndex + frameSize)\n            };\n            this.trigger('data', chunk);\n            byteIndex += frameSize;\n            continue;\n          } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n            // Exit early because we don't have enough to parse\n            // the ADTS frame header\n            if (everything.length - byteIndex < 7) {\n              break;\n            }\n\n            frameSize = utils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n\n            packet = {\n              type: 'audio',\n              data: everything.subarray(byteIndex, byteIndex + frameSize),\n              pts: timeStamp,\n              dts: timeStamp\n            };\n            this.trigger('data', packet);\n            byteIndex += frameSize;\n            continue;\n          }\n\n          byteIndex++;\n        }\n\n        bytesLeft = everything.length - byteIndex;\n\n        if (bytesLeft > 0) {\n          everything = everything.subarray(byteIndex);\n        } else {\n          everything = new Uint8Array();\n        }\n      };\n    };\n\n    _AacStream.prototype = new stream();\n    var aac = _AacStream;\n    var H264Stream = h264.H264Stream;\n    var isLikelyAacData$1 = utils.isLikelyAacData; // constants\n\n    var AUDIO_PROPERTIES = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n    var VIDEO_PROPERTIES = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility']; // object types\n\n    var _VideoSegmentStream, _AudioSegmentStream, _Transmuxer, _CoalesceStream;\n    /**\n     * Compare two arrays (even typed) for same-ness\n     */\n\n\n    var arrayEquals = function arrayEquals(a, b) {\n      var i;\n\n      if (a.length !== b.length) {\n        return false;\n      } // compare the value of each element in the array\n\n\n      for (i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    var generateVideoSegmentTimingInfo = function generateVideoSegmentTimingInfo(baseMediaDecodeTime, startDts, startPts, endDts, endPts, prependedContentDuration) {\n      var ptsOffsetFromDts = startPts - startDts,\n          decodeDuration = endDts - startDts,\n          presentationDuration = endPts - startPts; // The PTS and DTS values are based on the actual stream times from the segment,\n      // however, the player time values will reflect a start from the baseMediaDecodeTime.\n      // In order to provide relevant values for the player times, base timing info on the\n      // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n\n      return {\n        start: {\n          dts: baseMediaDecodeTime,\n          pts: baseMediaDecodeTime + ptsOffsetFromDts\n        },\n        end: {\n          dts: baseMediaDecodeTime + decodeDuration,\n          pts: baseMediaDecodeTime + presentationDuration\n        },\n        prependedContentDuration: prependedContentDuration,\n        baseMediaDecodeTime: baseMediaDecodeTime\n      };\n    };\n    /**\n     * Constructs a single-track, ISO BMFF media segment from AAC data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    _AudioSegmentStream = function AudioSegmentStream(track, options) {\n      var adtsFrames = [],\n          sequenceNumber = 0,\n          earliestAllowedDts = 0,\n          audioAppendStartTs = 0,\n          videoBaseMediaDecodeTime = Infinity;\n      options = options || {};\n\n      _AudioSegmentStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        trackDecodeInfo.collectDtsInfo(track, data);\n\n        if (track) {\n          AUDIO_PROPERTIES.forEach(function (prop) {\n            track[prop] = data[prop];\n          });\n        } // buffer audio data until end() is called\n\n\n        adtsFrames.push(data);\n      };\n\n      this.setEarliestDts = function (earliestDts) {\n        earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n      };\n\n      this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        videoBaseMediaDecodeTime = baseMediaDecodeTime;\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        audioAppendStartTs = timestamp;\n      };\n\n      this.flush = function () {\n        var frames, moof, mdat, boxes; // return early if no audio data has been observed\n\n        if (adtsFrames.length === 0) {\n          this.trigger('done', 'AudioSegmentStream');\n          return;\n        }\n\n        frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n        audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\n        // samples (that is, adts frames) in the audio data\n\n        track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\n\n        mdat = mp4Generator.mdat(audioFrameUtils.concatenateFrameData(frames));\n        adtsFrames = [];\n        moof = mp4Generator.moof(sequenceNumber, [track]);\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        trackDecodeInfo.clearDtsInfo(track);\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.trigger('done', 'AudioSegmentStream');\n      };\n    };\n\n    _AudioSegmentStream.prototype = new stream();\n    /**\n     * Constructs a single-track, ISO BMFF media segment from H264 data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n     *        gopsToAlignWith list when attempting to align gop pts\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n    _VideoSegmentStream = function VideoSegmentStream(track, options) {\n      var sequenceNumber = 0,\n          nalUnits = [],\n          gopsToAlignWith = [],\n          config,\n          pps;\n      options = options || {};\n\n      _VideoSegmentStream.prototype.init.call(this);\n\n      delete track.minPTS;\n      this.gopCache_ = [];\n      /**\n        * Constructs a ISO BMFF segment given H264 nalUnits\n        * @param {Object} nalUnit A data event representing a nalUnit\n        * @param {String} nalUnit.nalUnitType\n        * @param {Object} nalUnit.config Properties for a mp4 track\n        * @param {Uint8Array} nalUnit.data The nalUnit bytes\n        * @see lib/codecs/h264.js\n       **/\n\n      this.push = function (nalUnit) {\n        trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\n\n        if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n          config = nalUnit.config;\n          track.sps = [nalUnit.data];\n          VIDEO_PROPERTIES.forEach(function (prop) {\n            track[prop] = config[prop];\n          }, this);\n        }\n\n        if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n          pps = nalUnit.data;\n          track.pps = [nalUnit.data];\n        } // buffer video until flush() is called\n\n\n        nalUnits.push(nalUnit);\n      };\n      /**\n        * Pass constructed ISO BMFF track and boxes on to the\n        * next stream in the pipeline\n       **/\n\n\n      this.flush = function () {\n        var frames,\n            gopForFusion,\n            gops,\n            moof,\n            mdat,\n            boxes,\n            prependedContentDuration = 0,\n            firstGop,\n            lastGop; // Throw away nalUnits at the start of the byte stream until\n        // we find the first AUD\n\n        while (nalUnits.length) {\n          if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n            break;\n          }\n\n          nalUnits.shift();\n        } // Return early if no video data has been observed\n\n\n        if (nalUnits.length === 0) {\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        } // Organize the raw nal-units into arrays that represent\n        // higher-level constructs such as frames and gops\n        // (group-of-pictures)\n\n\n        frames = frameUtils.groupNalsIntoFrames(nalUnits);\n        gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\n        // a problem since MSE (on Chrome) requires a leading keyframe.\n        //\n        // We have two approaches to repairing this situation:\n        // 1) GOP-FUSION:\n        //    This is where we keep track of the GOPS (group-of-pictures)\n        //    from previous fragments and attempt to find one that we can\n        //    prepend to the current fragment in order to create a valid\n        //    fragment.\n        // 2) KEYFRAME-PULLING:\n        //    Here we search for the first keyframe in the fragment and\n        //    throw away all the frames between the start of the fragment\n        //    and that keyframe. We then extend the duration and pull the\n        //    PTS of the keyframe forward so that it covers the time range\n        //    of the frames that were disposed of.\n        //\n        // #1 is far prefereable over #2 which can cause \"stuttering\" but\n        // requires more things to be just right.\n\n        if (!gops[0][0].keyFrame) {\n          // Search for a gop for fusion from our gopCache\n          gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n          if (gopForFusion) {\n            // in order to provide more accurate timing information about the segment, save\n            // the number of seconds prepended to the original segment due to GOP fusion\n            prependedContentDuration = gopForFusion.duration;\n            gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n            // new gop at the beginning\n\n            gops.byteLength += gopForFusion.byteLength;\n            gops.nalCount += gopForFusion.nalCount;\n            gops.pts = gopForFusion.pts;\n            gops.dts = gopForFusion.dts;\n            gops.duration += gopForFusion.duration;\n          } else {\n            // If we didn't find a candidate gop fall back to keyframe-pulling\n            gops = frameUtils.extendFirstKeyFrame(gops);\n          }\n        } // Trim gops to align with gopsToAlignWith\n\n\n        if (gopsToAlignWith.length) {\n          var alignedGops;\n\n          if (options.alignGopsAtEnd) {\n            alignedGops = this.alignGopsAtEnd_(gops);\n          } else {\n            alignedGops = this.alignGopsAtStart_(gops);\n          }\n\n          if (!alignedGops) {\n            // save all the nals in the last GOP into the gop cache\n            this.gopCache_.unshift({\n              gop: gops.pop(),\n              pps: track.pps,\n              sps: track.sps\n            }); // Keep a maximum of 6 GOPs in the cache\n\n            this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n            nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n            this.resetStream_();\n            this.trigger('done', 'VideoSegmentStream');\n            return;\n          } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n          // when recalculated before sending off to CoalesceStream\n\n\n          trackDecodeInfo.clearDtsInfo(track);\n          gops = alignedGops;\n        }\n\n        trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n        // samples (that is, frames) in the video data\n\n        track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\n\n        mdat = mp4Generator.mdat(frameUtils.concatenateNalData(gops));\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n        this.trigger('processedGopsInfo', gops.map(function (gop) {\n          return {\n            pts: gop.pts,\n            dts: gop.dts,\n            byteLength: gop.byteLength\n          };\n        }));\n        firstGop = gops[0];\n        lastGop = gops[gops.length - 1];\n        this.trigger('segmentTimingInfo', generateVideoSegmentTimingInfo(track.baseMediaDecodeTime, firstGop.dts, firstGop.pts, lastGop.dts + lastGop.duration, lastGop.pts + lastGop.duration, prependedContentDuration)); // save all the nals in the last GOP into the gop cache\n\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        }); // Keep a maximum of 6 GOPs in the cache\n\n        this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n        nalUnits = [];\n        this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n        this.trigger('timelineStartInfo', track.timelineStartInfo);\n        moof = mp4Generator.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n        // throwing away hundreds of media segment fragments\n\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.resetStream_(); // Continue with the flush process now\n\n        this.trigger('done', 'VideoSegmentStream');\n      };\n\n      this.resetStream_ = function () {\n        trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\n        // for instance, when we are rendition switching\n\n        config = undefined;\n        pps = undefined;\n      }; // Search for a candidate Gop for gop-fusion from the gop cache and\n      // return it or return null if no good candidate was found\n\n\n      this.getGopForFusion_ = function (nalUnit) {\n        var halfSecond = 45000,\n            // Half-a-second in a 90khz clock\n        allowableOverlap = 10000,\n            // About 3 frames @ 30fps\n        nearestDistance = Infinity,\n            dtsDistance,\n            nearestGopObj,\n            currentGop,\n            currentGopObj,\n            i; // Search for the GOP nearest to the beginning of this nal unit\n\n        for (i = 0; i < this.gopCache_.length; i++) {\n          currentGopObj = this.gopCache_[i];\n          currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n          if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n            continue;\n          } // Reject Gops that would require a negative baseMediaDecodeTime\n\n\n          if (currentGop.dts < track.timelineStartInfo.dts) {\n            continue;\n          } // The distance between the end of the gop and the start of the nalUnit\n\n\n          dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n          // a half-second of the nal unit\n\n          if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n            // Always use the closest GOP we found if there is more than\n            // one candidate\n            if (!nearestGopObj || nearestDistance > dtsDistance) {\n              nearestGopObj = currentGopObj;\n              nearestDistance = dtsDistance;\n            }\n          }\n        }\n\n        if (nearestGopObj) {\n          return nearestGopObj.gop;\n        }\n\n        return null;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the START of the list\n\n\n      this.alignGopsAtStart_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n        byteLength = gops.byteLength;\n        nalCount = gops.nalCount;\n        duration = gops.duration;\n        alignIndex = gopIndex = 0;\n\n        while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            break;\n          }\n\n          if (gop.pts > align.pts) {\n            // this current gop starts after the current gop we want to align on, so increment\n            // align index\n            alignIndex++;\n            continue;\n          } // current gop starts before the current gop we want to align on. so increment gop\n          // index\n\n\n          gopIndex++;\n          byteLength -= gop.byteLength;\n          nalCount -= gop.nalCount;\n          duration -= gop.duration;\n        }\n\n        if (gopIndex === 0) {\n          // no gops to trim\n          return gops;\n        }\n\n        if (gopIndex === gops.length) {\n          // all gops trimmed, skip appending all gops\n          return null;\n        }\n\n        alignedGops = gops.slice(gopIndex);\n        alignedGops.byteLength = byteLength;\n        alignedGops.duration = duration;\n        alignedGops.nalCount = nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the END of the list\n\n\n      this.alignGopsAtEnd_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n        alignIndex = gopsToAlignWith.length - 1;\n        gopIndex = gops.length - 1;\n        alignEndIndex = null;\n        matchFound = false;\n\n        while (alignIndex >= 0 && gopIndex >= 0) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            matchFound = true;\n            break;\n          }\n\n          if (align.pts > gop.pts) {\n            alignIndex--;\n            continue;\n          }\n\n          if (alignIndex === gopsToAlignWith.length - 1) {\n            // gop.pts is greater than the last alignment candidate. If no match is found\n            // by the end of this loop, we still want to append gops that come after this\n            // point\n            alignEndIndex = gopIndex;\n          }\n\n          gopIndex--;\n        }\n\n        if (!matchFound && alignEndIndex === null) {\n          return null;\n        }\n\n        var trimIndex;\n\n        if (matchFound) {\n          trimIndex = gopIndex;\n        } else {\n          trimIndex = alignEndIndex;\n        }\n\n        if (trimIndex === 0) {\n          return gops;\n        }\n\n        var alignedGops = gops.slice(trimIndex);\n        var metadata = alignedGops.reduce(function (total, gop) {\n          total.byteLength += gop.byteLength;\n          total.duration += gop.duration;\n          total.nalCount += gop.nalCount;\n          return total;\n        }, {\n          byteLength: 0,\n          duration: 0,\n          nalCount: 0\n        });\n        alignedGops.byteLength = metadata.byteLength;\n        alignedGops.duration = metadata.duration;\n        alignedGops.nalCount = metadata.nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      };\n\n      this.alignGopsWith = function (newGopsToAlignWith) {\n        gopsToAlignWith = newGopsToAlignWith;\n      };\n    };\n\n    _VideoSegmentStream.prototype = new stream();\n    /**\n     * A Stream that can combine multiple streams (ie. audio & video)\n     * into a single output segment for MSE. Also supports audio-only\n     * and video-only streams.\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at media timeline start.\n     */\n\n    _CoalesceStream = function CoalesceStream(options, metadataStream) {\n      // Number of Tracks per output segment\n      // If greater than 1, we combine multiple\n      // tracks into a single segment\n      this.numberOfTracks = 0;\n      this.metadataStream = metadataStream;\n      options = options || {};\n\n      if (typeof options.remux !== 'undefined') {\n        this.remuxTracks = !!options.remux;\n      } else {\n        this.remuxTracks = true;\n      }\n\n      if (typeof options.keepOriginalTimestamps === 'boolean') {\n        this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n      }\n\n      this.pendingTracks = [];\n      this.videoTrack = null;\n      this.pendingBoxes = [];\n      this.pendingCaptions = [];\n      this.pendingMetadata = [];\n      this.pendingBytes = 0;\n      this.emittedTracks = 0;\n\n      _CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n\n      this.push = function (output) {\n        // buffer incoming captions until the associated video segment\n        // finishes\n        if (output.text) {\n          return this.pendingCaptions.push(output);\n        } // buffer incoming id3 tags until the final flush\n\n\n        if (output.frames) {\n          return this.pendingMetadata.push(output);\n        } // Add this track to the list of pending tracks and store\n        // important information required for the construction of\n        // the final segment\n\n\n        this.pendingTracks.push(output.track);\n        this.pendingBoxes.push(output.boxes);\n        this.pendingBytes += output.boxes.byteLength;\n\n        if (output.track.type === 'video') {\n          this.videoTrack = output.track;\n        }\n\n        if (output.track.type === 'audio') {\n          this.audioTrack = output.track;\n        }\n      };\n    };\n\n    _CoalesceStream.prototype = new stream();\n\n    _CoalesceStream.prototype.flush = function (flushSource) {\n      var offset = 0,\n          event = {\n        captions: [],\n        captionStreams: {},\n        metadata: [],\n        info: {}\n      },\n          caption,\n          id3,\n          initSegment,\n          timelineStartPts = 0,\n          i;\n\n      if (this.pendingTracks.length < this.numberOfTracks) {\n        if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n          // Return because we haven't received a flush from a data-generating\n          // portion of the segment (meaning that we have only recieved meta-data\n          // or captions.)\n          return;\n        } else if (this.remuxTracks) {\n          // Return until we have enough tracks from the pipeline to remux (if we\n          // are remuxing audio and video into a single MP4)\n          return;\n        } else if (this.pendingTracks.length === 0) {\n          // In the case where we receive a flush without any data having been\n          // received we consider it an emitted track for the purposes of coalescing\n          // `done` events.\n          // We do this for the case where there is an audio and video track in the\n          // segment but no audio data. (seen in several playlists with alternate\n          // audio tracks and no audio present in the main TS segments.)\n          this.emittedTracks++;\n\n          if (this.emittedTracks >= this.numberOfTracks) {\n            this.trigger('done');\n            this.emittedTracks = 0;\n          }\n\n          return;\n        }\n      }\n\n      if (this.videoTrack) {\n        timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n        VIDEO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.videoTrack[prop];\n        }, this);\n      } else if (this.audioTrack) {\n        timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n        AUDIO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.audioTrack[prop];\n        }, this);\n      }\n\n      if (this.pendingTracks.length === 1) {\n        event.type = this.pendingTracks[0].type;\n      } else {\n        event.type = 'combined';\n      }\n\n      this.emittedTracks += this.pendingTracks.length;\n      initSegment = mp4Generator.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n      event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n      // and track definitions\n\n      event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n      event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n      for (i = 0; i < this.pendingBoxes.length; i++) {\n        event.data.set(this.pendingBoxes[i], offset);\n        offset += this.pendingBoxes[i].byteLength;\n      } // Translate caption PTS times into second offsets to match the\n      // video timeline for the segment, and add track info\n\n\n      for (i = 0; i < this.pendingCaptions.length; i++) {\n        caption = this.pendingCaptions[i];\n        caption.startTime = caption.startPts;\n\n        if (!this.keepOriginalTimestamps) {\n          caption.startTime -= timelineStartPts;\n        }\n\n        caption.startTime /= 90e3;\n        caption.endTime = caption.endPts;\n\n        if (!this.keepOriginalTimestamps) {\n          caption.endTime -= timelineStartPts;\n        }\n\n        caption.endTime /= 90e3;\n        event.captionStreams[caption.stream] = true;\n        event.captions.push(caption);\n      } // Translate ID3 frame PTS times into second offsets to match the\n      // video timeline for the segment\n\n\n      for (i = 0; i < this.pendingMetadata.length; i++) {\n        id3 = this.pendingMetadata[i];\n        id3.cueTime = id3.pts;\n\n        if (!this.keepOriginalTimestamps) {\n          id3.cueTime -= timelineStartPts;\n        }\n\n        id3.cueTime /= 90e3;\n        event.metadata.push(id3);\n      } // We add this to every single emitted segment even though we only need\n      // it for the first\n\n\n      event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n      this.pendingTracks.length = 0;\n      this.videoTrack = null;\n      this.pendingBoxes.length = 0;\n      this.pendingCaptions.length = 0;\n      this.pendingBytes = 0;\n      this.pendingMetadata.length = 0; // Emit the built segment\n\n      this.trigger('data', event); // Only emit `done` if all tracks have been flushed and emitted\n\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n    };\n    /**\n     * A Stream that expects MP2T binary data as input and produces\n     * corresponding media segments, suitable for use with Media Source\n     * Extension (MSE) implementations that support the ISO BMFF byte\n     * stream format, like Chrome.\n     */\n\n\n    _Transmuxer = function Transmuxer(options) {\n      var self = this,\n          hasFlushed = true,\n          videoTrack,\n          audioTrack;\n\n      _Transmuxer.prototype.init.call(this);\n\n      options = options || {};\n      this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n      this.transmuxPipeline_ = {};\n\n      this.setupAacPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'aac';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.aacStream = new aac();\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.aacStream;\n        pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n        pipeline.metadataStream.on('timestamp', function (frame) {\n          pipeline.aacStream.setTimestamp(frame.timeStamp);\n        });\n        pipeline.aacStream.on('data', function (data) {\n          if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n            audioTrack = audioTrack || {\n              timelineStartInfo: {\n                baseMediaDecodeTime: self.baseMediaDecodeTime\n              },\n              codec: 'adts',\n              type: 'audio'\n            }; // hook up the audio segment stream to the first track with aac data\n\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options); // Set up the final part of the audio pipeline\n\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n          }\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      };\n\n      this.setupTsPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'ts';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.packetStream = new m2ts_1.TransportPacketStream();\n        pipeline.parseStream = new m2ts_1.TransportParseStream();\n        pipeline.elementaryStream = new m2ts_1.ElementaryStream();\n        pipeline.videoTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('video');\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.h264Stream = new H264Stream();\n        pipeline.captionStream = new m2ts_1.CaptionStream();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n        pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream); // !!THIS ORDER IS IMPORTANT!!\n        // demux the streams\n\n        pipeline.elementaryStream.pipe(pipeline.videoTimestampRolloverStream).pipe(pipeline.h264Stream);\n        pipeline.elementaryStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.elementaryStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n        pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n        pipeline.elementaryStream.on('data', function (data) {\n          var i;\n\n          if (data.type === 'metadata') {\n            i = data.tracks.length; // scan the tracks listed in the metadata\n\n            while (i--) {\n              if (!videoTrack && data.tracks[i].type === 'video') {\n                videoTrack = data.tracks[i];\n                videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              } else if (!audioTrack && data.tracks[i].type === 'audio') {\n                audioTrack = data.tracks[i];\n                audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              }\n            } // hook up the video segment stream to the first track with h264 data\n\n\n            if (videoTrack && !pipeline.videoSegmentStream) {\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.videoSegmentStream = new _VideoSegmentStream(videoTrack, options);\n              pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n                // When video emits timelineStartInfo data after a flush, we forward that\n                // info to the AudioSegmentStream, if it exists, because video timeline\n                // data takes precedence.\n                if (audioTrack) {\n                  audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n                  // very earliest DTS we have seen in video because Chrome will\n                  // interpret any video track with a baseMediaDecodeTime that is\n                  // non-zero as a gap.\n\n                  pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n                }\n              });\n              pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n              pipeline.videoSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'videoSegmentTimingInfo'));\n              pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n                if (audioTrack) {\n                  pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n                }\n              }); // Set up the final part of the video pipeline\n\n              pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n            }\n\n            if (audioTrack && !pipeline.audioSegmentStream) {\n              // hook up the audio segment stream to the first track with aac data\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options); // Set up the final part of the audio pipeline\n\n              pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n            }\n          }\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      }; // hook up the segment streams once track metadata is delivered\n\n\n      this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        var pipeline = this.transmuxPipeline_;\n\n        if (!options.keepOriginalTimestamps) {\n          this.baseMediaDecodeTime = baseMediaDecodeTime;\n        }\n\n        if (audioTrack) {\n          audioTrack.timelineStartInfo.dts = undefined;\n          audioTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(audioTrack);\n\n          if (!options.keepOriginalTimestamps) {\n            audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n          }\n\n          if (pipeline.audioTimestampRolloverStream) {\n            pipeline.audioTimestampRolloverStream.discontinuity();\n          }\n        }\n\n        if (videoTrack) {\n          if (pipeline.videoSegmentStream) {\n            pipeline.videoSegmentStream.gopCache_ = [];\n            pipeline.videoTimestampRolloverStream.discontinuity();\n          }\n\n          videoTrack.timelineStartInfo.dts = undefined;\n          videoTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(videoTrack);\n          pipeline.captionStream.reset();\n\n          if (!options.keepOriginalTimestamps) {\n            videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n          }\n        }\n\n        if (pipeline.timedMetadataTimestampRolloverStream) {\n          pipeline.timedMetadataTimestampRolloverStream.discontinuity();\n        }\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        if (audioTrack) {\n          this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n        }\n      };\n\n      this.alignGopsWith = function (gopsToAlignWith) {\n        if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n          this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n        }\n      }; // feed incoming data to the front of the parsing pipeline\n\n\n      this.push = function (data) {\n        if (hasFlushed) {\n          var isAac = isLikelyAacData$1(data);\n\n          if (isAac && this.transmuxPipeline_.type !== 'aac') {\n            this.setupAacPipeline();\n          } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n            this.setupTsPipeline();\n          }\n\n          hasFlushed = false;\n        }\n\n        this.transmuxPipeline_.headOfPipeline.push(data);\n      }; // flush any buffered data\n\n\n      this.flush = function () {\n        hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n        this.transmuxPipeline_.headOfPipeline.flush();\n      }; // Caption data has to be reset when seeking outside buffered range\n\n\n      this.resetCaptions = function () {\n        if (this.transmuxPipeline_.captionStream) {\n          this.transmuxPipeline_.captionStream.reset();\n        }\n      };\n    };\n\n    _Transmuxer.prototype = new stream();\n    var transmuxer = {\n      Transmuxer: _Transmuxer,\n      VideoSegmentStream: _VideoSegmentStream,\n      AudioSegmentStream: _AudioSegmentStream,\n      AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n      VIDEO_PROPERTIES: VIDEO_PROPERTIES,\n      // exported for testing\n      generateVideoSegmentTimingInfo: generateVideoSegmentTimingInfo\n    };\n\n    var inspectMp4,\n        _textifyMp,\n        parseType$2 = probe.parseType,\n        parseMp4Date = function parseMp4Date(seconds) {\n      return new Date(seconds * 1000 - 2082844800000);\n    },\n        parseSampleFlags = function parseSampleFlags(flags) {\n      return {\n        isLeading: (flags[0] & 0x0c) >>> 2,\n        dependsOn: flags[0] & 0x03,\n        isDependedOn: (flags[1] & 0xc0) >>> 6,\n        hasRedundancy: (flags[1] & 0x30) >>> 4,\n        paddingValue: (flags[1] & 0x0e) >>> 1,\n        isNonSyncSample: flags[1] & 0x01,\n        degradationPriority: flags[2] << 8 | flags[3]\n      };\n    },\n        nalParse = function nalParse(avcStream) {\n      var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n          result = [],\n          i,\n          length;\n\n      for (i = 0; i + 4 < avcStream.length; i += length) {\n        length = avcView.getUint32(i);\n        i += 4; // bail if this doesn't appear to be an H264 stream\n\n        if (length <= 0) {\n          result.push('<span style=\\'color:red;\\'>MALFORMED DATA</span>');\n          continue;\n        }\n\n        switch (avcStream[i] & 0x1F) {\n          case 0x01:\n            result.push('slice_layer_without_partitioning_rbsp');\n            break;\n\n          case 0x05:\n            result.push('slice_layer_without_partitioning_rbsp_idr');\n            break;\n\n          case 0x06:\n            result.push('sei_rbsp');\n            break;\n\n          case 0x07:\n            result.push('seq_parameter_set_rbsp');\n            break;\n\n          case 0x08:\n            result.push('pic_parameter_set_rbsp');\n            break;\n\n          case 0x09:\n            result.push('access_unit_delimiter_rbsp');\n            break;\n\n          default:\n            result.push('UNKNOWN NAL - ' + avcStream[i] & 0x1F);\n            break;\n        }\n      }\n\n      return result;\n    },\n        // registry of handlers for individual mp4 box types\n    parse$$1 = {\n      // codingname, not a first-class box type. stsd entries share the\n      // same format as real boxes so the parsing infrastructure can be\n      // shared\n      avc1: function avc1(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          dataReferenceIndex: view.getUint16(6),\n          width: view.getUint16(24),\n          height: view.getUint16(26),\n          horizresolution: view.getUint16(28) + view.getUint16(30) / 16,\n          vertresolution: view.getUint16(32) + view.getUint16(34) / 16,\n          frameCount: view.getUint16(40),\n          depth: view.getUint16(74),\n          config: inspectMp4(data.subarray(78, data.byteLength))\n        };\n      },\n      avcC: function avcC(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          configurationVersion: data[0],\n          avcProfileIndication: data[1],\n          profileCompatibility: data[2],\n          avcLevelIndication: data[3],\n          lengthSizeMinusOne: data[4] & 0x03,\n          sps: [],\n          pps: []\n        },\n            numOfSequenceParameterSets = data[5] & 0x1f,\n            numOfPictureParameterSets,\n            nalSize,\n            offset,\n            i; // iterate past any SPSs\n\n        offset = 6;\n\n        for (i = 0; i < numOfSequenceParameterSets; i++) {\n          nalSize = view.getUint16(offset);\n          offset += 2;\n          result.sps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n          offset += nalSize;\n        } // iterate past any PPSs\n\n\n        numOfPictureParameterSets = data[offset];\n        offset++;\n\n        for (i = 0; i < numOfPictureParameterSets; i++) {\n          nalSize = view.getUint16(offset);\n          offset += 2;\n          result.pps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n          offset += nalSize;\n        }\n\n        return result;\n      },\n      btrt: function btrt(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          bufferSizeDB: view.getUint32(0),\n          maxBitrate: view.getUint32(4),\n          avgBitrate: view.getUint32(8)\n        };\n      },\n      esds: function esds(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          esId: data[6] << 8 | data[7],\n          streamPriority: data[8] & 0x1f,\n          decoderConfig: {\n            objectProfileIndication: data[11],\n            streamType: data[12] >>> 2 & 0x3f,\n            bufferSize: data[13] << 16 | data[14] << 8 | data[15],\n            maxBitrate: data[16] << 24 | data[17] << 16 | data[18] << 8 | data[19],\n            avgBitrate: data[20] << 24 | data[21] << 16 | data[22] << 8 | data[23],\n            decoderConfigDescriptor: {\n              tag: data[24],\n              length: data[25],\n              audioObjectType: data[26] >>> 3 & 0x1f,\n              samplingFrequencyIndex: (data[26] & 0x07) << 1 | data[27] >>> 7 & 0x01,\n              channelConfiguration: data[27] >>> 3 & 0x0f\n            }\n          }\n        };\n      },\n      ftyp: function ftyp(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          majorBrand: parseType$2(data.subarray(0, 4)),\n          minorVersion: view.getUint32(4),\n          compatibleBrands: []\n        },\n            i = 8;\n\n        while (i < data.byteLength) {\n          result.compatibleBrands.push(parseType$2(data.subarray(i, i + 4)));\n          i += 4;\n        }\n\n        return result;\n      },\n      dinf: function dinf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      dref: function dref(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          dataReferences: inspectMp4(data.subarray(8))\n        };\n      },\n      hdlr: function hdlr(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          handlerType: parseType$2(data.subarray(8, 12)),\n          name: ''\n        },\n            i = 8; // parse out the name field\n\n        for (i = 24; i < data.byteLength; i++) {\n          if (data[i] === 0x00) {\n            // the name field is null-terminated\n            i++;\n            break;\n          }\n\n          result.name += String.fromCharCode(data[i]);\n        } // decode UTF-8 to javascript's internal representation\n        // see http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\n\n\n        result.name = decodeURIComponent(escape(result.name));\n        return result;\n      },\n      mdat: function mdat(data) {\n        return {\n          byteLength: data.byteLength,\n          nals: nalParse(data)\n        };\n      },\n      mdhd: function mdhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            language,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          language: ''\n        };\n\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n\n        i += 4; // language is stored as an ISO-639-2/T code in an array of three 5-bit fields\n        // each field is the packed difference between its ASCII value and 0x60\n\n        language = view.getUint16(i);\n        result.language += String.fromCharCode((language >> 10) + 0x60);\n        result.language += String.fromCharCode(((language & 0x03e0) >> 5) + 0x60);\n        result.language += String.fromCharCode((language & 0x1f) + 0x60);\n        return result;\n      },\n      mdia: function mdia(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mfhd: function mfhd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sequenceNumber: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n        };\n      },\n      minf: function minf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      // codingname, not a first-class box type. stsd entries share the\n      // same format as real boxes so the parsing infrastructure can be\n      // shared\n      mp4a: function mp4a(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          // 6 bytes reserved\n          dataReferenceIndex: view.getUint16(6),\n          // 4 + 4 bytes reserved\n          channelcount: view.getUint16(16),\n          samplesize: view.getUint16(18),\n          // 2 bytes pre_defined\n          // 2 bytes reserved\n          samplerate: view.getUint16(24) + view.getUint16(26) / 65536\n        }; // if there are more bytes to process, assume this is an ISO/IEC\n        // 14496-14 MP4AudioSampleEntry and parse the ESDBox\n\n        if (data.byteLength > 28) {\n          result.streamDescriptor = inspectMp4(data.subarray(28))[0];\n        }\n\n        return result;\n      },\n      moof: function moof(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      moov: function moov(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mvex: function mvex(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mvhd: function mvhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n\n        i += 4; // convert fixed-point, base 16 back to a number\n\n        result.rate = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        i += 4;\n        result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n        i += 2;\n        i += 2;\n        i += 2 * 4;\n        result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n        i += 9 * 4;\n        i += 6 * 4;\n        result.nextTrackId = view.getUint32(i);\n        return result;\n      },\n      pdin: function pdin(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          rate: view.getUint32(4),\n          initialDelay: view.getUint32(8)\n        };\n      },\n      sdtp: function sdtp(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n            i;\n\n        for (i = 4; i < data.byteLength; i++) {\n          result.samples.push({\n            dependsOn: (data[i] & 0x30) >> 4,\n            isDependedOn: (data[i] & 0x0c) >> 2,\n            hasRedundancy: data[i] & 0x03\n          });\n        }\n\n        return result;\n      },\n      sidx: function sidx(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          references: [],\n          referenceId: view.getUint32(4),\n          timescale: view.getUint32(8),\n          earliestPresentationTime: view.getUint32(12),\n          firstOffset: view.getUint32(16)\n        },\n            referenceCount = view.getUint16(22),\n            i;\n\n        for (i = 24; referenceCount; i += 12, referenceCount--) {\n          result.references.push({\n            referenceType: (data[i] & 0x80) >>> 7,\n            referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n            subsegmentDuration: view.getUint32(i + 4),\n            startsWithSap: !!(data[i + 8] & 0x80),\n            sapType: (data[i + 8] & 0x70) >>> 4,\n            sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n          });\n        }\n\n        return result;\n      },\n      smhd: function smhd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          balance: data[4] + data[5] / 256\n        };\n      },\n      stbl: function stbl(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      stco: function stco(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          chunkOffsets: []\n        },\n            entryCount = view.getUint32(4),\n            i;\n\n        for (i = 8; entryCount; i += 4, entryCount--) {\n          result.chunkOffsets.push(view.getUint32(i));\n        }\n\n        return result;\n      },\n      stsc: function stsc(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            entryCount = view.getUint32(4),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleToChunks: []\n        },\n            i;\n\n        for (i = 8; entryCount; i += 12, entryCount--) {\n          result.sampleToChunks.push({\n            firstChunk: view.getUint32(i),\n            samplesPerChunk: view.getUint32(i + 4),\n            sampleDescriptionIndex: view.getUint32(i + 8)\n          });\n        }\n\n        return result;\n      },\n      stsd: function stsd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleDescriptions: inspectMp4(data.subarray(8))\n        };\n      },\n      stsz: function stsz(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleSize: view.getUint32(4),\n          entries: []\n        },\n            i;\n\n        for (i = 12; i < data.byteLength; i += 4) {\n          result.entries.push(view.getUint32(i));\n        }\n\n        return result;\n      },\n      stts: function stts(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          timeToSamples: []\n        },\n            entryCount = view.getUint32(4),\n            i;\n\n        for (i = 8; entryCount; i += 8, entryCount--) {\n          result.timeToSamples.push({\n            sampleCount: view.getUint32(i),\n            sampleDelta: view.getUint32(i + 4)\n          });\n        }\n\n        return result;\n      },\n      styp: function styp(data) {\n        return parse$$1.ftyp(data);\n      },\n      tfdt: function tfdt(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          baseMediaDecodeTime: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n        };\n\n        if (result.version === 1) {\n          result.baseMediaDecodeTime *= Math.pow(2, 32);\n          result.baseMediaDecodeTime += data[8] << 24 | data[9] << 16 | data[10] << 8 | data[11];\n        }\n\n        return result;\n      },\n      tfhd: function tfhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4)\n        },\n            baseDataOffsetPresent = result.flags[2] & 0x01,\n            sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n            defaultSampleDurationPresent = result.flags[2] & 0x08,\n            defaultSampleSizePresent = result.flags[2] & 0x10,\n            defaultSampleFlagsPresent = result.flags[2] & 0x20,\n            durationIsEmpty = result.flags[0] & 0x010000,\n            defaultBaseIsMoof = result.flags[0] & 0x020000,\n            i;\n        i = 8;\n\n        if (baseDataOffsetPresent) {\n          i += 4; // truncate top 4 bytes\n          // FIXME: should we read the full 64 bits?\n\n          result.baseDataOffset = view.getUint32(12);\n          i += 4;\n        }\n\n        if (sampleDescriptionIndexPresent) {\n          result.sampleDescriptionIndex = view.getUint32(i);\n          i += 4;\n        }\n\n        if (defaultSampleDurationPresent) {\n          result.defaultSampleDuration = view.getUint32(i);\n          i += 4;\n        }\n\n        if (defaultSampleSizePresent) {\n          result.defaultSampleSize = view.getUint32(i);\n          i += 4;\n        }\n\n        if (defaultSampleFlagsPresent) {\n          result.defaultSampleFlags = view.getUint32(i);\n        }\n\n        if (durationIsEmpty) {\n          result.durationIsEmpty = true;\n        }\n\n        if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n          result.baseDataOffsetIsMoof = true;\n        }\n\n        return result;\n      },\n      tkhd: function tkhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 4;\n          result.trackId = view.getUint32(i);\n          i += 4;\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.trackId = view.getUint32(i);\n          i += 4;\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n\n        i += 4;\n        i += 2 * 4;\n        result.layer = view.getUint16(i);\n        i += 2;\n        result.alternateGroup = view.getUint16(i);\n        i += 2; // convert fixed-point, base 16 back to a number\n\n        result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n        i += 2;\n        i += 2;\n        result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n        i += 9 * 4;\n        result.width = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        i += 4;\n        result.height = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        return result;\n      },\n      traf: function traf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      trak: function trak(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      trex: function trex(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4),\n          defaultSampleDescriptionIndex: view.getUint32(8),\n          defaultSampleDuration: view.getUint32(12),\n          defaultSampleSize: view.getUint32(16),\n          sampleDependsOn: data[20] & 0x03,\n          sampleIsDependedOn: (data[21] & 0xc0) >> 6,\n          sampleHasRedundancy: (data[21] & 0x30) >> 4,\n          samplePaddingValue: (data[21] & 0x0e) >> 1,\n          sampleIsDifferenceSample: !!(data[21] & 0x01),\n          sampleDegradationPriority: view.getUint16(22)\n        };\n      },\n      trun: function trun(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n            view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            // Flag interpretation\n        dataOffsetPresent = result.flags[2] & 0x01,\n            // compare with 2nd byte of 0x1\n        firstSampleFlagsPresent = result.flags[2] & 0x04,\n            // compare with 2nd byte of 0x4\n        sampleDurationPresent = result.flags[1] & 0x01,\n            // compare with 2nd byte of 0x100\n        sampleSizePresent = result.flags[1] & 0x02,\n            // compare with 2nd byte of 0x200\n        sampleFlagsPresent = result.flags[1] & 0x04,\n            // compare with 2nd byte of 0x400\n        sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\n            // compare with 2nd byte of 0x800\n        sampleCount = view.getUint32(4),\n            offset = 8,\n            sample;\n\n        if (dataOffsetPresent) {\n          // 32 bit signed integer\n          result.dataOffset = view.getInt32(offset);\n          offset += 4;\n        } // Overrides the flags for the first sample only. The order of\n        // optional values will be: duration, size, compositionTimeOffset\n\n\n        if (firstSampleFlagsPresent && sampleCount) {\n          sample = {\n            flags: parseSampleFlags(data.subarray(offset, offset + 4))\n          };\n          offset += 4;\n\n          if (sampleDurationPresent) {\n            sample.duration = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleSizePresent) {\n            sample.size = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleCompositionTimeOffsetPresent) {\n            // Note: this should be a signed int if version is 1\n            sample.compositionTimeOffset = view.getUint32(offset);\n            offset += 4;\n          }\n\n          result.samples.push(sample);\n          sampleCount--;\n        }\n\n        while (sampleCount--) {\n          sample = {};\n\n          if (sampleDurationPresent) {\n            sample.duration = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleSizePresent) {\n            sample.size = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleFlagsPresent) {\n            sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n            offset += 4;\n          }\n\n          if (sampleCompositionTimeOffsetPresent) {\n            // Note: this should be a signed int if version is 1\n            sample.compositionTimeOffset = view.getUint32(offset);\n            offset += 4;\n          }\n\n          result.samples.push(sample);\n        }\n\n        return result;\n      },\n      'url ': function url(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n      },\n      vmhd: function vmhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          graphicsmode: view.getUint16(4),\n          opcolor: new Uint16Array([view.getUint16(6), view.getUint16(8), view.getUint16(10)])\n        };\n      }\n    };\n    /**\n     * Return a javascript array of box objects parsed from an ISO base\n     * media file.\n     * @param data {Uint8Array} the binary data of the media to be inspected\n     * @return {array} a javascript array of potentially nested box objects\n     */\n\n\n    inspectMp4 = function inspectMp4(data) {\n      var i = 0,\n          result = [],\n          view,\n          size,\n          type,\n          end,\n          box; // Convert data from Uint8Array to ArrayBuffer, to follow Dataview API\n\n      var ab = new ArrayBuffer(data.length);\n      var v = new Uint8Array(ab);\n\n      for (var z = 0; z < data.length; ++z) {\n        v[z] = data[z];\n      }\n\n      view = new DataView(ab);\n\n      while (i < data.byteLength) {\n        // parse box data\n        size = view.getUint32(i);\n        type = parseType$2(data.subarray(i + 4, i + 8));\n        end = size > 1 ? i + size : data.byteLength; // parse type-specific data\n\n        box = (parse$$1[type] || function (data) {\n          return {\n            data: data\n          };\n        })(data.subarray(i + 8, end));\n\n        box.size = size;\n        box.type = type; // store this box and move to the next\n\n        result.push(box);\n        i = end;\n      }\n\n      return result;\n    };\n    /**\n     * Returns a textual representation of the javascript represtentation\n     * of an MP4 file. You can use it as an alternative to\n     * JSON.stringify() to compare inspected MP4s.\n     * @param inspectedMp4 {array} the parsed array of boxes in an MP4\n     * file\n     * @param depth {number} (optional) the number of ancestor boxes of\n     * the elements of inspectedMp4. Assumed to be zero if unspecified.\n     * @return {string} a text representation of the parsed MP4\n     */\n\n\n    _textifyMp = function textifyMp4(inspectedMp4, depth) {\n      var indent;\n      depth = depth || 0;\n      indent = new Array(depth * 2 + 1).join(' '); // iterate over all the boxes\n\n      return inspectedMp4.map(function (box, index) {\n        // list the box type first at the current indentation level\n        return indent + box.type + '\\n' + // the type is already included and handle child boxes separately\n        Object.keys(box).filter(function (key) {\n          return key !== 'type' && key !== 'boxes'; // output all the box properties\n        }).map(function (key) {\n          var prefix = indent + '  ' + key + ': ',\n              value = box[key]; // print out raw bytes as hexademical\n\n          if (value instanceof Uint8Array || value instanceof Uint32Array) {\n            var bytes = Array.prototype.slice.call(new Uint8Array(value.buffer, value.byteOffset, value.byteLength)).map(function (_byte) {\n              return ' ' + ('00' + _byte.toString(16)).slice(-2);\n            }).join('').match(/.{1,24}/g);\n\n            if (!bytes) {\n              return prefix + '<>';\n            }\n\n            if (bytes.length === 1) {\n              return prefix + '<' + bytes.join('').slice(1) + '>';\n            }\n\n            return prefix + '<\\n' + bytes.map(function (line) {\n              return indent + '  ' + line;\n            }).join('\\n') + '\\n' + indent + '  >';\n          } // stringify generic objects\n\n\n          return prefix + JSON.stringify(value, null, 2).split('\\n').map(function (line, index) {\n            if (index === 0) {\n              return line;\n            }\n\n            return indent + '  ' + line;\n          }).join('\\n');\n        }).join('\\n') + ( // recursively textify the child boxes\n        box.boxes ? '\\n' + _textifyMp(box.boxes, depth + 1) : '');\n      }).join('\\n');\n    };\n\n    var mp4Inspector$$1 = {\n      inspect: inspectMp4,\n      textify: _textifyMp,\n      parseTfdt: parse$$1.tfdt,\n      parseHdlr: parse$$1.hdlr,\n      parseTfhd: parse$$1.tfhd,\n      parseTrun: parse$$1.trun,\n      parseSidx: parse$$1.sidx\n    };\n    var discardEmulationPreventionBytes$1 = captionPacketParser.discardEmulationPreventionBytes;\n    var CaptionStream$1 = captionStream.CaptionStream;\n    /**\n      * Maps an offset in the mdat to a sample based on the the size of the samples.\n      * Assumes that `parseSamples` has been called first.\n      *\n      * @param {Number} offset - The offset into the mdat\n      * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n      * @return {?Object} The matching sample, or null if no match was found.\n      *\n      * @see ISO-BMFF-12/2015, Section 8.8.8\n     **/\n\n    var mapToSample = function mapToSample(offset, samples) {\n      var approximateOffset = offset;\n\n      for (var i = 0; i < samples.length; i++) {\n        var sample = samples[i];\n\n        if (approximateOffset < sample.size) {\n          return sample;\n        }\n\n        approximateOffset -= sample.size;\n      }\n\n      return null;\n    };\n    /**\n      * Finds SEI nal units contained in a Media Data Box.\n      * Assumes that `parseSamples` has been called first.\n      *\n      * @param {Uint8Array} avcStream - The bytes of the mdat\n      * @param {Object[]} samples - The samples parsed out by `parseSamples`\n      * @param {Number} trackId - The trackId of this video track\n      * @return {Object[]} seiNals - the parsed SEI NALUs found.\n      *   The contents of the seiNal should match what is expected by\n      *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n      *\n      * @see ISO-BMFF-12/2015, Section 8.1.1\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n     **/\n\n\n    var findSeiNals = function findSeiNals(avcStream, samples, trackId) {\n      var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n          result = [],\n          seiNal,\n          i,\n          length,\n          lastMatchedSample;\n\n      for (i = 0; i + 4 < avcStream.length; i += length) {\n        length = avcView.getUint32(i);\n        i += 4; // Bail if this doesn't appear to be an H264 stream\n\n        if (length <= 0) {\n          continue;\n        }\n\n        switch (avcStream[i] & 0x1F) {\n          case 0x06:\n            var data = avcStream.subarray(i + 1, i + 1 + length);\n            var matchingSample = mapToSample(i, samples);\n            seiNal = {\n              nalUnitType: 'sei_rbsp',\n              size: length,\n              data: data,\n              escapedRBSP: discardEmulationPreventionBytes$1(data),\n              trackId: trackId\n            };\n\n            if (matchingSample) {\n              seiNal.pts = matchingSample.pts;\n              seiNal.dts = matchingSample.dts;\n              lastMatchedSample = matchingSample;\n            } else {\n              // If a matching sample cannot be found, use the last\n              // sample's values as they should be as close as possible\n              seiNal.pts = lastMatchedSample.pts;\n              seiNal.dts = lastMatchedSample.dts;\n            }\n\n            result.push(seiNal);\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      return result;\n    };\n    /**\n      * Parses sample information out of Track Run Boxes and calculates\n      * the absolute presentation and decode timestamps of each sample.\n      *\n      * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n      * @param {Number} baseMediaDecodeTime - base media decode time from tfdt\n          @see ISO-BMFF-12/2015, Section 8.8.12\n      * @param {Object} tfhd - The parsed Track Fragment Header\n      *   @see inspect.parseTfhd\n      * @return {Object[]} the parsed samples\n      *\n      * @see ISO-BMFF-12/2015, Section 8.8.8\n     **/\n\n\n    var parseSamples = function parseSamples(truns, baseMediaDecodeTime, tfhd) {\n      var currentDts = baseMediaDecodeTime;\n      var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n      var defaultSampleSize = tfhd.defaultSampleSize || 0;\n      var trackId = tfhd.trackId;\n      var allSamples = [];\n      truns.forEach(function (trun) {\n        // Note: We currently do not parse the sample table as well\n        // as the trun. It's possible some sources will require this.\n        // moov > trak > mdia > minf > stbl\n        var trackRun = mp4Inspector$$1.parseTrun(trun);\n        var samples = trackRun.samples;\n        samples.forEach(function (sample) {\n          if (sample.duration === undefined) {\n            sample.duration = defaultSampleDuration;\n          }\n\n          if (sample.size === undefined) {\n            sample.size = defaultSampleSize;\n          }\n\n          sample.trackId = trackId;\n          sample.dts = currentDts;\n\n          if (sample.compositionTimeOffset === undefined) {\n            sample.compositionTimeOffset = 0;\n          }\n\n          sample.pts = currentDts + sample.compositionTimeOffset;\n          currentDts += sample.duration;\n        });\n        allSamples = allSamples.concat(samples);\n      });\n      return allSamples;\n    };\n    /**\n      * Parses out caption nals from an FMP4 segment's video tracks.\n      *\n      * @param {Uint8Array} segment - The bytes of a single segment\n      * @param {Number} videoTrackId - The trackId of a video track in the segment\n      * @return {Object.<Number, Object[]>} A mapping of video trackId to\n      *   a list of seiNals found in that track\n     **/\n\n\n    var parseCaptionNals = function parseCaptionNals(segment, videoTrackId) {\n      // To get the samples\n      var trafs = probe.findBox(segment, ['moof', 'traf']); // To get SEI NAL units\n\n      var mdats = probe.findBox(segment, ['mdat']);\n      var captionNals = {};\n      var mdatTrafPairs = []; // Pair up each traf with a mdat as moofs and mdats are in pairs\n\n      mdats.forEach(function (mdat, index) {\n        var matchingTraf = trafs[index];\n        mdatTrafPairs.push({\n          mdat: mdat,\n          traf: matchingTraf\n        });\n      });\n      mdatTrafPairs.forEach(function (pair) {\n        var mdat = pair.mdat;\n        var traf = pair.traf;\n        var tfhd = probe.findBox(traf, ['tfhd']); // Exactly 1 tfhd per traf\n\n        var headerInfo = mp4Inspector$$1.parseTfhd(tfhd[0]);\n        var trackId = headerInfo.trackId;\n        var tfdt = probe.findBox(traf, ['tfdt']); // Either 0 or 1 tfdt per traf\n\n        var baseMediaDecodeTime = tfdt.length > 0 ? mp4Inspector$$1.parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\n        var truns = probe.findBox(traf, ['trun']);\n        var samples;\n        var seiNals; // Only parse video data for the chosen video track\n\n        if (videoTrackId === trackId && truns.length > 0) {\n          samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n          seiNals = findSeiNals(mdat, samples, trackId);\n\n          if (!captionNals[trackId]) {\n            captionNals[trackId] = [];\n          }\n\n          captionNals[trackId] = captionNals[trackId].concat(seiNals);\n        }\n      });\n      return captionNals;\n    };\n    /**\n      * Parses out inband captions from an MP4 container and returns\n      * caption objects that can be used by WebVTT and the TextTrack API.\n      * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n      * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n      * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n      *\n      * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n      * @param {Number} trackId - The id of the video track to parse\n      * @param {Number} timescale - The timescale for the video track from the init segment\n      *\n      * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n      * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n      * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n      * @return {String} parsedCaptions[].text - The visible content of the caption\n     **/\n\n\n    var parseEmbeddedCaptions = function parseEmbeddedCaptions(segment, trackId, timescale) {\n      var seiNals;\n\n      if (!trackId) {\n        return null;\n      }\n\n      seiNals = parseCaptionNals(segment, trackId);\n      return {\n        seiNals: seiNals[trackId],\n        timescale: timescale\n      };\n    };\n    /**\n      * Converts SEI NALUs into captions that can be used by video.js\n     **/\n\n\n    var CaptionParser$$1 = function CaptionParser$$1() {\n      var isInitialized = false;\n      var captionStream$$1; // Stores segments seen before trackId and timescale are set\n\n      var segmentCache; // Stores video track ID of the track being parsed\n\n      var trackId; // Stores the timescale of the track being parsed\n\n      var timescale; // Stores captions parsed so far\n\n      var parsedCaptions;\n      /**\n        * A method to indicate whether a CaptionParser has been initalized\n        * @returns {Boolean}\n       **/\n\n      this.isInitialized = function () {\n        return isInitialized;\n      };\n      /**\n        * Initializes the underlying CaptionStream, SEI NAL parsing\n        * and management, and caption collection\n       **/\n\n\n      this.init = function () {\n        captionStream$$1 = new CaptionStream$1();\n        isInitialized = true; // Collect dispatched captions\n\n        captionStream$$1.on('data', function (event) {\n          // Convert to seconds in the source's timescale\n          event.startTime = event.startPts / timescale;\n          event.endTime = event.endPts / timescale;\n          parsedCaptions.captions.push(event);\n          parsedCaptions.captionStreams[event.stream] = true;\n        });\n      };\n      /**\n        * Determines if a new video track will be selected\n        * or if the timescale changed\n        * @return {Boolean}\n       **/\n\n\n      this.isNewInit = function (videoTrackIds, timescales) {\n        if (videoTrackIds && videoTrackIds.length === 0 || timescales && typeof timescales === 'object' && Object.keys(timescales).length === 0) {\n          return false;\n        }\n\n        return trackId !== videoTrackIds[0] || timescale !== timescales[trackId];\n      };\n      /**\n        * Parses out SEI captions and interacts with underlying\n        * CaptionStream to return dispatched captions\n        *\n        * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n        * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n        * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n        * @see parseEmbeddedCaptions\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.parse = function (segment, videoTrackIds, timescales) {\n        var parsedData;\n\n        if (!this.isInitialized()) {\n          return null; // This is not likely to be a video segment\n        } else if (!videoTrackIds || !timescales) {\n          return null;\n        } else if (this.isNewInit(videoTrackIds, timescales)) {\n          // Use the first video track only as there is no\n          // mechanism to switch to other video tracks\n          trackId = videoTrackIds[0];\n          timescale = timescales[trackId]; // If an init segment has not been seen yet, hold onto segment\n          // data until we have one\n        } else if (!trackId || !timescale) {\n          segmentCache.push(segment);\n          return null;\n        } // Now that a timescale and trackId is set, parse cached segments\n\n\n        while (segmentCache.length > 0) {\n          var cachedSegment = segmentCache.shift();\n          this.parse(cachedSegment, videoTrackIds, timescales);\n        }\n\n        parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n\n        if (parsedData === null || !parsedData.seiNals) {\n          return null;\n        }\n\n        this.pushNals(parsedData.seiNals); // Force the parsed captions to be dispatched\n\n        this.flushStream();\n        return parsedCaptions;\n      };\n      /**\n        * Pushes SEI NALUs onto CaptionStream\n        * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n        * Assumes that `parseCaptionNals` has been called first\n        * @see m2ts/caption-stream.js\n        **/\n\n\n      this.pushNals = function (nals) {\n        if (!this.isInitialized() || !nals || nals.length === 0) {\n          return null;\n        }\n\n        nals.forEach(function (nal) {\n          captionStream$$1.push(nal);\n        });\n      };\n      /**\n        * Flushes underlying CaptionStream to dispatch processed, displayable captions\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.flushStream = function () {\n        if (!this.isInitialized()) {\n          return null;\n        }\n\n        captionStream$$1.flush();\n      };\n      /**\n        * Reset caption buckets for new data\n       **/\n\n\n      this.clearParsedCaptions = function () {\n        parsedCaptions.captions = [];\n        parsedCaptions.captionStreams = {};\n      };\n      /**\n        * Resets underlying CaptionStream\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.resetCaptionStream = function () {\n        if (!this.isInitialized()) {\n          return null;\n        }\n\n        captionStream$$1.reset();\n      };\n      /**\n        * Convenience method to clear all captions flushed from the\n        * CaptionStream and still being parsed\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.clearAllCaptions = function () {\n        this.clearParsedCaptions();\n        this.resetCaptionStream();\n      };\n      /**\n        * Reset caption parser\n       **/\n\n\n      this.reset = function () {\n        segmentCache = [];\n        trackId = null;\n        timescale = null;\n\n        if (!parsedCaptions) {\n          parsedCaptions = {\n            captions: [],\n            // CC1, CC2, CC3, CC4\n            captionStreams: {}\n          };\n        } else {\n          this.clearParsedCaptions();\n        }\n\n        this.resetCaptionStream();\n      };\n\n      this.reset();\n    };\n\n    var captionParser = CaptionParser$$1;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var mp4 = {\n      generator: mp4Generator,\n      probe: probe,\n      Transmuxer: transmuxer.Transmuxer,\n      AudioSegmentStream: transmuxer.AudioSegmentStream,\n      VideoSegmentStream: transmuxer.VideoSegmentStream,\n      CaptionParser: captionParser\n    };\n\n    var classCallCheck = function classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n    /**\n     * @file transmuxer-worker.js\n     */\n\n    /**\n     * Re-emits transmuxer events by converting them into messages to the\n     * world outside the worker.\n     *\n     * @param {Object} transmuxer the transmuxer to wire events on\n     * @private\n     */\n\n\n    var wireTransmuxerEvents = function wireTransmuxerEvents(self, transmuxer) {\n      transmuxer.on('data', function (segment) {\n        // transfer ownership of the underlying ArrayBuffer\n        // instead of doing a copy to save memory\n        // ArrayBuffers are transferable but generic TypedArrays are not\n        // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n        var initArray = segment.initSegment;\n        segment.initSegment = {\n          data: initArray.buffer,\n          byteOffset: initArray.byteOffset,\n          byteLength: initArray.byteLength\n        };\n        var typedArray = segment.data;\n        segment.data = typedArray.buffer;\n        self.postMessage({\n          action: 'data',\n          segment: segment,\n          byteOffset: typedArray.byteOffset,\n          byteLength: typedArray.byteLength\n        }, [segment.data]);\n      });\n\n      if (transmuxer.captionStream) {\n        transmuxer.captionStream.on('data', function (caption) {\n          self.postMessage({\n            action: 'caption',\n            data: caption\n          });\n        });\n      }\n\n      transmuxer.on('done', function (data) {\n        self.postMessage({\n          action: 'done'\n        });\n      });\n      transmuxer.on('gopInfo', function (gopInfo) {\n        self.postMessage({\n          action: 'gopInfo',\n          gopInfo: gopInfo\n        });\n      });\n      transmuxer.on('videoSegmentTimingInfo', function (videoSegmentTimingInfo) {\n        self.postMessage({\n          action: 'videoSegmentTimingInfo',\n          videoSegmentTimingInfo: videoSegmentTimingInfo\n        });\n      });\n    };\n    /**\n     * All incoming messages route through this hash. If no function exists\n     * to handle an incoming message, then we ignore the message.\n     *\n     * @class MessageHandlers\n     * @param {Object} options the options to initialize with\n     */\n\n\n    var MessageHandlers = function () {\n      function MessageHandlers(self, options) {\n        classCallCheck(this, MessageHandlers);\n        this.options = options || {};\n        this.self = self;\n        this.init();\n      }\n      /**\n       * initialize our web worker and wire all the events.\n       */\n\n\n      createClass(MessageHandlers, [{\n        key: 'init',\n        value: function init() {\n          if (this.transmuxer) {\n            this.transmuxer.dispose();\n          }\n\n          this.transmuxer = new mp4.Transmuxer(this.options);\n          wireTransmuxerEvents(this.self, this.transmuxer);\n        }\n        /**\n         * Adds data (a ts segment) to the start of the transmuxer pipeline for\n         * processing.\n         *\n         * @param {ArrayBuffer} data data to push into the muxer\n         */\n\n      }, {\n        key: 'push',\n        value: function push(data) {\n          // Cast array buffer to correct type for transmuxer\n          var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n          this.transmuxer.push(segment);\n        }\n        /**\n         * Recreate the transmuxer so that the next segment added via `push`\n         * start with a fresh transmuxer.\n         */\n\n      }, {\n        key: 'reset',\n        value: function reset() {\n          this.init();\n        }\n        /**\n         * Set the value that will be used as the `baseMediaDecodeTime` time for the\n         * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n         * set relative to the first based on the PTS values.\n         *\n         * @param {Object} data used to set the timestamp offset in the muxer\n         */\n\n      }, {\n        key: 'setTimestampOffset',\n        value: function setTimestampOffset(data) {\n          var timestampOffset = data.timestampOffset || 0;\n          this.transmuxer.setBaseMediaDecodeTime(Math.round(timestampOffset * 90000));\n        }\n      }, {\n        key: 'setAudioAppendStart',\n        value: function setAudioAppendStart(data) {\n          this.transmuxer.setAudioAppendStart(Math.ceil(data.appendStart * 90000));\n        }\n        /**\n         * Forces the pipeline to finish processing the last segment and emit it's\n         * results.\n         *\n         * @param {Object} data event data, not really used\n         */\n\n      }, {\n        key: 'flush',\n        value: function flush(data) {\n          this.transmuxer.flush();\n        }\n      }, {\n        key: 'resetCaptions',\n        value: function resetCaptions() {\n          this.transmuxer.resetCaptions();\n        }\n      }, {\n        key: 'alignGopsWith',\n        value: function alignGopsWith(data) {\n          this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n        }\n      }]);\n      return MessageHandlers;\n    }();\n    /**\n     * Our web wroker interface so that things can talk to mux.js\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self the scope for the web worker\n     */\n\n\n    var TransmuxerWorker = function TransmuxerWorker(self) {\n      self.onmessage = function (event) {\n        if (event.data.action === 'init' && event.data.options) {\n          this.messageHandlers = new MessageHandlers(self, event.data.options);\n          return;\n        }\n\n        if (!this.messageHandlers) {\n          this.messageHandlers = new MessageHandlers(self);\n        }\n\n        if (event.data && event.data.action && event.data.action !== 'init') {\n          if (this.messageHandlers[event.data.action]) {\n            this.messageHandlers[event.data.action](event.data);\n          }\n        }\n      };\n    };\n\n    var transmuxerWorker = new TransmuxerWorker(self);\n    return transmuxerWorker;\n  }();\n});\n/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */\n// Default codec parameters if none were provided for video and/or audio\n\nvar defaultCodecs = {\n  videoCodec: 'avc1',\n  videoObjectTypeIndicator: '.4d400d',\n  // AAC-LC\n  audioProfile: '2'\n};\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {Array} codecs an array of codec strings to fix\n * @return {Array} the translated codec array\n * @private\n */\n\nvar translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(function (codec) {\n    return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n      var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n      var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n      return 'avc1.' + profileHex + '00' + avcLevelHex;\n    });\n  });\n};\n/**\n * Parses a codec string to retrieve the number of codecs specified,\n * the video codec and object type indicator, and the audio profile.\n */\n\n\nvar parseCodecs = function parseCodecs() {\n  var codecs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var result = {\n    codecCount: 0\n  };\n  var parsed = void 0;\n  result.codecCount = codecs.split(',').length;\n  result.codecCount = result.codecCount || 2; // parse the video codec\n\n  parsed = /(^|\\s|,)+(avc[13])([^ ,]*)/i.exec(codecs);\n\n  if (parsed) {\n    result.videoCodec = parsed[2];\n    result.videoObjectTypeIndicator = parsed[3];\n  } // parse the last field of the audio codec\n\n\n  result.audioProfile = /(^|\\s|,)+mp4a.[0-9A-Fa-f]+\\.([0-9A-Fa-f]+)/i.exec(codecs);\n  result.audioProfile = result.audioProfile && result.audioProfile[2];\n  return result;\n};\n/**\n * Replace codecs in the codec string with the old apple-style `avc1.<dd>.<dd>` to the\n * standard `avc1.<hhhhhh>`.\n *\n * @param codecString {String} the codec string\n * @return {String} the codec string with old apple-style codecs replaced\n *\n * @private\n */\n\n\nvar mapLegacyAvcCodecs = function mapLegacyAvcCodecs(codecString) {\n  return codecString.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (match) {\n    return translateLegacyCodecs([match])[0];\n  });\n};\n/**\n * Build a media mime-type string from a set of parameters\n * @param {String} type either 'audio' or 'video'\n * @param {String} container either 'mp2t' or 'mp4'\n * @param {Array} codecs an array of codec strings to add\n * @return {String} a valid media mime-type\n */\n\n\nvar makeMimeTypeString = function makeMimeTypeString(type, container, codecs) {\n  // The codecs array is filtered so that falsey values are\n  // dropped and don't cause Array#join to create spurious\n  // commas\n  return type + '/' + container + '; codecs=\"' + codecs.filter(function (c) {\n    return !!c;\n  }).join(', ') + '\"';\n};\n/**\n * Returns the type container based on information in the playlist\n * @param {Playlist} media the current media playlist\n * @return {String} a valid media container type\n */\n\n\nvar getContainerType = function getContainerType(media) {\n  // An initialization segment means the media playlist is an iframe\n  // playlist or is using the mp4 container. We don't currently\n  // support iframe playlists, so assume this is signalling mp4\n  // fragments.\n  if (media.segments && media.segments.length && media.segments[0].map) {\n    return 'mp4';\n  }\n\n  return 'mp2t';\n};\n/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */\n\n\nvar getCodecs = function getCodecs(media) {\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  var mediaAttributes = media.attributes || {};\n\n  if (mediaAttributes.CODECS) {\n    return parseCodecs(mediaAttributes.CODECS);\n  }\n\n  return defaultCodecs;\n};\n\nvar audioProfileFromDefault = function audioProfileFromDefault(master, audioGroupId) {\n  if (!master.mediaGroups.AUDIO || !audioGroupId) {\n    return null;\n  }\n\n  var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n  if (!audioGroup) {\n    return null;\n  }\n\n  for (var name in audioGroup) {\n    var audioType = audioGroup[name];\n\n    if (audioType[\"default\"] && audioType.playlists) {\n      // codec should be the same for all playlists within the audio type\n      return parseCodecs(audioType.playlists[0].attributes.CODECS).audioProfile;\n    }\n  }\n\n  return null;\n};\n/**\n * Calculates the MIME type strings for a working configuration of\n * SourceBuffers to play variant streams in a master playlist. If\n * there is no possible working configuration, an empty array will be\n * returned.\n *\n * @param master {Object} the m3u8 object for the master playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Array} the MIME type strings. If the array has more than\n * one entry, the first element should be applied to the video\n * SourceBuffer and the second to the audio SourceBuffer.\n *\n * @private\n */\n\n\nvar mimeTypesForPlaylist = function mimeTypesForPlaylist(master, media) {\n  var containerType = getContainerType(media);\n  var codecInfo = getCodecs(media);\n  var mediaAttributes = media.attributes || {}; // Default condition for a traditional HLS (no demuxed audio/video)\n\n  var isMuxed = true;\n  var isMaat = false;\n\n  if (!media) {\n    // Not enough information\n    return [];\n  }\n\n  if (master.mediaGroups.AUDIO && mediaAttributes.AUDIO) {\n    var audioGroup = master.mediaGroups.AUDIO[mediaAttributes.AUDIO]; // Handle the case where we are in a multiple-audio track scenario\n\n    if (audioGroup) {\n      isMaat = true; // Start with the everything demuxed then...\n\n      isMuxed = false; // ...check to see if any audio group tracks are muxed (ie. lacking a uri)\n\n      for (var groupId in audioGroup) {\n        // either a uri is present (if the case of HLS and an external playlist), or\n        // playlists is present (in the case of DASH where we don't have external audio\n        // playlists)\n        if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n          isMuxed = true;\n          break;\n        }\n      }\n    }\n  } // HLS with multiple-audio tracks must always get an audio codec.\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\n\n\n  if (isMaat && !codecInfo.audioProfile) {\n    if (!isMuxed) {\n      // It is possible for codecs to be specified on the audio media group playlist but\n      // not on the rendition playlist. This is mostly the case for DASH, where audio and\n      // video are always separate (and separately specified).\n      codecInfo.audioProfile = audioProfileFromDefault(master, mediaAttributes.AUDIO);\n    }\n\n    if (!codecInfo.audioProfile) {\n      videojs$1.log.warn('Multiple audio tracks present but no audio codec string is specified. ' + 'Attempting to use the default audio codec (mp4a.40.2)');\n      codecInfo.audioProfile = defaultCodecs.audioProfile;\n    }\n  } // Generate the final codec strings from the codec object generated above\n\n\n  var codecStrings = {};\n\n  if (codecInfo.videoCodec) {\n    codecStrings.video = '' + codecInfo.videoCodec + codecInfo.videoObjectTypeIndicator;\n  }\n\n  if (codecInfo.audioProfile) {\n    codecStrings.audio = 'mp4a.40.' + codecInfo.audioProfile;\n  } // Finally, make and return an array with proper mime-types depending on\n  // the configuration\n\n\n  var justAudio = makeMimeTypeString('audio', containerType, [codecStrings.audio]);\n  var justVideo = makeMimeTypeString('video', containerType, [codecStrings.video]);\n  var bothVideoAudio = makeMimeTypeString('video', containerType, [codecStrings.video, codecStrings.audio]);\n\n  if (isMaat) {\n    if (!isMuxed && codecStrings.video) {\n      return [justVideo, justAudio];\n    }\n\n    if (!isMuxed && !codecStrings.video) {\n      // There is no muxed content and no video codec string, so this is an audio only\n      // stream with alternate audio.\n      return [justAudio, justAudio];\n    } // There exists the possiblity that this will return a `video/container`\n    // mime-type for the first entry in the array even when there is only audio.\n    // This doesn't appear to be a problem and simplifies the code.\n\n\n    return [bothVideoAudio, justAudio];\n  } // If there is no video codec at all, always just return a single\n  // audio/<container> mime-type\n\n\n  if (!codecStrings.video) {\n    return [justAudio];\n  } // When not using separate audio media groups, audio and video is\n  // *always* muxed\n\n\n  return [bothVideoAudio];\n};\n/**\n * Parse a content type header into a type and parameters\n * object\n *\n * @param {String} type the content type header\n * @return {Object} the parsed content-type\n * @private\n */\n\n\nvar parseContentType = function parseContentType(type) {\n  var object = {\n    type: '',\n    parameters: {}\n  };\n  var parameters = type.trim().split(';'); // first parameter should always be content-type\n\n  object.type = parameters.shift().trim();\n  parameters.forEach(function (parameter) {\n    var pair = parameter.trim().split('=');\n\n    if (pair.length > 1) {\n      var name = pair[0].replace(/\"/g, '').trim();\n      var value = pair[1].replace(/\"/g, '').trim();\n      object.parameters[name] = value;\n    }\n  });\n  return object;\n};\n/**\n * Check if a codec string refers to an audio codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is an audio codec\n * @private\n */\n\n\nvar isAudioCodec = function isAudioCodec(codec) {\n  return /mp4a\\.\\d+.\\d+/i.test(codec);\n};\n/**\n * Check if a codec string refers to a video codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is a video codec\n * @private\n */\n\n\nvar isVideoCodec = function isVideoCodec(codec) {\n  return /avc1\\.[\\da-f]+/i.test(codec);\n};\n/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Number} currentTime\n *        The current time\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */\n\n\nvar gopsSafeToAlignWith = function gopsSafeToAlignWith(buffer, currentTime, mapping) {\n  if (typeof currentTime === 'undefined' || currentTime === null || !buffer.length) {\n    return [];\n  } // pts value for current time + 3 seconds to give a bit more wiggle room\n\n\n  var currentTimePts = Math.ceil((currentTime - mapping + 3) * 90000);\n  var i = void 0;\n\n  for (i = 0; i < buffer.length; i++) {\n    if (buffer[i].pts > currentTimePts) {\n      break;\n    }\n  }\n\n  return buffer.slice(i);\n};\n/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */\n\n\nvar updateGopBuffer = function updateGopBuffer(buffer, gops, replace) {\n  if (!gops.length) {\n    return buffer;\n  }\n\n  if (replace) {\n    // If we are in safe append mode, then completely overwrite the gop buffer\n    // with the most recent appeneded data. This will make sure that when appending\n    // future segments, we only try to align with gops that are both ahead of current\n    // time and in the last segment appended.\n    return gops.slice();\n  }\n\n  var start = gops[0].pts;\n  var i = 0;\n\n  for (i; i < buffer.length; i++) {\n    if (buffer[i].pts >= start) {\n      break;\n    }\n  }\n\n  return buffer.slice(0, i).concat(gops);\n};\n/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */\n\n\nvar removeGopBuffer = function removeGopBuffer(buffer, start, end, mapping) {\n  var startPts = Math.ceil((start - mapping) * 90000);\n  var endPts = Math.ceil((end - mapping) * 90000);\n  var updatedBuffer = buffer.slice();\n  var i = buffer.length;\n\n  while (i--) {\n    if (buffer[i].pts <= endPts) {\n      break;\n    }\n  }\n\n  if (i === -1) {\n    // no removal because end of remove range is before start of buffer\n    return updatedBuffer;\n  }\n\n  var j = i + 1;\n\n  while (j--) {\n    if (buffer[j].pts <= startPts) {\n      break;\n    }\n  } // clamp remove range start to 0 index\n\n\n  j = Math.max(j, 0);\n  updatedBuffer.splice(j, i - j + 1);\n  return updatedBuffer;\n};\n\nvar buffered = function buffered(videoBuffer, audioBuffer, audioDisabled) {\n  var start = null;\n  var end = null;\n  var arity = 0;\n  var extents = [];\n  var ranges = []; // neither buffer has been created yet\n\n  if (!videoBuffer && !audioBuffer) {\n    return videojs$1.createTimeRange();\n  } // only one buffer is configured\n\n\n  if (!videoBuffer) {\n    return audioBuffer.buffered;\n  }\n\n  if (!audioBuffer) {\n    return videoBuffer.buffered;\n  } // both buffers are configured\n\n\n  if (audioDisabled) {\n    return videoBuffer.buffered;\n  } // both buffers are empty\n\n\n  if (videoBuffer.buffered.length === 0 && audioBuffer.buffered.length === 0) {\n    return videojs$1.createTimeRange();\n  } // Handle the case where we have both buffers and create an\n  // intersection of the two\n\n\n  var videoBuffered = videoBuffer.buffered;\n  var audioBuffered = audioBuffer.buffered;\n  var count = videoBuffered.length; // A) Gather up all start and end times\n\n  while (count--) {\n    extents.push({\n      time: videoBuffered.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: videoBuffered.end(count),\n      type: 'end'\n    });\n  }\n\n  count = audioBuffered.length;\n\n  while (count--) {\n    extents.push({\n      time: audioBuffered.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: audioBuffered.end(count),\n      type: 'end'\n    });\n  } // B) Sort them by time\n\n\n  extents.sort(function (a, b) {\n    return a.time - b.time;\n  }); // C) Go along one by one incrementing arity for start and decrementing\n  //    arity for ends\n\n  for (count = 0; count < extents.length; count++) {\n    if (extents[count].type === 'start') {\n      arity++; // D) If arity is ever incremented to 2 we are entering an\n      //    overlapping range\n\n      if (arity === 2) {\n        start = extents[count].time;\n      }\n    } else if (extents[count].type === 'end') {\n      arity--; // E) If arity is ever decremented to 1 we leaving an\n      //    overlapping range\n\n      if (arity === 1) {\n        end = extents[count].time;\n      }\n    } // F) Record overlapping ranges\n\n\n    if (start !== null && end !== null) {\n      ranges.push([start, end]);\n      start = null;\n      end = null;\n    }\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n/**\n * @file virtual-source-buffer.js\n */\n\n\nvar ONE_SECOND_IN_TS = 90000; // We create a wrapper around the SourceBuffer so that we can manage the\n// state of the `updating` property manually. We have to do this because\n// Firefox changes `updating` to false long before triggering `updateend`\n// events and that was causing strange problems in videojs-contrib-hls\n\nvar makeWrappedSourceBuffer = function makeWrappedSourceBuffer(mediaSource, mimeType) {\n  var sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n  var wrapper = Object.create(null);\n  wrapper.updating = false;\n  wrapper.realBuffer_ = sourceBuffer;\n\n  var _loop = function _loop(key) {\n    if (typeof sourceBuffer[key] === 'function') {\n      wrapper[key] = function () {\n        return sourceBuffer[key].apply(sourceBuffer, arguments);\n      };\n    } else if (typeof wrapper[key] === 'undefined') {\n      Object.defineProperty(wrapper, key, {\n        get: function get$$1() {\n          return sourceBuffer[key];\n        },\n        set: function set$$1(v) {\n          return sourceBuffer[key] = v;\n        }\n      });\n    }\n  };\n\n  for (var key in sourceBuffer) {\n    _loop(key);\n  }\n\n  return wrapper;\n};\n/**\n * VirtualSourceBuffers exist so that we can transmux non native formats\n * into a native format, but keep the same api as a native source buffer.\n * It creates a transmuxer, that works in its own thread (a web worker) and\n * that transmuxer muxes the data into a native format. VirtualSourceBuffer will\n * then send all of that data to the naive sourcebuffer so that it is\n * indestinguishable from a natively supported format.\n *\n * @param {HtmlMediaSource} mediaSource the parent mediaSource\n * @param {Array} codecs array of codecs that we will be dealing with\n * @class VirtualSourceBuffer\n * @extends video.js.EventTarget\n */\n\n\nvar VirtualSourceBuffer = function (_videojs$EventTarget) {\n  inherits(VirtualSourceBuffer, _videojs$EventTarget);\n\n  function VirtualSourceBuffer(mediaSource, codecs) {\n    classCallCheck(this, VirtualSourceBuffer);\n\n    var _this = possibleConstructorReturn(this, (VirtualSourceBuffer.__proto__ || Object.getPrototypeOf(VirtualSourceBuffer)).call(this, videojs$1.EventTarget));\n\n    _this.timestampOffset_ = 0;\n    _this.pendingBuffers_ = [];\n    _this.bufferUpdating_ = false;\n    _this.mediaSource_ = mediaSource;\n    _this.codecs_ = codecs;\n    _this.audioCodec_ = null;\n    _this.videoCodec_ = null;\n    _this.audioDisabled_ = false;\n    _this.appendAudioInitSegment_ = true;\n    _this.gopBuffer_ = [];\n    _this.timeMapping_ = 0;\n    _this.safeAppend_ = videojs$1.browser.IE_VERSION >= 11;\n    var options = {\n      remux: false,\n      alignGopsAtEnd: _this.safeAppend_\n    };\n\n    _this.codecs_.forEach(function (codec) {\n      if (isAudioCodec(codec)) {\n        _this.audioCodec_ = codec;\n      } else if (isVideoCodec(codec)) {\n        _this.videoCodec_ = codec;\n      }\n    }); // append muxed segments to their respective native buffers as\n    // soon as they are available\n\n\n    _this.transmuxer_ = new TransmuxWorker();\n\n    _this.transmuxer_.postMessage({\n      action: 'init',\n      options: options\n    });\n\n    _this.transmuxer_.onmessage = function (event) {\n      if (event.data.action === 'data') {\n        return _this.data_(event);\n      }\n\n      if (event.data.action === 'done') {\n        return _this.done_(event);\n      }\n\n      if (event.data.action === 'gopInfo') {\n        return _this.appendGopInfo_(event);\n      }\n\n      if (event.data.action === 'videoSegmentTimingInfo') {\n        return _this.videoSegmentTimingInfo_(event.data.videoSegmentTimingInfo);\n      }\n    }; // this timestampOffset is a property with the side-effect of resetting\n    // baseMediaDecodeTime in the transmuxer on the setter\n\n\n    Object.defineProperty(_this, 'timestampOffset', {\n      get: function get$$1() {\n        return this.timestampOffset_;\n      },\n      set: function set$$1(val) {\n        if (typeof val === 'number' && val >= 0) {\n          this.timestampOffset_ = val;\n          this.appendAudioInitSegment_ = true; // reset gop buffer on timestampoffset as this signals a change in timeline\n\n          this.gopBuffer_.length = 0;\n          this.timeMapping_ = 0; // We have to tell the transmuxer to set the baseMediaDecodeTime to\n          // the desired timestampOffset for the next segment\n\n          this.transmuxer_.postMessage({\n            action: 'setTimestampOffset',\n            timestampOffset: val\n          });\n        }\n      }\n    }); // setting the append window affects both source buffers\n\n    Object.defineProperty(_this, 'appendWindowStart', {\n      get: function get$$1() {\n        return (this.videoBuffer_ || this.audioBuffer_).appendWindowStart;\n      },\n      set: function set$$1(start) {\n        if (this.videoBuffer_) {\n          this.videoBuffer_.appendWindowStart = start;\n        }\n\n        if (this.audioBuffer_) {\n          this.audioBuffer_.appendWindowStart = start;\n        }\n      }\n    }); // this buffer is \"updating\" if either of its native buffers are\n\n    Object.defineProperty(_this, 'updating', {\n      get: function get$$1() {\n        return !!(this.bufferUpdating_ || !this.audioDisabled_ && this.audioBuffer_ && this.audioBuffer_.updating || this.videoBuffer_ && this.videoBuffer_.updating);\n      }\n    }); // the buffered property is the intersection of the buffered\n    // ranges of the native source buffers\n\n    Object.defineProperty(_this, 'buffered', {\n      get: function get$$1() {\n        return buffered(this.videoBuffer_, this.audioBuffer_, this.audioDisabled_);\n      }\n    });\n    return _this;\n  }\n  /**\n   * When we get a data event from the transmuxer\n   * we call this function and handle the data that\n   * was sent to us\n   *\n   * @private\n   * @param {Event} event the data event from the transmuxer\n   */\n\n\n  createClass(VirtualSourceBuffer, [{\n    key: 'data_',\n    value: function data_(event) {\n      var segment = event.data.segment; // Cast ArrayBuffer to TypedArray\n\n      segment.data = new Uint8Array(segment.data, event.data.byteOffset, event.data.byteLength);\n      segment.initSegment = new Uint8Array(segment.initSegment.data, segment.initSegment.byteOffset, segment.initSegment.byteLength);\n      createTextTracksIfNecessary(this, this.mediaSource_, segment); // Add the segments to the pendingBuffers array\n\n      this.pendingBuffers_.push(segment);\n      return;\n    }\n    /**\n     * When we get a done event from the transmuxer\n     * we call this function and we process all\n     * of the pending data that we have been saving in the\n     * data_ function\n     *\n     * @private\n     * @param {Event} event the done event from the transmuxer\n     */\n\n  }, {\n    key: 'done_',\n    value: function done_(event) {\n      // Don't process and append data if the mediaSource is closed\n      if (this.mediaSource_.readyState === 'closed') {\n        this.pendingBuffers_.length = 0;\n        return;\n      } // All buffers should have been flushed from the muxer\n      // start processing anything we have received\n\n\n      this.processPendingSegments_();\n      return;\n    }\n  }, {\n    key: 'videoSegmentTimingInfo_',\n    value: function videoSegmentTimingInfo_(timingInfo) {\n      var timingInfoInSeconds = {\n        start: {\n          decode: timingInfo.start.dts / ONE_SECOND_IN_TS,\n          presentation: timingInfo.start.pts / ONE_SECOND_IN_TS\n        },\n        end: {\n          decode: timingInfo.end.dts / ONE_SECOND_IN_TS,\n          presentation: timingInfo.end.pts / ONE_SECOND_IN_TS\n        },\n        baseMediaDecodeTime: timingInfo.baseMediaDecodeTime / ONE_SECOND_IN_TS\n      };\n\n      if (timingInfo.prependedContentDuration) {\n        timingInfoInSeconds.prependedContentDuration = timingInfo.prependedContentDuration / ONE_SECOND_IN_TS;\n      }\n\n      this.trigger({\n        type: 'videoSegmentTimingInfo',\n        videoSegmentTimingInfo: timingInfoInSeconds\n      });\n    }\n    /**\n     * Create our internal native audio/video source buffers and add\n     * event handlers to them with the following conditions:\n     * 1. they do not already exist on the mediaSource\n     * 2. this VSB has a codec for them\n     *\n     * @private\n     */\n\n  }, {\n    key: 'createRealSourceBuffers_',\n    value: function createRealSourceBuffers_() {\n      var _this2 = this;\n\n      var types = ['audio', 'video'];\n      types.forEach(function (type) {\n        // Don't create a SourceBuffer of this type if we don't have a\n        // codec for it\n        if (!_this2[type + 'Codec_']) {\n          return;\n        } // Do nothing if a SourceBuffer of this type already exists\n\n\n        if (_this2[type + 'Buffer_']) {\n          return;\n        }\n\n        var buffer = null; // If the mediasource already has a SourceBuffer for the codec\n        // use that\n\n        if (_this2.mediaSource_[type + 'Buffer_']) {\n          buffer = _this2.mediaSource_[type + 'Buffer_']; // In multiple audio track cases, the audio source buffer is disabled\n          // on the main VirtualSourceBuffer by the HTMLMediaSource much earlier\n          // than createRealSourceBuffers_ is called to create the second\n          // VirtualSourceBuffer because that happens as a side-effect of\n          // videojs-contrib-hls starting the audioSegmentLoader. As a result,\n          // the audioBuffer is essentially \"ownerless\" and no one will toggle\n          // the `updating` state back to false once the `updateend` event is received\n          //\n          // Setting `updating` to false manually will work around this\n          // situation and allow work to continue\n\n          buffer.updating = false;\n        } else {\n          var codecProperty = type + 'Codec_';\n          var mimeType = type + '/mp4;codecs=\"' + _this2[codecProperty] + '\"';\n          buffer = makeWrappedSourceBuffer(_this2.mediaSource_.nativeMediaSource_, mimeType);\n          _this2.mediaSource_[type + 'Buffer_'] = buffer;\n        }\n\n        _this2[type + 'Buffer_'] = buffer; // Wire up the events to the SourceBuffer\n\n        ['update', 'updatestart', 'updateend'].forEach(function (event) {\n          buffer.addEventListener(event, function () {\n            // if audio is disabled\n            if (type === 'audio' && _this2.audioDisabled_) {\n              return;\n            }\n\n            if (event === 'updateend') {\n              _this2[type + 'Buffer_'].updating = false;\n            }\n\n            var shouldTrigger = types.every(function (t) {\n              // skip checking audio's updating status if audio\n              // is not enabled\n              if (t === 'audio' && _this2.audioDisabled_) {\n                return true;\n              } // if the other type is updating we don't trigger\n\n\n              if (type !== t && _this2[t + 'Buffer_'] && _this2[t + 'Buffer_'].updating) {\n                return false;\n              }\n\n              return true;\n            });\n\n            if (shouldTrigger) {\n              return _this2.trigger(event);\n            }\n          });\n        });\n      });\n    }\n    /**\n     * Emulate the native mediasource function, but our function will\n     * send all of the proposed segments to the transmuxer so that we\n     * can transmux them before we append them to our internal\n     * native source buffers in the correct format.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/appendBuffer\n     * @param {Uint8Array} segment the segment to append to the buffer\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(segment) {\n      // Start the internal \"updating\" state\n      this.bufferUpdating_ = true;\n\n      if (this.audioBuffer_ && this.audioBuffer_.buffered.length) {\n        var audioBuffered = this.audioBuffer_.buffered;\n        this.transmuxer_.postMessage({\n          action: 'setAudioAppendStart',\n          appendStart: audioBuffered.end(audioBuffered.length - 1)\n        });\n      }\n\n      if (this.videoBuffer_) {\n        this.transmuxer_.postMessage({\n          action: 'alignGopsWith',\n          gopsToAlignWith: gopsSafeToAlignWith(this.gopBuffer_, this.mediaSource_.player_ ? this.mediaSource_.player_.currentTime() : null, this.timeMapping_)\n        });\n      }\n\n      this.transmuxer_.postMessage({\n        action: 'push',\n        // Send the typed-array of data as an ArrayBuffer so that\n        // it can be sent as a \"Transferable\" and avoid the costly\n        // memory copy\n        data: segment.buffer,\n        // To recreate the original typed-array, we need information\n        // about what portion of the ArrayBuffer it was a view into\n        byteOffset: segment.byteOffset,\n        byteLength: segment.byteLength\n      }, [segment.buffer]);\n      this.transmuxer_.postMessage({\n        action: 'flush'\n      });\n    }\n    /**\n     * Appends gop information (timing and byteLength) received by the transmuxer for the\n     * gops appended in the last call to appendBuffer\n     *\n     * @param {Event} event\n     *        The gopInfo event from the transmuxer\n     * @param {Array} event.data.gopInfo\n     *        List of gop info to append\n     */\n\n  }, {\n    key: 'appendGopInfo_',\n    value: function appendGopInfo_(event) {\n      this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, event.data.gopInfo, this.safeAppend_);\n    }\n    /**\n     * Emulate the native mediasource function and remove parts\n     * of the buffer from any of our internal buffers that exist\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/remove\n     * @param {Double} start position to start the remove at\n     * @param {Double} end position to end the remove at\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.updating = true;\n        this.videoBuffer_.remove(start, end);\n        this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.updating = true;\n        this.audioBuffer_.remove(start, end);\n      } // Remove Metadata Cues (id3)\n\n\n      removeCuesFromTrack(start, end, this.metadataTrack_); // Remove Any Captions\n\n      if (this.inbandTextTracks_) {\n        for (var track in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n        }\n      }\n    }\n    /**\n     * Process any segments that the muxer has output\n     * Concatenate segments together based on type and append them into\n     * their respective sourceBuffers\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processPendingSegments_',\n    value: function processPendingSegments_() {\n      var sortedSegments = {\n        video: {\n          segments: [],\n          bytes: 0\n        },\n        audio: {\n          segments: [],\n          bytes: 0\n        },\n        captions: [],\n        metadata: []\n      }; // Sort segments into separate video/audio arrays and\n      // keep track of their total byte lengths\n\n      sortedSegments = this.pendingBuffers_.reduce(function (segmentObj, segment) {\n        var type = segment.type;\n        var data = segment.data;\n        var initSegment = segment.initSegment;\n        segmentObj[type].segments.push(data);\n        segmentObj[type].bytes += data.byteLength;\n        segmentObj[type].initSegment = initSegment; // Gather any captions into a single array\n\n        if (segment.captions) {\n          segmentObj.captions = segmentObj.captions.concat(segment.captions);\n        }\n\n        if (segment.info) {\n          segmentObj[type].info = segment.info;\n        } // Gather any metadata into a single array\n\n\n        if (segment.metadata) {\n          segmentObj.metadata = segmentObj.metadata.concat(segment.metadata);\n        }\n\n        return segmentObj;\n      }, sortedSegments); // Create the real source buffers if they don't exist by now since we\n      // finally are sure what tracks are contained in the source\n\n      if (!this.videoBuffer_ && !this.audioBuffer_) {\n        // Remove any codecs that may have been specified by default but\n        // are no longer applicable now\n        if (sortedSegments.video.bytes === 0) {\n          this.videoCodec_ = null;\n        }\n\n        if (sortedSegments.audio.bytes === 0) {\n          this.audioCodec_ = null;\n        }\n\n        this.createRealSourceBuffers_();\n      }\n\n      if (sortedSegments.audio.info) {\n        this.mediaSource_.trigger({\n          type: 'audioinfo',\n          info: sortedSegments.audio.info\n        });\n      }\n\n      if (sortedSegments.video.info) {\n        this.mediaSource_.trigger({\n          type: 'videoinfo',\n          info: sortedSegments.video.info\n        });\n      }\n\n      if (this.appendAudioInitSegment_) {\n        if (!this.audioDisabled_ && this.audioBuffer_) {\n          sortedSegments.audio.segments.unshift(sortedSegments.audio.initSegment);\n          sortedSegments.audio.bytes += sortedSegments.audio.initSegment.byteLength;\n        }\n\n        this.appendAudioInitSegment_ = false;\n      }\n\n      var triggerUpdateend = false; // Merge multiple video and audio segments into one and append\n\n      if (this.videoBuffer_ && sortedSegments.video.bytes) {\n        sortedSegments.video.segments.unshift(sortedSegments.video.initSegment);\n        sortedSegments.video.bytes += sortedSegments.video.initSegment.byteLength;\n        this.concatAndAppendSegments_(sortedSegments.video, this.videoBuffer_);\n      } else if (this.videoBuffer_ && (this.audioDisabled_ || !this.audioBuffer_)) {\n        // The transmuxer did not return any bytes of video, meaning it was all trimmed\n        // for gop alignment. Since we have a video buffer and audio is disabled, updateend\n        // will never be triggered by this source buffer, which will cause contrib-hls\n        // to be stuck forever waiting for updateend. If audio is not disabled, updateend\n        // will be triggered by the audio buffer, which will be sent upwards since the video\n        // buffer will not be in an updating state.\n        triggerUpdateend = true;\n      } // Add text-track data for all\n\n\n      addTextTrackData(this, sortedSegments.captions, sortedSegments.metadata);\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.concatAndAppendSegments_(sortedSegments.audio, this.audioBuffer_);\n      }\n\n      this.pendingBuffers_.length = 0;\n\n      if (triggerUpdateend) {\n        this.trigger('updateend');\n      } // We are no longer in the internal \"updating\" state\n\n\n      this.bufferUpdating_ = false;\n    }\n    /**\n     * Combine all segments into a single Uint8Array and then append them\n     * to the destination buffer\n     *\n     * @param {Object} segmentObj\n     * @param {SourceBuffer} destinationBuffer native source buffer to append data to\n     * @private\n     */\n\n  }, {\n    key: 'concatAndAppendSegments_',\n    value: function concatAndAppendSegments_(segmentObj, destinationBuffer) {\n      var offset = 0;\n      var tempBuffer = void 0;\n\n      if (segmentObj.bytes) {\n        tempBuffer = new Uint8Array(segmentObj.bytes); // Combine the individual segments into one large typed-array\n\n        segmentObj.segments.forEach(function (segment) {\n          tempBuffer.set(segment, offset);\n          offset += segment.byteLength;\n        });\n\n        try {\n          destinationBuffer.updating = true;\n          destinationBuffer.appendBuffer(tempBuffer);\n        } catch (error) {\n          if (this.mediaSource_.player_) {\n            this.mediaSource_.player_.error({\n              code: -3,\n              type: 'APPEND_BUFFER_ERR',\n              message: error.message,\n              originalError: error\n            });\n          }\n        }\n      }\n    }\n    /**\n     * Emulate the native mediasource function. abort any soureBuffer\n     * actions and throw out any un-appended data.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/abort\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.abort();\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.abort();\n      }\n\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'reset'\n        });\n      }\n\n      this.pendingBuffers_.length = 0;\n      this.bufferUpdating_ = false;\n    }\n  }]);\n  return VirtualSourceBuffer;\n}(videojs$1.EventTarget);\n/**\n * @file html-media-source.js\n */\n\n/**\n * Our MediaSource implementation in HTML, mimics native\n * MediaSource where/if possible.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource\n * @class HtmlMediaSource\n * @extends videojs.EventTarget\n */\n\n\nvar HtmlMediaSource = function (_videojs$EventTarget) {\n  inherits(HtmlMediaSource, _videojs$EventTarget);\n\n  function HtmlMediaSource() {\n    classCallCheck(this, HtmlMediaSource);\n\n    var _this = possibleConstructorReturn(this, (HtmlMediaSource.__proto__ || Object.getPrototypeOf(HtmlMediaSource)).call(this));\n\n    var property = void 0;\n    _this.nativeMediaSource_ = new window$1.MediaSource(); // delegate to the native MediaSource's methods by default\n\n    for (property in _this.nativeMediaSource_) {\n      if (!(property in HtmlMediaSource.prototype) && typeof _this.nativeMediaSource_[property] === 'function') {\n        _this[property] = _this.nativeMediaSource_[property].bind(_this.nativeMediaSource_);\n      }\n    } // emulate `duration` and `seekable` until seeking can be\n    // handled uniformly for live streams\n    // see https://github.com/w3c/media-source/issues/5\n\n\n    _this.duration_ = NaN;\n    Object.defineProperty(_this, 'duration', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return this.duration_;\n        }\n\n        return this.nativeMediaSource_.duration;\n      },\n      set: function set$$1(duration) {\n        this.duration_ = duration;\n\n        if (duration !== Infinity) {\n          this.nativeMediaSource_.duration = duration;\n          return;\n        }\n      }\n    });\n    Object.defineProperty(_this, 'seekable', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return videojs$1.createTimeRanges([[0, this.nativeMediaSource_.duration]]);\n        }\n\n        return this.nativeMediaSource_.seekable;\n      }\n    });\n    Object.defineProperty(_this, 'readyState', {\n      get: function get$$1() {\n        return this.nativeMediaSource_.readyState;\n      }\n    });\n    Object.defineProperty(_this, 'activeSourceBuffers', {\n      get: function get$$1() {\n        return this.activeSourceBuffers_;\n      }\n    }); // the list of virtual and native SourceBuffers created by this\n    // MediaSource\n\n    _this.sourceBuffers = [];\n    _this.activeSourceBuffers_ = [];\n    /**\n     * update the list of active source buffers based upon various\n     * imformation from HLS and video.js\n     *\n     * @private\n     */\n\n    _this.updateActiveSourceBuffers_ = function () {\n      // Retain the reference but empty the array\n      _this.activeSourceBuffers_.length = 0; // If there is only one source buffer, then it will always be active and audio will\n      // be disabled based on the codec of the source buffer\n\n      if (_this.sourceBuffers.length === 1) {\n        var sourceBuffer = _this.sourceBuffers[0];\n        sourceBuffer.appendAudioInitSegment_ = true;\n        sourceBuffer.audioDisabled_ = !sourceBuffer.audioCodec_;\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n\n        return;\n      } // There are 2 source buffers, a combined (possibly video only) source buffer and\n      // and an audio only source buffer.\n      // By default, the audio in the combined virtual source buffer is enabled\n      // and the audio-only source buffer (if it exists) is disabled.\n\n\n      var disableCombined = false;\n      var disableAudioOnly = true; // TODO: maybe we can store the sourcebuffers on the track objects?\n      // safari may do something like this\n\n      for (var i = 0; i < _this.player_.audioTracks().length; i++) {\n        var track = _this.player_.audioTracks()[i];\n\n        if (track.enabled && track.kind !== 'main') {\n          // The enabled track is an alternate audio track so disable the audio in\n          // the combined source buffer and enable the audio-only source buffer.\n          disableCombined = true;\n          disableAudioOnly = false;\n          break;\n        }\n      }\n\n      _this.sourceBuffers.forEach(function (sourceBuffer, index) {\n        /* eslinst-disable */\n        // TODO once codecs are required, we can switch to using the codecs to determine\n        //      what stream is the video stream, rather than relying on videoTracks\n\n        /* eslinst-enable */\n        sourceBuffer.appendAudioInitSegment_ = true;\n\n        if (sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // combined\n          sourceBuffer.audioDisabled_ = disableCombined;\n        } else if (sourceBuffer.videoCodec_ && !sourceBuffer.audioCodec_) {\n          // If the \"combined\" source buffer is video only, then we do not want\n          // disable the audio-only source buffer (this is mostly for demuxed\n          // audio and video hls)\n          sourceBuffer.audioDisabled_ = true;\n          disableAudioOnly = false;\n        } else if (!sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // audio only\n          // In the case of audio only with alternate audio and disableAudioOnly is true\n          // this means we want to disable the audio on the alternate audio sourcebuffer\n          // but not the main \"combined\" source buffer. The \"combined\" source buffer is\n          // always at index 0, so this ensures audio won't be disabled in both source\n          // buffers.\n          sourceBuffer.audioDisabled_ = index ? disableAudioOnly : !disableAudioOnly;\n\n          if (sourceBuffer.audioDisabled_) {\n            return;\n          }\n        }\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n      });\n    };\n\n    _this.onPlayerMediachange_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        sourceBuffer.appendAudioInitSegment_ = true;\n      });\n    };\n\n    _this.onHlsReset_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.postMessage({\n            action: 'resetCaptions'\n          });\n        }\n      });\n    };\n\n    _this.onHlsSegmentTimeMapping_ = function (event) {\n      _this.sourceBuffers.forEach(function (buffer) {\n        return buffer.timeMapping_ = event.mapping;\n      });\n    }; // Re-emit MediaSource events on the polyfill\n\n\n    ['sourceopen', 'sourceclose', 'sourceended'].forEach(function (eventName) {\n      this.nativeMediaSource_.addEventListener(eventName, this.trigger.bind(this));\n    }, _this); // capture the associated player when the MediaSource is\n    // successfully attached\n\n    _this.on('sourceopen', function (event) {\n      // Get the player this MediaSource is attached to\n      var video = document.querySelector('[src=\"' + _this.url_ + '\"]');\n\n      if (!video) {\n        return;\n      }\n\n      _this.player_ = videojs$1(video.parentNode);\n\n      if (!_this.player_) {\n        return;\n      } // hls-reset is fired by videojs.Hls on to the tech after the main SegmentLoader\n      // resets its state and flushes the buffer\n\n\n      _this.player_.tech_.on('hls-reset', _this.onHlsReset_); // hls-segment-time-mapping is fired by videojs.Hls on to the tech after the main\n      // SegmentLoader inspects an MTS segment and has an accurate stream to display\n      // time mapping\n\n\n      _this.player_.tech_.on('hls-segment-time-mapping', _this.onHlsSegmentTimeMapping_);\n\n      if (_this.player_.audioTracks && _this.player_.audioTracks()) {\n        _this.player_.audioTracks().on('change', _this.updateActiveSourceBuffers_);\n\n        _this.player_.audioTracks().on('addtrack', _this.updateActiveSourceBuffers_);\n\n        _this.player_.audioTracks().on('removetrack', _this.updateActiveSourceBuffers_);\n      }\n\n      _this.player_.on('mediachange', _this.onPlayerMediachange_);\n    });\n\n    _this.on('sourceended', function (event) {\n      var duration = durationOfVideo(_this.duration);\n\n      for (var i = 0; i < _this.sourceBuffers.length; i++) {\n        var sourcebuffer = _this.sourceBuffers[i];\n        var cues = sourcebuffer.metadataTrack_ && sourcebuffer.metadataTrack_.cues;\n\n        if (cues && cues.length) {\n          cues[cues.length - 1].endTime = duration;\n        }\n      }\n    }); // explicitly terminate any WebWorkers that were created\n    // by SourceHandlers\n\n\n    _this.on('sourceclose', function (event) {\n      this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.terminate();\n        }\n      });\n      this.sourceBuffers.length = 0;\n\n      if (!this.player_) {\n        return;\n      }\n\n      if (this.player_.audioTracks && this.player_.audioTracks()) {\n        this.player_.audioTracks().off('change', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('addtrack', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('removetrack', this.updateActiveSourceBuffers_);\n      } // We can only change this if the player hasn't been disposed of yet\n      // because `off` eventually tries to use the el_ property. If it has\n      // been disposed of, then don't worry about it because there are no\n      // event handlers left to unbind anyway\n\n\n      if (this.player_.el_) {\n        this.player_.off('mediachange', this.onPlayerMediachange_);\n      }\n\n      if (this.player_.tech_ && this.player_.tech_.el_) {\n        this.player_.tech_.off('hls-reset', this.onHlsReset_);\n        this.player_.tech_.off('hls-segment-time-mapping', this.onHlsSegmentTimeMapping_);\n      }\n    });\n\n    return _this;\n  }\n  /**\n   * Add a range that that can now be seeked to.\n   *\n   * @param {Double} start where to start the addition\n   * @param {Double} end where to end the addition\n   * @private\n   */\n\n\n  createClass(HtmlMediaSource, [{\n    key: 'addSeekableRange_',\n    value: function addSeekableRange_(start, end) {\n      var error = void 0;\n\n      if (this.duration !== Infinity) {\n        error = new Error('MediaSource.addSeekableRange() can only be invoked ' + 'when the duration is Infinity');\n        error.name = 'InvalidStateError';\n        error.code = 11;\n        throw error;\n      }\n\n      if (end > this.nativeMediaSource_.duration || isNaN(this.nativeMediaSource_.duration)) {\n        this.nativeMediaSource_.duration = end;\n      }\n    }\n    /**\n     * Add a source buffer to the media source.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/addSourceBuffer\n     * @param {String} type the content-type of the content\n     * @return {Object} the created source buffer\n     */\n\n  }, {\n    key: 'addSourceBuffer',\n    value: function addSourceBuffer(type) {\n      var buffer = void 0;\n      var parsedType = parseContentType(type); // Create a VirtualSourceBuffer to transmux MPEG-2 transport\n      // stream segments into fragmented MP4s\n\n      if (/^(video|audio)\\/mp2t$/i.test(parsedType.type)) {\n        var codecs = [];\n\n        if (parsedType.parameters && parsedType.parameters.codecs) {\n          codecs = parsedType.parameters.codecs.split(',');\n          codecs = translateLegacyCodecs(codecs);\n          codecs = codecs.filter(function (codec) {\n            return isAudioCodec(codec) || isVideoCodec(codec);\n          });\n        }\n\n        if (codecs.length === 0) {\n          codecs = ['avc1.4d400d', 'mp4a.40.2'];\n        }\n\n        buffer = new VirtualSourceBuffer(this, codecs);\n\n        if (this.sourceBuffers.length !== 0) {\n          // If another VirtualSourceBuffer already exists, then we are creating a\n          // SourceBuffer for an alternate audio track and therefore we know that\n          // the source has both an audio and video track.\n          // That means we should trigger the manual creation of the real\n          // SourceBuffers instead of waiting for the transmuxer to return data\n          this.sourceBuffers[0].createRealSourceBuffers_();\n          buffer.createRealSourceBuffers_(); // Automatically disable the audio on the first source buffer if\n          // a second source buffer is ever created\n\n          this.sourceBuffers[0].audioDisabled_ = true;\n        }\n      } else {\n        // delegate to the native implementation\n        buffer = this.nativeMediaSource_.addSourceBuffer(type);\n      }\n\n      this.sourceBuffers.push(buffer);\n      return buffer;\n    }\n  }]);\n  return HtmlMediaSource;\n}(videojs$1.EventTarget);\n/**\n * @file videojs-contrib-media-sources.js\n */\n\n\nvar urlCount = 0; // ------------\n// Media Source\n// ------------\n// store references to the media sources so they can be connected\n// to a video element (a swf object)\n// TODO: can we store this somewhere local to this module?\n\nvideojs$1.mediaSources = {};\n/**\n * Provide a method for a swf object to notify JS that a\n * media source is now open.\n *\n * @param {String} msObjectURL string referencing the MSE Object URL\n * @param {String} swfId the swf id\n */\n\nvar open = function open(msObjectURL, swfId) {\n  var mediaSource = videojs$1.mediaSources[msObjectURL];\n\n  if (mediaSource) {\n    mediaSource.trigger({\n      type: 'sourceopen',\n      swfId: swfId\n    });\n  } else {\n    throw new Error('Media Source not found (Video.js)');\n  }\n};\n/**\n * Check to see if the native MediaSource object exists and supports\n * an MP4 container with both H.264 video and AAC-LC audio.\n *\n * @return {Boolean} if  native media sources are supported\n */\n\n\nvar supportsNativeMediaSources = function supportsNativeMediaSources() {\n  return !!window$1.MediaSource && !!window$1.MediaSource.isTypeSupported && window$1.MediaSource.isTypeSupported('video/mp4;codecs=\"avc1.4d400d,mp4a.40.2\"');\n};\n/**\n * An emulation of the MediaSource API so that we can support\n * native and non-native functionality. returns an instance of\n * HtmlMediaSource.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/MediaSource\n */\n\n\nvar MediaSource = function MediaSource() {\n  this.MediaSource = {\n    open: open,\n    supportsNativeMediaSources: supportsNativeMediaSources\n  };\n\n  if (supportsNativeMediaSources()) {\n    return new HtmlMediaSource();\n  }\n\n  throw new Error('Cannot use create a virtual MediaSource for this video');\n};\n\nMediaSource.open = open;\nMediaSource.supportsNativeMediaSources = supportsNativeMediaSources;\n/**\n * A wrapper around the native URL for our MSE object\n * implementation, this object is exposed under videojs.URL\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/URL\n */\n\nvar URL$1 = {\n  /**\n   * A wrapper around the native createObjectURL for our objects.\n   * This function maps a native or emulated mediaSource to a blob\n   * url so that it can be loaded into video.js\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n   * @param {MediaSource} object the object to create a blob url to\n   */\n  createObjectURL: function createObjectURL(object) {\n    var objectUrlPrefix = 'blob:vjs-media-source/';\n    var url = void 0; // use the native MediaSource to generate an object URL\n\n    if (object instanceof HtmlMediaSource) {\n      url = window$1.URL.createObjectURL(object.nativeMediaSource_);\n      object.url_ = url;\n      return url;\n    } // if the object isn't an emulated MediaSource, delegate to the\n    // native implementation\n\n\n    if (!(object instanceof HtmlMediaSource)) {\n      url = window$1.URL.createObjectURL(object);\n      object.url_ = url;\n      return url;\n    } // build a URL that can be used to map back to the emulated\n    // MediaSource\n\n\n    url = objectUrlPrefix + urlCount;\n    urlCount++; // setup the mapping back to object\n\n    videojs$1.mediaSources[url] = object;\n    return url;\n  }\n};\nvideojs$1.MediaSource = MediaSource;\nvideojs$1.URL = URL$1;\nvar EventTarget$1$1 = videojs$1.EventTarget,\n    mergeOptions$2 = videojs$1.mergeOptions;\n/**\n * Returns a new master manifest that is the result of merging an updated master manifest\n * into the original version.\n *\n * @param {Object} oldMaster\n *        The old parsed mpd object\n * @param {Object} newMaster\n *        The updated parsed mpd object\n * @return {Object}\n *         A new object representing the original master manifest with the updated media\n *         playlists merged in\n */\n\nvar updateMaster$1 = function updateMaster$$1(oldMaster, newMaster) {\n  var noChanges = void 0;\n  var update = mergeOptions$2(oldMaster, {\n    // These are top level properties that can be updated\n    duration: newMaster.duration,\n    minimumUpdatePeriod: newMaster.minimumUpdatePeriod\n  }); // First update the playlists in playlist list\n\n  for (var i = 0; i < newMaster.playlists.length; i++) {\n    var playlistUpdate = updateMaster(update, newMaster.playlists[i]);\n\n    if (playlistUpdate) {\n      update = playlistUpdate;\n    } else {\n      noChanges = true;\n    }\n  } // Then update media group playlists\n\n\n  forEachMediaGroup(newMaster, function (properties, type, group, label) {\n    if (properties.playlists && properties.playlists.length) {\n      var uri = properties.playlists[0].uri;\n\n      var _playlistUpdate = updateMaster(update, properties.playlists[0]);\n\n      if (_playlistUpdate) {\n        update = _playlistUpdate; // update the playlist reference within media groups\n\n        update.mediaGroups[type][group][label].playlists[0] = update.playlists[uri];\n        noChanges = false;\n      }\n    }\n  });\n\n  if (noChanges) {\n    return null;\n  }\n\n  return update;\n};\n\nvar generateSidxKey = function generateSidxKey(sidxInfo) {\n  // should be non-inclusive\n  var sidxByteRangeEnd = sidxInfo.byterange.offset + sidxInfo.byterange.length - 1;\n  return sidxInfo.uri + '-' + sidxInfo.byterange.offset + '-' + sidxByteRangeEnd;\n}; // SIDX should be equivalent if the URI and byteranges of the SIDX match.\n// If the SIDXs have maps, the two maps should match,\n// both `a` and `b` missing SIDXs is considered matching.\n// If `a` or `b` but not both have a map, they aren't matching.\n\n\nvar equivalentSidx = function equivalentSidx(a, b) {\n  var neitherMap = Boolean(!a.map && !b.map);\n  var equivalentMap = neitherMap || Boolean(a.map && b.map && a.map.byterange.offset === b.map.byterange.offset && a.map.byterange.length === b.map.byterange.length);\n  return equivalentMap && a.uri === b.uri && a.byterange.offset === b.byterange.offset && a.byterange.length === b.byterange.length;\n}; // exported for testing\n\n\nvar compareSidxEntry = function compareSidxEntry(playlists, oldSidxMapping) {\n  var newSidxMapping = {};\n\n  for (var uri in playlists) {\n    var playlist = playlists[uri];\n    var currentSidxInfo = playlist.sidx;\n\n    if (currentSidxInfo) {\n      var key = generateSidxKey(currentSidxInfo);\n\n      if (!oldSidxMapping[key]) {\n        break;\n      }\n\n      var savedSidxInfo = oldSidxMapping[key].sidxInfo;\n\n      if (equivalentSidx(savedSidxInfo, currentSidxInfo)) {\n        newSidxMapping[key] = oldSidxMapping[key];\n      }\n    }\n  }\n\n  return newSidxMapping;\n};\n/**\n *  A function that filters out changed items as they need to be requested separately.\n *\n *  The method is exported for testing\n *\n *  @param {Object} masterXml the mpd XML\n *  @param {string} srcUrl the mpd url\n *  @param {Date} clientOffset a time difference between server and client (passed through and not used)\n *  @param {Object} oldSidxMapping the SIDX to compare against\n */\n\n\nvar filterChangedSidxMappings = function filterChangedSidxMappings(masterXml, srcUrl, clientOffset, oldSidxMapping) {\n  // Don't pass current sidx mapping\n  var master = parse(masterXml, {\n    manifestUri: srcUrl,\n    clientOffset: clientOffset\n  });\n  var videoSidx = compareSidxEntry(master.playlists, oldSidxMapping);\n  var mediaGroupSidx = videoSidx;\n  forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n    if (properties.playlists && properties.playlists.length) {\n      var playlists = properties.playlists;\n      mediaGroupSidx = mergeOptions$2(mediaGroupSidx, compareSidxEntry(playlists, oldSidxMapping));\n    }\n  });\n  return mediaGroupSidx;\n}; // exported for testing\n\n\nvar requestSidx_ = function requestSidx_(sidxRange, playlist, xhr, options, finishProcessingFn) {\n  var sidxInfo = {\n    // resolve the segment URL relative to the playlist\n    uri: resolveManifestRedirect(options.handleManifestRedirects, sidxRange.resolvedUri),\n    // resolvedUri: sidxRange.resolvedUri,\n    byterange: sidxRange.byterange,\n    // the segment's playlist\n    playlist: playlist\n  };\n  var sidxRequestOptions = videojs$1.mergeOptions(sidxInfo, {\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(sidxInfo)\n  });\n  return xhr(sidxRequestOptions, finishProcessingFn);\n};\n\nvar DashPlaylistLoader = function (_EventTarget) {\n  inherits(DashPlaylistLoader, _EventTarget); // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n  // playlist loader setups from media groups will expect to be able to pass a playlist\n  // (since there aren't external URLs to media playlists with DASH)\n\n  function DashPlaylistLoader(srcUrlOrPlaylist, hls) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var masterPlaylistLoader = arguments[3];\n    classCallCheck(this, DashPlaylistLoader);\n\n    var _this = possibleConstructorReturn(this, (DashPlaylistLoader.__proto__ || Object.getPrototypeOf(DashPlaylistLoader)).call(this));\n\n    var _options$withCredenti = options.withCredentials,\n        withCredentials = _options$withCredenti === undefined ? false : _options$withCredenti,\n        _options$handleManife = options.handleManifestRedirects,\n        handleManifestRedirects = _options$handleManife === undefined ? false : _options$handleManife;\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n    _this.handleManifestRedirects = handleManifestRedirects;\n\n    if (!srcUrlOrPlaylist) {\n      throw new Error('A non-empty playlist URL or playlist is required');\n    } // event naming?\n\n\n    _this.on('minimumUpdatePeriod', function () {\n      _this.refreshXml_();\n    }); // live playlist staleness timeout\n\n\n    _this.on('mediaupdatetimeout', function () {\n      _this.refreshMedia_(_this.media().uri);\n    });\n\n    _this.state = 'HAVE_NOTHING';\n    _this.loadedPlaylists_ = {}; // initialize the loader state\n    // The masterPlaylistLoader will be created with a string\n\n    if (typeof srcUrlOrPlaylist === 'string') {\n      _this.srcUrl = srcUrlOrPlaylist; // TODO: reset sidxMapping between period changes\n      // once multi-period is refactored\n\n      _this.sidxMapping_ = {};\n      return possibleConstructorReturn(_this);\n    }\n\n    _this.setupChildLoader(masterPlaylistLoader, srcUrlOrPlaylist);\n\n    return _this;\n  }\n\n  createClass(DashPlaylistLoader, [{\n    key: 'setupChildLoader',\n    value: function setupChildLoader(masterPlaylistLoader, playlist) {\n      this.masterPlaylistLoader_ = masterPlaylistLoader;\n      this.childPlaylist_ = playlist;\n    }\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      this.loadedPlaylists_ = {};\n      window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n      window$1.clearTimeout(this.mediaRequest_);\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n    }\n  }, {\n    key: 'hasPendingRequest',\n    value: function hasPendingRequest() {\n      return this.request || this.mediaRequest_;\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n  }, {\n    key: 'sidxRequestFinished_',\n    value: function sidxRequestFinished_(playlist, master, startingState, doneFn) {\n      var _this2 = this;\n\n      return function (err, request) {\n        // disposed\n        if (!_this2.request) {\n          return;\n        } // pending request is cleared\n\n\n        _this2.request = null;\n\n        if (err) {\n          _this2.error = {\n            status: request.status,\n            message: 'DASH playlist request error at URL: ' + playlist.uri,\n            response: request.response,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (startingState) {\n            _this2.state = startingState;\n          }\n\n          _this2.trigger('error');\n\n          return doneFn(master, null);\n        }\n\n        var bytes = new Uint8Array(request.response);\n        var sidx = mp4Inspector.parseSidx(bytes.subarray(8));\n        return doneFn(master, sidx);\n      };\n    }\n  }, {\n    key: 'media',\n    value: function media(playlist) {\n      var _this3 = this; // getter\n\n\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state; // find the playlist object if the target playlist has been specified by URI\n\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n\n        playlist = this.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri; // switch to previously loaded playlists immediately\n\n      if (mediaChange && this.loadedPlaylists_[playlist.uri] && this.loadedPlaylists_[playlist.uri].endList) {\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n\n        return;\n      } // switching to the active playlist is a no-op\n\n\n      if (!mediaChange) {\n        return;\n      } // switching from an already loaded playlist\n\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      if (!playlist.sidx) {\n        // Continue asynchronously if there is no sidx\n        // wait one tick to allow haveMaster to run first on a child loader\n        this.mediaRequest_ = window$1.setTimeout(this.haveMetadata.bind(this, {\n          startingState: startingState,\n          playlist: playlist\n        }), 0); // exit early and don't do sidx work\n\n        return;\n      } // we have sidx mappings\n\n\n      var oldMaster = void 0;\n      var sidxMapping = void 0; // sidxMapping is used when parsing the masterXml, so store\n      // it on the masterPlaylistLoader\n\n      if (this.masterPlaylistLoader_) {\n        oldMaster = this.masterPlaylistLoader_.master;\n        sidxMapping = this.masterPlaylistLoader_.sidxMapping_;\n      } else {\n        oldMaster = this.master;\n        sidxMapping = this.sidxMapping_;\n      }\n\n      var sidxKey = generateSidxKey(playlist.sidx);\n      sidxMapping[sidxKey] = {\n        sidxInfo: playlist.sidx\n      };\n      this.request = requestSidx_(playlist.sidx, playlist, this.hls_.xhr, {\n        handleManifestRedirects: this.handleManifestRedirects\n      }, this.sidxRequestFinished_(playlist, oldMaster, startingState, function (newMaster, sidx) {\n        if (!newMaster || !sidx) {\n          throw new Error('failed to request sidx');\n        } // update loader's sidxMapping with parsed sidx box\n\n\n        sidxMapping[sidxKey].sidx = sidx; // everything is ready just continue to haveMetadata\n\n        _this3.haveMetadata({\n          startingState: startingState,\n          playlist: newMaster.playlists[playlist.uri]\n        });\n      }));\n    }\n  }, {\n    key: 'haveMetadata',\n    value: function haveMetadata(_ref) {\n      var startingState = _ref.startingState,\n          playlist = _ref.playlist;\n      this.state = 'HAVE_METADATA';\n      this.loadedPlaylists_[playlist.uri] = playlist;\n      this.mediaRequest_ = null; // This will trigger loadedplaylist\n\n      this.refreshMedia_(playlist.uri); // fire loadedmetadata the first time a media playlist is loaded\n      // to resolve setup of media groups\n\n      if (startingState === 'HAVE_MASTER') {\n        this.trigger('loadedmetadata');\n      } else {\n        // trigger media change if the active media has been updated\n        this.trigger('mediachange');\n      }\n    }\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      }\n    }\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this4 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this4.load();\n        }, delay);\n        return;\n      } // because the playlists are internal to the manifest, load should either load the\n      // main manifest, or do nothing but trigger an event\n\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      this.trigger('loadedplaylist');\n    }\n    /**\n     * Parses the master xml string and updates playlist uri references\n     *\n     * @return {Object}\n     *         The parsed mpd manifest object\n     */\n\n  }, {\n    key: 'parseMasterXml',\n    value: function parseMasterXml() {\n      var master = parse(this.masterXml_, {\n        manifestUri: this.srcUrl,\n        clientOffset: this.clientOffset_,\n        sidxMapping: this.sidxMapping_\n      });\n      master.uri = this.srcUrl; // Set up phony URIs for the playlists since we won't have external URIs for DASH\n      // but reference playlists by their URI throughout the project\n      // TODO: Should we create the dummy uris in mpd-parser as well (leaning towards yes).\n\n      for (var i = 0; i < master.playlists.length; i++) {\n        var phonyUri = 'placeholder-uri-' + i;\n        master.playlists[i].uri = phonyUri; // set up by URI references\n\n        master.playlists[phonyUri] = master.playlists[i];\n      } // set up phony URIs for the media group playlists since we won't have external\n      // URIs for DASH but reference playlists by their URI throughout the project\n\n\n      forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n        if (properties.playlists && properties.playlists.length) {\n          var _phonyUri = 'placeholder-uri-' + mediaType + '-' + groupKey + '-' + labelKey;\n\n          properties.playlists[0].uri = _phonyUri; // setup URI references\n\n          master.playlists[_phonyUri] = properties.playlists[0];\n        }\n      });\n      setupMediaPlaylists(master);\n      resolveMediaGroupUris(master);\n      return master;\n    }\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this5 = this;\n\n      this.started = true; // We don't need to request the master manifest again\n      // Call this asynchronously to match the xhr request behavior below\n\n      if (this.masterPlaylistLoader_) {\n        this.mediaRequest_ = window$1.setTimeout(this.haveMaster_.bind(this), 0);\n        return;\n      } // request the specified URL\n\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this5.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n\n          return _this5.trigger('error');\n        }\n\n        _this5.masterXml_ = req.responseText;\n\n        if (req.responseHeaders && req.responseHeaders.date) {\n          _this5.masterLoaded_ = Date.parse(req.responseHeaders.date);\n        } else {\n          _this5.masterLoaded_ = Date.now();\n        }\n\n        _this5.srcUrl = resolveManifestRedirect(_this5.handleManifestRedirects, _this5.srcUrl, req);\n\n        _this5.syncClientServerClock_(_this5.onClientServerClockSync_.bind(_this5));\n      });\n    }\n    /**\n     * Parses the master xml for UTCTiming node to sync the client clock to the server\n     * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n     *\n     * @param {Function} done\n     *        Function to call when clock sync has completed\n     */\n\n  }, {\n    key: 'syncClientServerClock_',\n    value: function syncClientServerClock_(done) {\n      var _this6 = this;\n\n      var utcTiming = parseUTCTiming(this.masterXml_); // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n      // server clock\n\n      if (utcTiming === null) {\n        this.clientOffset_ = this.masterLoaded_ - Date.now();\n        return done();\n      }\n\n      if (utcTiming.method === 'DIRECT') {\n        this.clientOffset_ = utcTiming.value - Date.now();\n        return done();\n      }\n\n      this.request = this.hls_.xhr({\n        uri: resolveUrl(this.srcUrl, utcTiming.value),\n        method: utcTiming.method,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this6.request) {\n          return;\n        }\n\n        if (error) {\n          // sync request failed, fall back to using date header from mpd\n          // TODO: log warning\n          _this6.clientOffset_ = _this6.masterLoaded_ - Date.now();\n          return done();\n        }\n\n        var serverTime = void 0;\n\n        if (utcTiming.method === 'HEAD') {\n          if (!req.responseHeaders || !req.responseHeaders.date) {\n            // expected date header not preset, fall back to using date header from mpd\n            // TODO: log warning\n            serverTime = _this6.masterLoaded_;\n          } else {\n            serverTime = Date.parse(req.responseHeaders.date);\n          }\n        } else {\n          serverTime = Date.parse(req.responseText);\n        }\n\n        _this6.clientOffset_ = serverTime - Date.now();\n        done();\n      });\n    }\n  }, {\n    key: 'haveMaster_',\n    value: function haveMaster_() {\n      this.state = 'HAVE_MASTER'; // clear media request\n\n      this.mediaRequest_ = null;\n\n      if (!this.masterPlaylistLoader_) {\n        this.master = this.parseMasterXml(); // We have the master playlist at this point, so\n        // trigger this to allow MasterPlaylistController\n        // to make an initial playlist selection\n\n        this.trigger('loadedplaylist');\n      } else if (!this.media_) {\n        // no media playlist was specifically selected so select\n        // the one the child playlist loader was created with\n        this.media(this.childPlaylist_);\n      }\n    }\n    /**\n     * Handler for after client/server clock synchronization has happened. Sets up\n     * xml refresh timer if specificed by the manifest.\n     */\n\n  }, {\n    key: 'onClientServerClockSync_',\n    value: function onClientServerClockSync_() {\n      var _this7 = this;\n\n      this.haveMaster_();\n\n      if (!this.hasPendingRequest() && !this.media_) {\n        this.media(this.master.playlists[0]);\n      } // TODO: minimumUpdatePeriod can have a value of 0. Currently the manifest will not\n      // be refreshed when this is the case. The inter-op guide says that when the\n      // minimumUpdatePeriod is 0, the manifest should outline all currently available\n      // segments, but future segments may require an update. I think a good solution\n      // would be to update the manifest at the same rate that the media playlists\n      // are \"refreshed\", i.e. every targetDuration.\n\n\n      if (this.master && this.master.minimumUpdatePeriod) {\n        this.minimumUpdatePeriodTimeout_ = window$1.setTimeout(function () {\n          _this7.trigger('minimumUpdatePeriod');\n        }, this.master.minimumUpdatePeriod);\n      }\n    }\n    /**\n     * Sends request to refresh the master xml and updates the parsed master manifest\n     * TODO: Does the client offset need to be recalculated when the xml is refreshed?\n     */\n\n  }, {\n    key: 'refreshXml_',\n    value: function refreshXml_() {\n      var _this8 = this; // The srcUrl here *may* need to pass through handleManifestsRedirects when\n      // sidx is implemented\n\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this8.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this8.request = null;\n\n        if (error) {\n          _this8.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this8.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this8.state === 'HAVE_NOTHING') {\n            _this8.started = false;\n          }\n\n          return _this8.trigger('error');\n        }\n\n        _this8.masterXml_ = req.responseText; // This will filter out updated sidx info from the mapping\n\n        _this8.sidxMapping_ = filterChangedSidxMappings(_this8.masterXml_, _this8.srcUrl, _this8.clientOffset_, _this8.sidxMapping_);\n\n        var master = _this8.parseMasterXml();\n\n        var updatedMaster = updateMaster$1(_this8.master, master);\n\n        if (updatedMaster) {\n          var sidxKey = generateSidxKey(_this8.media().sidx); // the sidx was updated, so the previous mapping was removed\n\n          if (!_this8.sidxMapping_[sidxKey]) {\n            var playlist = _this8.media();\n\n            _this8.request = requestSidx_(playlist.sidx, playlist, _this8.hls_.xhr, {\n              handleManifestRedirects: _this8.handleManifestRedirects\n            }, _this8.sidxRequestFinished_(playlist, master, _this8.state, function (newMaster, sidx) {\n              if (!newMaster || !sidx) {\n                throw new Error('failed to request sidx on minimumUpdatePeriod');\n              } // update loader's sidxMapping with parsed sidx box\n\n\n              _this8.sidxMapping_[sidxKey].sidx = sidx;\n              _this8.minimumUpdatePeriodTimeout_ = window$1.setTimeout(function () {\n                _this8.trigger('minimumUpdatePeriod');\n              }, _this8.master.minimumUpdatePeriod); // TODO: do we need to reload the current playlist?\n\n              _this8.refreshMedia_(_this8.media().uri);\n\n              return;\n            }));\n          } else {\n            _this8.master = updatedMaster;\n          }\n        }\n\n        _this8.minimumUpdatePeriodTimeout_ = window$1.setTimeout(function () {\n          _this8.trigger('minimumUpdatePeriod');\n        }, _this8.master.minimumUpdatePeriod);\n      });\n    }\n    /**\n     * Refreshes the media playlist by re-parsing the master xml and updating playlist\n     * references. If this is an alternate loader, the updated parsed manifest is retrieved\n     * from the master loader.\n     */\n\n  }, {\n    key: 'refreshMedia_',\n    value: function refreshMedia_(mediaUri) {\n      var _this9 = this;\n\n      if (!mediaUri) {\n        throw new Error('refreshMedia_ must take a media uri');\n      }\n\n      var oldMaster = void 0;\n      var newMaster = void 0;\n\n      if (this.masterPlaylistLoader_) {\n        oldMaster = this.masterPlaylistLoader_.master;\n        newMaster = this.masterPlaylistLoader_.parseMasterXml();\n      } else {\n        oldMaster = this.master;\n        newMaster = this.parseMasterXml();\n      }\n\n      var updatedMaster = updateMaster$1(oldMaster, newMaster);\n\n      if (updatedMaster) {\n        if (this.masterPlaylistLoader_) {\n          this.masterPlaylistLoader_.master = updatedMaster;\n        } else {\n          this.master = updatedMaster;\n        }\n\n        this.media_ = updatedMaster.playlists[mediaUri];\n      } else {\n        this.media_ = newMaster.playlists[mediaUri];\n        this.trigger('playlistunchanged');\n      }\n\n      if (!this.media().endList) {\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this9.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!updatedMaster));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n  }]);\n  return DashPlaylistLoader;\n}(EventTarget$1$1);\n\nvar logger = function logger(source) {\n  if (videojs$1.log.debug) {\n    return videojs$1.log.debug.bind(videojs$1, 'VHS:', source + ' >');\n  }\n\n  return function () {};\n};\n\nfunction noop() {}\n/**\n * @file source-updater.js\n */\n\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the\n * SourceBuffer from\n * @param {String} mimeType the desired MIME type of the underlying\n * SourceBuffer\n * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer is\n * added to the media source\n */\n\n\nvar SourceUpdater = function () {\n  function SourceUpdater(mediaSource, mimeType, type, sourceBufferEmitter) {\n    classCallCheck(this, SourceUpdater);\n    this.callbacks_ = [];\n    this.pendingCallback_ = null;\n    this.timestampOffset_ = 0;\n    this.mediaSource = mediaSource;\n    this.processedAppend_ = false;\n    this.type_ = type;\n    this.mimeType_ = mimeType;\n    this.logger_ = logger('SourceUpdater[' + type + '][' + mimeType + ']');\n\n    if (mediaSource.readyState === 'closed') {\n      mediaSource.addEventListener('sourceopen', this.createSourceBuffer_.bind(this, mimeType, sourceBufferEmitter));\n    } else {\n      this.createSourceBuffer_(mimeType, sourceBufferEmitter);\n    }\n  }\n\n  createClass(SourceUpdater, [{\n    key: 'createSourceBuffer_',\n    value: function createSourceBuffer_(mimeType, sourceBufferEmitter) {\n      var _this = this;\n\n      this.sourceBuffer_ = this.mediaSource.addSourceBuffer(mimeType);\n      this.logger_('created SourceBuffer');\n\n      if (sourceBufferEmitter) {\n        sourceBufferEmitter.trigger('sourcebufferadded');\n\n        if (this.mediaSource.sourceBuffers.length < 2) {\n          // There's another source buffer we must wait for before we can start updating\n          // our own (or else we can get into a bad state, i.e., appending video/audio data\n          // before the other video/audio source buffer is available and leading to a video\n          // or audio only buffer).\n          sourceBufferEmitter.on('sourcebufferadded', function () {\n            _this.start_();\n          });\n          return;\n        }\n      }\n\n      this.start_();\n    }\n  }, {\n    key: 'start_',\n    value: function start_() {\n      var _this2 = this;\n\n      this.started_ = true; // run completion handlers and process callbacks as updateend\n      // events fire\n\n      this.onUpdateendCallback_ = function () {\n        var pendingCallback = _this2.pendingCallback_;\n        _this2.pendingCallback_ = null;\n        _this2.sourceBuffer_.removing = false;\n\n        _this2.logger_('buffered [' + printableRange(_this2.buffered()) + ']');\n\n        if (pendingCallback) {\n          pendingCallback();\n        }\n\n        _this2.runCallback_();\n      };\n\n      this.sourceBuffer_.addEventListener('updateend', this.onUpdateendCallback_);\n      this.runCallback_();\n    }\n    /**\n     * Aborts the current segment and resets the segment parser.\n     *\n     * @param {Function} done function to call when done\n     * @see http://w3c.github.io/media-source/#widl-SourceBuffer-abort-void\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort(done) {\n      var _this3 = this;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this3.sourceBuffer_.abort();\n        }, done);\n      }\n    }\n    /**\n     * Queue an update to append an ArrayBuffer.\n     *\n     * @param {ArrayBuffer} bytes\n     * @param {Function} done the function to call when done\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(config, done) {\n      var _this4 = this;\n\n      this.processedAppend_ = true;\n      this.queueCallback_(function () {\n        if (config.videoSegmentTimingInfoCallback) {\n          _this4.sourceBuffer_.addEventListener('videoSegmentTimingInfo', config.videoSegmentTimingInfoCallback);\n        }\n\n        _this4.sourceBuffer_.appendBuffer(config.bytes);\n      }, function () {\n        if (config.videoSegmentTimingInfoCallback) {\n          _this4.sourceBuffer_.removeEventListener('videoSegmentTimingInfo', config.videoSegmentTimingInfoCallback);\n        }\n\n        done();\n      });\n    }\n    /**\n     * Indicates what TimeRanges are buffered in the managed SourceBuffer.\n     *\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-buffered\n     */\n\n  }, {\n    key: 'buffered',\n    value: function buffered() {\n      if (!this.sourceBuffer_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceBuffer_.buffered;\n    }\n    /**\n     * Queue an update to remove a time range from the buffer.\n     *\n     * @param {Number} start where to start the removal\n     * @param {Number} end where to end the removal\n     * @param {Function} [done=noop] optional callback to be executed when the remove\n     * operation is complete\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      var _this5 = this;\n\n      var done = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : noop;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this5.logger_('remove [' + start + ' => ' + end + ']');\n\n          _this5.sourceBuffer_.removing = true;\n\n          _this5.sourceBuffer_.remove(start, end);\n        }, done);\n      }\n    }\n    /**\n     * Whether the underlying sourceBuffer is updating or not\n     *\n     * @return {Boolean} the updating status of the SourceBuffer\n     */\n\n  }, {\n    key: 'updating',\n    value: function updating() {\n      // we are updating if the sourcebuffer is updating or\n      return !this.sourceBuffer_ || this.sourceBuffer_.updating || // if we have a pending callback that is not our internal noop\n      !!this.pendingCallback_ && this.pendingCallback_ !== noop;\n    }\n    /**\n     * Set/get the timestampoffset on the SourceBuffer\n     *\n     * @return {Number} the timestamp offset\n     */\n\n  }, {\n    key: 'timestampOffset',\n    value: function timestampOffset(offset) {\n      var _this6 = this;\n\n      if (typeof offset !== 'undefined') {\n        this.queueCallback_(function () {\n          _this6.sourceBuffer_.timestampOffset = offset;\n\n          _this6.runCallback_();\n        });\n        this.timestampOffset_ = offset;\n      }\n\n      return this.timestampOffset_;\n    }\n    /**\n     * Queue a callback to run\n     */\n\n  }, {\n    key: 'queueCallback_',\n    value: function queueCallback_(callback, done) {\n      this.callbacks_.push([callback.bind(this), done]);\n      this.runCallback_();\n    }\n    /**\n     * Run a queued callback\n     */\n\n  }, {\n    key: 'runCallback_',\n    value: function runCallback_() {\n      var callbacks = void 0;\n\n      if (!this.updating() && this.callbacks_.length && this.started_) {\n        callbacks = this.callbacks_.shift();\n        this.pendingCallback_ = callbacks[1];\n        callbacks[0]();\n      }\n    }\n    /**\n     * dispose of the source updater and the underlying sourceBuffer\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      var _this7 = this;\n\n      var disposeFn = function disposeFn() {\n        if (_this7.sourceBuffer_ && _this7.mediaSource.readyState === 'open') {\n          _this7.sourceBuffer_.abort();\n        }\n\n        _this7.sourceBuffer_.removeEventListener('updateend', disposeFn);\n      };\n\n      this.sourceBuffer_.removeEventListener('updateend', this.onUpdateendCallback_);\n\n      if (this.sourceBuffer_.removing) {\n        this.sourceBuffer_.addEventListener('updateend', disposeFn);\n      } else {\n        disposeFn();\n      }\n    }\n  }]);\n  return SourceUpdater;\n}();\n\nvar Config = {\n  GOAL_BUFFER_LENGTH: 30,\n  MAX_GOAL_BUFFER_LENGTH: 60,\n  GOAL_BUFFER_LENGTH_RATE: 1,\n  // 0.5 MB/s\n  INITIAL_BANDWIDTH: 4194304,\n  // A fudge factor to apply to advertised playlist bitrates to account for\n  // temporary flucations in client bandwidth\n  BANDWIDTH_VARIANCE: 1.2,\n  // How much of the buffer must be filled before we consider upswitching\n  BUFFER_LOW_WATER_LINE: 0,\n  MAX_BUFFER_LOW_WATER_LINE: 30,\n  BUFFER_LOW_WATER_LINE_RATE: 1\n};\nvar REQUEST_ERRORS = {\n  FAILURE: 2,\n  TIMEOUT: -101,\n  ABORTED: -102\n};\n/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */\n\nvar abortAll = function abortAll(activeXhrs) {\n  activeXhrs.forEach(function (xhr) {\n    xhr.abort();\n  });\n};\n/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */\n\n\nvar getRequestStats = function getRequestStats(request) {\n  return {\n    bandwidth: request.bandwidth,\n    bytesReceived: request.bytesReceived || 0,\n    roundTripTime: request.roundTripTime || 0\n  };\n};\n/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */\n\n\nvar getProgressStats = function getProgressStats(progressEvent) {\n  var request = progressEvent.target;\n  var roundTripTime = Date.now() - request.requestTime;\n  var stats = {\n    bandwidth: Infinity,\n    bytesReceived: 0,\n    roundTripTime: roundTripTime || 0\n  };\n  stats.bytesReceived = progressEvent.loaded; // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n  // because we should only use bandwidth stats on progress to determine when\n  // abort a request early due to insufficient bandwidth\n\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n  return stats;\n};\n/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */\n\n\nvar handleErrors = function handleErrors(error, request) {\n  if (request.timedout) {\n    return {\n      status: request.status,\n      message: 'HLS request timed-out at URL: ' + request.uri,\n      code: REQUEST_ERRORS.TIMEOUT,\n      xhr: request\n    };\n  }\n\n  if (request.aborted) {\n    return {\n      status: request.status,\n      message: 'HLS request aborted at URL: ' + request.uri,\n      code: REQUEST_ERRORS.ABORTED,\n      xhr: request\n    };\n  }\n\n  if (error) {\n    return {\n      status: request.status,\n      message: 'HLS request errored at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n\n  return null;\n};\n/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleKeyResponse = function handleKeyResponse(segment, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    if (response.byteLength !== 16) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Invalid HLS key at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    var view = new DataView(response);\n    segment.key.bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleInitSegmentResponse = function handleInitSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    } // stop processing if received empty content\n\n\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.map.bytes = new Uint8Array(request.response); // Initialize CaptionParser if it hasn't been yet\n\n    if (captionParser && !captionParser.isInitialized()) {\n      captionParser.init();\n    }\n\n    segment.map.timescales = mp4probe.timescale(segment.map.bytes);\n    segment.map.videoTrackIds = mp4probe.videoTrackIds(segment.map.bytes);\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleSegmentResponse = function handleSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n    var parsed = void 0;\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    } // stop processing if received empty content\n\n\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.stats = getRequestStats(request);\n\n    if (segment.key) {\n      segment.encryptedBytes = new Uint8Array(request.response);\n    } else {\n      segment.bytes = new Uint8Array(request.response);\n    } // This is likely an FMP4 and has the init segment.\n    // Run through the CaptionParser in case there are captions.\n\n\n    if (captionParser && segment.map && segment.map.bytes) {\n      // Initialize CaptionParser if it hasn't been yet\n      if (!captionParser.isInitialized()) {\n        captionParser.init();\n      }\n\n      parsed = captionParser.parse(segment.bytes, segment.map.videoTrackIds, segment.map.timescales);\n\n      if (parsed && parsed.captions) {\n        segment.captionStreams = parsed.captionStreams;\n        segment.fmp4Captions = parsed.captions;\n      }\n    }\n\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */\n\n\nvar decryptSegment = function decryptSegment(decrypter, segment, doneFn) {\n  var decryptionHandler = function decryptionHandler(event) {\n    if (event.data.source === segment.requestId) {\n      decrypter.removeEventListener('message', decryptionHandler);\n      var decrypted = event.data.decrypted;\n      segment.bytes = new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength);\n      return doneFn(null, segment);\n    }\n  };\n\n  decrypter.addEventListener('message', decryptionHandler);\n  var keyBytes = void 0;\n\n  if (segment.key.bytes.slice) {\n    keyBytes = segment.key.bytes.slice();\n  } else {\n    keyBytes = new Uint32Array(Array.prototype.slice.call(segment.key.bytes));\n  } // this is an encrypted segment\n  // incrementally decrypt the segment\n\n\n  decrypter.postMessage(createTransferableMessage({\n    source: segment.requestId,\n    encrypted: segment.encryptedBytes,\n    key: keyBytes,\n    iv: segment.key.iv\n  }), [segment.encryptedBytes.buffer, keyBytes.buffer]);\n};\n/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */\n\n\nvar waitForCompletion = function waitForCompletion(activeXhrs, decrypter, doneFn) {\n  var count = 0;\n  var didError = false;\n  return function (error, segment) {\n    if (didError) {\n      return;\n    }\n\n    if (error) {\n      didError = true; // If there are errors, we have to abort any outstanding requests\n\n      abortAll(activeXhrs); // Even though the requests above are aborted, and in theory we could wait until we\n      // handle the aborted events from those requests, there are some cases where we may\n      // never get an aborted event. For instance, if the network connection is lost and\n      // there were two requests, the first may have triggered an error immediately, while\n      // the second request remains unsent. In that case, the aborted algorithm will not\n      // trigger an abort: see https://xhr.spec.whatwg.org/#the-abort()-method\n      //\n      // We also can't rely on the ready state of the XHR, since the request that\n      // triggered the connection error may also show as a ready state of 0 (unsent).\n      // Therefore, we have to finish this group of requests immediately after the first\n      // seen error.\n\n      return doneFn(error, segment);\n    }\n\n    count += 1;\n\n    if (count === activeXhrs.length) {\n      // Keep track of when *all* of the requests have completed\n      segment.endOfAllRequests = Date.now();\n\n      if (segment.encryptedBytes) {\n        return decryptSegment(decrypter, segment, doneFn);\n      } // Otherwise, everything is ready just continue\n\n\n      return doneFn(null, segment);\n    }\n  };\n};\n/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Event} event - the progress event object from XMLHttpRequest\n */\n\n\nvar handleProgress = function handleProgress(segment, progressFn) {\n  return function (event) {\n    segment.stats = videojs$1.mergeOptions(segment.stats, getProgressStats(event)); // record the time that we receive the first byte of data\n\n    if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n      segment.stats.firstBytesReceivedAt = Date.now();\n    }\n\n    return progressFn(event, segment);\n  };\n};\n/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @returns {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */\n\n\nvar mediaSegmentRequest = function mediaSegmentRequest(xhr, xhrOptions, decryptionWorker, captionParser, segment, progressFn, doneFn) {\n  var activeXhrs = [];\n  var finishProcessingFn = waitForCompletion(activeXhrs, decryptionWorker, doneFn); // optionally, request the decryption key\n\n  if (segment.key && !segment.key.bytes) {\n    var keyRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.key.resolvedUri,\n      responseType: 'arraybuffer'\n    });\n    var keyRequestCallback = handleKeyResponse(segment, finishProcessingFn);\n    var keyXhr = xhr(keyRequestOptions, keyRequestCallback);\n    activeXhrs.push(keyXhr);\n  } // optionally, request the associated media init segment\n\n\n  if (segment.map && !segment.map.bytes) {\n    var initSegmentOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.map.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment.map)\n    });\n    var initSegmentRequestCallback = handleInitSegmentResponse(segment, captionParser, finishProcessingFn);\n    var initSegmentXhr = xhr(initSegmentOptions, initSegmentRequestCallback);\n    activeXhrs.push(initSegmentXhr);\n  }\n\n  var segmentRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n    uri: segment.resolvedUri,\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(segment)\n  });\n  var segmentRequestCallback = handleSegmentResponse(segment, captionParser, finishProcessingFn);\n  var segmentXhr = xhr(segmentRequestOptions, segmentRequestCallback);\n  segmentXhr.addEventListener('progress', handleProgress(segment, progressFn));\n  activeXhrs.push(segmentXhr);\n  return function () {\n    return abortAll(activeXhrs);\n  };\n}; // Utilities\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\n\n\nvar safeGetComputedStyle = function safeGetComputedStyle(el, property) {\n  var result = void 0;\n\n  if (!el) {\n    return '';\n  }\n\n  result = window$1.getComputedStyle(el);\n\n  if (!result) {\n    return '';\n  }\n\n  return result[property];\n};\n/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */\n\n\nvar stableSort = function stableSort(array, sortFn) {\n  var newArray = array.slice();\n  array.sort(function (left, right) {\n    var cmp = sortFn(left, right);\n\n    if (cmp === 0) {\n      return newArray.indexOf(left) - newArray.indexOf(right);\n    }\n\n    return cmp;\n  });\n};\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistBandwidth = function comparePlaylistBandwidth(left, right) {\n  var leftBandwidth = void 0;\n  var rightBandwidth = void 0;\n\n  if (left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n\n  leftBandwidth = leftBandwidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n\n  rightBandwidth = rightBandwidth || window$1.Number.MAX_VALUE;\n  return leftBandwidth - rightBandwidth;\n};\n/**\n * A comparator function to sort two playlist object by resolution (width).\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistResolution = function comparePlaylistResolution(left, right) {\n  var leftWidth = void 0;\n  var rightWidth = void 0;\n\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n\n  leftWidth = leftWidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n\n  rightWidth = rightWidth || window$1.Number.MAX_VALUE; // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n\n  return leftWidth - rightWidth;\n};\n/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} master\n *        Object representation of the master manifest\n * @param {Number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {Number} playerWidth\n *        Current width of the player element\n * @param {Number} playerHeight\n *        Current height of the player element\n * @param {Boolean} limitRenditionByPlayerDimensions\n *        True if the player width and height should be used during the selection, false otherwise\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar simpleSelector = function simpleSelector(master, playerBandwidth, playerWidth, playerHeight, limitRenditionByPlayerDimensions) {\n  // convert the playlists to an intermediary representation to make comparisons easier\n  var sortedPlaylistReps = master.playlists.map(function (playlist) {\n    var width = void 0;\n    var height = void 0;\n    var bandwidth = void 0;\n    width = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n    height = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n    bandwidth = playlist.attributes.BANDWIDTH;\n    bandwidth = bandwidth || window$1.Number.MAX_VALUE;\n    return {\n      bandwidth: bandwidth,\n      width: width,\n      height: height,\n      playlist: playlist\n    };\n  });\n  stableSort(sortedPlaylistReps, function (left, right) {\n    return left.bandwidth - right.bandwidth;\n  }); // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  sortedPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return !Playlist.isIncompatible(rep.playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return Playlist.isEnabled(rep.playlist);\n  });\n\n  if (!enabledPlaylistReps.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n      return !Playlist.isDisabled(rep.playlist);\n    });\n  } // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n\n\n  var bandwidthPlaylistReps = enabledPlaylistReps.filter(function (rep) {\n    return rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth;\n  });\n  var highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1]; // get all of the renditions with the same (highest) bandwidth\n  // and then taking the very first element\n\n  var bandwidthBestRep = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0]; // if we're not going to limit renditions by player size, make an early decision.\n\n  if (limitRenditionByPlayerDimensions === false) {\n    var _chosenRep = bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n\n    return _chosenRep ? _chosenRep.playlist : null;\n  } // filter out playlists without resolution information\n\n\n  var haveResolution = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.width && rep.height;\n  }); // sort variants by resolution\n\n  stableSort(haveResolution, function (left, right) {\n    return left.width - right.width;\n  }); // if we have the exact resolution as the player use it\n\n  var resolutionBestRepList = haveResolution.filter(function (rep) {\n    return rep.width === playerWidth && rep.height === playerHeight;\n  });\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1]; // ensure that we pick the highest bandwidth variant that have exact resolution\n\n  var resolutionBestRep = resolutionBestRepList.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0];\n  var resolutionPlusOneList = void 0;\n  var resolutionPlusOneSmallest = void 0;\n  var resolutionPlusOneRep = void 0; // find the smallest variant that is larger than the player\n  // if there is no match of exact resolution\n\n  if (!resolutionBestRep) {\n    resolutionPlusOneList = haveResolution.filter(function (rep) {\n      return rep.width > playerWidth || rep.height > playerHeight;\n    }); // find all the variants have the same smallest resolution\n\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(function (rep) {\n      return rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height;\n    }); // ensure that we also pick the highest bandwidth variant that\n    // is just-larger-than the video player\n\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(function (rep) {\n      return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n    })[0];\n  } // fallback chain of variants\n\n\n  var chosenRep = resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n  return chosenRep ? chosenRep.playlist : null;\n}; // Playlist Selectors\n\n/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar lastBandwidthSelector = function lastBandwidthSelector() {\n  return simpleSelector(this.playlists.master, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10), parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10), this.limitRenditionByPlayerDimensions);\n};\n/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.master\n *        Object representation of the master manifest\n * @param {Number} settings.currentTime\n *        The current time of the player\n * @param {Number} settings.bandwidth\n *        Current measured bandwidth\n * @param {Number} settings.duration\n *        Duration of the media\n * @param {Number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {Number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {Number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */\n\n\nvar minRebufferMaxBandwidthSelector = function minRebufferMaxBandwidthSelector(settings) {\n  var master = settings.master,\n      currentTime = settings.currentTime,\n      bandwidth = settings.bandwidth,\n      duration$$1 = settings.duration,\n      segmentDuration = settings.segmentDuration,\n      timeUntilRebuffer = settings.timeUntilRebuffer,\n      currentTimeline = settings.currentTimeline,\n      syncController = settings.syncController; // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  var compatiblePlaylists = master.playlists.filter(function (playlist) {\n    return !Playlist.isIncompatible(playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n\n  if (!enabledPlaylists.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylists = compatiblePlaylists.filter(function (playlist) {\n      return !Playlist.isDisabled(playlist);\n    });\n  }\n\n  var bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n  var rebufferingEstimates = bandwidthPlaylists.map(function (playlist) {\n    var syncPoint = syncController.getSyncPoint(playlist, duration$$1, currentTimeline, currentTime); // If there is no sync point for this playlist, switching to it will require a\n    // sync request first. This will double the request time\n\n    var numRequests = syncPoint ? 1 : 2;\n    var requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n    var rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n    return {\n      playlist: playlist,\n      rebufferingImpact: rebufferingImpact\n    };\n  });\n  var noRebufferingPlaylists = rebufferingEstimates.filter(function (estimate) {\n    return estimate.rebufferingImpact <= 0;\n  }); // Sort by bandwidth DESC\n\n  stableSort(noRebufferingPlaylists, function (a, b) {\n    return comparePlaylistBandwidth(b.playlist, a.playlist);\n  });\n\n  if (noRebufferingPlaylists.length) {\n    return noRebufferingPlaylists[0];\n  }\n\n  stableSort(rebufferingEstimates, function (a, b) {\n    return a.rebufferingImpact - b.rebufferingImpact;\n  });\n  return rebufferingEstimates[0] || null;\n};\n/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */\n\n\nvar lowestBitrateCompatibleVariantSelector = function lowestBitrateCompatibleVariantSelector() {\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n  var playlists = this.playlists.master.playlists.filter(Playlist.isEnabled); // Sort ascending by bitrate\n\n  stableSort(playlists, function (a, b) {\n    return comparePlaylistBandwidth(a, b);\n  }); // Parse and assume that playlists with no video codec have no video\n  // (this is not necessarily true, although it is generally true).\n  //\n  // If an entire manifest has no valid videos everything will get filtered\n  // out.\n\n  var playlistsWithVideo = playlists.filter(function (playlist) {\n    return parseCodecs(playlist.attributes.CODECS).videoCodec;\n  });\n  return playlistsWithVideo[0] || null;\n};\n/**\n * Create captions text tracks on video.js if they do not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {Object} tech the video.js tech\n * @param {Object} captionStreams the caption streams to create\n * @private\n */\n\n\nvar createCaptionsTrackIfNotExists = function createCaptionsTrackIfNotExists(inbandTextTracks, tech, captionStreams) {\n  for (var trackId in captionStreams) {\n    if (!inbandTextTracks[trackId]) {\n      tech.trigger({\n        type: 'usage',\n        name: 'hls-608'\n      });\n      var track = tech.textTracks().getTrackById(trackId);\n\n      if (track) {\n        // Resuse an existing track with a CC# id because this was\n        // very likely created by videojs-contrib-hls from information\n        // in the m3u8 for us to use\n        inbandTextTracks[trackId] = track;\n      } else {\n        // Otherwise, create a track with the default `CC#` label and\n        // without a language\n        inbandTextTracks[trackId] = tech.addRemoteTextTrack({\n          kind: 'captions',\n          id: trackId,\n          label: trackId\n        }, false).track;\n      }\n    }\n  }\n};\n\nvar addCaptionData = function addCaptionData(_ref) {\n  var inbandTextTracks = _ref.inbandTextTracks,\n      captionArray = _ref.captionArray,\n      timestampOffset = _ref.timestampOffset;\n\n  if (!captionArray) {\n    return;\n  }\n\n  var Cue = window.WebKitDataCue || window.VTTCue;\n  captionArray.forEach(function (caption) {\n    var track = caption.stream;\n    var startTime = caption.startTime;\n    var endTime = caption.endTime;\n\n    if (!inbandTextTracks[track]) {\n      return;\n    }\n\n    startTime += timestampOffset;\n    endTime += timestampOffset;\n    inbandTextTracks[track].addCue(new Cue(startTime, endTime, caption.text));\n  });\n};\n/**\n * @file segment-loader.js\n */\n// in ms\n\n\nvar CHECK_BUFFER_DELAY = 500;\n/**\n * Determines if we should call endOfStream on the media source based\n * on the state of the buffer or if appened segment was the final\n * segment in the playlist.\n *\n * @param {Object} playlist a media playlist object\n * @param {Object} mediaSource the MediaSource object\n * @param {Number} segmentIndex the index of segment we last appended\n * @returns {Boolean} do we need to call endOfStream on the MediaSource\n */\n\nvar detectEndOfStream = function detectEndOfStream(playlist, mediaSource, segmentIndex) {\n  if (!playlist || !mediaSource) {\n    return false;\n  }\n\n  var segments = playlist.segments; // determine a few boolean values to help make the branch below easier\n  // to read\n\n  var appendedLastSegment = segmentIndex === segments.length; // if we've buffered to the end of the video, we need to call endOfStream\n  // so that MediaSources can trigger the `ended` event when it runs out of\n  // buffered data instead of waiting for me\n\n  return playlist.endList && mediaSource.readyState === 'open' && appendedLastSegment;\n};\n\nvar finite = function finite(num) {\n  return typeof num === 'number' && isFinite(num);\n};\n\nvar illegalMediaSwitch = function illegalMediaSwitch(loaderType, startingMedia, newSegmentMedia) {\n  // Although these checks should most likely cover non 'main' types, for now it narrows\n  // the scope of our checks.\n  if (loaderType !== 'main' || !startingMedia || !newSegmentMedia) {\n    return null;\n  }\n\n  if (!newSegmentMedia.containsAudio && !newSegmentMedia.containsVideo) {\n    return 'Neither audio nor video found in segment.';\n  }\n\n  if (startingMedia.containsVideo && !newSegmentMedia.containsVideo) {\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  if (!startingMedia.containsVideo && newSegmentMedia.containsVideo) {\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  return null;\n};\n/**\n * Calculates a time value that is safe to remove from the back buffer without interupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {Number} currentTime\n *        The current time of the player\n * @param {Number} targetDuration\n *        The target duration of the current playlist\n * @return {Number}\n *         Time that is safe to remove from the back buffer without interupting playback\n */\n\n\nvar safeBackBufferTrimTime = function safeBackBufferTrimTime(seekable$$1, currentTime, targetDuration) {\n  var removeToTime = void 0;\n\n  if (seekable$$1.length && seekable$$1.start(0) > 0 && seekable$$1.start(0) < currentTime) {\n    // If we have a seekable range use that as the limit for what can be removed safely\n    removeToTime = seekable$$1.start(0);\n  } else {\n    // otherwise remove anything older than 30 seconds before the current play head\n    removeToTime = currentTime - 30;\n  } // Don't allow removing from the buffer within target duration of current time\n  // to avoid the possibility of removing the GOP currently being played which could\n  // cause playback stalls.\n\n\n  return Math.min(removeToTime, currentTime - targetDuration);\n};\n\nvar segmentInfoString = function segmentInfoString(segmentInfo) {\n  var _segmentInfo$segment = segmentInfo.segment,\n      start = _segmentInfo$segment.start,\n      end = _segmentInfo$segment.end,\n      _segmentInfo$playlist = segmentInfo.playlist,\n      seq = _segmentInfo$playlist.mediaSequence,\n      id = _segmentInfo$playlist.id,\n      _segmentInfo$playlist2 = _segmentInfo$playlist.segments,\n      segments = _segmentInfo$playlist2 === undefined ? [] : _segmentInfo$playlist2,\n      index = segmentInfo.mediaIndex,\n      timeline = segmentInfo.timeline;\n  return ['appending [' + index + '] of [' + seq + ', ' + (seq + segments.length) + '] from playlist [' + id + ']', '[' + start + ' => ' + end + '] in timeline [' + timeline + ']'].join(' ');\n};\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\n\nvar SegmentLoader = function (_videojs$EventTarget) {\n  inherits(SegmentLoader, _videojs$EventTarget);\n\n  function SegmentLoader(settings) {\n    classCallCheck(this, SegmentLoader); // check pre-conditions\n\n    var _this = possibleConstructorReturn(this, (SegmentLoader.__proto__ || Object.getPrototypeOf(SegmentLoader)).call(this));\n\n    if (!settings) {\n      throw new TypeError('Initialization settings are required');\n    }\n\n    if (typeof settings.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n\n    if (!settings.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    } // public properties\n\n\n    _this.bandwidth = settings.bandwidth;\n    _this.throughput = {\n      rate: 0,\n      count: 0\n    };\n    _this.roundTrip = NaN;\n\n    _this.resetStats_();\n\n    _this.mediaIndex = null; // private settings\n\n    _this.hasPlayed_ = settings.hasPlayed;\n    _this.currentTime_ = settings.currentTime;\n    _this.seekable_ = settings.seekable;\n    _this.seeking_ = settings.seeking;\n    _this.duration_ = settings.duration;\n    _this.mediaSource_ = settings.mediaSource;\n    _this.hls_ = settings.hls;\n    _this.loaderType_ = settings.loaderType;\n    _this.startingMedia_ = void 0;\n    _this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n    _this.goalBufferLength_ = settings.goalBufferLength;\n    _this.sourceType_ = settings.sourceType;\n    _this.inbandTextTracks_ = settings.inbandTextTracks;\n    _this.state_ = 'INIT'; // private instance variables\n\n    _this.checkBufferTimeout_ = null;\n    _this.error_ = void 0;\n    _this.currentTimeline_ = -1;\n    _this.pendingSegment_ = null;\n    _this.mimeType_ = null;\n    _this.sourceUpdater_ = null;\n    _this.xhrOptions_ = null; // Fragmented mp4 playback\n\n    _this.activeInitSegmentId_ = null;\n    _this.initSegments_ = {}; // HLSe playback\n\n    _this.cacheEncryptionKeys_ = settings.cacheEncryptionKeys;\n    _this.keyCache_ = {}; // Fmp4 CaptionParser\n\n    if (_this.loaderType_ === 'main') {\n      _this.captionParser_ = new CaptionParser();\n    } else {\n      _this.captionParser_ = null;\n    }\n\n    _this.decrypter_ = settings.decrypter; // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n\n    _this.syncController_ = settings.syncController;\n    _this.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n\n    _this.syncController_.on('syncinfoupdate', function () {\n      return _this.trigger('syncinfoupdate');\n    });\n\n    _this.mediaSource_.addEventListener('sourceopen', function () {\n      return _this.ended_ = false;\n    }); // ...for determining the fetch location\n\n\n    _this.fetchAtBuffer_ = false;\n    _this.logger_ = logger('SegmentLoader[' + _this.loaderType_ + ']');\n    Object.defineProperty(_this, 'state', {\n      get: function get$$1() {\n        return this.state_;\n      },\n      set: function set$$1(newState) {\n        if (newState !== this.state_) {\n          this.logger_(this.state_ + ' -> ' + newState);\n          this.state_ = newState;\n        }\n      }\n    });\n    return _this;\n  }\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n\n\n  createClass(SegmentLoader, [{\n    key: 'resetStats_',\n    value: function resetStats_() {\n      this.mediaBytesTransferred = 0;\n      this.mediaRequests = 0;\n      this.mediaRequestsAborted = 0;\n      this.mediaRequestsTimedout = 0;\n      this.mediaRequestsErrored = 0;\n      this.mediaTransferDuration = 0;\n      this.mediaSecondsLoaded = 0;\n    }\n    /**\n     * dispose of the SegmentLoader and reset to the default state\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.state = 'DISPOSED';\n      this.pause();\n      this.abort_();\n\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.dispose();\n      }\n\n      this.resetStats_();\n\n      if (this.captionParser_) {\n        this.captionParser_.reset();\n      }\n    }\n    /**\n     * abort anything that is currently doing on with the SegmentLoader\n     * and reset to a default state\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.state !== 'WAITING') {\n        if (this.pendingSegment_) {\n          this.pendingSegment_ = null;\n        }\n\n        return;\n      }\n\n      this.abort_(); // We aborted the requests we were waiting on, so reset the loader's state to READY\n      // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n      // when the request is aborted. This will prevent the loader from being stuck in the\n      // WAITING state indefinitely.\n\n      this.state = 'READY'; // don't wait for buffer check timeouts to begin fetching the\n      // next segment\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * abort all pending xhr requests and null any pending segements\n     *\n     * @private\n     */\n\n  }, {\n    key: 'abort_',\n    value: function abort_() {\n      if (this.pendingSegment_) {\n        this.pendingSegment_.abortRequests();\n      } // clear out the segment being processed\n\n\n      this.pendingSegment_ = null;\n    }\n    /**\n     * set an error on the segment loader and null out any pending segements\n     *\n     * @param {Error} error the error to set on the SegmentLoader\n     * @return {Error} the error that was set or that is currently set\n     */\n\n  }, {\n    key: 'error',\n    value: function error(_error) {\n      if (typeof _error !== 'undefined') {\n        this.error_ = _error;\n      }\n\n      this.pendingSegment_ = null;\n      return this.error_;\n    }\n  }, {\n    key: 'endOfStream',\n    value: function endOfStream() {\n      this.ended_ = true;\n      this.pause();\n      this.trigger('ended');\n    }\n    /**\n     * Indicates which time ranges are buffered\n     *\n     * @return {TimeRange}\n     *         TimeRange object representing the current buffered ranges\n     */\n\n  }, {\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.sourceUpdater_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceUpdater_.buffered();\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: map.bytes,\n          timescales: map.timescales,\n          videoTrackIds: map.videoTrackIds\n        };\n      }\n\n      return storedMap || map;\n    }\n    /**\n     * Gets and sets key for the provided key\n     *\n     * @param {Object} key\n     *        The key object representing the key to get or set\n     * @param {Boolean=} set\n     *        If true, the key for the provided key should be saved\n     * @return {Object}\n     *         Key object for desired key\n     */\n\n  }, {\n    key: 'segmentKey',\n    value: function segmentKey(key) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!key) {\n        return null;\n      }\n\n      var id = segmentKeyId(key);\n      var storedKey = this.keyCache_[id]; // TODO: We should use the HTTP Expires header to invalidate our cache per\n      // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-6.2.3\n\n      if (this.cacheEncryptionKeys_ && set$$1 && !storedKey && key.bytes) {\n        this.keyCache_[id] = storedKey = {\n          resolvedUri: key.resolvedUri,\n          bytes: key.bytes\n        };\n      }\n\n      var result = {\n        resolvedUri: (storedKey || key).resolvedUri\n      };\n\n      if (storedKey) {\n        result.bytes = storedKey.bytes;\n      }\n\n      return result;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && ( // the source updater is created when init_ is called, so either having a\n      // source updater or being in the INIT state with a mimeType is enough\n      // to say we have all the needed configuration to start loading.\n      this.sourceUpdater_ || this.mimeType_ && this.state === 'INIT') && !this.paused();\n    }\n    /**\n     * load a playlist and start to fill the buffer\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      // un-pause\n      this.monitorBuffer_(); // if we don't have a playlist yet, keep waiting for one to be\n      // specified\n\n      if (!this.playlist_) {\n        return;\n      } // not sure if this is the best place for this\n\n\n      this.syncController_.setDateTimeMapping(this.playlist_); // if all the configuration is ready, initialize and begin loading\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      } // if we're in the middle of processing a segment already, don't\n      // kick off an additional segment request\n\n\n      if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n        return;\n      }\n\n      this.state = 'READY';\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.sourceUpdater_ = new SourceUpdater(this.mediaSource_, this.mimeType_, this.loaderType_, this.sourceBufferEmitter_);\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * set a playlist on the segment loader\n     *\n     * @param {PlaylistLoader} media the playlist to set on the segment loader\n     */\n\n  }, {\n    key: 'playlist',\n    value: function playlist(newPlaylist) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (!newPlaylist) {\n        return;\n      }\n\n      var oldPlaylist = this.playlist_;\n      var segmentInfo = this.pendingSegment_;\n      this.playlist_ = newPlaylist;\n      this.xhrOptions_ = options; // when we haven't started playing yet, the start of a live playlist\n      // is always our zero-time so force a sync update each time the playlist\n      // is refreshed from the server\n\n      if (!this.hasPlayed_()) {\n        newPlaylist.syncInfo = {\n          mediaSequence: newPlaylist.mediaSequence,\n          time: 0\n        };\n      }\n\n      var oldId = null;\n\n      if (oldPlaylist) {\n        if (oldPlaylist.id) {\n          oldId = oldPlaylist.id;\n        } else if (oldPlaylist.uri) {\n          oldId = oldPlaylist.uri;\n        }\n      }\n\n      this.logger_('playlist update [' + oldId + ' => ' + (newPlaylist.id || newPlaylist.uri) + ']'); // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n      // in LIVE, we always want to update with new playlists (including refreshes)\n\n      this.trigger('syncinfoupdate'); // if we were unpaused but waiting for a playlist, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      }\n\n      if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n        if (this.mediaIndex !== null) {\n          // we must \"resync\" the segment loader when we switch renditions and\n          // the segment loader is already synced to the previous rendition\n          this.resyncLoader();\n        } // the rest of this function depends on `oldPlaylist` being defined\n\n\n        return;\n      } // we reloaded the same playlist so we are in a live scenario\n      // and we will likely need to adjust the mediaIndex\n\n\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n      this.logger_('live window shift [' + mediaSequenceDiff + ']'); // update the mediaIndex on the SegmentLoader\n      // this is important because we can abort a request and this value must be\n      // equal to the last appended mediaIndex\n\n      if (this.mediaIndex !== null) {\n        this.mediaIndex -= mediaSequenceDiff;\n      } // update the mediaIndex on the SegmentInfo object\n      // this is important because we will update this.mediaIndex with this value\n      // in `handleUpdateEnd_` after the segment has been successfully appended\n\n\n      if (segmentInfo) {\n        segmentInfo.mediaIndex -= mediaSequenceDiff; // we need to update the referenced segment so that timing information is\n        // saved for the new playlist's segment, however, if the segment fell off the\n        // playlist, we can leave the old reference and just lose the timing info\n\n        if (segmentInfo.mediaIndex >= 0) {\n          segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n        }\n      }\n\n      this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n    }\n    /**\n     * Prevent the loader from fetching additional segments. If there\n     * is a segment request outstanding, it will finish processing\n     * before the loader halts. A segment loader can be unpaused by\n     * calling load().\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n        this.checkBufferTimeout_ = null;\n      }\n    }\n    /**\n     * Returns whether the segment loader is fetching additional\n     * segments when given the opportunity. This property can be\n     * modified through calls to pause() and load().\n     */\n\n  }, {\n    key: 'paused',\n    value: function paused() {\n      return this.checkBufferTimeout_ === null;\n    }\n    /**\n     * create/set the following mimetype on the SourceBuffer through a\n     * SourceUpdater\n     *\n     * @param {String} mimeType the mime type string to use\n     * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer\n     * is added to the media source\n     */\n\n  }, {\n    key: 'mimeType',\n    value: function mimeType(_mimeType, sourceBufferEmitter) {\n      if (this.mimeType_) {\n        return;\n      }\n\n      this.mimeType_ = _mimeType;\n      this.sourceBufferEmitter_ = sourceBufferEmitter; // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n    }\n    /**\n     * Delete all the buffered data and reset the SegmentLoader\n     * @param {Function} [done] an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'resetEverything',\n    value: function resetEverything(done) {\n      this.ended_ = false;\n      this.resetLoader();\n      this.remove(0, this.duration_(), done); // clears fmp4 captions\n\n      if (this.captionParser_) {\n        this.captionParser_.clearAllCaptions();\n      }\n\n      this.trigger('reseteverything');\n    }\n    /**\n     * Force the SegmentLoader to resync and start loading around the currentTime instead\n     * of starting at the end of the buffer\n     *\n     * Useful for fast quality changes\n     */\n\n  }, {\n    key: 'resetLoader',\n    value: function resetLoader() {\n      this.fetchAtBuffer_ = false;\n      this.resyncLoader();\n    }\n    /**\n     * Force the SegmentLoader to restart synchronization and make a conservative guess\n     * before returning to the simple walk-forward method\n     */\n\n  }, {\n    key: 'resyncLoader',\n    value: function resyncLoader() {\n      this.mediaIndex = null;\n      this.syncPoint_ = null;\n      this.abort();\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     * @param {Function} [done] - an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end, done) {\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.remove(start, end, done);\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n\n      if (this.inbandTextTracks_) {\n        for (var id in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[id]);\n        }\n      }\n    }\n    /**\n     * (re-)schedule monitorBufferTick_ to run as soon as possible\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBuffer_',\n    value: function monitorBuffer_() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), 1);\n    }\n    /**\n     * As long as the SegmentLoader is in the READY state, periodically\n     * invoke fillBuffer_().\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBufferTick_',\n    value: function monitorBufferTick_() {\n      if (this.state === 'READY') {\n        this.fillBuffer_();\n      }\n\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      if (this.sourceUpdater_.updating()) {\n        return;\n      }\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      } // see if we need to begin loading immediately\n\n\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.isEndOfStream_(segmentInfo.mediaIndex)) {\n        this.endOfStream();\n        return;\n      }\n\n      if (segmentInfo.mediaIndex === this.playlist_.segments.length - 1 && this.mediaSource_.readyState === 'ended' && !this.seeking_()) {\n        return;\n      } // We will need to change timestampOffset of the sourceBuffer if:\n      // - The segment.timeline !== this.currentTimeline\n      //   (we are crossing a discontinuity somehow)\n      // - The \"timestampOffset\" for the start of this segment is less than\n      //   the currently set timestampOffset\n      // Also, clear captions if we are crossing a discontinuity boundary\n      // Previously, we changed the timestampOffset if the start of this segment\n      // is less than the currently set timestampOffset but this isn't wanted\n      // as it can produce bad behavior, especially around long running\n      // live streams\n\n\n      if (segmentInfo.timeline !== this.currentTimeline_) {\n        this.syncController_.reset();\n        segmentInfo.timestampOffset = segmentInfo.startOfSegment;\n\n        if (this.captionParser_) {\n          this.captionParser_.clearAllCaptions();\n        }\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n    /**\n     * Determines if this segment loader is at the end of it's stream.\n     *\n     * @param {Number} mediaIndex the index of segment we last appended\n     * @param {Object} [playlist=this.playlist_] a media playlist object\n     * @returns {Boolean} true if at end of stream, false otherwise.\n     */\n\n  }, {\n    key: 'isEndOfStream_',\n    value: function isEndOfStream_(mediaIndex) {\n      var playlist = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.playlist_;\n      return detectEndOfStream(playlist, this.mediaSource_, mediaIndex) && !this.sourceUpdater_.updating();\n    }\n    /**\n     * Determines what segment request should be made, given current playback\n     * state.\n     *\n     * @param {TimeRanges} buffered - the state of the buffer\n     * @param {Object} playlist - the playlist object to fetch segments from\n     * @param {Number} mediaIndex - the previous mediaIndex fetched or null\n     * @param {Boolean} hasPlayed - a flag indicating whether we have played or not\n     * @param {Number} currentTime - the playback position in seconds\n     * @param {Object} syncPoint - a segment info object that describes the\n     * @returns {Object} a segment request object that describes the segment to load\n     */\n\n  }, {\n    key: 'checkBuffer_',\n    value: function checkBuffer_(buffered, playlist, mediaIndex, hasPlayed, currentTime, syncPoint) {\n      var lastBufferedEnd = 0;\n      var startOfSegment = void 0;\n\n      if (buffered.length) {\n        lastBufferedEnd = buffered.end(buffered.length - 1);\n      }\n\n      var bufferedTime = Math.max(0, lastBufferedEnd - currentTime);\n\n      if (!playlist.segments.length) {\n        return null;\n      } // if there is plenty of content buffered, and the video has\n      // been played before relax for awhile\n\n\n      if (bufferedTime >= this.goalBufferLength_()) {\n        return null;\n      } // if the video has not yet played once, and we already have\n      // one segment downloaded do nothing\n\n\n      if (!hasPlayed && bufferedTime >= 1) {\n        return null;\n      } // When the syncPoint is null, there is no way of determining a good\n      // conservative segment index to fetch from\n      // The best thing to do here is to get the kind of sync-point data by\n      // making a request\n\n\n      if (syncPoint === null) {\n        mediaIndex = this.getSyncSegmentCandidate_(playlist);\n        return this.generateSegmentInfo_(playlist, mediaIndex, null, true);\n      } // Under normal playback conditions fetching is a simple walk forward\n\n\n      if (mediaIndex !== null) {\n        var segment = playlist.segments[mediaIndex];\n\n        if (segment && segment.end) {\n          startOfSegment = segment.end;\n        } else {\n          startOfSegment = lastBufferedEnd;\n        }\n\n        return this.generateSegmentInfo_(playlist, mediaIndex + 1, startOfSegment, false);\n      } // There is a sync-point but the lack of a mediaIndex indicates that\n      // we need to make a good conservative guess about which segment to\n      // fetch\n\n\n      if (this.fetchAtBuffer_) {\n        // Find the segment containing the end of the buffer\n        var mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, lastBufferedEnd, syncPoint.segmentIndex, syncPoint.time);\n        mediaIndex = mediaSourceInfo.mediaIndex;\n        startOfSegment = mediaSourceInfo.startTime;\n      } else {\n        // Find the segment containing currentTime\n        var _mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, currentTime, syncPoint.segmentIndex, syncPoint.time);\n\n        mediaIndex = _mediaSourceInfo.mediaIndex;\n        startOfSegment = _mediaSourceInfo.startTime;\n      }\n\n      return this.generateSegmentInfo_(playlist, mediaIndex, startOfSegment, false);\n    }\n    /**\n     * The segment loader has no recourse except to fetch a segment in the\n     * current playlist and use the internal timestamps in that segment to\n     * generate a syncPoint. This function returns a good candidate index\n     * for that process.\n     *\n     * @param {Object} playlist - the playlist object to look for a\n     * @returns {Number} An index of a segment from the playlist to load\n     */\n\n  }, {\n    key: 'getSyncSegmentCandidate_',\n    value: function getSyncSegmentCandidate_(playlist) {\n      var _this2 = this;\n\n      if (this.currentTimeline_ === -1) {\n        return 0;\n      }\n\n      var segmentIndexArray = playlist.segments.map(function (s, i) {\n        return {\n          timeline: s.timeline,\n          segmentIndex: i\n        };\n      }).filter(function (s) {\n        return s.timeline === _this2.currentTimeline_;\n      });\n\n      if (segmentIndexArray.length) {\n        return segmentIndexArray[Math.min(segmentIndexArray.length - 1, 1)].segmentIndex;\n      }\n\n      return Math.max(playlist.segments.length - 1, 0);\n    }\n  }, {\n    key: 'generateSegmentInfo_',\n    value: function generateSegmentInfo_(playlist, mediaIndex, startOfSegment, isSyncRequest) {\n      if (mediaIndex < 0 || mediaIndex >= playlist.segments.length) {\n        return null;\n      }\n\n      var segment = playlist.segments[mediaIndex];\n      return {\n        requestId: 'segment-loader-' + Math.random(),\n        // resolve the segment URL relative to the playlist\n        uri: segment.resolvedUri,\n        // the segment's mediaIndex at the time it was requested\n        mediaIndex: mediaIndex,\n        // whether or not to update the SegmentLoader's state with this\n        // segment's mediaIndex\n        isSyncRequest: isSyncRequest,\n        startOfSegment: startOfSegment,\n        // the segment's playlist\n        playlist: playlist,\n        // unencrypted bytes of the segment\n        bytes: null,\n        // when a key is defined for this segment, the encrypted bytes\n        encryptedBytes: null,\n        // The target timestampOffset for this segment when we append it\n        // to the source buffer\n        timestampOffset: null,\n        // The timeline that the segment is in\n        timeline: segment.timeline,\n        // The expected duration of the segment in seconds\n        duration: segment.duration,\n        // retain the segment in case the playlist updates while doing an async process\n        segment: segment\n      };\n    }\n    /**\n     * Determines if the network has enough bandwidth to complete the current segment\n     * request in a timely manner. If not, the request will be aborted early and bandwidth\n     * updated to trigger a playlist switch.\n     *\n     * @param {Object} stats\n     *        Object containing stats about the request timing and size\n     * @return {Boolean} True if the request was aborted, false otherwise\n     * @private\n     */\n\n  }, {\n    key: 'abortRequestEarly_',\n    value: function abortRequestEarly_(stats) {\n      if (this.hls_.tech_.paused() || // Don't abort if the current playlist is on the lowestEnabledRendition\n      // TODO: Replace using timeout with a boolean indicating whether this playlist is\n      //       the lowestEnabledRendition.\n      !this.xhrOptions_.timeout || // Don't abort if we have no bandwidth information to estimate segment sizes\n      !this.playlist_.attributes.BANDWIDTH) {\n        return false;\n      } // Wait at least 1 second since the first byte of data has been received before\n      // using the calculated bandwidth from the progress event to allow the bitrate\n      // to stabilize\n\n\n      if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n        return false;\n      }\n\n      var currentTime = this.currentTime_();\n      var measuredBandwidth = stats.bandwidth;\n      var segmentDuration = this.pendingSegment_.duration;\n      var requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived); // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n      // if we are only left with less than 1 second when the request completes.\n      // A negative timeUntilRebuffering indicates we are already rebuffering\n\n      var timeUntilRebuffer$$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.hls_.tech_.playbackRate()) - 1; // Only consider aborting early if the estimated time to finish the download\n      // is larger than the estimated time until the player runs out of forward buffer\n\n      if (requestTimeRemaining <= timeUntilRebuffer$$1) {\n        return false;\n      }\n\n      var switchCandidate = minRebufferMaxBandwidthSelector({\n        master: this.hls_.playlists.master,\n        currentTime: currentTime,\n        bandwidth: measuredBandwidth,\n        duration: this.duration_(),\n        segmentDuration: segmentDuration,\n        timeUntilRebuffer: timeUntilRebuffer$$1,\n        currentTimeline: this.currentTimeline_,\n        syncController: this.syncController_\n      });\n\n      if (!switchCandidate) {\n        return;\n      }\n\n      var rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$$1;\n      var timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n      var minimumTimeSaving = 0.5; // If we are already rebuffering, increase the amount of variance we add to the\n      // potential round trip time of the new request so that we are not too aggressive\n      // with switching to a playlist that might save us a fraction of a second.\n\n      if (timeUntilRebuffer$$1 <= TIME_FUDGE_FACTOR) {\n        minimumTimeSaving = 1;\n      }\n\n      if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n        return false;\n      } // set the bandwidth to that of the desired playlist being sure to scale by\n      // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n      // don't trigger a bandwidthupdate as the bandwidth is artifial\n\n\n      this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n      this.abort();\n      this.trigger('earlyabort');\n      return true;\n    }\n    /**\n     * XHR `progress` event handler\n     *\n     * @param {Event}\n     *        The XHR `progress` event\n     * @param {Object} simpleSegment\n     *        A simplified segment object copy\n     * @private\n     */\n\n  }, {\n    key: 'handleProgress_',\n    value: function handleProgress_(event, simpleSegment) {\n      if (!this.pendingSegment_ || simpleSegment.requestId !== this.pendingSegment_.requestId || this.abortRequestEarly_(simpleSegment.stats)) {\n        return;\n      }\n\n      this.trigger('progress');\n    }\n    /**\n     * load a specific segment from a request into the buffer\n     *\n     * @private\n     */\n\n  }, {\n    key: 'loadSegment_',\n    value: function loadSegment_(segmentInfo) {\n      this.state = 'WAITING';\n      this.pendingSegment_ = segmentInfo;\n      this.trimBackBuffer_(segmentInfo);\n      segmentInfo.abortRequests = mediaSegmentRequest(this.hls_.xhr, this.xhrOptions_, this.decrypter_, this.captionParser_, this.createSimplifiedSegmentObj_(segmentInfo), // progress callback\n      this.handleProgress_.bind(this), this.segmentRequestFinished_.bind(this));\n    }\n    /**\n     * trim the back buffer so that we don't have too much data\n     * in the source buffer\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     */\n\n  }, {\n    key: 'trimBackBuffer_',\n    value: function trimBackBuffer_(segmentInfo) {\n      var removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10); // Chrome has a hard limit of 150MB of\n      // buffer and a very conservative \"garbage collector\"\n      // We manually clear out the old buffer to ensure\n      // we don't trigger the QuotaExceeded error\n      // on the source buffer during subsequent appends\n\n      if (removeToTime > 0) {\n        this.remove(0, removeToTime);\n      }\n    }\n    /**\n     * created a simplified copy of the segment object with just the\n     * information necessary to perform the XHR and decryption\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     * @returns {Object} a simplified segment object copy\n     */\n\n  }, {\n    key: 'createSimplifiedSegmentObj_',\n    value: function createSimplifiedSegmentObj_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var simpleSegment = {\n        resolvedUri: segment.resolvedUri,\n        byterange: segment.byterange,\n        requestId: segmentInfo.requestId\n      };\n\n      if (segment.key) {\n        // if the media sequence is greater than 2^32, the IV will be incorrect\n        // assuming 10s segments, that would be about 1300 years\n        var iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n        simpleSegment.key = this.segmentKey(segment.key);\n        simpleSegment.key.iv = iv;\n      }\n\n      if (segment.map) {\n        simpleSegment.map = this.initSegment(segment.map);\n      }\n\n      return simpleSegment;\n    }\n    /**\n     * Handle the callback from the segmentRequest function and set the\n     * associated SegmentLoader state and errors if necessary\n     *\n     * @private\n     */\n\n  }, {\n    key: 'segmentRequestFinished_',\n    value: function segmentRequestFinished_(error, simpleSegment) {\n      // every request counts as a media request even if it has been aborted\n      // or canceled due to a timeout\n      this.mediaRequests += 1;\n\n      if (simpleSegment.stats) {\n        this.mediaBytesTransferred += simpleSegment.stats.bytesReceived;\n        this.mediaTransferDuration += simpleSegment.stats.roundTripTime;\n      } // The request was aborted and the SegmentLoader has already been reset\n\n\n      if (!this.pendingSegment_) {\n        this.mediaRequestsAborted += 1;\n        return;\n      } // the request was aborted and the SegmentLoader has already started\n      // another request. this can happen when the timeout for an aborted\n      // request triggers due to a limitation in the XHR library\n      // do not count this as any sort of request or we risk double-counting\n\n\n      if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n        return;\n      } // an error occurred from the active pendingSegment_ so reset everything\n\n\n      if (error) {\n        this.pendingSegment_ = null;\n        this.state = 'READY'; // the requests were aborted just record the aborted stat and exit\n        // this is not a true error condition and nothing corrective needs\n        // to be done\n\n        if (error.code === REQUEST_ERRORS.ABORTED) {\n          this.mediaRequestsAborted += 1;\n          return;\n        }\n\n        this.pause(); // the error is really just that at least one of the requests timed-out\n        // set the bandwidth to a very low value and trigger an ABR switch to\n        // take emergency action\n\n        if (error.code === REQUEST_ERRORS.TIMEOUT) {\n          this.mediaRequestsTimedout += 1;\n          this.bandwidth = 1;\n          this.roundTrip = NaN;\n          this.trigger('bandwidthupdate');\n          return;\n        } // if control-flow has arrived here, then the error is real\n        // emit an error event to blacklist the current playlist\n\n\n        this.mediaRequestsErrored += 1;\n        this.error(error);\n        this.trigger('error');\n        return;\n      } // the response was a success so set any bandwidth stats the request\n      // generated for ABR purposes\n\n\n      this.bandwidth = simpleSegment.stats.bandwidth;\n      this.roundTrip = simpleSegment.stats.roundTripTime; // if this request included an initialization segment, save that data\n      // to the initSegment cache\n\n      if (simpleSegment.map) {\n        simpleSegment.map = this.initSegment(simpleSegment.map, true);\n      } // if this request included a segment key, save that data in the cache\n\n\n      if (simpleSegment.key) {\n        this.segmentKey(simpleSegment.key, true);\n      }\n\n      this.processSegmentResponse_(simpleSegment);\n    }\n    /**\n     * Move any important data from the simplified segment object\n     * back to the real segment object for future phases\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processSegmentResponse_',\n    value: function processSegmentResponse_(simpleSegment) {\n      var segmentInfo = this.pendingSegment_;\n      segmentInfo.bytes = simpleSegment.bytes;\n\n      if (simpleSegment.map) {\n        segmentInfo.segment.map.bytes = simpleSegment.map.bytes;\n      }\n\n      segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests; // This has fmp4 captions, add them to text tracks\n\n      if (simpleSegment.fmp4Captions) {\n        createCaptionsTrackIfNotExists(this.inbandTextTracks_, this.hls_.tech_, simpleSegment.captionStreams);\n        addCaptionData({\n          inbandTextTracks: this.inbandTextTracks_,\n          captionArray: simpleSegment.fmp4Captions,\n          // fmp4s will not have a timestamp offset\n          timestampOffset: 0\n        }); // Reset stored captions since we added parsed\n        // captions to a text track at this point\n\n        if (this.captionParser_) {\n          this.captionParser_.clearParsedCaptions();\n        }\n      }\n\n      this.handleSegment_();\n    }\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var timingInfo = this.syncController_.probeSegmentInfo(segmentInfo); // When we have our first timing info, determine what media types this loader is\n      // dealing with. Although we're maintaining extra state, it helps to preserve the\n      // separation of segment loader from the actual source buffers.\n\n      if (typeof this.startingMedia_ === 'undefined' && timingInfo && ( // Guard against cases where we're not getting timing info at all until we are\n      // certain that all streams will provide it.\n      timingInfo.containsAudio || timingInfo.containsVideo)) {\n        this.startingMedia_ = {\n          containsAudio: timingInfo.containsAudio,\n          containsVideo: timingInfo.containsVideo\n        };\n      }\n\n      var illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.startingMedia_, timingInfo);\n\n      if (illegalMediaSwitchError) {\n        this.error({\n          message: illegalMediaSwitchError,\n          blacklistDuration: Infinity\n        });\n        this.trigger('error');\n        return;\n      }\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      if (segmentInfo.timestampOffset !== null && segmentInfo.timestampOffset !== this.sourceUpdater_.timestampOffset()) {\n        this.sourceUpdater_.timestampOffset(segmentInfo.timestampOffset); // fired when a timestamp offset is set in HLS (can also identify discontinuities)\n\n        this.trigger('timestampoffset');\n      }\n\n      var timelineMapping = this.syncController_.mappingForTimeline(segmentInfo.timeline);\n\n      if (timelineMapping !== null) {\n        this.trigger({\n          type: 'segmenttimemapping',\n          mapping: timelineMapping\n        });\n      }\n\n      this.state = 'APPENDING'; // if the media initialization segment is changing, append it\n      // before the content segment\n\n      if (segment.map) {\n        var initId = initSegmentId(segment.map);\n\n        if (!this.activeInitSegmentId_ || this.activeInitSegmentId_ !== initId) {\n          var initSegment = this.initSegment(segment.map);\n          this.sourceUpdater_.appendBuffer({\n            bytes: initSegment.bytes\n          }, function () {\n            _this3.activeInitSegmentId_ = initId;\n          });\n        }\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n\n      if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n        this.mediaSecondsLoaded += segment.end - segment.start;\n      } else {\n        this.mediaSecondsLoaded += segment.duration;\n      }\n\n      this.logger_(segmentInfoString(segmentInfo));\n      this.sourceUpdater_.appendBuffer({\n        bytes: segmentInfo.bytes,\n        videoSegmentTimingInfoCallback: this.handleVideoSegmentTimingInfo_.bind(this, segmentInfo.requestId)\n      }, this.handleUpdateEnd_.bind(this));\n    }\n  }, {\n    key: 'handleVideoSegmentTimingInfo_',\n    value: function handleVideoSegmentTimingInfo_(requestId, event) {\n      if (!this.pendingSegment_ || requestId !== this.pendingSegment_.requestId) {\n        return;\n      }\n\n      var segment = this.pendingSegment_.segment;\n\n      if (!segment.videoTimingInfo) {\n        segment.videoTimingInfo = {};\n      }\n\n      segment.videoTimingInfo.transmuxerPrependedSeconds = event.videoSegmentTimingInfo.prependedContentDuration || 0;\n      segment.videoTimingInfo.transmuxedPresentationStart = event.videoSegmentTimingInfo.start.presentation;\n      segment.videoTimingInfo.transmuxedPresentationEnd = event.videoSegmentTimingInfo.end.presentation; // mainly used as a reference for debugging\n\n      segment.videoTimingInfo.baseMediaDecodeTime = event.videoSegmentTimingInfo.baseMediaDecodeTime;\n    }\n    /**\n     * callback to run when appendBuffer is finished. detects if we are\n     * in a good state to do things with the data we got, or if we need\n     * to wait for more\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleUpdateEnd_',\n    value: function handleUpdateEnd_() {\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n\n        if (!this.paused()) {\n          this.monitorBuffer_();\n        }\n\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var isWalkingForward = this.mediaIndex !== null;\n      this.pendingSegment_ = null;\n      this.recordThroughput_(segmentInfo);\n      this.addSegmentMetadataCue_(segmentInfo);\n      this.state = 'READY';\n      this.mediaIndex = segmentInfo.mediaIndex;\n      this.fetchAtBuffer_ = true;\n      this.currentTimeline_ = segmentInfo.timeline; // We must update the syncinfo to recalculate the seekable range before\n      // the following conditional otherwise it may consider this a bad \"guess\"\n      // and attempt to resync when the post-update seekable window and live\n      // point would mean that this was the perfect segment to fetch\n\n      this.trigger('syncinfoupdate'); // If we previously appended a segment that ends more than 3 targetDurations before\n      // the currentTime_ that means that our conservative guess was too conservative.\n      // In that case, reset the loader state so that we try to use any information gained\n      // from the previous request to create a new, more accurate, sync-point.\n\n      if (segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3) {\n        this.resetEverything();\n        return;\n      } // Don't do a rendition switch unless we have enough time to get a sync segment\n      // and conservatively guess\n\n\n      if (isWalkingForward) {\n        this.trigger('bandwidthupdate');\n      }\n\n      this.trigger('progress'); // any time an update finishes and the last segment is in the\n      // buffer, end the stream. this ensures the \"ended\" event will\n      // fire if playback reaches that point.\n\n      if (this.isEndOfStream_(segmentInfo.mediaIndex + 1, segmentInfo.playlist)) {\n        this.endOfStream();\n      }\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * Records the current throughput of the decrypt, transmux, and append\n     * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n     * moving average of the throughput. `throughput.count` is the number of\n     * data points in the average.\n     *\n     * @private\n     * @param {Object} segmentInfo the object returned by loadSegment\n     */\n\n  }, {\n    key: 'recordThroughput_',\n    value: function recordThroughput_(segmentInfo) {\n      var rate = this.throughput.rate; // Add one to the time to ensure that we don't accidentally attempt to divide\n      // by zero in the case where the throughput is ridiculously high\n\n      var segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1; // Multiply by 8000 to convert from bytes/millisecond to bits/second\n\n      var segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000); // This is just a cumulative moving average calculation:\n      //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n\n      this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n    }\n    /**\n     * Adds a cue to the segment-metadata track with some metadata information about the\n     * segment\n     *\n     * @private\n     * @param {Object} segmentInfo\n     *        the object returned by loadSegment\n     * @method addSegmentMetadataCue_\n     */\n\n  }, {\n    key: 'addSegmentMetadataCue_',\n    value: function addSegmentMetadataCue_(segmentInfo) {\n      if (!this.segmentMetadataTrack_) {\n        return;\n      }\n\n      var segment = segmentInfo.segment;\n      var start = segment.start;\n      var end = segment.end; // Do not try adding the cue if the start and end times are invalid.\n\n      if (!finite(start) || !finite(end)) {\n        return;\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n      var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n      var value = {\n        custom: segment.custom,\n        dateTimeObject: segment.dateTimeObject,\n        dateTimeString: segment.dateTimeString,\n        bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n        resolution: segmentInfo.playlist.attributes.RESOLUTION,\n        codecs: segmentInfo.playlist.attributes.CODECS,\n        byteLength: segmentInfo.byteLength,\n        uri: segmentInfo.uri,\n        timeline: segmentInfo.timeline,\n        playlist: segmentInfo.playlist.uri,\n        start: start,\n        end: end\n      };\n      var data = JSON.stringify(value);\n      var cue = new Cue(start, end, data); // Attach the metadata to the value property of the cue to keep consistency between\n      // the differences of WebKitDataCue in safari and VTTCue in other browsers\n\n      cue.value = value;\n      this.segmentMetadataTrack_.addCue(cue);\n    }\n  }]);\n  return SegmentLoader;\n}(videojs$1.EventTarget);\n\nvar uint8ToUtf8 = function uint8ToUtf8(uintArray) {\n  return decodeURIComponent(escape(String.fromCharCode.apply(null, uintArray)));\n};\n/**\n * @file vtt-segment-loader.js\n */\n\n\nvar VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(function (_char2) {\n  return _char2.charCodeAt(0);\n}));\n/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nvar VTTSegmentLoader = function (_SegmentLoader) {\n  inherits(VTTSegmentLoader, _SegmentLoader);\n\n  function VTTSegmentLoader(settings) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VTTSegmentLoader); // SegmentLoader requires a MediaSource be specified or it will throw an error;\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\n\n    var _this = possibleConstructorReturn(this, (VTTSegmentLoader.__proto__ || Object.getPrototypeOf(VTTSegmentLoader)).call(this, settings, options));\n\n    _this.mediaSource_ = null;\n    _this.subtitlesTrack_ = null;\n    return _this;\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n\n  createClass(VTTSegmentLoader, [{\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues.length) {\n        return videojs$1.createTimeRanges();\n      }\n\n      var cues = this.subtitlesTrack_.cues;\n      var start = cues[0].startTime;\n      var end = cues[cues.length - 1].startTime;\n      return videojs$1.createTimeRanges([[start, end]]);\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        // append WebVTT line terminators to the media initialization segment if it exists\n        // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n        // requires two or more WebVTT line terminators between the WebVTT header and the\n        // rest of the file\n        var combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n        var combinedSegment = new Uint8Array(combinedByteLength);\n        combinedSegment.set(map.bytes);\n        combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: combinedSegment\n        };\n      }\n\n      return storedMap || map;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * Set a subtitle track on the segment loader to add subtitles to\n     *\n     * @param {TextTrack=} track\n     *        The text track to add loaded subtitles to\n     * @return {TextTrack}\n     *        Returns the subtitles track\n     */\n\n  }, {\n    key: 'track',\n    value: function track(_track) {\n      if (typeof _track === 'undefined') {\n        return this.subtitlesTrack_;\n      }\n\n      this.subtitlesTrack_ = _track; // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n\n      return this.subtitlesTrack_;\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      removeCuesFromTrack(start, end, this.subtitlesTrack_);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      var _this2 = this;\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      } // see if we need to begin loading immediately\n\n\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n      segmentInfo = this.skipEmptySegments_(segmentInfo);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n        // We don't have the timestamp offset that we need to sync subtitles.\n        // Rerun on a timestamp offset or user interaction.\n        var checkTimestampOffset = function checkTimestampOffset() {\n          _this2.state = 'READY';\n\n          if (!_this2.paused()) {\n            // if not paused, queue a buffer check as soon as possible\n            _this2.monitorBuffer_();\n          }\n        };\n\n        this.syncController_.one('timestampoffset', checkTimestampOffset);\n        this.state = 'WAITING_ON_TIMELINE';\n        return;\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n    /**\n     * Prevents the segment loader from requesting segments we know contain no subtitles\n     * by walking forward until we find the next segment that we don't know whether it is\n     * empty or not.\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @return {Object}\n     *         a segment info object that describes the current segment\n     */\n\n  }, {\n    key: 'skipEmptySegments_',\n    value: function skipEmptySegments_(segmentInfo) {\n      while (segmentInfo && segmentInfo.segment.empty) {\n        segmentInfo = this.generateSegmentInfo_(segmentInfo.playlist, segmentInfo.mediaIndex + 1, segmentInfo.startOfSegment + segmentInfo.duration, segmentInfo.isSyncRequest);\n      }\n\n      return segmentInfo;\n    }\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_ || !this.subtitlesTrack_) {\n        this.state = 'READY';\n        return;\n      }\n\n      this.state = 'APPENDING';\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n\n      if (typeof window$1.WebVTT !== 'function' && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {\n        var loadHandler = void 0;\n\n        var errorHandler = function errorHandler() {\n          _this3.subtitlesTrack_.tech_.off('vttjsloaded', loadHandler);\n\n          _this3.error({\n            message: 'Error loading vtt.js'\n          });\n\n          _this3.state = 'READY';\n\n          _this3.pause();\n\n          _this3.trigger('error');\n        };\n\n        loadHandler = function loadHandler() {\n          _this3.subtitlesTrack_.tech_.off('vttjserror', errorHandler);\n\n          _this3.handleSegment_();\n        };\n\n        this.state = 'WAITING_ON_VTTJS';\n        this.subtitlesTrack_.tech_.one('vttjsloaded', loadHandler);\n        this.subtitlesTrack_.tech_.one('vttjserror', errorHandler);\n        return;\n      }\n\n      segment.requested = true;\n\n      try {\n        this.parseVTTCues_(segmentInfo);\n      } catch (e) {\n        this.error({\n          message: e.message\n        });\n        this.state = 'READY';\n        this.pause();\n        return this.trigger('error');\n      }\n\n      this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n      this.mediaSecondsLoaded += segment.duration;\n\n      if (segmentInfo.cues.length) {\n        // remove any overlapping cues to prevent doubling\n        this.remove(segmentInfo.cues[0].endTime, segmentInfo.cues[segmentInfo.cues.length - 1].endTime);\n      }\n\n      segmentInfo.cues.forEach(function (cue) {\n        _this3.subtitlesTrack_.addCue(cue);\n      });\n      this.handleUpdateEnd_();\n    }\n    /**\n     * Uses the WebVTT parser to parse the segment response\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @private\n     */\n\n  }, {\n    key: 'parseVTTCues_',\n    value: function parseVTTCues_(segmentInfo) {\n      var decoder = void 0;\n      var decodeBytesToString = false;\n\n      if (typeof window$1.TextDecoder === 'function') {\n        decoder = new window$1.TextDecoder('utf8');\n      } else {\n        decoder = window$1.WebVTT.StringDecoder();\n        decodeBytesToString = true;\n      }\n\n      var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, decoder);\n      segmentInfo.cues = [];\n      segmentInfo.timestampmap = {\n        MPEGTS: 0,\n        LOCAL: 0\n      };\n      parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n\n      parser.ontimestampmap = function (map) {\n        return segmentInfo.timestampmap = map;\n      };\n\n      parser.onparsingerror = function (error) {\n        videojs$1.log.warn('Error encountered when parsing cues: ' + error.message);\n      };\n\n      if (segmentInfo.segment.map) {\n        var mapData = segmentInfo.segment.map.bytes;\n\n        if (decodeBytesToString) {\n          mapData = uint8ToUtf8(mapData);\n        }\n\n        parser.parse(mapData);\n      }\n\n      var segmentData = segmentInfo.bytes;\n\n      if (decodeBytesToString) {\n        segmentData = uint8ToUtf8(segmentData);\n      }\n\n      parser.parse(segmentData);\n      parser.flush();\n    }\n    /**\n     * Updates the start and end times of any cues parsed by the WebVTT parser using\n     * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n     * from the SyncController\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @param {Object} mappingObj\n     *        object containing a mapping from TS to media time\n     * @param {Object} playlist\n     *        the playlist object containing the segment\n     * @private\n     */\n\n  }, {\n    key: 'updateTimeMapping_',\n    value: function updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n      var segment = segmentInfo.segment;\n\n      if (!mappingObj) {\n        // If the sync controller does not have a mapping of TS to Media Time for the\n        // timeline, then we don't have enough information to update the cue\n        // start/end times\n        return;\n      }\n\n      if (!segmentInfo.cues.length) {\n        // If there are no cues, we also do not have enough information to figure out\n        // segment timing. Mark that the segment contains no cues so we don't re-request\n        // an empty segment.\n        segment.empty = true;\n        return;\n      }\n\n      var timestampmap = segmentInfo.timestampmap;\n      var diff = timestampmap.MPEGTS / 90000 - timestampmap.LOCAL + mappingObj.mapping;\n      segmentInfo.cues.forEach(function (cue) {\n        // First convert cue time to TS time using the timestamp-map provided within the vtt\n        cue.startTime += diff;\n        cue.endTime += diff;\n      });\n\n      if (!playlist.syncInfo) {\n        var firstStart = segmentInfo.cues[0].startTime;\n        var lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n        playlist.syncInfo = {\n          mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: Math.min(firstStart, lastStart - segment.duration)\n        };\n      }\n    }\n  }]);\n  return VTTSegmentLoader;\n}(SegmentLoader);\n/**\n * @file ad-cue-tags.js\n */\n\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n */\n\n\nvar findAdCue = function findAdCue(track, mediaTime) {\n  var cues = track.cues;\n\n  for (var i = 0; i < cues.length; i++) {\n    var cue = cues[i];\n\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n\n  return null;\n};\n\nvar updateAdCues = function updateAdCues(media, track) {\n  var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  if (!media.segments) {\n    return;\n  }\n\n  var mediaTime = offset;\n  var cue = void 0;\n\n  for (var i = 0; i < media.segments.length; i++) {\n    var segment = media.segments[i];\n\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      } // otherwise extend cue until a CUE-IN is found\n\n\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime; // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        var adOffset = void 0;\n        var adTotal = void 0; // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n\n        var _segment$cueOutCont$s = segment.cueOutCont.split('/').map(parseFloat);\n\n        var _segment$cueOutCont$s2 = slicedToArray(_segment$cueOutCont$s, 2);\n\n        adOffset = _segment$cueOutCont$s2[0];\n        adTotal = _segment$cueOutCont$s2[1];\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n\n    mediaTime += segment.duration;\n  }\n};\n/**\n * @file sync-controller.js\n */\n\n\nvar tsprobe = tsInspector.inspect;\nvar syncPointStrategies = [// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (duration$$1 !== Infinity) {\n      var syncPoint = {\n        time: 0,\n        segmentIndex: 0\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}, // Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (!syncController.datetimeToDisplayTime) {\n      return null;\n    }\n\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.dateTimeObject) {\n        var segmentTime = segment.dateTimeObject.getTime() / 1000;\n        var segmentStart = segmentTime + syncController.datetimeToDisplayTime;\n        var distance = Math.abs(currentTime - segmentStart); // Once the distance begins to increase, or if distance is 0, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && (distance === 0 || lastDistance < distance)) {\n          break;\n        }\n\n        lastDistance = distance;\n        syncPoint = {\n          time: segmentStart,\n          segmentIndex: i\n        };\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.timeline === currentTimeline && typeof segment.start !== 'undefined') {\n        var distance = Math.abs(currentTime - segment.start); // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n          lastDistance = distance;\n          syncPoint = {\n            time: segment.start,\n            segmentIndex: i\n          };\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var syncPoint = null;\n    currentTime = currentTime || 0;\n\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      var lastDistance = null;\n\n      for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n        var segmentIndex = playlist.discontinuityStarts[i];\n        var discontinuity = playlist.discontinuitySequence + i + 1;\n        var discontinuitySync = syncController.discontinuities[discontinuity];\n\n        if (discontinuitySync) {\n          var distance = Math.abs(currentTime - discontinuitySync.time); // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: discontinuitySync.time,\n              segmentIndex: segmentIndex\n            };\n          }\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (playlist.syncInfo) {\n      var syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}];\n\nvar SyncController = function (_videojs$EventTarget) {\n  inherits(SyncController, _videojs$EventTarget);\n\n  function SyncController() {\n    classCallCheck(this, SyncController); // Segment Loader state variables...\n    // ...for synching across variants\n\n    var _this = possibleConstructorReturn(this, (SyncController.__proto__ || Object.getPrototypeOf(SyncController)).call(this));\n\n    _this.inspectCache_ = undefined; // ...for synching across variants\n\n    _this.timelines = [];\n    _this.discontinuities = [];\n    _this.datetimeToDisplayTime = null;\n    _this.logger_ = logger('SyncController');\n    return _this;\n  }\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {Number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {Number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @returns {Object}\n   *          A sync-point object\n   */\n\n\n  createClass(SyncController, [{\n    key: 'getSyncPoint',\n    value: function getSyncPoint(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = this.runStrategies_(playlist, duration$$1, currentTimeline, currentTime);\n\n      if (!syncPoints.length) {\n        // Signal that we need to attempt to get a sync-point manually\n        // by fetching a segment in the playlist and constructing\n        // a sync-point from that information\n        return null;\n      } // Now find the sync-point that is closest to the currentTime because\n      // that should result in the most accurate guess about which segment\n      // to fetch\n\n\n      return this.selectSyncPoint_(syncPoints, {\n        key: 'time',\n        value: currentTime\n      });\n    }\n    /**\n     * Calculate the amount of time that has expired off the playlist during playback\n     *\n     * @param {Playlist} playlist\n     *        Playlist object to calculate expired from\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playling a live source)\n     * @returns {Number|null}\n     *          The amount of time that has expired off the playlist during playback. Null\n     *          if no sync-points for the playlist can be found.\n     */\n\n  }, {\n    key: 'getExpiredTime',\n    value: function getExpiredTime(playlist, duration$$1) {\n      if (!playlist || !playlist.segments) {\n        return null;\n      }\n\n      var syncPoints = this.runStrategies_(playlist, duration$$1, playlist.discontinuitySequence, 0); // Without sync-points, there is not enough information to determine the expired time\n\n      if (!syncPoints.length) {\n        return null;\n      }\n\n      var syncPoint = this.selectSyncPoint_(syncPoints, {\n        key: 'segmentIndex',\n        value: 0\n      }); // If the sync-point is beyond the start of the playlist, we want to subtract the\n      // duration from index 0 to syncPoint.segmentIndex instead of adding.\n\n      if (syncPoint.segmentIndex > 0) {\n        syncPoint.time *= -1;\n      }\n\n      return Math.abs(syncPoint.time + sumDurations(playlist, syncPoint.segmentIndex, 0));\n    }\n    /**\n     * Runs each sync-point strategy and returns a list of sync-points returned by the\n     * strategies\n     *\n     * @private\n     * @param {Playlist} playlist\n     *        The playlist that needs a sync-point\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playing a live source)\n     * @param {Number} currentTimeline\n     *        The last timeline from which a segment was loaded\n     * @returns {Array}\n     *          A list of sync-point objects\n     */\n\n  }, {\n    key: 'runStrategies_',\n    value: function runStrategies_(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = []; // Try to find a sync-point in by utilizing various strategies...\n\n      for (var i = 0; i < syncPointStrategies.length; i++) {\n        var strategy = syncPointStrategies[i];\n        var syncPoint = strategy.run(this, playlist, duration$$1, currentTimeline, currentTime);\n\n        if (syncPoint) {\n          syncPoint.strategy = strategy.name;\n          syncPoints.push({\n            strategy: strategy.name,\n            syncPoint: syncPoint\n          });\n        }\n      }\n\n      return syncPoints;\n    }\n    /**\n     * Selects the sync-point nearest the specified target\n     *\n     * @private\n     * @param {Array} syncPoints\n     *        List of sync-points to select from\n     * @param {Object} target\n     *        Object specifying the property and value we are targeting\n     * @param {String} target.key\n     *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n     * @param {Number} target.value\n     *        The value to target for the specified key.\n     * @returns {Object}\n     *          The sync-point nearest the target\n     */\n\n  }, {\n    key: 'selectSyncPoint_',\n    value: function selectSyncPoint_(syncPoints, target) {\n      var bestSyncPoint = syncPoints[0].syncPoint;\n      var bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n      var bestStrategy = syncPoints[0].strategy;\n\n      for (var i = 1; i < syncPoints.length; i++) {\n        var newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n\n        if (newDistance < bestDistance) {\n          bestDistance = newDistance;\n          bestSyncPoint = syncPoints[i].syncPoint;\n          bestStrategy = syncPoints[i].strategy;\n        }\n      }\n\n      this.logger_('syncPoint for [' + target.key + ': ' + target.value + '] chosen with strategy' + (' [' + bestStrategy + ']: [time:' + bestSyncPoint.time + ',') + (' segmentIndex:' + bestSyncPoint.segmentIndex + ']'));\n      return bestSyncPoint;\n    }\n    /**\n     * Save any meta-data present on the segments when segments leave\n     * the live window to the playlist to allow for synchronization at the\n     * playlist level later.\n     *\n     * @param {Playlist} oldPlaylist - The previous active playlist\n     * @param {Playlist} newPlaylist - The updated and most current playlist\n     */\n\n  }, {\n    key: 'saveExpiredSegmentInfo',\n    value: function saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence; // When a segment expires from the playlist and it has a start time\n      // save that information as a possible sync-point reference in future\n\n      for (var i = mediaSequenceDiff - 1; i >= 0; i--) {\n        var lastRemovedSegment = oldPlaylist.segments[i];\n\n        if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n          newPlaylist.syncInfo = {\n            mediaSequence: oldPlaylist.mediaSequence + i,\n            time: lastRemovedSegment.start\n          };\n          this.logger_('playlist refresh sync: [time:' + newPlaylist.syncInfo.time + ',' + (' mediaSequence: ' + newPlaylist.syncInfo.mediaSequence + ']'));\n          this.trigger('syncinfoupdate');\n          break;\n        }\n      }\n    }\n    /**\n     * Save the mapping from playlist's ProgramDateTime to display. This should\n     * only ever happen once at the start of playback.\n     *\n     * @param {Playlist} playlist - The currently active playlist\n     */\n\n  }, {\n    key: 'setDateTimeMapping',\n    value: function setDateTimeMapping(playlist) {\n      if (!this.datetimeToDisplayTime && playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n        var playlistTimestamp = playlist.segments[0].dateTimeObject.getTime() / 1000;\n        this.datetimeToDisplayTime = -playlistTimestamp;\n      }\n    }\n    /**\n     * Reset the state of the inspection cache when we do a rendition\n     * switch\n     */\n\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.inspectCache_ = undefined;\n    }\n    /**\n     * Probe or inspect a fmp4 or an mpeg2-ts segment to determine the start\n     * and end of the segment in it's internal \"media time\". Used to generate\n     * mappings from that internal \"media time\" to the display time that is\n     * shown on the player.\n     *\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'probeSegmentInfo',\n    value: function probeSegmentInfo(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var playlist = segmentInfo.playlist;\n      var timingInfo = void 0;\n\n      if (segment.map) {\n        timingInfo = this.probeMp4Segment_(segmentInfo);\n      } else {\n        timingInfo = this.probeTsSegment_(segmentInfo);\n      }\n\n      if (timingInfo) {\n        if (this.calculateSegmentTimeMapping_(segmentInfo, timingInfo)) {\n          this.saveDiscontinuitySyncInfo_(segmentInfo); // If the playlist does not have sync information yet, record that information\n          // now with segment timing information\n\n          if (!playlist.syncInfo) {\n            playlist.syncInfo = {\n              mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n              time: segment.start\n            };\n          }\n        }\n      }\n\n      return timingInfo;\n    }\n    /**\n     * Probe an fmp4 or an mpeg2-ts segment to determine the start of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeMp4Segment_',\n    value: function probeMp4Segment_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var timescales = mp4probe.timescale(segment.map.bytes);\n      var startTime = mp4probe.startTime(timescales, segmentInfo.bytes);\n\n      if (segmentInfo.timestampOffset !== null) {\n        segmentInfo.timestampOffset -= startTime;\n      }\n\n      return {\n        start: startTime,\n        end: startTime + segment.duration\n      };\n    }\n    /**\n     * Probe an mpeg2-ts segment to determine the start and end of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeTsSegment_',\n    value: function probeTsSegment_(segmentInfo) {\n      var timeInfo = tsprobe(segmentInfo.bytes, this.inspectCache_);\n      var segmentStartTime = void 0;\n      var segmentEndTime = void 0;\n\n      if (!timeInfo) {\n        return null;\n      }\n\n      if (timeInfo.video && timeInfo.video.length === 2) {\n        this.inspectCache_ = timeInfo.video[1].dts;\n        segmentStartTime = timeInfo.video[0].dtsTime;\n        segmentEndTime = timeInfo.video[1].dtsTime;\n      } else if (timeInfo.audio && timeInfo.audio.length === 2) {\n        this.inspectCache_ = timeInfo.audio[1].dts;\n        segmentStartTime = timeInfo.audio[0].dtsTime;\n        segmentEndTime = timeInfo.audio[1].dtsTime;\n      }\n\n      var probedInfo = {\n        start: segmentStartTime,\n        end: segmentEndTime,\n        containsVideo: timeInfo.video && timeInfo.video.length === 2,\n        containsAudio: timeInfo.audio && timeInfo.audio.length === 2\n      };\n      return probedInfo;\n    }\n  }, {\n    key: 'timestampOffsetForTimeline',\n    value: function timestampOffsetForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n\n      return this.timelines[timeline].time;\n    }\n  }, {\n    key: 'mappingForTimeline',\n    value: function mappingForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n\n      return this.timelines[timeline].mapping;\n    }\n    /**\n     * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n     * save that display time to the segment.\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo\n     *        The current active request information\n     * @param {object} timingInfo\n     *        The start and end time of the current segment in \"media time\"\n     * @returns {Boolean}\n     *          Returns false if segment time mapping could not be calculated\n     */\n\n  }, {\n    key: 'calculateSegmentTimeMapping_',\n    value: function calculateSegmentTimeMapping_(segmentInfo, timingInfo) {\n      var segment = segmentInfo.segment;\n      var mappingObj = this.timelines[segmentInfo.timeline];\n\n      if (segmentInfo.timestampOffset !== null) {\n        mappingObj = {\n          time: segmentInfo.startOfSegment,\n          mapping: segmentInfo.startOfSegment - timingInfo.start\n        };\n        this.timelines[segmentInfo.timeline] = mappingObj;\n        this.trigger('timestampoffset');\n        this.logger_('time mapping for timeline ' + segmentInfo.timeline + ': ' + ('[time: ' + mappingObj.time + '] [mapping: ' + mappingObj.mapping + ']'));\n        segment.start = segmentInfo.startOfSegment;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else if (mappingObj) {\n        segment.start = timingInfo.start + mappingObj.mapping;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else {\n        return false;\n      }\n\n      return true;\n    }\n    /**\n     * Each time we have discontinuity in the playlist, attempt to calculate the location\n     * in display of the start of the discontinuity and save that. We also save an accuracy\n     * value so that we save values with the most accuracy (closest to 0.)\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'saveDiscontinuitySyncInfo_',\n    value: function saveDiscontinuitySyncInfo_(segmentInfo) {\n      var playlist = segmentInfo.playlist;\n      var segment = segmentInfo.segment; // If the current segment is a discontinuity then we know exactly where\n      // the start of the range and it's accuracy is 0 (greater accuracy values\n      // mean more approximation)\n\n      if (segment.discontinuity) {\n        this.discontinuities[segment.timeline] = {\n          time: segment.start,\n          accuracy: 0\n        };\n      } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n        // Search for future discontinuities that we can provide better timing\n        // information for and save that information for sync purposes\n        for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n          var segmentIndex = playlist.discontinuityStarts[i];\n          var discontinuity = playlist.discontinuitySequence + i + 1;\n          var mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n          var accuracy = Math.abs(mediaIndexDiff);\n\n          if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n            var time = void 0;\n\n            if (mediaIndexDiff < 0) {\n              time = segment.start - sumDurations(playlist, segmentInfo.mediaIndex, segmentIndex);\n            } else {\n              time = segment.end + sumDurations(playlist, segmentInfo.mediaIndex + 1, segmentIndex);\n            }\n\n            this.discontinuities[discontinuity] = {\n              time: time,\n              accuracy: accuracy\n            };\n          }\n        }\n      }\n    }\n  }]);\n  return SyncController;\n}(videojs$1.EventTarget);\n\nvar Decrypter$1 = new shimWorker(\"./decrypter-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n\n  var decrypterWorker = function () {\n    /*\n     * pkcs7.pad\n     * https://github.com/brightcove/pkcs7\n     *\n     * Copyright (c) 2014 Brightcove\n     * Licensed under the apache2 license.\n     */\n\n    /**\n     * Returns the subarray of a Uint8Array without PKCS#7 padding.\n     * @param padded {Uint8Array} unencrypted bytes that have been padded\n     * @return {Uint8Array} the unpadded bytes\n     * @see http://tools.ietf.org/html/rfc5652\n     */\n    function unpad(padded) {\n      return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n    }\n\n    var classCallCheck = function classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n\n    var inherits = function inherits(subClass, superClass) {\n      if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n      }\n\n      subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n          value: subClass,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n    };\n\n    var possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n      if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      }\n\n      return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n    };\n    /**\n     * @file aes.js\n     *\n     * This file contains an adaptation of the AES decryption algorithm\n     * from the Standford Javascript Cryptography Library. That work is\n     * covered by the following copyright and permissions notice:\n     *\n     * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n     * All rights reserved.\n     *\n     * Redistribution and use in source and binary forms, with or without\n     * modification, are permitted provided that the following conditions are\n     * met:\n     *\n     * 1. Redistributions of source code must retain the above copyright\n     *    notice, this list of conditions and the following disclaimer.\n     *\n     * 2. Redistributions in binary form must reproduce the above\n     *    copyright notice, this list of conditions and the following\n     *    disclaimer in the documentation and/or other materials provided\n     *    with the distribution.\n     *\n     * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n     * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n     * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n     * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n     * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n     * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n     * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n     * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n     * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n     * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n     * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n     *\n     * The views and conclusions contained in the software and documentation\n     * are those of the authors and should not be interpreted as representing\n     * official policies, either expressed or implied, of the authors.\n     */\n\n    /**\n     * Expand the S-box tables.\n     *\n     * @private\n     */\n\n\n    var precompute = function precompute() {\n      var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n      var encTable = tables[0];\n      var decTable = tables[1];\n      var sbox = encTable[4];\n      var sboxInv = decTable[4];\n      var i = void 0;\n      var x = void 0;\n      var xInv = void 0;\n      var d = [];\n      var th = [];\n      var x2 = void 0;\n      var x4 = void 0;\n      var x8 = void 0;\n      var s = void 0;\n      var tEnc = void 0;\n      var tDec = void 0; // Compute double and third tables\n\n      for (i = 0; i < 256; i++) {\n        th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n      }\n\n      for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n        // Compute sbox\n        s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n        s = s >> 8 ^ s & 255 ^ 99;\n        sbox[x] = s;\n        sboxInv[s] = x; // Compute MixColumns\n\n        x8 = d[x4 = d[x2 = d[x]]];\n        tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n        tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n        for (i = 0; i < 4; i++) {\n          encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n          decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n        }\n      } // Compactify. Considerable speedup on Firefox.\n\n\n      for (i = 0; i < 5; i++) {\n        encTable[i] = encTable[i].slice(0);\n        decTable[i] = decTable[i].slice(0);\n      }\n\n      return tables;\n    };\n\n    var aesTables = null;\n    /**\n     * Schedule out an AES key for both encryption and decryption. This\n     * is a low-level class. Use a cipher mode to do bulk encryption.\n     *\n     * @class AES\n     * @param key {Array} The key as an array of 4, 6 or 8 words.\n     */\n\n    var AES = function () {\n      function AES(key) {\n        classCallCheck(this, AES);\n        /**\n         * The expanded S-box and inverse S-box tables. These will be computed\n         * on the client so that we don't have to send them down the wire.\n         *\n         * There are two tables, _tables[0] is for encryption and\n         * _tables[1] is for decryption.\n         *\n         * The first 4 sub-tables are the expanded S-box with MixColumns. The\n         * last (_tables[01][4]) is the S-box itself.\n         *\n         * @private\n         */\n        // if we have yet to precompute the S-box tables\n        // do so now\n\n        if (!aesTables) {\n          aesTables = precompute();\n        } // then make a copy of that object for use\n\n\n        this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n        var i = void 0;\n        var j = void 0;\n        var tmp = void 0;\n        var encKey = void 0;\n        var decKey = void 0;\n        var sbox = this._tables[0][4];\n        var decTable = this._tables[1];\n        var keyLen = key.length;\n        var rcon = 1;\n\n        if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n          throw new Error('Invalid aes key size');\n        }\n\n        encKey = key.slice(0);\n        decKey = [];\n        this._key = [encKey, decKey]; // schedule encryption keys\n\n        for (i = keyLen; i < 4 * keyLen + 28; i++) {\n          tmp = encKey[i - 1]; // apply sbox\n\n          if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n            tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n            if (i % keyLen === 0) {\n              tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n              rcon = rcon << 1 ^ (rcon >> 7) * 283;\n            }\n          }\n\n          encKey[i] = encKey[i - keyLen] ^ tmp;\n        } // schedule decryption keys\n\n\n        for (j = 0; i; j++, i--) {\n          tmp = encKey[j & 3 ? i : i - 4];\n\n          if (i <= 4 || j < 4) {\n            decKey[j] = tmp;\n          } else {\n            decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n          }\n        }\n      }\n      /**\n       * Decrypt 16 bytes, specified as four 32-bit words.\n       *\n       * @param {Number} encrypted0 the first word to decrypt\n       * @param {Number} encrypted1 the second word to decrypt\n       * @param {Number} encrypted2 the third word to decrypt\n       * @param {Number} encrypted3 the fourth word to decrypt\n       * @param {Int32Array} out the array to write the decrypted words\n       * into\n       * @param {Number} offset the offset into the output array to start\n       * writing results\n       * @return {Array} The plaintext.\n       */\n\n\n      AES.prototype.decrypt = function decrypt$$1(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n        var key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n        var a = encrypted0 ^ key[0];\n        var b = encrypted3 ^ key[1];\n        var c = encrypted2 ^ key[2];\n        var d = encrypted1 ^ key[3];\n        var a2 = void 0;\n        var b2 = void 0;\n        var c2 = void 0; // key.length === 2 ?\n\n        var nInnerRounds = key.length / 4 - 2;\n        var i = void 0;\n        var kIndex = 4;\n        var table = this._tables[1]; // load up the tables\n\n        var table0 = table[0];\n        var table1 = table[1];\n        var table2 = table[2];\n        var table3 = table[3];\n        var sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n        for (i = 0; i < nInnerRounds; i++) {\n          a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n          b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n          c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n          d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n          kIndex += 4;\n          a = a2;\n          b = b2;\n          c = c2;\n        } // Last round.\n\n\n        for (i = 0; i < 4; i++) {\n          out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n          a2 = a;\n          a = b;\n          b = c;\n          c = d;\n          d = a2;\n        }\n      };\n\n      return AES;\n    }();\n    /**\n     * @file stream.js\n     */\n\n    /**\n     * A lightweight readable stream implemention that handles event dispatching.\n     *\n     * @class Stream\n     */\n\n\n    var Stream = function () {\n      function Stream() {\n        classCallCheck(this, Stream);\n        this.listeners = {};\n      }\n      /**\n       * Add a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n\n      Stream.prototype.on = function on(type, listener) {\n        if (!this.listeners[type]) {\n          this.listeners[type] = [];\n        }\n\n        this.listeners[type].push(listener);\n      };\n      /**\n       * Remove a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener  a function previously registered for this\n       * type of event through `on`\n       * @return {Boolean} if we could turn it off or not\n       */\n\n\n      Stream.prototype.off = function off(type, listener) {\n        if (!this.listeners[type]) {\n          return false;\n        }\n\n        var index = this.listeners[type].indexOf(listener);\n        this.listeners[type].splice(index, 1);\n        return index > -1;\n      };\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       *\n       * @param {String} type the event name\n       */\n\n\n      Stream.prototype.trigger = function trigger(type) {\n        var callbacks = this.listeners[type];\n\n        if (!callbacks) {\n          return;\n        } // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n\n\n        if (arguments.length === 2) {\n          var length = callbacks.length;\n\n          for (var i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          var args = Array.prototype.slice.call(arguments, 1);\n          var _length = callbacks.length;\n\n          for (var _i = 0; _i < _length; ++_i) {\n            callbacks[_i].apply(this, args);\n          }\n        }\n      };\n      /**\n       * Destroys the stream and cleans up.\n       */\n\n\n      Stream.prototype.dispose = function dispose() {\n        this.listeners = {};\n      };\n      /**\n       * Forwards all `data` events on this stream to the destination stream. The\n       * destination stream should provide a method `push` to receive the data\n       * events as they arrive.\n       *\n       * @param {Stream} destination the stream that will receive all `data` events\n       * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n       */\n\n\n      Stream.prototype.pipe = function pipe(destination) {\n        this.on('data', function (data) {\n          destination.push(data);\n        });\n      };\n\n      return Stream;\n    }();\n    /**\n     * @file async-stream.js\n     */\n\n    /**\n     * A wrapper around the Stream class to use setTiemout\n     * and run stream \"jobs\" Asynchronously\n     *\n     * @class AsyncStream\n     * @extends Stream\n     */\n\n\n    var AsyncStream$$1 = function (_Stream) {\n      inherits(AsyncStream$$1, _Stream);\n\n      function AsyncStream$$1() {\n        classCallCheck(this, AsyncStream$$1);\n\n        var _this = possibleConstructorReturn(this, _Stream.call(this, Stream));\n\n        _this.jobs = [];\n        _this.delay = 1;\n        _this.timeout_ = null;\n        return _this;\n      }\n      /**\n       * process an async job\n       *\n       * @private\n       */\n\n\n      AsyncStream$$1.prototype.processJob_ = function processJob_() {\n        this.jobs.shift()();\n\n        if (this.jobs.length) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        } else {\n          this.timeout_ = null;\n        }\n      };\n      /**\n       * push a job into the stream\n       *\n       * @param {Function} job the job to push into the stream\n       */\n\n\n      AsyncStream$$1.prototype.push = function push(job) {\n        this.jobs.push(job);\n\n        if (!this.timeout_) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        }\n      };\n\n      return AsyncStream$$1;\n    }(Stream);\n    /**\n     * @file decrypter.js\n     *\n     * An asynchronous implementation of AES-128 CBC decryption with\n     * PKCS#7 padding.\n     */\n\n    /**\n     * Convert network-order (big-endian) bytes into their little-endian\n     * representation.\n     */\n\n\n    var ntoh = function ntoh(word) {\n      return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n    };\n    /**\n     * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * use for the first round of CBC.\n     * @return {Uint8Array} the decrypted bytes\n     *\n     * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n     * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n     * @see https://tools.ietf.org/html/rfc2315\n     */\n\n\n    var decrypt$$1 = function decrypt$$1(encrypted, key, initVector) {\n      // word-level access to the encrypted bytes\n      var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n      var decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n      var decrypted = new Uint8Array(encrypted.byteLength);\n      var decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n      // decrypted data\n\n      var init0 = void 0;\n      var init1 = void 0;\n      var init2 = void 0;\n      var init3 = void 0;\n      var encrypted0 = void 0;\n      var encrypted1 = void 0;\n      var encrypted2 = void 0;\n      var encrypted3 = void 0; // iteration variable\n\n      var wordIx = void 0; // pull out the words of the IV to ensure we don't modify the\n      // passed-in reference and easier access\n\n      init0 = initVector[0];\n      init1 = initVector[1];\n      init2 = initVector[2];\n      init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n      // to each decrypted block\n\n      for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n        // convert big-endian (network order) words into little-endian\n        // (javascript order)\n        encrypted0 = ntoh(encrypted32[wordIx]);\n        encrypted1 = ntoh(encrypted32[wordIx + 1]);\n        encrypted2 = ntoh(encrypted32[wordIx + 2]);\n        encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n        decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n        // plaintext\n\n        decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n        decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n        decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n        decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n        init0 = encrypted0;\n        init1 = encrypted1;\n        init2 = encrypted2;\n        init3 = encrypted3;\n      }\n\n      return decrypted;\n    };\n    /**\n     * The `Decrypter` class that manages decryption of AES\n     * data through `AsyncStream` objects and the `decrypt`\n     * function\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * @param {Function} done the function to run when done\n     * @class Decrypter\n     */\n\n\n    var Decrypter$$1 = function () {\n      function Decrypter$$1(encrypted, key, initVector, done) {\n        classCallCheck(this, Decrypter$$1);\n        var step = Decrypter$$1.STEP;\n        var encrypted32 = new Int32Array(encrypted.buffer);\n        var decrypted = new Uint8Array(encrypted.byteLength);\n        var i = 0;\n        this.asyncStream_ = new AsyncStream$$1(); // split up the encryption job and do the individual chunks asynchronously\n\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n\n        for (i = step; i < encrypted32.length; i += step) {\n          initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n          this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        } // invoke the done() callback when everything is finished\n\n\n        this.asyncStream_.push(function () {\n          // remove pkcs#7 padding from the decrypted bytes\n          done(null, unpad(decrypted));\n        });\n      }\n      /**\n       * a getter for step the maximum number of bytes to process at one time\n       *\n       * @return {Number} the value of step 32000\n       */\n\n      /**\n       * @private\n       */\n\n\n      Decrypter$$1.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n        return function () {\n          var bytes = decrypt$$1(encrypted, key, initVector);\n          decrypted.set(bytes, encrypted.byteOffset);\n        };\n      };\n\n      createClass(Decrypter$$1, null, [{\n        key: 'STEP',\n        get: function get$$1() {\n          // 4 * 8000;\n          return 32000;\n        }\n      }]);\n      return Decrypter$$1;\n    }();\n    /**\n     * @file bin-utils.js\n     */\n\n    /**\n     * Creates an object for sending to a web worker modifying properties that are TypedArrays\n     * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n     *\n     * @param {Object} message\n     *        Object of properties and values to send to the web worker\n     * @return {Object}\n     *         Modified message with TypedArray values expanded\n     * @function createTransferableMessage\n     */\n\n\n    var createTransferableMessage = function createTransferableMessage(message) {\n      var transferable = {};\n      Object.keys(message).forEach(function (key) {\n        var value = message[key];\n\n        if (ArrayBuffer.isView(value)) {\n          transferable[key] = {\n            bytes: value.buffer,\n            byteOffset: value.byteOffset,\n            byteLength: value.byteLength\n          };\n        } else {\n          transferable[key] = value;\n        }\n      });\n      return transferable;\n    };\n    /**\n     * Our web worker interface so that things can talk to aes-decrypter\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self\n     *        the scope for the web worker\n     */\n\n\n    var DecrypterWorker = function DecrypterWorker(self) {\n      self.onmessage = function (event) {\n        var data = event.data;\n        var encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n        var key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n        var iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n        /* eslint-disable no-new, handle-callback-err */\n\n        new Decrypter$$1(encrypted, key, iv, function (err, bytes) {\n          self.postMessage(createTransferableMessage({\n            source: data.source,\n            decrypted: bytes\n          }), [bytes.buffer]);\n        });\n        /* eslint-enable */\n      };\n    };\n\n    var decrypterWorker = new DecrypterWorker(self);\n    return decrypterWorker;\n  }();\n});\n/**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */\n\nvar audioTrackKind_ = function audioTrackKind_(properties) {\n  var kind = properties[\"default\"] ? 'main' : 'alternative';\n\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n    kind = 'main-desc';\n  }\n\n  return kind;\n};\n/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */\n\n\nvar stopLoaders = function stopLoaders(segmentLoader, mediaType) {\n  segmentLoader.abort();\n  segmentLoader.pause();\n\n  if (mediaType && mediaType.activePlaylistLoader) {\n    mediaType.activePlaylistLoader.pause();\n    mediaType.activePlaylistLoader = null;\n  }\n};\n/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */\n\n\nvar startLoaders = function startLoaders(playlistLoader, mediaType) {\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n  // playlist loader\n  mediaType.activePlaylistLoader = playlistLoader;\n  playlistLoader.load();\n};\n/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */\n\n\nvar onGroupChanged = function onGroupChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad[type],\n        mainSegmentLoader = _settings$segmentLoad.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      if (previousActiveLoader) {\n        // The previous group had a playlist loader but the new active group does not\n        // this means we are switching from demuxed to muxed audio. In this case we want to\n        // do a destructive reset of the main segment loader and not restart the audio\n        // loaders.\n        mainSegmentLoader.resetEverything();\n      }\n\n      return;\n    } // Non-destructive resync\n\n\n    segmentLoader.resyncLoader();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */\n\n\nvar onTrackChanged = function onTrackChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad2 = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad2[type],\n        mainSegmentLoader = _settings$segmentLoad2.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active so we do not want to restart loaders\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      // when switching from demuxed audio/video to muxed audio/video (noted by no playlist\n      // loader for the audio group), we want to do a destructive reset of the main segment\n      // loader and not restart the audio loaders\n      mainSegmentLoader.resetEverything();\n      return;\n    }\n\n    if (previousActiveLoader === activeGroup.playlistLoader) {\n      // Nothing has actually changed. This can happen because track change events can fire\n      // multiple times for a \"single\" change. One for enabling the new active track, and\n      // one for disabling the track that was active\n      startLoaders(activeGroup.playlistLoader, mediaType);\n      return;\n    }\n\n    if (segmentLoader.track) {\n      // For WebVTT, set the new text track in the segmentloader\n      segmentLoader.track(activeTrack);\n    } // destructive reset\n\n\n    segmentLoader.resetEverything();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\nvar onError = {\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is blacklisted) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type],\n          blacklistCurrentPlaylist = settings.blacklistCurrentPlaylist;\n      stopLoaders(segmentLoader, mediaType); // switch back to default audio track\n\n      var activeTrack = mediaType.activeTrack();\n      var activeGroup = mediaType.activeGroup();\n      var id = (activeGroup.filter(function (group) {\n        return group[\"default\"];\n      })[0] || activeGroup[0]).id;\n      var defaultTrack = mediaType.tracks[id];\n\n      if (activeTrack === defaultTrack) {\n        // Default track encountered an error. All we can do now is blacklist the current\n        // rendition and hope another will switch audio groups\n        blacklistCurrentPlaylist({\n          message: 'Problem encountered loading the default audio track.'\n        });\n        return;\n      }\n\n      videojs$1.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n\n      for (var trackId in mediaType.tracks) {\n        mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n      }\n\n      mediaType.onTrackChanged();\n    };\n  },\n\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type];\n      videojs$1.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n      stopLoaders(segmentLoader, mediaType);\n      var track = mediaType.activeTrack();\n\n      if (track) {\n        track.mode = 'disabled';\n      }\n\n      mediaType.onTrackChanged();\n    };\n  }\n};\nvar setupListeners = {\n  /**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */\n  AUDIO: function AUDIO(type, playlistLoader, settings) {\n    if (!playlistLoader) {\n      // no playlist loader means audio will be muxed with the video\n      return;\n    }\n\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, playlistLoader, settings) {\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type],\n        mediaType = settings.mediaTypes[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions);\n      segmentLoader.track(mediaType.activeTrack()); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  }\n};\nvar initialize = {\n  /**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */\n  'AUDIO': function AUDIO(type, settings) {\n    var hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        requestOptions = settings.requestOptions,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$ = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$.groups,\n        tracks = _settings$mediaTypes$.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader; // force a default if we have none\n\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n      mediaGroups[type] = {\n        main: {\n          \"default\": {\n            \"default\": true\n          }\n        }\n      };\n    }\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      } // List of playlists that have an AUDIO attribute value matching the current\n      // group ID\n\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel];\n        var playlistLoader = void 0;\n\n        if (properties.resolvedUri) {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, requestOptions);\n        } else if (properties.playlists && sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, requestOptions, masterPlaylistLoader);\n        } else {\n          // no resolvedUri means the audio is muxed with the video when using this\n          // audio track\n          playlistLoader = null;\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = new videojs$1.AudioTrack({\n            id: variantLabel,\n            kind: audioTrackKind_(properties),\n            enabled: false,\n            language: properties.language,\n            \"default\": properties[\"default\"],\n            label: variantLabel\n          });\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */\n  'SUBTITLES': function SUBTITLES(type, settings) {\n    var tech = settings.tech,\n        hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        requestOptions = settings.requestOptions,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$2 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$2.groups,\n        tracks = _settings$mediaTypes$2.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        if (mediaGroups[type][groupId][variantLabel].forced) {\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\n          // According to Apple's HLS Authoring Specification:\n          //   If content has forced subtitles and regular subtitles in a given language,\n          //   the regular subtitles track in that language MUST contain both the forced\n          //   subtitles and the regular subtitles for that language.\n          // Because of this requirement and that Safari does not add forced subtitles,\n          // forced subtitles are skipped here to maintain consistent experience across\n          // all platforms\n          continue;\n        }\n\n        var properties = mediaGroups[type][groupId][variantLabel];\n        var playlistLoader = void 0;\n\n        if (sourceType === 'hls') {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, requestOptions);\n        } else if (sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, requestOptions, masterPlaylistLoader);\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: variantLabel,\n            kind: 'subtitles',\n            \"default\": properties[\"default\"] && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */\n  'CLOSED-CAPTIONS': function CLOSEDCAPTIONS(type, settings) {\n    var tech = settings.tech,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$3 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$3.groups,\n        tracks = _settings$mediaTypes$3.tracks;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel]; // We only support CEA608 captions for now, so ignore anything that\n        // doesn't use a CCx INSTREAM-ID\n\n        if (!properties.instreamId.match(/CC\\d/)) {\n          continue;\n        } // No PlaylistLoader is required for Closed-Captions because the captions are\n        // embedded within the video stream\n\n\n        groups[groupId].push(videojs$1.mergeOptions({\n          id: variantLabel\n        }, properties));\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: properties.instreamId,\n            kind: 'captions',\n            \"default\": properties[\"default\"] && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n  }\n};\n/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */\n\nvar activeGroup = function activeGroup(type, settings) {\n  return function (track) {\n    var masterPlaylistLoader = settings.masterPlaylistLoader,\n        groups = settings.mediaTypes[type].groups;\n    var media = masterPlaylistLoader.media();\n\n    if (!media) {\n      return null;\n    }\n\n    var variants = null;\n\n    if (media.attributes[type]) {\n      variants = groups[media.attributes[type]];\n    }\n\n    variants = variants || groups.main;\n\n    if (typeof track === 'undefined') {\n      return variants;\n    }\n\n    if (track === null) {\n      // An active track was specified so a corresponding group is expected. track === null\n      // means no track is currently active so there is no corresponding group\n      return null;\n    }\n\n    return variants.filter(function (props) {\n      return props.id === track.id;\n    })[0] || null;\n  };\n};\n\nvar activeTrack = {\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].enabled) {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  },\n\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].mode === 'showing') {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  }\n};\n/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the master manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {SegmentLoader} settings.segmentLoaders.AUDIO\n *        Audio segment loader\n * @param {SegmentLoader} settings.segmentLoaders.SUBTITLES\n *        Subtitle segment loader\n * @param {SegmentLoader} settings.segmentLoaders.main\n *        Main segment loader\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.masterPlaylistLoader\n *        PlaylistLoader for the master source\n * @param {HlsHandler} settings.hls\n *        HLS SourceHandler\n * @param {Object} settings.master\n *        The parsed master manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.blacklistCurrentPlaylist\n *        Blacklists the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */\n\nvar setupMediaGroups = function setupMediaGroups(settings) {\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    initialize[type](type, settings);\n  });\n  var mediaTypes = settings.mediaTypes,\n      masterPlaylistLoader = settings.masterPlaylistLoader,\n      tech = settings.tech,\n      hls = settings.hls; // setup active group and track getters and change event handlers\n\n  ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n  }); // DO NOT enable the default subtitle or caption track.\n  // DO enable the default audio track\n\n  var audioGroup = mediaTypes.AUDIO.activeGroup();\n  var groupId = (audioGroup.filter(function (group) {\n    return group[\"default\"];\n  })[0] || audioGroup[0]).id;\n  mediaTypes.AUDIO.tracks[groupId].enabled = true;\n  mediaTypes.AUDIO.onTrackChanged();\n  masterPlaylistLoader.on('mediachange', function () {\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      return mediaTypes[type].onGroupChanged();\n    });\n  }); // custom audio track change event handler for usage event\n\n  var onAudioTrackChanged = function onAudioTrackChanged() {\n    mediaTypes.AUDIO.onTrackChanged();\n    tech.trigger({\n      type: 'usage',\n      name: 'hls-audio-change'\n    });\n  };\n\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  hls.on('dispose', function () {\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  }); // clear existing audio tracks and add the ones we just created\n\n  tech.clearTracks('audio');\n\n  for (var id in mediaTypes.AUDIO.tracks) {\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n  }\n};\n/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */\n\n\nvar createMediaTypes = function createMediaTypes() {\n  var mediaTypes = {};\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    mediaTypes[type] = {\n      groups: {},\n      tracks: {},\n      activePlaylistLoader: null,\n      activeGroup: noop,\n      activeTrack: noop,\n      onGroupChanged: noop,\n      onTrackChanged: noop\n    };\n  });\n  return mediaTypes;\n};\n/**\n * @file master-playlist-controller.js\n */\n\n\nvar ABORT_EARLY_BLACKLIST_SECONDS = 60 * 2;\nvar Hls = void 0; // SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\n\nvar loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred'];\n\nvar sumLoaderStat = function sumLoaderStat(stat) {\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n};\n/**\n * the master playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a master playlist and a series of audio playlists\n * if they are available\n *\n * @class MasterPlaylistController\n * @extends videojs.EventTarget\n */\n\n\nvar MasterPlaylistController = function (_videojs$EventTarget) {\n  inherits(MasterPlaylistController, _videojs$EventTarget);\n\n  function MasterPlaylistController(options) {\n    classCallCheck(this, MasterPlaylistController);\n\n    var _this = possibleConstructorReturn(this, (MasterPlaylistController.__proto__ || Object.getPrototypeOf(MasterPlaylistController)).call(this));\n\n    var url = options.url,\n        handleManifestRedirects = options.handleManifestRedirects,\n        withCredentials = options.withCredentials,\n        tech = options.tech,\n        bandwidth = options.bandwidth,\n        externHls = options.externHls,\n        useCueTags = options.useCueTags,\n        blacklistDuration = options.blacklistDuration,\n        enableLowInitialPlaylist = options.enableLowInitialPlaylist,\n        sourceType = options.sourceType,\n        seekTo = options.seekTo,\n        cacheEncryptionKeys = options.cacheEncryptionKeys;\n\n    if (!url) {\n      throw new Error('A non-empty playlist URL is required');\n    }\n\n    Hls = externHls;\n    _this.withCredentials = withCredentials;\n    _this.tech_ = tech;\n    _this.hls_ = tech.hls;\n    _this.seekTo_ = seekTo;\n    _this.sourceType_ = sourceType;\n    _this.useCueTags_ = useCueTags;\n    _this.blacklistDuration = blacklistDuration;\n    _this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n\n    if (_this.useCueTags_) {\n      _this.cueTagsTrack_ = _this.tech_.addTextTrack('metadata', 'ad-cues');\n      _this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n    }\n\n    _this.requestOptions_ = {\n      withCredentials: withCredentials,\n      handleManifestRedirects: handleManifestRedirects,\n      timeout: null\n    };\n    _this.mediaTypes_ = createMediaTypes();\n    _this.mediaSource = new videojs$1.MediaSource(); // load the media source into the player\n\n    _this.mediaSource.addEventListener('sourceopen', _this.handleSourceOpen_.bind(_this));\n\n    _this.seekable_ = videojs$1.createTimeRanges();\n\n    _this.hasPlayed_ = function () {\n      return false;\n    };\n\n    _this.syncController_ = new SyncController(options);\n    _this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'segment-metadata'\n    }, false).track;\n    _this.decrypter_ = new Decrypter$1();\n    _this.inbandTextTracks_ = {};\n    var segmentLoaderSettings = {\n      hls: _this.hls_,\n      mediaSource: _this.mediaSource,\n      currentTime: _this.tech_.currentTime.bind(_this.tech_),\n      seekable: function seekable$$1() {\n        return _this.seekable();\n      },\n      seeking: function seeking() {\n        return _this.tech_.seeking();\n      },\n      duration: function duration$$1() {\n        return _this.mediaSource.duration;\n      },\n      hasPlayed: function hasPlayed() {\n        return _this.hasPlayed_();\n      },\n      goalBufferLength: function goalBufferLength() {\n        return _this.goalBufferLength();\n      },\n      bandwidth: bandwidth,\n      syncController: _this.syncController_,\n      decrypter: _this.decrypter_,\n      sourceType: _this.sourceType_,\n      inbandTextTracks: _this.inbandTextTracks_,\n      cacheEncryptionKeys: cacheEncryptionKeys\n    };\n    _this.masterPlaylistLoader_ = _this.sourceType_ === 'dash' ? new DashPlaylistLoader(url, _this.hls_, _this.requestOptions_) : new PlaylistLoader(url, _this.hls_, _this.requestOptions_);\n\n    _this.setupMasterPlaylistLoaderListeners_(); // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n\n\n    _this.mainSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      segmentMetadataTrack: _this.segmentMetadataTrack_,\n      loaderType: 'main'\n    }), options); // alternate audio track\n\n    _this.audioSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'audio'\n    }), options);\n    _this.subtitleSegmentLoader_ = new VTTSegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'vtt'\n    }), options);\n\n    _this.setupSegmentLoaderListeners_(); // Create SegmentLoader stat-getters\n\n\n    loaderStats.forEach(function (stat) {\n      _this[stat + '_'] = sumLoaderStat.bind(_this, stat);\n    });\n    _this.logger_ = logger('MPC');\n\n    _this.masterPlaylistLoader_.load();\n\n    return _this;\n  }\n  /**\n   * Register event handlers on the master playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n\n\n  createClass(MasterPlaylistController, [{\n    key: 'setupMasterPlaylistLoaderListeners_',\n    value: function setupMasterPlaylistLoaderListeners_() {\n      var _this2 = this;\n\n      this.masterPlaylistLoader_.on('loadedmetadata', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n\n        var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        } // if this isn't a live video and preload permits, start\n        // downloading segments\n\n\n        if (media.endList && _this2.tech_.preload() !== 'none') {\n          _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\n          _this2.mainSegmentLoader_.load();\n        }\n\n        setupMediaGroups({\n          sourceType: _this2.sourceType_,\n          segmentLoaders: {\n            AUDIO: _this2.audioSegmentLoader_,\n            SUBTITLES: _this2.subtitleSegmentLoader_,\n            main: _this2.mainSegmentLoader_\n          },\n          tech: _this2.tech_,\n          requestOptions: _this2.requestOptions_,\n          masterPlaylistLoader: _this2.masterPlaylistLoader_,\n          hls: _this2.hls_,\n          master: _this2.master(),\n          mediaTypes: _this2.mediaTypes_,\n          blacklistCurrentPlaylist: _this2.blacklistCurrentPlaylist.bind(_this2)\n        });\n\n        _this2.triggerPresenceUsage_(_this2.master(), media);\n\n        try {\n          _this2.setupSourceBuffers_();\n        } catch (e) {\n          videojs$1.log.warn('Failed to create SourceBuffers', e);\n          return _this2.mediaSource.endOfStream('decode');\n        }\n\n        _this2.setupFirstPlay();\n\n        if (!_this2.mediaTypes_.AUDIO.activePlaylistLoader || _this2.mediaTypes_.AUDIO.activePlaylistLoader.media()) {\n          _this2.trigger('selectedinitialmedia');\n        } else {\n          // We must wait for the active audio playlist loader to\n          // finish setting up before triggering this event so the\n          // representations API and EME setup is correct\n          _this2.mediaTypes_.AUDIO.activePlaylistLoader.one('loadedmetadata', function () {\n            _this2.trigger('selectedinitialmedia');\n          });\n        }\n      });\n      this.masterPlaylistLoader_.on('loadedplaylist', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        if (!updatedPlaylist) {\n          // blacklist any variants that are not supported by the browser before selecting\n          // an initial media as the playlist selectors do not consider browser support\n          _this2.excludeUnsupportedVariants_();\n\n          var selectedMedia = void 0;\n\n          if (_this2.enableLowInitialPlaylist) {\n            selectedMedia = _this2.selectInitialPlaylist();\n          }\n\n          if (!selectedMedia) {\n            selectedMedia = _this2.selectPlaylist();\n          }\n\n          _this2.initialMedia_ = selectedMedia;\n\n          _this2.masterPlaylistLoader_.media(_this2.initialMedia_);\n\n          return;\n        }\n\n        if (_this2.useCueTags_) {\n          _this2.updateAdCues_(updatedPlaylist);\n        } // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `mediachange`\n\n\n        _this2.mainSegmentLoader_.playlist(updatedPlaylist, _this2.requestOptions_);\n\n        _this2.updateDuration(); // If the player isn't paused, ensure that the segment loader is running,\n        // as it is possible that it was temporarily stopped while waiting for\n        // a playlist (e.g., in case the playlist errored and we re-requested it).\n\n\n        if (!_this2.tech_.paused()) {\n          _this2.mainSegmentLoader_.load();\n\n          if (_this2.audioSegmentLoader_) {\n            _this2.audioSegmentLoader_.load();\n          }\n        }\n\n        if (!updatedPlaylist.endList) {\n          var addSeekableRange = function addSeekableRange() {\n            var seekable$$1 = _this2.seekable();\n\n            if (seekable$$1.length !== 0) {\n              _this2.mediaSource.addSeekableRange_(seekable$$1.start(0), seekable$$1.end(0));\n            }\n          };\n\n          if (_this2.duration() !== Infinity) {\n            var onDurationchange = function onDurationchange() {\n              if (_this2.duration() === Infinity) {\n                addSeekableRange();\n              } else {\n                _this2.tech_.one('durationchange', onDurationchange);\n              }\n            };\n\n            _this2.tech_.one('durationchange', onDurationchange);\n          } else {\n            addSeekableRange();\n          }\n        }\n      });\n      this.masterPlaylistLoader_.on('error', function () {\n        _this2.blacklistCurrentPlaylist(_this2.masterPlaylistLoader_.error);\n      });\n      this.masterPlaylistLoader_.on('mediachanging', function () {\n        _this2.mainSegmentLoader_.abort();\n\n        _this2.mainSegmentLoader_.pause();\n      });\n      this.masterPlaylistLoader_.on('mediachange', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n\n        var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        } // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `loadedplaylist`\n\n\n        _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\n        _this2.mainSegmentLoader_.load();\n\n        _this2.tech_.trigger({\n          type: 'mediachange',\n          bubbles: true\n        });\n      });\n      this.masterPlaylistLoader_.on('playlistunchanged', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        var playlistOutdated = _this2.stuckAtPlaylistEnd_(updatedPlaylist);\n\n        if (playlistOutdated) {\n          // Playlist has stopped updating and we're stuck at its end. Try to\n          // blacklist it and switch to another playlist in the hope that that\n          // one is updating (and give the player a chance to re-adjust to the\n          // safe live point).\n          _this2.blacklistCurrentPlaylist({\n            message: 'Playlist no longer updating.'\n          }); // useful for monitoring QoS\n\n\n          _this2.tech_.trigger('playliststuck');\n        }\n      });\n      this.masterPlaylistLoader_.on('renditiondisabled', function () {\n        _this2.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-disabled'\n        });\n      });\n      this.masterPlaylistLoader_.on('renditionenabled', function () {\n        _this2.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-enabled'\n        });\n      });\n    }\n    /**\n     * A helper function for triggerring presence usage events once per source\n     *\n     * @private\n     */\n\n  }, {\n    key: 'triggerPresenceUsage_',\n    value: function triggerPresenceUsage_(master, media) {\n      var mediaGroups = master.mediaGroups || {};\n      var defaultDemuxed = true;\n      var audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n\n      for (var mediaGroup in mediaGroups.AUDIO) {\n        for (var label in mediaGroups.AUDIO[mediaGroup]) {\n          var properties = mediaGroups.AUDIO[mediaGroup][label];\n\n          if (!properties.uri) {\n            defaultDemuxed = false;\n          }\n        }\n      }\n\n      if (defaultDemuxed) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-demuxed'\n        });\n      }\n\n      if (Object.keys(mediaGroups.SUBTITLES).length) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-webvtt'\n        });\n      }\n\n      if (Hls.Playlist.isAes(media)) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-aes'\n        });\n      }\n\n      if (Hls.Playlist.isFmp4(media)) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-fmp4'\n        });\n      }\n\n      if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-alternate-audio'\n        });\n      }\n\n      if (this.useCueTags_) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-playlist-cue-tags'\n        });\n      }\n    }\n    /**\n     * Register event handlers on the segment loaders. A helper function\n     * for construction time.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSegmentLoaderListeners_',\n    value: function setupSegmentLoaderListeners_() {\n      var _this3 = this;\n\n      this.mainSegmentLoader_.on('bandwidthupdate', function () {\n        var nextPlaylist = _this3.selectPlaylist();\n\n        var currentPlaylist = _this3.masterPlaylistLoader_.media();\n\n        var buffered = _this3.tech_.buffered();\n\n        var forwardBuffer = buffered.length ? buffered.end(buffered.length - 1) - _this3.tech_.currentTime() : 0;\n\n        var bufferLowWaterLine = _this3.bufferLowWaterLine(); // If the playlist is live, then we want to not take low water line into account.\n        // This is because in LIVE, the player plays 3 segments from the end of the\n        // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n        // in those segments, a viewer will never experience a rendition upswitch.\n\n\n        if (!currentPlaylist.endList || // For the same reason as LIVE, we ignore the low water line when the VOD\n        // duration is below the max potential low water line\n        _this3.duration() < Config.MAX_BUFFER_LOW_WATER_LINE || // we want to switch down to lower resolutions quickly to continue playback, but\n        nextPlaylist.attributes.BANDWIDTH < currentPlaylist.attributes.BANDWIDTH || // ensure we have some buffer before we switch up to prevent us running out of\n        // buffer while loading a higher rendition.\n        forwardBuffer >= bufferLowWaterLine) {\n          _this3.masterPlaylistLoader_.media(nextPlaylist);\n        }\n\n        _this3.tech_.trigger('bandwidthupdate');\n      });\n      this.mainSegmentLoader_.on('progress', function () {\n        _this3.trigger('progress');\n      });\n      this.mainSegmentLoader_.on('error', function () {\n        _this3.blacklistCurrentPlaylist(_this3.mainSegmentLoader_.error());\n      });\n      this.mainSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n      this.mainSegmentLoader_.on('timestampoffset', function () {\n        _this3.tech_.trigger({\n          type: 'usage',\n          name: 'hls-timestamp-offset'\n        });\n      });\n      this.audioSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n      this.mainSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n      this.mainSegmentLoader_.on('earlyabort', function () {\n        _this3.blacklistCurrentPlaylist({\n          message: 'Aborted early because there isn\\'t enough bandwidth to complete the ' + 'request without rebuffering.'\n        }, ABORT_EARLY_BLACKLIST_SECONDS);\n      });\n      this.mainSegmentLoader_.on('reseteverything', function () {\n        // If playing an MTS stream, a videojs.MediaSource is listening for\n        // hls-reset to reset caption parsing state in the transmuxer\n        _this3.tech_.trigger('hls-reset');\n      });\n      this.mainSegmentLoader_.on('segmenttimemapping', function (event) {\n        // If playing an MTS stream in html, a videojs.MediaSource is listening for\n        // hls-segment-time-mapping update its internal mapping of stream to display time\n        _this3.tech_.trigger({\n          type: 'hls-segment-time-mapping',\n          mapping: event.mapping\n        });\n      });\n      this.audioSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n    }\n  }, {\n    key: 'mediaSecondsLoaded_',\n    value: function mediaSecondsLoaded_() {\n      return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n    }\n    /**\n     * Call load on our SegmentLoaders\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      this.mainSegmentLoader_.load();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.load();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.load();\n      }\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions without performing destructive actions, like\n     * removing already buffered content\n     *\n     * @private\n     */\n\n  }, {\n    key: 'smoothQualityChange_',\n    value: function smoothQualityChange_() {\n      var media = this.selectPlaylist();\n\n      if (media !== this.masterPlaylistLoader_.media()) {\n        this.masterPlaylistLoader_.media(media);\n        this.mainSegmentLoader_.resetLoader(); // don't need to reset audio as it is reset when media changes\n      }\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions. This method will perform destructive actions like removing\n     * already buffered content in order to readjust the currently active\n     * playlist quickly. This is good for manual quality changes\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fastQualityChange_',\n    value: function fastQualityChange_() {\n      var _this4 = this;\n\n      var media = this.selectPlaylist();\n\n      if (media === this.masterPlaylistLoader_.media()) {\n        return;\n      }\n\n      this.masterPlaylistLoader_.media(media); // Delete all buffered data to allow an immediate quality switch, then seek to give\n      // the browser a kick to remove any cached frames from the previous rendtion (.04 seconds\n      // ahead is roughly the minimum that will accomplish this across a variety of content\n      // in IE and Edge, but seeking in place is sufficient on all other browsers)\n      // Edge/IE bug: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/14600375/\n      // Chrome bug: https://bugs.chromium.org/p/chromium/issues/detail?id=651904\n\n      this.mainSegmentLoader_.resetEverything(function () {\n        // Since this is not a typical seek, we avoid the seekTo method which can cause segments\n        // from the previously enabled rendition to load before the new playlist has finished loading\n        if (videojs$1.browser.IE_VERSION || videojs$1.browser.IS_EDGE) {\n          _this4.tech_.setCurrentTime(_this4.tech_.currentTime() + 0.04);\n        } else {\n          _this4.tech_.setCurrentTime(_this4.tech_.currentTime());\n        }\n      }); // don't need to reset audio as it is reset when media changes\n    }\n    /**\n     * Begin playback.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      if (this.setupFirstPlay()) {\n        return;\n      }\n\n      if (this.tech_.ended()) {\n        this.seekTo_(0);\n      }\n\n      if (this.hasPlayed_()) {\n        this.load();\n      }\n\n      var seekable$$1 = this.tech_.seekable(); // if the viewer has paused and we fell out of the live window,\n      // seek forward to the live point\n\n      if (this.tech_.duration() === Infinity) {\n        if (this.tech_.currentTime() < seekable$$1.start(0)) {\n          return this.seekTo_(seekable$$1.end(seekable$$1.length - 1));\n        }\n      }\n    }\n    /**\n     * Seek to the latest media position if this is a live video and the\n     * player and video are loaded and initialized.\n     */\n\n  }, {\n    key: 'setupFirstPlay',\n    value: function setupFirstPlay() {\n      var _this5 = this;\n\n      var media = this.masterPlaylistLoader_.media(); // Check that everything is ready to begin buffering for the first call to play\n      //  If 1) there is no active media\n      //     2) the player is paused\n      //     3) the first play has already been setup\n      // then exit early\n\n      if (!media || this.tech_.paused() || this.hasPlayed_()) {\n        return false;\n      } // when the video is a live stream\n\n\n      if (!media.endList) {\n        var seekable$$1 = this.seekable();\n\n        if (!seekable$$1.length) {\n          // without a seekable range, the player cannot seek to begin buffering at the live\n          // point\n          return false;\n        }\n\n        if (videojs$1.browser.IE_VERSION && this.tech_.readyState() === 0) {\n          // IE11 throws an InvalidStateError if you try to set currentTime while the\n          // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\n          this.tech_.one('loadedmetadata', function () {\n            _this5.trigger('firstplay');\n\n            _this5.seekTo_(seekable$$1.end(0));\n\n            _this5.hasPlayed_ = function () {\n              return true;\n            };\n          });\n          return false;\n        } // trigger firstplay to inform the source handler to ignore the next seek event\n\n\n        this.trigger('firstplay'); // seek to the live point\n\n        this.seekTo_(seekable$$1.end(0));\n      }\n\n      this.hasPlayed_ = function () {\n        return true;\n      }; // we can begin loading now that everything is ready\n\n\n      this.load();\n      return true;\n    }\n    /**\n     * handle the sourceopen event on the MediaSource\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSourceOpen_',\n    value: function handleSourceOpen_() {\n      // Only attempt to create the source buffer if none already exist.\n      // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n      // after `endOfStream` has been called (in response to a seek for instance)\n      try {\n        this.setupSourceBuffers_();\n      } catch (e) {\n        videojs$1.log.warn('Failed to create Source Buffers', e);\n        return this.mediaSource.endOfStream('decode');\n      } // if autoplay is enabled, begin playback. This is duplicative of\n      // code in video.js but is required because play() must be invoked\n      // *after* the media source has opened.\n\n\n      if (this.tech_.autoplay()) {\n        var playPromise = this.tech_.play(); // Catch/silence error when a pause interrupts a play request\n        // on browsers which return a promise\n\n        if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n          playPromise.then(null, function (e) {});\n        }\n      }\n\n      this.trigger('sourceopen');\n    }\n    /**\n     * Calls endOfStream on the media source when all active stream types have called\n     * endOfStream\n     *\n     * @param {string} streamType\n     *        Stream type of the segment loader that called endOfStream\n     * @private\n     */\n\n  }, {\n    key: 'onEndOfStream',\n    value: function onEndOfStream() {\n      var isEndOfStream = this.mainSegmentLoader_.ended_;\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        // if the audio playlist loader exists, then alternate audio is active\n        if (!this.mainSegmentLoader_.startingMedia_ || this.mainSegmentLoader_.startingMedia_.containsVideo) {\n          // if we do not know if the main segment loader contains video yet or if we\n          // definitively know the main segment loader contains video, then we need to wait\n          // for both main and audio segment loaders to call endOfStream\n          isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n        } else {\n          // otherwise just rely on the audio loader\n          isEndOfStream = this.audioSegmentLoader_.ended_;\n        }\n      }\n\n      if (!isEndOfStream) {\n        return;\n      }\n\n      this.logger_('calling mediaSource.endOfStream()'); // on chrome calling endOfStream can sometimes cause an exception,\n      // even when the media source is in a valid state.\n\n      try {\n        this.mediaSource.endOfStream();\n      } catch (e) {\n        videojs$1.log.warn('Failed to call media source endOfStream', e);\n      }\n    }\n    /**\n     * Check if a playlist has stopped being updated\n     * @param {Object} playlist the media playlist object\n     * @return {boolean} whether the playlist has stopped being updated or not\n     */\n\n  }, {\n    key: 'stuckAtPlaylistEnd_',\n    value: function stuckAtPlaylistEnd_(playlist) {\n      var seekable$$1 = this.seekable();\n\n      if (!seekable$$1.length) {\n        // playlist doesn't have enough information to determine whether we are stuck\n        return false;\n      }\n\n      var expired = this.syncController_.getExpiredTime(playlist, this.mediaSource.duration);\n\n      if (expired === null) {\n        return false;\n      } // does not use the safe live end to calculate playlist end, since we\n      // don't want to say we are stuck while there is still content\n\n\n      var absolutePlaylistEnd = Hls.Playlist.playlistEnd(playlist, expired);\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (!buffered.length) {\n        // return true if the playhead reached the absolute end of the playlist\n        return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n      }\n\n      var bufferedEnd = buffered.end(buffered.length - 1); // return true if there is too little buffer left and buffer has reached absolute\n      // end of playlist\n\n      return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n    }\n    /**\n     * Blacklists a playlist when an error occurs for a set amount of time\n     * making it unavailable for selection by the rendition selection algorithm\n     * and then forces a new playlist (rendition) selection.\n     *\n     * @param {Object=} error an optional error that may include the playlist\n     * to blacklist\n     * @param {Number=} blacklistDuration an optional number of seconds to blacklist the\n     * playlist\n     */\n\n  }, {\n    key: 'blacklistCurrentPlaylist',\n    value: function blacklistCurrentPlaylist() {\n      var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var blacklistDuration = arguments[1];\n      var currentPlaylist = void 0;\n      var nextPlaylist = void 0; // If the `error` was generated by the playlist loader, it will contain\n      // the playlist we were trying to load (but failed) and that should be\n      // blacklisted instead of the currently selected playlist which is likely\n      // out-of-date in this scenario\n\n      currentPlaylist = error.playlist || this.masterPlaylistLoader_.media();\n      blacklistDuration = blacklistDuration || error.blacklistDuration || this.blacklistDuration; // If there is no current playlist, then an error occurred while we were\n      // trying to load the master OR while we were disposing of the tech\n\n      if (!currentPlaylist) {\n        this.error = error;\n\n        try {\n          return this.mediaSource.endOfStream('network');\n        } catch (e) {\n          return this.trigger('error');\n        }\n      }\n\n      var isFinalRendition = this.masterPlaylistLoader_.master.playlists.filter(isEnabled).length === 1;\n      var playlists = this.masterPlaylistLoader_.master.playlists;\n\n      if (playlists.length === 1) {\n        // Never blacklisting this playlist because it's the only playlist\n        videojs$1.log.warn('Problem encountered with the current ' + 'HLS playlist. Trying again since it is the only playlist.');\n        this.tech_.trigger('retryplaylist');\n        return this.masterPlaylistLoader_.load(isFinalRendition);\n      }\n\n      if (isFinalRendition) {\n        // Since we're on the final non-blacklisted playlist, and we're about to blacklist\n        // it, instead of erring the player or retrying this playlist, clear out the current\n        // blacklist. This allows other playlists to be attempted in case any have been\n        // fixed.\n        videojs$1.log.warn('Removing all playlists from the blacklist because the last ' + 'rendition is about to be blacklisted.');\n        playlists.forEach(function (playlist) {\n          if (playlist.excludeUntil !== Infinity) {\n            delete playlist.excludeUntil;\n          }\n        }); // Technically we are retrying a playlist, in that we are simply retrying a previous\n        // playlist. This is needed for users relying on the retryplaylist event to catch a\n        // case where the player might be stuck and looping through \"dead\" playlists.\n\n        this.tech_.trigger('retryplaylist');\n      } // Blacklist this playlist\n\n\n      currentPlaylist.excludeUntil = Date.now() + blacklistDuration * 1000;\n      this.tech_.trigger('blacklistplaylist');\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-rendition-blacklisted'\n      }); // Select a new playlist\n\n      nextPlaylist = this.selectPlaylist();\n      videojs$1.log.warn('Problem encountered with the current HLS playlist.' + (error.message ? ' ' + error.message : '') + ' Switching to another playlist.');\n      return this.masterPlaylistLoader_.media(nextPlaylist, isFinalRendition);\n    }\n    /**\n     * Pause all segment loaders\n     */\n\n  }, {\n    key: 'pauseLoading',\n    value: function pauseLoading() {\n      this.mainSegmentLoader_.pause();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.pause();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.pause();\n      }\n    }\n    /**\n     * set the current time on all segment loaders\n     *\n     * @param {TimeRange} currentTime the current time to set\n     * @return {TimeRange} the current time\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      var buffered = findRange(this.tech_.buffered(), currentTime);\n\n      if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {\n        // return immediately if the metadata is not ready yet\n        return 0;\n      } // it's clearly an edge-case but don't thrown an error if asked to\n      // seek within an empty playlist\n\n\n      if (!this.masterPlaylistLoader_.media().segments) {\n        return 0;\n      } // In flash playback, the segment loaders should be reset on every seek, even\n      // in buffer seeks. If the seek location is already buffered, continue buffering as\n      // usual\n      // TODO: redo this comment\n\n\n      if (buffered && buffered.length) {\n        return currentTime;\n      } // cancel outstanding requests so we begin buffering at the new\n      // location\n\n\n      this.mainSegmentLoader_.resetEverything();\n      this.mainSegmentLoader_.abort();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.resetEverything();\n        this.audioSegmentLoader_.abort();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.resetEverything();\n        this.subtitleSegmentLoader_.abort();\n      } // start segment loader loading in case they are paused\n\n\n      this.load();\n    }\n    /**\n     * get the current duration\n     *\n     * @return {TimeRange} the duration\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      if (!this.masterPlaylistLoader_) {\n        return 0;\n      }\n\n      if (this.mediaSource) {\n        return this.mediaSource.duration;\n      }\n\n      return Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n    }\n    /**\n     * check the seekable range\n     *\n     * @return {TimeRange} the seekable range\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.seekable_;\n    }\n  }, {\n    key: 'onSyncInfoUpdate_',\n    value: function onSyncInfoUpdate_() {\n      var mainSeekable = void 0;\n      var audioSeekable = void 0;\n\n      if (!this.masterPlaylistLoader_) {\n        return;\n      }\n\n      var media = this.masterPlaylistLoader_.media();\n\n      if (!media) {\n        return;\n      }\n\n      var expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n      if (expired === null) {\n        // not enough information to update seekable\n        return;\n      }\n\n      mainSeekable = Hls.Playlist.seekable(media, expired);\n\n      if (mainSeekable.length === 0) {\n        return;\n      }\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n        expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n        if (expired === null) {\n          return;\n        }\n\n        audioSeekable = Hls.Playlist.seekable(media, expired);\n\n        if (audioSeekable.length === 0) {\n          return;\n        }\n      }\n\n      var oldEnd = void 0;\n      var oldStart = void 0;\n\n      if (this.seekable_ && this.seekable_.length) {\n        oldEnd = this.seekable_.end(0);\n        oldStart = this.seekable_.start(0);\n      }\n\n      if (!audioSeekable) {\n        // seekable has been calculated based on buffering video data so it\n        // can be returned directly\n        this.seekable_ = mainSeekable;\n      } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n        // seekables are pretty far off, rely on main\n        this.seekable_ = mainSeekable;\n      } else {\n        this.seekable_ = videojs$1.createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n      } // seekable is the same as last time\n\n\n      if (this.seekable_ && this.seekable_.length) {\n        if (this.seekable_.end(0) === oldEnd && this.seekable_.start(0) === oldStart) {\n          return;\n        }\n      }\n\n      this.logger_('seekable updated [' + printableRange(this.seekable_) + ']');\n      this.tech_.trigger('seekablechanged');\n    }\n    /**\n     * Update the player duration\n     */\n\n  }, {\n    key: 'updateDuration',\n    value: function updateDuration() {\n      var _this6 = this;\n\n      var oldDuration = this.mediaSource.duration;\n      var newDuration = Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n      var buffered = this.tech_.buffered();\n\n      var setDuration = function setDuration() {\n        // on firefox setting the duration may sometimes cause an exception\n        // even if the media source is open and source buffers are not\n        // updating, something about the media source being in an invalid state.\n        _this6.logger_('Setting duration from ' + _this6.mediaSource.duration + ' => ' + newDuration);\n\n        try {\n          _this6.mediaSource.duration = newDuration;\n        } catch (e) {\n          videojs$1.log.warn('Failed to set media source duration', e);\n        }\n\n        _this6.tech_.trigger('durationchange');\n\n        _this6.mediaSource.removeEventListener('sourceopen', setDuration);\n      };\n\n      if (buffered.length > 0) {\n        newDuration = Math.max(newDuration, buffered.end(buffered.length - 1));\n      } // if the duration has changed, invalidate the cached value\n\n\n      if (oldDuration !== newDuration) {\n        // update the duration\n        if (this.mediaSource.readyState !== 'open') {\n          this.mediaSource.addEventListener('sourceopen', setDuration);\n        } else {\n          setDuration();\n        }\n      }\n    }\n    /**\n     * dispose of the MasterPlaylistController and everything\n     * that it controls\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      var _this7 = this;\n\n      this.decrypter_.terminate();\n      this.masterPlaylistLoader_.dispose();\n      this.mainSegmentLoader_.dispose();\n      ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n        var groups = _this7.mediaTypes_[type].groups;\n\n        for (var id in groups) {\n          groups[id].forEach(function (group) {\n            if (group.playlistLoader) {\n              group.playlistLoader.dispose();\n            }\n          });\n        }\n      });\n      this.audioSegmentLoader_.dispose();\n      this.subtitleSegmentLoader_.dispose();\n    }\n    /**\n     * return the master playlist object if we have one\n     *\n     * @return {Object} the master playlist object that we parsed\n     */\n\n  }, {\n    key: 'master',\n    value: function master() {\n      return this.masterPlaylistLoader_.master;\n    }\n    /**\n     * return the currently selected playlist\n     *\n     * @return {Object} the currently selected playlist object that we parsed\n     */\n\n  }, {\n    key: 'media',\n    value: function media() {\n      // playlist loader will not return media if it has not been fully loaded\n      return this.masterPlaylistLoader_.media() || this.initialMedia_;\n    }\n    /**\n     * setup our internal source buffers on our segment Loaders\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSourceBuffers_',\n    value: function setupSourceBuffers_() {\n      var media = this.masterPlaylistLoader_.media();\n      var mimeTypes = void 0; // wait until a media playlist is available and the Media Source is\n      // attached\n\n      if (!media || this.mediaSource.readyState !== 'open') {\n        return;\n      }\n\n      mimeTypes = mimeTypesForPlaylist(this.masterPlaylistLoader_.master, media);\n\n      if (mimeTypes.length < 1) {\n        this.error = 'No compatible SourceBuffer configuration for the variant stream:' + media.resolvedUri;\n        return this.mediaSource.endOfStream('decode');\n      }\n\n      this.configureLoaderMimeTypes_(mimeTypes); // exclude any incompatible variant streams from future playlist\n      // selection\n\n      this.excludeIncompatibleVariants_(media);\n    }\n  }, {\n    key: 'configureLoaderMimeTypes_',\n    value: function configureLoaderMimeTypes_(mimeTypes) {\n      // If the content is demuxed, we can't start appending segments to a source buffer\n      // until both source buffers are set up, or else the browser may not let us add the\n      // second source buffer (it will assume we are playing either audio only or video\n      // only).\n      var sourceBufferEmitter = // If there is more than one mime type\n      mimeTypes.length > 1 && // and the first mime type does not have muxed video and audio\n      mimeTypes[0].indexOf(',') === -1 && // and the two mime types are different (they can be the same in the case of audio\n      // only with alternate audio)\n      mimeTypes[0] !== mimeTypes[1] ? // then we want to wait on the second source buffer\n      new videojs$1.EventTarget() : // otherwise there is no need to wait as the content is either audio only,\n      // video only, or muxed content.\n      null;\n      this.mainSegmentLoader_.mimeType(mimeTypes[0], sourceBufferEmitter);\n\n      if (mimeTypes[1]) {\n        this.audioSegmentLoader_.mimeType(mimeTypes[1], sourceBufferEmitter);\n      }\n    }\n    /**\n     * Blacklists playlists with codecs that are unsupported by the browser.\n     */\n\n  }, {\n    key: 'excludeUnsupportedVariants_',\n    value: function excludeUnsupportedVariants_() {\n      this.master().playlists.forEach(function (variant) {\n        if (variant.attributes.CODECS && window$1.MediaSource && window$1.MediaSource.isTypeSupported && !window$1.MediaSource.isTypeSupported('video/mp4; codecs=\"' + mapLegacyAvcCodecs(variant.attributes.CODECS) + '\"')) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n    /**\n     * Blacklist playlists that are known to be codec or\n     * stream-incompatible with the SourceBuffer configuration. For\n     * instance, Media Source Extensions would cause the video element to\n     * stall waiting for video data if you switched from a variant with\n     * video and audio to an audio-only one.\n     *\n     * @param {Object} media a media playlist compatible with the current\n     * set of SourceBuffers. Variants in the current master playlist that\n     * do not appear to have compatible codec or stream configurations\n     * will be excluded from the default playlist selection algorithm\n     * indefinitely.\n     * @private\n     */\n\n  }, {\n    key: 'excludeIncompatibleVariants_',\n    value: function excludeIncompatibleVariants_(media) {\n      var codecCount = 2;\n      var videoCodec = null;\n      var codecs = void 0;\n\n      if (media.attributes.CODECS) {\n        codecs = parseCodecs(media.attributes.CODECS);\n        videoCodec = codecs.videoCodec;\n        codecCount = codecs.codecCount;\n      }\n\n      this.master().playlists.forEach(function (variant) {\n        var variantCodecs = {\n          codecCount: 2,\n          videoCodec: null\n        };\n\n        if (variant.attributes.CODECS) {\n          variantCodecs = parseCodecs(variant.attributes.CODECS);\n        } // if the streams differ in the presence or absence of audio or\n        // video, they are incompatible\n\n\n        if (variantCodecs.codecCount !== codecCount) {\n          variant.excludeUntil = Infinity;\n        } // if h.264 is specified on the current playlist, some flavor of\n        // it must be specified on all compatible variants\n\n\n        if (variantCodecs.videoCodec !== videoCodec) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n  }, {\n    key: 'updateAdCues_',\n    value: function updateAdCues_(media) {\n      var offset = 0;\n      var seekable$$1 = this.seekable();\n\n      if (seekable$$1.length) {\n        offset = seekable$$1.start(0);\n      }\n\n      updateAdCues(media, this.cueTagsTrack_, offset);\n    }\n    /**\n     * Calculates the desired forward buffer length based on current time\n     *\n     * @return {Number} Desired forward buffer length in seconds\n     */\n\n  }, {\n    key: 'goalBufferLength',\n    value: function goalBufferLength() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.GOAL_BUFFER_LENGTH;\n      var rate = Config.GOAL_BUFFER_LENGTH_RATE;\n      var max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n      return Math.min(initial + currentTime * rate, max);\n    }\n    /**\n     * Calculates the desired buffer low water line based on current time\n     *\n     * @return {Number} Desired buffer low water line in seconds\n     */\n\n  }, {\n    key: 'bufferLowWaterLine',\n    value: function bufferLowWaterLine() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.BUFFER_LOW_WATER_LINE;\n      var rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n      var max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n      return Math.min(initial + currentTime * rate, max);\n    }\n  }]);\n  return MasterPlaylistController;\n}(videojs$1.EventTarget);\n/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The master playlist loader\n * @param {String} playlistUri - uri of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {Boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */\n\n\nvar enableFunction = function enableFunction(loader, playlistUri, changePlaylistFn) {\n  return function (enable) {\n    var playlist = loader.master.playlists[playlistUri];\n    var incompatible = isIncompatible(playlist);\n    var currentlyEnabled = isEnabled(playlist);\n\n    if (typeof enable === 'undefined') {\n      return currentlyEnabled;\n    }\n\n    if (enable) {\n      delete playlist.disabled;\n    } else {\n      playlist.disabled = true;\n    }\n\n    if (enable !== currentlyEnabled && !incompatible) {\n      // Ensure the outside world knows about our changes\n      changePlaylistFn();\n\n      if (enable) {\n        loader.trigger('renditionenabled');\n      } else {\n        loader.trigger('renditiondisabled');\n      }\n    }\n\n    return enable;\n  };\n};\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\n\nvar Representation = function Representation(hlsHandler, playlist, id) {\n  classCallCheck(this, Representation);\n  var mpc = hlsHandler.masterPlaylistController_,\n      smoothQualityChange = hlsHandler.options_.smoothQualityChange; // Get a reference to a bound version of the quality change function\n\n  var changeType = smoothQualityChange ? 'smooth' : 'fast';\n  var qualityChangeFunction = mpc[changeType + 'QualityChange_'].bind(mpc); // some playlist attributes are optional\n\n  if (playlist.attributes.RESOLUTION) {\n    var resolution = playlist.attributes.RESOLUTION;\n    this.width = resolution.width;\n    this.height = resolution.height;\n  }\n\n  this.bandwidth = playlist.attributes.BANDWIDTH; // The id is simply the ordinality of the media playlist\n  // within the master playlist\n\n  this.id = id; // Partially-apply the enableFunction to create a playlist-\n  // specific variant\n\n  this.enabled = enableFunction(hlsHandler.playlists, playlist.uri, qualityChangeFunction);\n};\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the HlsHandler class\n * @param {HlsHandler} hlsHandler - An instance of HlsHandler to add the\n * representation API into\n */\n\n\nvar renditionSelectionMixin = function renditionSelectionMixin(hlsHandler) {\n  var playlists = hlsHandler.playlists; // Add a single API-specific function to the HlsHandler instance\n\n  hlsHandler.representations = function () {\n    return playlists.master.playlists.filter(function (media) {\n      return !isIncompatible(media);\n    }).map(function (e, i) {\n      return new Representation(hlsHandler, e, e.uri);\n    });\n  };\n};\n/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */\n// Set of events that reset the playback-watcher time check logic and clear the timeout\n\n\nvar timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n/**\n * @class PlaybackWatcher\n */\n\nvar PlaybackWatcher = function () {\n  /**\n   * Represents an PlaybackWatcher object.\n   * @constructor\n   * @param {object} options an object that includes the tech and settings\n   */\n  function PlaybackWatcher(options) {\n    var _this = this;\n\n    classCallCheck(this, PlaybackWatcher);\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n    this.seekTo = options.seekTo;\n    this.allowSeeksWithinUnsafeLiveWindow = options.allowSeeksWithinUnsafeLiveWindow;\n    this.media = options.media;\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.timer_ = null;\n    this.checkCurrentTimeTimeout_ = null;\n    this.logger_ = logger('PlaybackWatcher');\n    this.logger_('initialize');\n\n    var canPlayHandler = function canPlayHandler() {\n      return _this.monitorCurrentTime_();\n    };\n\n    var waitingHandler = function waitingHandler() {\n      return _this.techWaiting_();\n    };\n\n    var cancelTimerHandler = function cancelTimerHandler() {\n      return _this.cancelTimer_();\n    };\n\n    var fixesBadSeeksHandler = function fixesBadSeeksHandler() {\n      return _this.fixesBadSeeks_();\n    };\n\n    this.tech_.on('seekablechanged', fixesBadSeeksHandler);\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.tech_.on('canplay', canPlayHandler); // Define the dispose function to clean up our events\n\n    this.dispose = function () {\n      _this.logger_('dispose');\n\n      _this.tech_.off('seekablechanged', fixesBadSeeksHandler);\n\n      _this.tech_.off('waiting', waitingHandler);\n\n      _this.tech_.off(timerCancelEvents, cancelTimerHandler);\n\n      _this.tech_.off('canplay', canPlayHandler);\n\n      if (_this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(_this.checkCurrentTimeTimeout_);\n      }\n\n      _this.cancelTimer_();\n    };\n  }\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n\n  createClass(PlaybackWatcher, [{\n    key: 'monitorCurrentTime_',\n    value: function monitorCurrentTime_() {\n      this.checkCurrentTime_();\n\n      if (this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n      } // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n\n\n      this.checkCurrentTimeTimeout_ = window$1.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n    }\n    /**\n     * The purpose of this function is to emulate the \"waiting\" event on\n     * browsers that do not emit it when they are waiting for more\n     * data to continue playback\n     *\n     * @private\n     */\n\n  }, {\n    key: 'checkCurrentTime_',\n    value: function checkCurrentTime_() {\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = this.tech_.currentTime();\n        return;\n      }\n\n      if (this.tech_.paused() || this.tech_.seeking()) {\n        return;\n      }\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n        // If current time is at the end of the final buffered region, then any playback\n        // stall is most likely caused by buffering in a low bandwidth environment. The tech\n        // should fire a `waiting` event in this scenario, but due to browser and tech\n        // inconsistencies. Calling `techWaiting_` here allows us to simulate\n        // responding to a native `waiting` event when the tech fails to emit one.\n        return this.techWaiting_();\n      }\n\n      if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n        this.waiting_();\n      } else if (currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n      } else {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = currentTime;\n      }\n    }\n    /**\n     * Cancels any pending timers and resets the 'timeupdate' mechanism\n     * designed to detect that we are stalled\n     *\n     * @private\n     */\n\n  }, {\n    key: 'cancelTimer_',\n    value: function cancelTimer_() {\n      this.consecutiveUpdates = 0;\n\n      if (this.timer_) {\n        this.logger_('cancelTimer_');\n        clearTimeout(this.timer_);\n      }\n\n      this.timer_ = null;\n    }\n    /**\n     * Fixes situations where there's a bad seek\n     *\n     * @return {Boolean} whether an action was taken to fix the seek\n     * @private\n     */\n\n  }, {\n    key: 'fixesBadSeeks_',\n    value: function fixesBadSeeks_() {\n      var seeking = this.tech_.seeking();\n\n      if (!seeking) {\n        return false;\n      }\n\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n      var isAfterSeekableRange = this.afterSeekableWindow_(seekable, currentTime, this.media(), this.allowSeeksWithinUnsafeLiveWindow);\n      var seekTo = void 0;\n\n      if (isAfterSeekableRange) {\n        var seekableEnd = seekable.end(seekable.length - 1); // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n\n        seekTo = seekableEnd;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var seekableStart = seekable.start(0); // sync to the beginning of the live window\n        // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n\n        seekTo = seekableStart + SAFE_TIME_DELTA;\n      }\n\n      if (typeof seekTo !== 'undefined') {\n        this.logger_('Trying to seek outside of seekable at time ' + currentTime + ' with ' + ('seekable range ' + printableRange(seekable) + '. Seeking to ') + (seekTo + '.'));\n        this.seekTo(seekTo);\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Handler for situations when we determine the player is waiting.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'waiting_',\n    value: function waiting_() {\n      if (this.techWaiting_()) {\n        return;\n      } // All tech waiting checks failed. Use last resort correction\n\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n      var currentRange = findRange(buffered, currentTime); // Sometimes the player can stall for unknown reasons within a contiguous buffered\n      // region with no indication that anything is amiss (seen in Firefox). Seeking to\n      // currentTime is usually enough to kickstart the player. This checks that the player\n      // is currently within a buffered region before attempting a corrective seek.\n      // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n      // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n      // make sure there is ~3 seconds of forward buffer before taking any corrective action\n      // to avoid triggering an `unknownwaiting` event when the network is slow.\n\n      if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n        this.cancelTimer_();\n        this.seekTo(currentTime);\n        this.logger_('Stopped at ' + currentTime + ' while inside a buffered region ' + ('[' + currentRange.start(0) + ' -> ' + currentRange.end(0) + ']. Attempting to resume ') + 'playback by seeking to the current time.'); // unknown waiting corrections may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-unknown-waiting'\n        });\n        return;\n      }\n    }\n    /**\n     * Handler for situations when the tech fires a `waiting` event\n     *\n     * @return {Boolean}\n     *         True if an action (or none) was needed to correct the waiting. False if no\n     *         checks passed\n     * @private\n     */\n\n  }, {\n    key: 'techWaiting_',\n    value: function techWaiting_() {\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        // Tech is seeking or bad seek fixed, no action needed\n        return true;\n      }\n\n      if (this.tech_.seeking() || this.timer_ !== null) {\n        // Tech is seeking or already waiting on another action, no action needed\n        return true;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var livePoint = seekable.end(seekable.length - 1);\n        this.logger_('Fell out of live window at time ' + currentTime + '. Seeking to ' + ('live point (seekable end) ' + livePoint));\n        this.cancelTimer_();\n        this.seekTo(livePoint); // live window resyncs may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-live-resync'\n        });\n        return true;\n      }\n\n      var buffered = this.tech_.buffered();\n      var nextRange = findNextRange(buffered, currentTime);\n\n      if (this.videoUnderflow_(nextRange, buffered, currentTime)) {\n        // Even though the video underflowed and was stuck in a gap, the audio overplayed\n        // the gap, leading currentTime into a buffered range. Seeking to currentTime\n        // allows the video to catch up to the audio position without losing any audio\n        // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n        this.cancelTimer_();\n        this.seekTo(currentTime); // video underflow may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-video-underflow'\n        });\n        return true;\n      } // check for gap\n\n\n      if (nextRange.length > 0) {\n        var difference = nextRange.start(0) - currentTime;\n        this.logger_('Stopped at ' + currentTime + ', setting timer for ' + difference + ', seeking ' + ('to ' + nextRange.start(0)));\n        this.timer_ = setTimeout(this.skipTheGap_.bind(this), difference * 1000, currentTime);\n        return true;\n      } // All checks failed. Returning false to indicate failure to correct waiting\n\n\n      return false;\n    }\n  }, {\n    key: 'afterSeekableWindow_',\n    value: function afterSeekableWindow_(seekable, currentTime, playlist) {\n      var allowSeeksWithinUnsafeLiveWindow = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (!seekable.length) {\n        // we can't make a solid case if there's no seekable, default to false\n        return false;\n      }\n\n      var allowedEnd = seekable.end(seekable.length - 1) + SAFE_TIME_DELTA;\n      var isLive = !playlist.endList;\n\n      if (isLive && allowSeeksWithinUnsafeLiveWindow) {\n        allowedEnd = seekable.end(seekable.length - 1) + playlist.targetDuration * 3;\n      }\n\n      if (currentTime > allowedEnd) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'beforeSeekableWindow_',\n    value: function beforeSeekableWindow_(seekable, currentTime) {\n      if (seekable.length && // can't fall before 0 and 0 seekable start identifies VOD stream\n      seekable.start(0) > 0 && currentTime < seekable.start(0) - SAFE_TIME_DELTA) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'videoUnderflow_',\n    value: function videoUnderflow_(nextRange, buffered, currentTime) {\n      if (nextRange.length === 0) {\n        // Even if there is no available next range, there is still a possibility we are\n        // stuck in a gap due to video underflow.\n        var gap = this.gapFromVideoUnderflow_(buffered, currentTime);\n\n        if (gap) {\n          this.logger_('Encountered a gap in video from ' + gap.start + ' to ' + gap.end + '. ' + ('Seeking to current time ' + currentTime));\n          return true;\n        }\n      }\n\n      return false;\n    }\n    /**\n     * Timer callback. If playback still has not proceeded, then we seek\n     * to the start of the next buffered region.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'skipTheGap_',\n    value: function skipTheGap_(scheduledCurrentTime) {\n      var buffered = this.tech_.buffered();\n      var currentTime = this.tech_.currentTime();\n      var nextRange = findNextRange(buffered, currentTime);\n      this.cancelTimer_();\n\n      if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n        return;\n      }\n\n      this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0)); // only seek if we still have not played\n\n      this.seekTo(nextRange.start(0) + TIME_FUDGE_FACTOR);\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-gap-skip'\n      });\n    }\n  }, {\n    key: 'gapFromVideoUnderflow_',\n    value: function gapFromVideoUnderflow_(buffered, currentTime) {\n      // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n      // playing for ~3 seconds after the video gap starts. This is done to account for\n      // video buffer underflow/underrun (note that this is not done when there is audio\n      // buffer underflow/underrun -- in that case the video will stop as soon as it\n      // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n      // video stalls). The player's time will reflect the playthrough of audio, so the\n      // time will appear as if we are in a buffered region, even if we are stuck in a\n      // \"gap.\"\n      //\n      // Example:\n      // video buffer:   0 => 10.1, 10.2 => 20\n      // audio buffer:   0 => 20\n      // overall buffer: 0 => 10.1, 10.2 => 20\n      // current time: 13\n      //\n      // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n      // however, the audio continued playing until it reached ~3 seconds past the gap\n      // (13 seconds), at which point it stops as well. Since current time is past the\n      // gap, findNextRange will return no ranges.\n      //\n      // To check for this issue, we see if there is a gap that starts somewhere within\n      // a 3 second range (3 seconds +/- 1 second) back from our current time.\n      var gaps = findGaps(buffered);\n\n      for (var i = 0; i < gaps.length; i++) {\n        var start = gaps.start(i);\n        var end = gaps.end(i); // gap is starts no more than 4 seconds back\n\n        if (currentTime - start < 4 && currentTime - start > 2) {\n          return {\n            start: start,\n            end: end\n          };\n        }\n      }\n\n      return null;\n    }\n  }]);\n  return PlaybackWatcher;\n}();\n\nvar defaultOptions = {\n  errorInterval: 30,\n  getSource: function getSource(next) {\n    var tech = this.tech({\n      IWillNotUseThisInPlugins: true\n    });\n    var sourceObj = tech.currentSource_;\n    return next(sourceObj);\n  }\n};\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\n\nvar initPlugin = function initPlugin(player, options) {\n  var lastCalled = 0;\n  var seekTo = 0;\n  var localOptions = videojs$1.mergeOptions(defaultOptions, options);\n  player.ready(function () {\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload-initialized'\n    });\n  });\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n\n  var loadedMetadataHandler = function loadedMetadataHandler() {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n\n\n  var setSource = function setSource(sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n    player.one('loadedmetadata', loadedMetadataHandler);\n    player.src(sourceObj);\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload'\n    });\n    player.play();\n  };\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n\n\n  var errorHandler = function errorHandler() {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      player.trigger({\n        type: 'usage',\n        name: 'hls-error-reload-canceled'\n      });\n      return;\n    }\n\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      videojs$1.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n\n    lastCalled = Date.now();\n    return localOptions.getSource.call(player, setSource);\n  };\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n\n\n  var cleanupEvents = function cleanupEvents() {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n\n\n  var reinitPlugin = function reinitPlugin(newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents); // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n\n  player.reloadSourceOnError = reinitPlugin;\n};\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\n\n\nvar reloadSourceOnError = function reloadSourceOnError(options) {\n  initPlugin(this, options);\n};\n\nvar version$1 = \"1.10.3\"; // since VHS handles HLS and DASH (and in the future, more types), use * to capture all\n\nvideojs$1.use('*', function (player) {\n  return {\n    setSource: function setSource(srcObj, next) {\n      // pass null as the first argument to indicate that the source is not rejected\n      next(null, srcObj);\n    },\n    // VHS needs to know when seeks happen. For external seeks (generated at the player\n    // level), this middleware will capture the action. For internal seeks (generated at\n    // the tech level), we use a wrapped function so that we can handle it on our own\n    // (specified elsewhere).\n    setCurrentTime: function setCurrentTime(time) {\n      if (player.vhs && player.currentSource().src === player.vhs.source_.src) {\n        player.vhs.setCurrentTime(time);\n      }\n\n      return time;\n    },\n    // Sync VHS after play requests.\n    // This specifically handles replay where the order of actions is\n    // play, video element will seek to 0 (skipping the setCurrentTime middleware)\n    // then triggers a play event.\n    play: function play() {\n      if (player.vhs && player.currentSource().src === player.vhs.source_.src) {\n        player.vhs.setCurrentTime(player.tech_.currentTime());\n      }\n    }\n  };\n});\n/**\n * @file videojs-http-streaming.js\n *\n * The main file for the HLS project.\n * License: https://github.com/videojs/videojs-http-streaming/blob/master/LICENSE\n */\n\nvar Hls$1 = {\n  PlaylistLoader: PlaylistLoader,\n  Playlist: Playlist,\n  Decrypter: Decrypter,\n  AsyncStream: AsyncStream,\n  decrypt: decrypt,\n  utils: utils,\n  STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n  comparePlaylistBandwidth: comparePlaylistBandwidth,\n  comparePlaylistResolution: comparePlaylistResolution,\n  xhr: xhrFactory()\n}; // Define getter/setters for config properites\n\n['GOAL_BUFFER_LENGTH', 'MAX_GOAL_BUFFER_LENGTH', 'GOAL_BUFFER_LENGTH_RATE', 'BUFFER_LOW_WATER_LINE', 'MAX_BUFFER_LOW_WATER_LINE', 'BUFFER_LOW_WATER_LINE_RATE', 'BANDWIDTH_VARIANCE'].forEach(function (prop) {\n  Object.defineProperty(Hls$1, prop, {\n    get: function get$$1() {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n      return Config[prop];\n    },\n    set: function set$$1(value) {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n\n      if (typeof value !== 'number' || value < 0) {\n        videojs$1.log.warn('value of Hls.' + prop + ' must be greater than or equal to 0');\n        return;\n      }\n\n      Config[prop] = value;\n    }\n  });\n});\nvar LOCAL_STORAGE_KEY$1 = 'videojs-vhs';\n\nvar simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n  var mpegurlRE = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\n\n  if (mpegurlRE.test(type)) {\n    return 'hls';\n  }\n\n  var dashRE = /^application\\/dash\\+xml/i;\n\n  if (dashRE.test(type)) {\n    return 'dash';\n  }\n\n  return null;\n};\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in hls.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleHlsMediaChange\n */\n\n\nvar handleHlsMediaChange = function handleHlsMediaChange(qualityLevels, playlistLoader) {\n  var newPlaylist = playlistLoader.media();\n  var selectedIndex = -1;\n\n  for (var i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.uri) {\n      selectedIndex = i;\n      break;\n    }\n  }\n\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex: selectedIndex,\n    type: 'change'\n  });\n};\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} hls Hls object to listen to for media events.\n * @function handleHlsLoadedMetadata\n */\n\n\nvar handleHlsLoadedMetadata = function handleHlsLoadedMetadata(qualityLevels, hls) {\n  hls.representations().forEach(function (rep) {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleHlsMediaChange(qualityLevels, hls.playlists);\n}; // HLS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\n\n\nHls$1.canPlaySource = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar emeKeySystems = function emeKeySystems(keySystemOptions, videoPlaylist, audioPlaylist) {\n  if (!keySystemOptions) {\n    return keySystemOptions;\n  } // upsert the content types based on the selected playlist\n\n\n  var keySystemContentTypes = {};\n\n  for (var keySystem in keySystemOptions) {\n    keySystemContentTypes[keySystem] = {\n      audioContentType: 'audio/mp4; codecs=\"' + audioPlaylist.attributes.CODECS + '\"',\n      videoContentType: 'video/mp4; codecs=\"' + videoPlaylist.attributes.CODECS + '\"'\n    };\n\n    if (videoPlaylist.contentProtection && videoPlaylist.contentProtection[keySystem] && videoPlaylist.contentProtection[keySystem].pssh) {\n      keySystemContentTypes[keySystem].pssh = videoPlaylist.contentProtection[keySystem].pssh;\n    } // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n    // so we need to prevent overwriting the URL entirely\n\n\n    if (typeof keySystemOptions[keySystem] === 'string') {\n      keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n    }\n  }\n\n  return videojs$1.mergeOptions(keySystemOptions, keySystemContentTypes);\n};\n\nvar setupEmeOptions = function setupEmeOptions(hlsHandler) {\n  if (hlsHandler.options_.sourceType !== 'dash') {\n    return;\n  }\n\n  var player = videojs$1.players[hlsHandler.tech_.options_.playerId];\n\n  if (player.eme) {\n    var sourceOptions = emeKeySystems(hlsHandler.source_.keySystems, hlsHandler.playlists.media(), hlsHandler.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader.media());\n\n    if (sourceOptions) {\n      player.currentSource().keySystems = sourceOptions; // works around https://bugs.chromium.org/p/chromium/issues/detail?id=895449\n\n      if (player.eme.initializeMediaKeys) {\n        player.eme.initializeMediaKeys();\n      }\n    }\n  }\n};\n\nvar getVhsLocalStorage = function getVhsLocalStorage() {\n  if (!window.localStorage) {\n    return null;\n  }\n\n  var storedObject = window.localStorage.getItem(LOCAL_STORAGE_KEY$1);\n\n  if (!storedObject) {\n    return null;\n  }\n\n  try {\n    return JSON.parse(storedObject);\n  } catch (e) {\n    // someone may have tampered with the value\n    return null;\n  }\n};\n\nvar updateVhsLocalStorage = function updateVhsLocalStorage(options) {\n  if (!window.localStorage) {\n    return false;\n  }\n\n  var objectToStore = getVhsLocalStorage();\n  objectToStore = objectToStore ? videojs$1.mergeOptions(objectToStore, options) : options;\n\n  try {\n    window.localStorage.setItem(LOCAL_STORAGE_KEY$1, JSON.stringify(objectToStore));\n  } catch (e) {\n    // Throws if storage is full (e.g., always on iOS 5+ Safari private mode, where\n    // storage is set to 0).\n    // https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem#Exceptions\n    // No need to perform any operation.\n    return false;\n  }\n\n  return objectToStore;\n};\n/**\n * Whether the browser has built-in HLS support.\n */\n\n\nHls$1.supportsNativeHls = function () {\n  var video = document.createElement('video'); // native HLS is definitely not supported if HTML5 video isn't\n\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  } // HLS manifests can go by many mime-types\n\n\n  var canPlay = [// Apple santioned\n  'application/vnd.apple.mpegurl', // Apple sanctioned for backwards compatibility\n  'audio/mpegurl', // Very common\n  'audio/x-mpegurl', // Very common\n  'application/x-mpegurl', // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n  return canPlay.some(function (canItPlay) {\n    return /maybe|probably/i.test(video.canPlayType(canItPlay));\n  });\n}();\n\nHls$1.supportsNativeDash = function () {\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  return /maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'));\n}();\n\nHls$1.supportsTypeNatively = function (type) {\n  if (type === 'hls') {\n    return Hls$1.supportsNativeHls;\n  }\n\n  if (type === 'dash') {\n    return Hls$1.supportsNativeDash;\n  }\n\n  return false;\n};\n/**\n * HLS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\n\n\nHls$1.isSupported = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar Component$1 = videojs$1.getComponent('Component');\n/**\n * The Hls Handler object, where we orchestrate all of the parts\n * of HLS to interact with video.js\n *\n * @class HlsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nvar HlsHandler = function (_Component) {\n  inherits(HlsHandler, _Component);\n\n  function HlsHandler(source, tech, options) {\n    classCallCheck(this, HlsHandler); // tech.player() is deprecated but setup a reference to HLS for\n    // backwards-compatibility\n\n    var _this = possibleConstructorReturn(this, (HlsHandler.__proto__ || Object.getPrototypeOf(HlsHandler)).call(this, tech, options.hls));\n\n    if (tech.options_ && tech.options_.playerId) {\n      var _player = videojs$1(tech.options_.playerId);\n\n      if (!_player.hasOwnProperty('hls')) {\n        Object.defineProperty(_player, 'hls', {\n          get: function get$$1() {\n            videojs$1.log.warn('player.hls is deprecated. Use player.tech().hls instead.');\n            tech.trigger({\n              type: 'usage',\n              name: 'hls-player-access'\n            });\n            return _this;\n          },\n          configurable: true\n        });\n      } // Set up a reference to the HlsHandler from player.vhs. This allows users to start\n      // migrating from player.tech_.hls... to player.vhs... for API access. Although this\n      // isn't the most appropriate form of reference for video.js (since all APIs should\n      // be provided through core video.js), it is a common pattern for plugins, and vhs\n      // will act accordingly.\n\n\n      _player.vhs = _this; // deprecated, for backwards compatibility\n\n      _player.dash = _this;\n      _this.player_ = _player;\n    }\n\n    _this.tech_ = tech;\n    _this.source_ = source;\n    _this.stats = {};\n\n    _this.setOptions_();\n\n    if (_this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n      tech.overrideNativeAudioTracks(true);\n      tech.overrideNativeVideoTracks(true);\n    } else if (_this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      // overriding native HLS only works if audio tracks have been emulated\n      // error early if we're misconfigured\n      throw new Error('Overriding native HLS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    } // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n\n\n    _this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], function (event) {\n      var fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n\n      if (fullscreenElement && fullscreenElement.contains(_this.tech_.el())) {\n        _this.masterPlaylistController_.smoothQualityChange_();\n      }\n    }); // Handle seeking when looping - middleware doesn't handle this seek event from the tech\n\n\n    _this.on(_this.tech_, 'seeking', function () {\n      if (this.tech_.currentTime() === 0 && this.tech_.player_.loop()) {\n        this.setCurrentTime(0);\n      }\n    });\n\n    _this.on(_this.tech_, 'error', function () {\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.pauseLoading();\n      }\n    });\n\n    _this.on(_this.tech_, 'play', _this.play);\n\n    return _this;\n  }\n\n  createClass(HlsHandler, [{\n    key: 'setOptions_',\n    value: function setOptions_() {\n      var _this2 = this; // defaults\n\n\n      this.options_.withCredentials = this.options_.withCredentials || false;\n      this.options_.handleManifestRedirects = this.options_.handleManifestRedirects || false;\n      this.options_.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions === false ? false : true;\n      this.options_.smoothQualityChange = this.options_.smoothQualityChange || false;\n      this.options_.useBandwidthFromLocalStorage = typeof this.source_.useBandwidthFromLocalStorage !== 'undefined' ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || false;\n      this.options_.customTagParsers = this.options_.customTagParsers || [];\n      this.options_.customTagMappers = this.options_.customTagMappers || [];\n      this.options_.cacheEncryptionKeys = this.options_.cacheEncryptionKeys || false;\n\n      if (typeof this.options_.blacklistDuration !== 'number') {\n        this.options_.blacklistDuration = 5 * 60;\n      }\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        if (this.options_.useBandwidthFromLocalStorage) {\n          var storedObject = getVhsLocalStorage();\n\n          if (storedObject && storedObject.bandwidth) {\n            this.options_.bandwidth = storedObject.bandwidth;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'hls-bandwidth-from-local-storage'\n            });\n          }\n\n          if (storedObject && storedObject.throughput) {\n            this.options_.throughput = storedObject.throughput;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'hls-throughput-from-local-storage'\n            });\n          }\n        }\n      } // if bandwidth was not set by options or pulled from local storage, start playlist\n      // selection at a reasonable bandwidth\n\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        this.options_.bandwidth = Config.INITIAL_BANDWIDTH;\n      } // If the bandwidth number is unchanged from the initial setting\n      // then this takes precedence over the enableLowInitialPlaylist option\n\n\n      this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === Config.INITIAL_BANDWIDTH; // grab options passed to player.src\n\n      ['withCredentials', 'limitRenditionByPlayerDimensions', 'bandwidth', 'smoothQualityChange', 'customTagParsers', 'customTagMappers', 'handleManifestRedirects', 'cacheEncryptionKeys'].forEach(function (option) {\n        if (typeof _this2.source_[option] !== 'undefined') {\n          _this2.options_[option] = _this2.source_[option];\n        }\n      });\n      this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions;\n    }\n    /**\n     * called when player.src gets called, handle a new source\n     *\n     * @param {Object} src the source object to handle\n     */\n\n  }, {\n    key: 'src',\n    value: function src(_src, type) {\n      var _this3 = this; // do nothing if the src is falsey\n\n\n      if (!_src) {\n        return;\n      }\n\n      this.setOptions_(); // add master playlist controller options\n\n      this.options_.url = this.source_.src;\n      this.options_.tech = this.tech_;\n      this.options_.externHls = Hls$1;\n      this.options_.sourceType = simpleTypeFromSourceType(type); // Whenever we seek internally, we should update both the tech and call our own\n      // setCurrentTime function. This is needed because \"seeking\" events aren't always\n      // reliable. External seeks (via the player object) are handled via middleware.\n\n      this.options_.seekTo = function (time) {\n        _this3.tech_.setCurrentTime(time);\n\n        _this3.setCurrentTime(time);\n      };\n\n      this.masterPlaylistController_ = new MasterPlaylistController(this.options_);\n      this.playbackWatcher_ = new PlaybackWatcher(videojs$1.mergeOptions(this.options_, {\n        seekable: function seekable$$1() {\n          return _this3.seekable();\n        },\n        media: function media() {\n          return _this3.masterPlaylistController_.media();\n        }\n      }));\n      this.masterPlaylistController_.on('error', function () {\n        var player = videojs$1.players[_this3.tech_.options_.playerId];\n        player.error(_this3.masterPlaylistController_.error);\n      }); // `this` in selectPlaylist should be the HlsHandler for backwards\n      // compatibility with < v2\n\n      this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : Hls$1.STANDARD_PLAYLIST_SELECTOR.bind(this);\n      this.masterPlaylistController_.selectInitialPlaylist = Hls$1.INITIAL_PLAYLIST_SELECTOR.bind(this); // re-expose some internal objects for backwards compatibility with < v2\n\n      this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;\n      this.mediaSource = this.masterPlaylistController_.mediaSource; // Proxy assignment of some properties to the master playlist\n      // controller. Using a custom property for backwards compatibility\n      // with < v2\n\n      Object.defineProperties(this, {\n        selectPlaylist: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.selectPlaylist;\n          },\n          set: function set$$1(selectPlaylist) {\n            this.masterPlaylistController_.selectPlaylist = selectPlaylist.bind(this);\n          }\n        },\n        throughput: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate;\n          },\n          set: function set$$1(throughput) {\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = throughput; // By setting `count` to 1 the throughput value becomes the starting value\n            // for the cumulative average\n\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1;\n          }\n        },\n        bandwidth: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.bandwidth;\n          },\n          set: function set$$1(bandwidth) {\n            this.masterPlaylistController_.mainSegmentLoader_.bandwidth = bandwidth; // setting the bandwidth manually resets the throughput counter\n            // `count` is set to zero that current value of `rate` isn't included\n            // in the cumulative average\n\n            this.masterPlaylistController_.mainSegmentLoader_.throughput = {\n              rate: 0,\n              count: 0\n            };\n          }\n        },\n\n        /**\n         * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n         * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n         * the entire process after that - decryption, transmuxing, and appending - provided\n         * by `throughput`.\n         *\n         * Since the two process are serial, the overall system bandwidth is given by:\n         *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n         */\n        systemBandwidth: {\n          get: function get$$1() {\n            var invBandwidth = 1 / (this.bandwidth || 1);\n            var invThroughput = void 0;\n\n            if (this.throughput > 0) {\n              invThroughput = 1 / this.throughput;\n            } else {\n              invThroughput = 0;\n            }\n\n            var systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n            return systemBitrate;\n          },\n          set: function set$$1() {\n            videojs$1.log.error('The \"systemBandwidth\" property is read-only');\n          }\n        }\n      });\n\n      if (this.options_.bandwidth) {\n        this.bandwidth = this.options_.bandwidth;\n      }\n\n      if (this.options_.throughput) {\n        this.throughput = this.options_.throughput;\n      }\n\n      Object.defineProperties(this.stats, {\n        bandwidth: {\n          get: function get$$1() {\n            return _this3.bandwidth || 0;\n          },\n          enumerable: true\n        },\n        mediaRequests: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequests_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsAborted: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsAborted_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsTimedout: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsTimedout_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsErrored: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsErrored_() || 0;\n          },\n          enumerable: true\n        },\n        mediaTransferDuration: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaTransferDuration_() || 0;\n          },\n          enumerable: true\n        },\n        mediaBytesTransferred: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaBytesTransferred_() || 0;\n          },\n          enumerable: true\n        },\n        mediaSecondsLoaded: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaSecondsLoaded_() || 0;\n          },\n          enumerable: true\n        },\n        buffered: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.buffered());\n          },\n          enumerable: true\n        },\n        currentTime: {\n          get: function get$$1() {\n            return _this3.tech_.currentTime();\n          },\n          enumerable: true\n        },\n        currentSource: {\n          get: function get$$1() {\n            return _this3.tech_.currentSource_;\n          },\n          enumerable: true\n        },\n        currentTech: {\n          get: function get$$1() {\n            return _this3.tech_.name_;\n          },\n          enumerable: true\n        },\n        duration: {\n          get: function get$$1() {\n            return _this3.tech_.duration();\n          },\n          enumerable: true\n        },\n        master: {\n          get: function get$$1() {\n            return _this3.playlists.master;\n          },\n          enumerable: true\n        },\n        playerDimensions: {\n          get: function get$$1() {\n            return _this3.tech_.currentDimensions();\n          },\n          enumerable: true\n        },\n        seekable: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.seekable());\n          },\n          enumerable: true\n        },\n        timestamp: {\n          get: function get$$1() {\n            return Date.now();\n          },\n          enumerable: true\n        },\n        videoPlaybackQuality: {\n          get: function get$$1() {\n            return _this3.tech_.getVideoPlaybackQuality();\n          },\n          enumerable: true\n        }\n      });\n      this.tech_.one('canplay', this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));\n      this.tech_.on('bandwidthupdate', function () {\n        if (_this3.options_.useBandwidthFromLocalStorage) {\n          updateVhsLocalStorage({\n            bandwidth: _this3.bandwidth,\n            throughput: Math.round(_this3.throughput)\n          });\n        }\n      });\n      this.masterPlaylistController_.on('selectedinitialmedia', function () {\n        // Add the manual rendition mix-in to HlsHandler\n        renditionSelectionMixin(_this3);\n        setupEmeOptions(_this3);\n      }); // the bandwidth of the primary segment loader is our best\n      // estimate of overall bandwidth\n\n      this.on(this.masterPlaylistController_, 'progress', function () {\n        this.tech_.trigger('progress');\n      });\n      this.tech_.ready(function () {\n        return _this3.setupQualityLevels_();\n      }); // do nothing if the tech has been disposed already\n      // this can occur if someone sets the src in player.ready(), for instance\n\n      if (!this.tech_.el()) {\n        return;\n      }\n\n      this.tech_.src(videojs$1.URL.createObjectURL(this.masterPlaylistController_.mediaSource));\n    }\n    /**\n     * Initializes the quality levels and sets listeners to update them.\n     *\n     * @method setupQualityLevels_\n     * @private\n     */\n\n  }, {\n    key: 'setupQualityLevels_',\n    value: function setupQualityLevels_() {\n      var _this4 = this;\n\n      var player = videojs$1.players[this.tech_.options_.playerId];\n\n      if (player && player.qualityLevels) {\n        this.qualityLevels_ = player.qualityLevels();\n        this.masterPlaylistController_.on('selectedinitialmedia', function () {\n          handleHlsLoadedMetadata(_this4.qualityLevels_, _this4);\n        });\n        this.playlists.on('mediachange', function () {\n          handleHlsMediaChange(_this4.qualityLevels_, _this4.playlists);\n        });\n      }\n    }\n    /**\n     * Begin playing the video.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      this.masterPlaylistController_.play();\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      this.masterPlaylistController_.setCurrentTime(currentTime);\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      return this.masterPlaylistController_.duration();\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.masterPlaylistController_.seekable();\n    }\n    /**\n     * Abort all outstanding work and cleanup.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      if (this.playbackWatcher_) {\n        this.playbackWatcher_.dispose();\n      }\n\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.dispose();\n      }\n\n      if (this.qualityLevels_) {\n        this.qualityLevels_.dispose();\n      }\n\n      if (this.player_) {\n        delete this.player_.vhs;\n        delete this.player_.dash;\n        delete this.player_.hls;\n      }\n\n      if (this.tech_ && this.tech_.hls) {\n        delete this.tech_.hls;\n      }\n\n      get$1(HlsHandler.prototype.__proto__ || Object.getPrototypeOf(HlsHandler.prototype), 'dispose', this).call(this);\n    }\n  }, {\n    key: 'convertToProgramTime',\n    value: function convertToProgramTime(time, callback) {\n      return getProgramTime({\n        playlist: this.masterPlaylistController_.media(),\n        time: time,\n        callback: callback\n      });\n    } // the player must be playing before calling this\n\n  }, {\n    key: 'seekToProgramTime',\n    value: function seekToProgramTime$$1(programTime, callback) {\n      var pauseAfterSeek = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var retryCount = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 2;\n      return seekToProgramTime({\n        programTime: programTime,\n        playlist: this.masterPlaylistController_.media(),\n        retryCount: retryCount,\n        pauseAfterSeek: pauseAfterSeek,\n        seekTo: this.options_.seekTo,\n        tech: this.options_.tech,\n        callback: callback\n      });\n    }\n  }]);\n  return HlsHandler;\n}(Component$1);\n/**\n * The Source Handler object, which informs video.js what additional\n * MIME types are supported and sets up playback. It is registered\n * automatically to the appropriate tech based on the capabilities of\n * the browser it is running in. It is not necessary to use or modify\n * this object in normal usage.\n */\n\n\nvar HlsSourceHandler = {\n  name: 'videojs-http-streaming',\n  VERSION: version$1,\n  canHandleSource: function canHandleSource(srcObj) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n    return HlsSourceHandler.canPlayType(srcObj.type, localOptions);\n  },\n  handleSource: function handleSource(source, tech) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n    tech.hls = new HlsHandler(source, tech, localOptions);\n    tech.hls.xhr = xhrFactory();\n    tech.hls.src(source.src, source.type);\n    return tech.hls;\n  },\n  canPlayType: function canPlayType(type) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var _videojs$mergeOptions = videojs$1.mergeOptions(videojs$1.options, options),\n        overrideNative = _videojs$mergeOptions.hls.overrideNative;\n\n    var supportedType = simpleTypeFromSourceType(type);\n    var canUseMsePlayback = supportedType && (!Hls$1.supportsTypeNatively(supportedType) || overrideNative);\n    return canUseMsePlayback ? 'maybe' : '';\n  }\n};\n\nif (typeof videojs$1.MediaSource === 'undefined' || typeof videojs$1.URL === 'undefined') {\n  videojs$1.MediaSource = MediaSource;\n  videojs$1.URL = URL$1;\n} // register source handlers with the appropriate techs\n\n\nif (MediaSource.supportsNativeMediaSources()) {\n  videojs$1.getTech('Html5').registerSourceHandler(HlsSourceHandler, 0);\n}\n\nvideojs$1.HlsHandler = HlsHandler;\nvideojs$1.HlsSourceHandler = HlsSourceHandler;\nvideojs$1.Hls = Hls$1;\n\nif (!videojs$1.use) {\n  videojs$1.registerComponent('Hls', Hls$1);\n}\n\nvideojs$1.options.hls = videojs$1.options.hls || {};\n\nif (videojs$1.registerPlugin) {\n  videojs$1.registerPlugin('reloadSourceOnError', reloadSourceOnError);\n} else {\n  videojs$1.plugin('reloadSourceOnError', reloadSourceOnError);\n}\n\nexport default videojs$1;\n","'use strict';\n\nvar keys = require('object-keys');\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';\n\nvar toStr = Object.prototype.toString;\nvar concat = Array.prototype.concat;\nvar origDefineProperty = Object.defineProperty;\n\nvar isFunction = function (fn) {\n\treturn typeof fn === 'function' && toStr.call(fn) === '[object Function]';\n};\n\nvar arePropertyDescriptorsSupported = function () {\n\tvar obj = {};\n\ttry {\n\t\torigDefineProperty(obj, 'x', { enumerable: false, value: obj });\n\t\t// eslint-disable-next-line no-unused-vars, no-restricted-syntax\n\t\tfor (var _ in obj) { // jscs:ignore disallowUnusedVariables\n\t\t\treturn false;\n\t\t}\n\t\treturn obj.x === obj;\n\t} catch (e) { /* this is IE 8. */\n\t\treturn false;\n\t}\n};\nvar supportsDescriptors = origDefineProperty && arePropertyDescriptorsSupported();\n\nvar defineProperty = function (object, name, value, predicate) {\n\tif (name in object && (!isFunction(predicate) || !predicate())) {\n\t\treturn;\n\t}\n\tif (supportsDescriptors) {\n\t\torigDefineProperty(object, name, {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: value,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\tobject[name] = value;\n\t}\n};\n\nvar defineProperties = function (object, map) {\n\tvar predicates = arguments.length > 2 ? arguments[2] : {};\n\tvar props = keys(map);\n\tif (hasSymbols) {\n\t\tprops = concat.call(props, Object.getOwnPropertySymbols(map));\n\t}\n\tfor (var i = 0; i < props.length; i += 1) {\n\t\tdefineProperty(object, props[i], map[props[i]], predicates[props[i]]);\n\t}\n};\n\ndefineProperties.supportsDescriptors = !!supportsDescriptors;\n\nmodule.exports = defineProperties;\n","module.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {\n    throw TypeError(name + ': incorrect invocation!');\n  } return it;\n};\n","// 19.1.3.1 Object.assign(target, source)\nvar $export = require('./_export');\n\n$export($export.S + $export.F, 'Object', { assign: require('./_object-assign') });\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar scrollSetting = {\n  \"\": true,\n  \"up\": true\n};\n\nfunction findScrollSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var scroll = scrollSetting[value.toLowerCase()];\n  return scroll ? value.toLowerCase() : false;\n}\n\nfunction isValidPercentValue(value) {\n  return typeof value === \"number\" && (value >= 0 && value <= 100);\n}\n\n// VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\nfunction VTTRegion() {\n  var _width = 100;\n  var _lines = 3;\n  var _regionAnchorX = 0;\n  var _regionAnchorY = 100;\n  var _viewportAnchorX = 0;\n  var _viewportAnchorY = 100;\n  var _scroll = \"\";\n\n  Object.defineProperties(this, {\n    \"width\": {\n      enumerable: true,\n      get: function() {\n        return _width;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"Width must be between 0 and 100.\");\n        }\n        _width = value;\n      }\n    },\n    \"lines\": {\n      enumerable: true,\n      get: function() {\n        return _lines;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Lines must be set to a number.\");\n        }\n        _lines = value;\n      }\n    },\n    \"regionAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n        }\n        _regionAnchorY = value;\n      }\n    },\n    \"regionAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorX;\n      },\n      set: function(value) {\n        if(!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n        }\n        _regionAnchorX = value;\n      }\n    },\n    \"viewportAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n        }\n        _viewportAnchorY = value;\n      }\n    },\n    \"viewportAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorX;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n        }\n        _viewportAnchorX = value;\n      }\n    },\n    \"scroll\": {\n      enumerable: true,\n      get: function() {\n        return _scroll;\n      },\n      set: function(value) {\n        var setting = findScrollSetting(value);\n        // Have to check for false as an empty string is a legal value.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _scroll = setting;\n      }\n    }\n  });\n}\n\nmodule.exports = VTTRegion;\n","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Utilities to detect basic properties and metadata about Aac data.\n */\n'use strict';\n\nvar ADTS_SAMPLING_FREQUENCIES = [\n  96000,\n  88200,\n  64000,\n  48000,\n  44100,\n  32000,\n  24000,\n  22050,\n  16000,\n  12000,\n  11025,\n  8000,\n  7350\n];\n\nvar isLikelyAacData = function(data) {\n  if ((data[0] === 'I'.charCodeAt(0)) &&\n      (data[1] === 'D'.charCodeAt(0)) &&\n      (data[2] === '3'.charCodeAt(0))) {\n    return true;\n  }\n  return false;\n};\n\nvar parseSyncSafeInteger = function(data) {\n  return (data[0] << 21) |\n          (data[1] << 14) |\n          (data[2] << 7) |\n          (data[3]);\n};\n\n// return a percent-encoded representation of the specified byte range\n// @see http://en.wikipedia.org/wiki/Percent-encoding\nvar percentEncode = function(bytes, start, end) {\n  var i, result = '';\n  for (i = start; i < end; i++) {\n    result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n  }\n  return result;\n};\n\n// return the string representation of the specified byte range,\n// interpreted as ISO-8859-1.\nvar parseIso88591 = function(bytes, start, end) {\n  return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n};\n\nvar parseId3TagSize = function(header, byteIndex) {\n  var\n    returnSize = (header[byteIndex + 6] << 21) |\n                 (header[byteIndex + 7] << 14) |\n                 (header[byteIndex + 8] << 7) |\n                 (header[byteIndex + 9]),\n    flags = header[byteIndex + 5],\n    footerPresent = (flags & 16) >> 4;\n\n  if (footerPresent) {\n    return returnSize + 20;\n  }\n  return returnSize + 10;\n};\n\nvar parseAdtsSize = function(header, byteIndex) {\n  var\n    lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n    middle = header[byteIndex + 4] << 3,\n    highTwo = header[byteIndex + 3] & 0x3 << 11;\n\n  return (highTwo | middle) | lowThree;\n};\n\nvar parseType = function(header, byteIndex) {\n  if ((header[byteIndex] === 'I'.charCodeAt(0)) &&\n      (header[byteIndex + 1] === 'D'.charCodeAt(0)) &&\n      (header[byteIndex + 2] === '3'.charCodeAt(0))) {\n    return 'timed-metadata';\n  } else if ((header[byteIndex] & 0xff === 0xff) &&\n             ((header[byteIndex + 1] & 0xf0) === 0xf0)) {\n    return 'audio';\n  }\n  return null;\n};\n\nvar parseSampleRate = function(packet) {\n  var i = 0;\n\n  while (i + 5 < packet.length) {\n    if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n      // If a valid header was not found,  jump one forward and attempt to\n      // find a valid ADTS header starting at the next byte\n      i++;\n      continue;\n    }\n    return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n  }\n\n  return null;\n};\n\nvar parseAacTimestamp = function(packet) {\n  var frameStart, frameSize, frame, frameHeader;\n\n  // find the start of the first frame and the end of the tag\n  frameStart = 10;\n  if (packet[5] & 0x40) {\n    // advance the frame start past the extended header\n    frameStart += 4; // header size field\n    frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n  }\n\n  // parse one or more ID3 frames\n  // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n  do {\n    // determine the number of bytes in this frame\n    frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n    if (frameSize < 1) {\n      return null;\n    }\n    frameHeader = String.fromCharCode(packet[frameStart],\n                                      packet[frameStart + 1],\n                                      packet[frameStart + 2],\n                                      packet[frameStart + 3]);\n\n    if (frameHeader === 'PRIV') {\n      frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n      for (var i = 0; i < frame.byteLength; i++) {\n        if (frame[i] === 0) {\n          var owner = parseIso88591(frame, 0, i);\n          if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n            var d = frame.subarray(i + 1);\n            var size = ((d[3] & 0x01)  << 30) |\n                       (d[4]  << 22) |\n                       (d[5] << 14) |\n                       (d[6] << 6) |\n                       (d[7] >>> 2);\n            size *= 4;\n            size += d[7] & 0x03;\n\n            return size;\n          }\n          break;\n        }\n      }\n    }\n\n    frameStart += 10; // advance past the frame header\n    frameStart += frameSize; // advance past the frame body\n  } while (frameStart < packet.byteLength);\n  return null;\n};\n\nmodule.exports = {\n  isLikelyAacData: isLikelyAacData,\n  parseId3TagSize: parseId3TagSize,\n  parseAdtsSize: parseAdtsSize,\n  parseType: parseType,\n  parseSampleRate: parseSampleRate,\n  parseAacTimestamp: parseAacTimestamp\n};\n","'use strict';\n\nvar GetIntrinsic = require('../GetIntrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $SyntaxError = GetIntrinsic('%SyntaxError%');\n\nvar has = require('has');\n\nvar predicates = {\n\t// https://ecma-international.org/ecma-262/6.0/#sec-property-descriptor-specification-type\n\t'Property Descriptor': function isPropertyDescriptor(ES, Desc) {\n\t\tif (ES.Type(Desc) !== 'Object') {\n\t\t\treturn false;\n\t\t}\n\t\tvar allowed = {\n\t\t\t'[[Configurable]]': true,\n\t\t\t'[[Enumerable]]': true,\n\t\t\t'[[Get]]': true,\n\t\t\t'[[Set]]': true,\n\t\t\t'[[Value]]': true,\n\t\t\t'[[Writable]]': true\n\t\t};\n\n\t\tfor (var key in Desc) { // eslint-disable-line\n\t\t\tif (has(Desc, key) && !allowed[key]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tvar isData = has(Desc, '[[Value]]');\n\t\tvar IsAccessor = has(Desc, '[[Get]]') || has(Desc, '[[Set]]');\n\t\tif (isData && IsAccessor) {\n\t\t\tthrow new $TypeError('Property Descriptors may not be both accessor and data descriptors');\n\t\t}\n\t\treturn true;\n\t}\n};\n\nmodule.exports = function assertRecord(ES, recordType, argumentName, value) {\n\tvar predicate = predicates[recordType];\n\tif (typeof predicate !== 'function') {\n\t\tthrow new $SyntaxError('unknown record type: ' + recordType);\n\t}\n\tif (!predicate(ES, value)) {\n\t\tthrow new $TypeError(argumentName + ' must be a ' + recordType);\n\t}\n};\n"],"sourceRoot":""}